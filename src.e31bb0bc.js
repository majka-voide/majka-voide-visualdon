// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"../node_modules/d3/dist/package.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dependencies = exports.devDependencies = exports.scripts = exports.files = exports.repository = exports.module = exports.jsdelivr = exports.unpkg = exports.main = exports.author = exports.license = exports.homepage = exports.keywords = exports.description = exports.version = exports.name = void 0;
var name = "d3";
exports.name = name;
var version = "5.16.0";
exports.version = version;
var description = "Data-Driven Documents";
exports.description = description;
var keywords = ["dom", "visualization", "svg", "animation", "canvas"];
exports.keywords = keywords;
var homepage = "https://d3js.org";
exports.homepage = homepage;
var license = "BSD-3-Clause";
exports.license = license;
var author = {
  "name": "Mike Bostock",
  "url": "https://bost.ocks.org/mike"
};
exports.author = author;
var main = "dist/d3.node.js";
exports.main = main;
var unpkg = "dist/d3.min.js";
exports.unpkg = unpkg;
var jsdelivr = "dist/d3.min.js";
exports.jsdelivr = jsdelivr;
var _module = "index.js";
exports.module = _module;
var repository = {
  "type": "git",
  "url": "https://github.com/d3/d3.git"
};
exports.repository = repository;
var files = ["dist/**/*.js", "index.js"];
exports.files = files;
var scripts = {
  "pretest": "rimraf dist && mkdir dist && json2module package.json > dist/package.js && rollup -c",
  "test": "tape 'test/**/*-test.js'",
  "prepublishOnly": "yarn test",
  "postpublish": "git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \"d3 ${npm_package_version}\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \"${npm_package_version}\" && git tag -am \"${npm_package_version}\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js"
};
exports.scripts = scripts;
var devDependencies = {
  "json2module": "0.0",
  "rimraf": "2",
  "rollup": "1",
  "rollup-plugin-ascii": "0.0",
  "rollup-plugin-node-resolve": "3",
  "rollup-plugin-terser": "5",
  "tape": "4"
};
exports.devDependencies = devDependencies;
var dependencies = {
  "d3-array": "1",
  "d3-axis": "1",
  "d3-brush": "1",
  "d3-chord": "1",
  "d3-collection": "1",
  "d3-color": "1",
  "d3-contour": "1",
  "d3-dispatch": "1",
  "d3-drag": "1",
  "d3-dsv": "1",
  "d3-ease": "1",
  "d3-fetch": "1",
  "d3-force": "1",
  "d3-format": "1",
  "d3-geo": "1",
  "d3-hierarchy": "1",
  "d3-interpolate": "1",
  "d3-path": "1",
  "d3-polygon": "1",
  "d3-quadtree": "1",
  "d3-random": "1",
  "d3-scale": "2",
  "d3-scale-chromatic": "1",
  "d3-selection": "1",
  "d3-shape": "1",
  "d3-time": "1",
  "d3-time-format": "2",
  "d3-timer": "1",
  "d3-transition": "1",
  "d3-voronoi": "1",
  "d3-zoom": "1"
};
exports.dependencies = dependencies;
},{}],"../node_modules/d3-array/src/ascending.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
},{}],"../node_modules/d3-array/src/bisector.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(compare) {
  if (compare.length === 1) compare = ascendingComparator(compare);
  return {
    left: function (a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;

      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;
      }

      return lo;
    },
    right: function (a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;

      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;
      }

      return lo;
    }
  };
}

function ascendingComparator(f) {
  return function (d, x) {
    return (0, _ascending.default)(f(d), x);
  };
}
},{"./ascending":"../node_modules/d3-array/src/ascending.js"}],"../node_modules/d3-array/src/bisect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.bisectLeft = exports.bisectRight = void 0;

var _ascending = _interopRequireDefault(require("./ascending"));

var _bisector = _interopRequireDefault(require("./bisector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ascendingBisect = (0, _bisector.default)(_ascending.default);
var bisectRight = ascendingBisect.right;
exports.bisectRight = bisectRight;
var bisectLeft = ascendingBisect.left;
exports.bisectLeft = bisectLeft;
var _default = bisectRight;
exports.default = _default;
},{"./ascending":"../node_modules/d3-array/src/ascending.js","./bisector":"../node_modules/d3-array/src/bisector.js"}],"../node_modules/d3-array/src/pairs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.pair = pair;

function _default(array, f) {
  if (f == null) f = pair;
  var i = 0,
      n = array.length - 1,
      p = array[0],
      pairs = new Array(n < 0 ? 0 : n);

  while (i < n) pairs[i] = f(p, p = array[++i]);

  return pairs;
}

function pair(a, b) {
  return [a, b];
}
},{}],"../node_modules/d3-array/src/cross.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _pairs = require("./pairs");

function _default(values0, values1, reduce) {
  var n0 = values0.length,
      n1 = values1.length,
      values = new Array(n0 * n1),
      i0,
      i1,
      i,
      value0;
  if (reduce == null) reduce = _pairs.pair;

  for (i0 = i = 0; i0 < n0; ++i0) {
    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {
      values[i] = reduce(value0, values1[i1]);
    }
  }

  return values;
}
},{"./pairs":"../node_modules/d3-array/src/pairs.js"}],"../node_modules/d3-array/src/descending.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}
},{}],"../node_modules/d3-array/src/number.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x === null ? NaN : +x;
}
},{}],"../node_modules/d3-array/src/variance.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      m = 0,
      i = -1,
      mean = 0,
      value,
      delta,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  }

  if (m > 1) return sum / (m - 1);
}
},{"./number":"../node_modules/d3-array/src/number.js"}],"../node_modules/d3-array/src/deviation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _variance = _interopRequireDefault(require("./variance"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(array, f) {
  var v = (0, _variance.default)(array, f);
  return v ? Math.sqrt(v) : v;
}
},{"./variance":"../node_modules/d3-array/src/variance.js"}],"../node_modules/d3-array/src/extent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min,
      max;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  }

  return [min, max];
}
},{}],"../node_modules/d3-array/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.map = exports.slice = void 0;
var array = Array.prototype;
var slice = array.slice;
exports.slice = slice;
var map = array.map;
exports.map = map;
},{}],"../node_modules/d3-array/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../node_modules/d3-array/src/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x;
}
},{}],"../node_modules/d3-array/src/range.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
}
},{}],"../node_modules/d3-array/src/ticks.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.tickIncrement = tickIncrement;
exports.tickStep = tickStep;
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

function _default(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;
  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    start = Math.ceil(start / step);
    stop = Math.floor(stop / step);
    ticks = new Array(n = Math.ceil(stop - start + 1));

    while (++i < n) ticks[i] = (start + i) * step;
  } else {
    start = Math.floor(start * step);
    stop = Math.ceil(stop * step);
    ticks = new Array(n = Math.ceil(start - stop + 1));

    while (++i < n) ticks[i] = (start - i) / step;
  }

  if (reverse) ticks.reverse();
  return ticks;
}

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}
},{}],"../node_modules/d3-array/src/threshold/sturges.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values) {
  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
}
},{}],"../node_modules/d3-array/src/histogram.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array");

var _bisect = _interopRequireDefault(require("./bisect"));

var _constant = _interopRequireDefault(require("./constant"));

var _extent = _interopRequireDefault(require("./extent"));

var _identity = _interopRequireDefault(require("./identity"));

var _range = _interopRequireDefault(require("./range"));

var _ticks = require("./ticks");

var _sturges = _interopRequireDefault(require("./threshold/sturges"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var value = _identity.default,
      domain = _extent.default,
      threshold = _sturges.default;

  function histogram(data) {
    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      tz = (0, _ticks.tickStep)(x0, x1, tz);
      tz = (0, _range.default)(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive
    } // Remove any thresholds outside the domain.


    var m = tz.length;

    while (tz[0] <= x0) tz.shift(), --m;

    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin; // Initialize bins.

    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    } // Assign data to bins by value, ignoring any outside the domain.


    for (i = 0; i < n; ++i) {
      x = values[i];

      if (x0 <= x && x <= x1) {
        bins[(0, _bisect.default)(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(_), histogram) : value;
  };

  histogram.domain = function (_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : (0, _constant.default)([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), histogram) : threshold;
  };

  return histogram;
}
},{"./array":"../node_modules/d3-array/src/array.js","./bisect":"../node_modules/d3-array/src/bisect.js","./constant":"../node_modules/d3-array/src/constant.js","./extent":"../node_modules/d3-array/src/extent.js","./identity":"../node_modules/d3-array/src/identity.js","./range":"../node_modules/d3-array/src/range.js","./ticks":"../node_modules/d3-array/src/ticks.js","./threshold/sturges":"../node_modules/d3-array/src/threshold/sturges.js"}],"../node_modules/d3-array/src/quantile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, p, valueof) {
  if (valueof == null) valueof = _number.default;
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
}
},{"./number":"../node_modules/d3-array/src/number.js"}],"../node_modules/d3-array/src/threshold/freedmanDiaconis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("../array");

var _ascending = _interopRequireDefault(require("../ascending"));

var _number = _interopRequireDefault(require("../number"));

var _quantile = _interopRequireDefault(require("../quantile"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, min, max) {
  values = _array.map.call(values, _number.default).sort(_ascending.default);
  return Math.ceil((max - min) / (2 * ((0, _quantile.default)(values, 0.75) - (0, _quantile.default)(values, 0.25)) * Math.pow(values.length, -1 / 3)));
}
},{"../array":"../node_modules/d3-array/src/array.js","../ascending":"../node_modules/d3-array/src/ascending.js","../number":"../node_modules/d3-array/src/number.js","../quantile":"../node_modules/d3-array/src/quantile.js"}],"../node_modules/d3-array/src/threshold/scott.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _deviation = _interopRequireDefault(require("../deviation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, min, max) {
  return Math.ceil((max - min) / (3.5 * (0, _deviation.default)(values) * Math.pow(values.length, -1 / 3)));
}
},{"../deviation":"../node_modules/d3-array/src/deviation.js"}],"../node_modules/d3-array/src/max.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      max;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null && value > max) {
            max = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && value > max) {
            max = value;
          }
        }
      }
    }
  }

  return max;
}
},{}],"../node_modules/d3-array/src/mean.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      m = n,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) sum += value;else --m;
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) sum += value;else --m;
    }
  }

  if (m) return sum / m;
}
},{"./number":"../node_modules/d3-array/src/number.js"}],"../node_modules/d3-array/src/median.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

var _number = _interopRequireDefault(require("./number"));

var _quantile = _interopRequireDefault(require("./quantile"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      numbers = [];

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) {
        numbers.push(value);
      }
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) {
        numbers.push(value);
      }
    }
  }

  return (0, _quantile.default)(numbers.sort(_ascending.default), 0.5);
}
},{"./ascending":"../node_modules/d3-array/src/ascending.js","./number":"../node_modules/d3-array/src/number.js","./quantile":"../node_modules/d3-array/src/quantile.js"}],"../node_modules/d3-array/src/merge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(arrays) {
  var n = arrays.length,
      m,
      i = -1,
      j = 0,
      merged,
      array;

  while (++i < n) j += arrays[i].length;

  merged = new Array(j);

  while (--n >= 0) {
    array = arrays[n];
    m = array.length;

    while (--m >= 0) {
      merged[--j] = array[m];
    }
  }

  return merged;
}
},{}],"../node_modules/d3-array/src/min.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null && min > value) {
            min = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && min > value) {
            min = value;
          }
        }
      }
    }
  }

  return min;
}
},{}],"../node_modules/d3-array/src/permute.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(array, indexes) {
  var i = indexes.length,
      permutes = new Array(i);

  while (i--) permutes[i] = array[indexes[i]];

  return permutes;
}
},{}],"../node_modules/d3-array/src/scan.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, compare) {
  if (!(n = values.length)) return;
  var n,
      i = 0,
      j = 0,
      xi,
      xj = values[j];
  if (compare == null) compare = _ascending.default;

  while (++i < n) {
    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {
      xj = xi, j = i;
    }
  }

  if (compare(xj, xj) === 0) return j;
}
},{"./ascending":"../node_modules/d3-array/src/ascending.js"}],"../node_modules/d3-array/src/shuffle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(array, i0, i1) {
  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m + i0];
    array[m + i0] = array[i + i0];
    array[i + i0] = t;
  }

  return array;
}
},{}],"../node_modules/d3-array/src/sum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.
    }
  } else {
    while (++i < n) {
      if (value = +valueof(values[i], i, values)) sum += value;
    }
  }

  return sum;
}
},{}],"../node_modules/d3-array/src/transpose.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _min = _interopRequireDefault(require("./min"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(matrix) {
  if (!(n = matrix.length)) return [];

  for (var i = -1, m = (0, _min.default)(matrix, length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }

  return transpose;
}

function length(d) {
  return d.length;
}
},{"./min":"../node_modules/d3-array/src/min.js"}],"../node_modules/d3-array/src/zip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _transpose = _interopRequireDefault(require("./transpose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return (0, _transpose.default)(arguments);
}
},{"./transpose":"../node_modules/d3-array/src/transpose.js"}],"../node_modules/d3-array/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "bisect", {
  enumerable: true,
  get: function () {
    return _bisect.default;
  }
});
Object.defineProperty(exports, "bisectRight", {
  enumerable: true,
  get: function () {
    return _bisect.bisectRight;
  }
});
Object.defineProperty(exports, "bisectLeft", {
  enumerable: true,
  get: function () {
    return _bisect.bisectLeft;
  }
});
Object.defineProperty(exports, "ascending", {
  enumerable: true,
  get: function () {
    return _ascending.default;
  }
});
Object.defineProperty(exports, "bisector", {
  enumerable: true,
  get: function () {
    return _bisector.default;
  }
});
Object.defineProperty(exports, "cross", {
  enumerable: true,
  get: function () {
    return _cross.default;
  }
});
Object.defineProperty(exports, "descending", {
  enumerable: true,
  get: function () {
    return _descending.default;
  }
});
Object.defineProperty(exports, "deviation", {
  enumerable: true,
  get: function () {
    return _deviation.default;
  }
});
Object.defineProperty(exports, "extent", {
  enumerable: true,
  get: function () {
    return _extent.default;
  }
});
Object.defineProperty(exports, "histogram", {
  enumerable: true,
  get: function () {
    return _histogram.default;
  }
});
Object.defineProperty(exports, "thresholdFreedmanDiaconis", {
  enumerable: true,
  get: function () {
    return _freedmanDiaconis.default;
  }
});
Object.defineProperty(exports, "thresholdScott", {
  enumerable: true,
  get: function () {
    return _scott.default;
  }
});
Object.defineProperty(exports, "thresholdSturges", {
  enumerable: true,
  get: function () {
    return _sturges.default;
  }
});
Object.defineProperty(exports, "max", {
  enumerable: true,
  get: function () {
    return _max.default;
  }
});
Object.defineProperty(exports, "mean", {
  enumerable: true,
  get: function () {
    return _mean.default;
  }
});
Object.defineProperty(exports, "median", {
  enumerable: true,
  get: function () {
    return _median.default;
  }
});
Object.defineProperty(exports, "merge", {
  enumerable: true,
  get: function () {
    return _merge.default;
  }
});
Object.defineProperty(exports, "min", {
  enumerable: true,
  get: function () {
    return _min.default;
  }
});
Object.defineProperty(exports, "pairs", {
  enumerable: true,
  get: function () {
    return _pairs.default;
  }
});
Object.defineProperty(exports, "permute", {
  enumerable: true,
  get: function () {
    return _permute.default;
  }
});
Object.defineProperty(exports, "quantile", {
  enumerable: true,
  get: function () {
    return _quantile.default;
  }
});
Object.defineProperty(exports, "range", {
  enumerable: true,
  get: function () {
    return _range.default;
  }
});
Object.defineProperty(exports, "scan", {
  enumerable: true,
  get: function () {
    return _scan.default;
  }
});
Object.defineProperty(exports, "shuffle", {
  enumerable: true,
  get: function () {
    return _shuffle.default;
  }
});
Object.defineProperty(exports, "sum", {
  enumerable: true,
  get: function () {
    return _sum.default;
  }
});
Object.defineProperty(exports, "ticks", {
  enumerable: true,
  get: function () {
    return _ticks.default;
  }
});
Object.defineProperty(exports, "tickIncrement", {
  enumerable: true,
  get: function () {
    return _ticks.tickIncrement;
  }
});
Object.defineProperty(exports, "tickStep", {
  enumerable: true,
  get: function () {
    return _ticks.tickStep;
  }
});
Object.defineProperty(exports, "transpose", {
  enumerable: true,
  get: function () {
    return _transpose.default;
  }
});
Object.defineProperty(exports, "variance", {
  enumerable: true,
  get: function () {
    return _variance.default;
  }
});
Object.defineProperty(exports, "zip", {
  enumerable: true,
  get: function () {
    return _zip.default;
  }
});

var _bisect = _interopRequireWildcard(require("./bisect"));

var _ascending = _interopRequireDefault(require("./ascending"));

var _bisector = _interopRequireDefault(require("./bisector"));

var _cross = _interopRequireDefault(require("./cross"));

var _descending = _interopRequireDefault(require("./descending"));

var _deviation = _interopRequireDefault(require("./deviation"));

var _extent = _interopRequireDefault(require("./extent"));

var _histogram = _interopRequireDefault(require("./histogram"));

var _freedmanDiaconis = _interopRequireDefault(require("./threshold/freedmanDiaconis"));

var _scott = _interopRequireDefault(require("./threshold/scott"));

var _sturges = _interopRequireDefault(require("./threshold/sturges"));

var _max = _interopRequireDefault(require("./max"));

var _mean = _interopRequireDefault(require("./mean"));

var _median = _interopRequireDefault(require("./median"));

var _merge = _interopRequireDefault(require("./merge"));

var _min = _interopRequireDefault(require("./min"));

var _pairs = _interopRequireDefault(require("./pairs"));

var _permute = _interopRequireDefault(require("./permute"));

var _quantile = _interopRequireDefault(require("./quantile"));

var _range = _interopRequireDefault(require("./range"));

var _scan = _interopRequireDefault(require("./scan"));

var _shuffle = _interopRequireDefault(require("./shuffle"));

var _sum = _interopRequireDefault(require("./sum"));

var _ticks = _interopRequireWildcard(require("./ticks"));

var _transpose = _interopRequireDefault(require("./transpose"));

var _variance = _interopRequireDefault(require("./variance"));

var _zip = _interopRequireDefault(require("./zip"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./bisect":"../node_modules/d3-array/src/bisect.js","./ascending":"../node_modules/d3-array/src/ascending.js","./bisector":"../node_modules/d3-array/src/bisector.js","./cross":"../node_modules/d3-array/src/cross.js","./descending":"../node_modules/d3-array/src/descending.js","./deviation":"../node_modules/d3-array/src/deviation.js","./extent":"../node_modules/d3-array/src/extent.js","./histogram":"../node_modules/d3-array/src/histogram.js","./threshold/freedmanDiaconis":"../node_modules/d3-array/src/threshold/freedmanDiaconis.js","./threshold/scott":"../node_modules/d3-array/src/threshold/scott.js","./threshold/sturges":"../node_modules/d3-array/src/threshold/sturges.js","./max":"../node_modules/d3-array/src/max.js","./mean":"../node_modules/d3-array/src/mean.js","./median":"../node_modules/d3-array/src/median.js","./merge":"../node_modules/d3-array/src/merge.js","./min":"../node_modules/d3-array/src/min.js","./pairs":"../node_modules/d3-array/src/pairs.js","./permute":"../node_modules/d3-array/src/permute.js","./quantile":"../node_modules/d3-array/src/quantile.js","./range":"../node_modules/d3-array/src/range.js","./scan":"../node_modules/d3-array/src/scan.js","./shuffle":"../node_modules/d3-array/src/shuffle.js","./sum":"../node_modules/d3-array/src/sum.js","./ticks":"../node_modules/d3-array/src/ticks.js","./transpose":"../node_modules/d3-array/src/transpose.js","./variance":"../node_modules/d3-array/src/variance.js","./zip":"../node_modules/d3-array/src/zip.js"}],"../node_modules/d3-axis/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;
},{}],"../node_modules/d3-axis/src/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x;
}
},{}],"../node_modules/d3-axis/src/axis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.axisTop = axisTop;
exports.axisRight = axisRight;
exports.axisBottom = axisBottom;
exports.axisLeft = axisLeft;

var _array = require("./array");

var _identity = _interopRequireDefault(require("./identity"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var top = 1,
    right = 2,
    bottom = 3,
    left = 4,
    epsilon = 1e-6;

function translateX(x) {
  return "translate(" + (x + 0.5) + ",0)";
}

function translateY(y) {
  return "translate(0," + (y + 0.5) + ")";
}

function number(scale) {
  return function (d) {
    return +scale(d);
  };
}

function center(scale) {
  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.

  if (scale.round()) offset = Math.round(offset);
  return function (d) {
    return +scale(d) + offset;
  };
}

function entering() {
  return !this.__axis;
}

function axis(orient, scale) {
  var tickArguments = [],
      tickValues = null,
      tickFormat = null,
      tickSizeInner = 6,
      tickSizeOuter = 6,
      tickPadding = 3,
      k = orient === top || orient === left ? -1 : 1,
      x = orient === left || orient === right ? "x" : "y",
      transform = orient === top || orient === bottom ? translateX : translateY;

  function axis(context) {
    var values = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues,
        format = tickFormat == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : _identity.default : tickFormat,
        spacing = Math.max(tickSizeInner, 0) + tickPadding,
        range = scale.range(),
        range0 = +range[0] + 0.5,
        range1 = +range[range.length - 1] + 0.5,
        position = (scale.bandwidth ? center : number)(scale.copy()),
        selection = context.selection ? context.selection() : context,
        path = selection.selectAll(".domain").data([null]),
        tick = selection.selectAll(".tick").data(values, scale).order(),
        tickExit = tick.exit(),
        tickEnter = tick.enter().append("g").attr("class", "tick"),
        line = tick.select("line"),
        text = tick.select("text");
    path = path.merge(path.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor"));
    tick = tick.merge(tickEnter);
    line = line.merge(tickEnter.append("line").attr("stroke", "currentColor").attr(x + "2", k * tickSizeInner));
    text = text.merge(tickEnter.append("text").attr("fill", "currentColor").attr(x, k * spacing).attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

    if (context !== selection) {
      path = path.transition(context);
      tick = tick.transition(context);
      line = line.transition(context);
      text = text.transition(context);
      tickExit = tickExit.transition(context).attr("opacity", epsilon).attr("transform", function (d) {
        return isFinite(d = position(d)) ? transform(d) : this.getAttribute("transform");
      });
      tickEnter.attr("opacity", epsilon).attr("transform", function (d) {
        var p = this.parentNode.__axis;
        return transform(p && isFinite(p = p(d)) ? p : position(d));
      });
    }

    tickExit.remove();
    path.attr("d", orient === left || orient == right ? tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter : "M0.5," + range0 + "V" + range1 : tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + ",0.5H" + range1);
    tick.attr("opacity", 1).attr("transform", function (d) {
      return transform(position(d));
    });
    line.attr(x + "2", k * tickSizeInner);
    text.attr(x, k * spacing).text(format);
    selection.filter(entering).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");
    selection.each(function () {
      this.__axis = position;
    });
  }

  axis.scale = function (_) {
    return arguments.length ? (scale = _, axis) : scale;
  };

  axis.ticks = function () {
    return tickArguments = _array.slice.call(arguments), axis;
  };

  axis.tickArguments = function (_) {
    return arguments.length ? (tickArguments = _ == null ? [] : _array.slice.call(_), axis) : tickArguments.slice();
  };

  axis.tickValues = function (_) {
    return arguments.length ? (tickValues = _ == null ? null : _array.slice.call(_), axis) : tickValues && tickValues.slice();
  };

  axis.tickFormat = function (_) {
    return arguments.length ? (tickFormat = _, axis) : tickFormat;
  };

  axis.tickSize = function (_) {
    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
  };

  axis.tickSizeInner = function (_) {
    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
  };

  axis.tickSizeOuter = function (_) {
    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
  };

  axis.tickPadding = function (_) {
    return arguments.length ? (tickPadding = +_, axis) : tickPadding;
  };

  return axis;
}

function axisTop(scale) {
  return axis(top, scale);
}

function axisRight(scale) {
  return axis(right, scale);
}

function axisBottom(scale) {
  return axis(bottom, scale);
}

function axisLeft(scale) {
  return axis(left, scale);
}
},{"./array":"../node_modules/d3-axis/src/array.js","./identity":"../node_modules/d3-axis/src/identity.js"}],"../node_modules/d3-axis/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "axisTop", {
  enumerable: true,
  get: function () {
    return _axis.axisTop;
  }
});
Object.defineProperty(exports, "axisRight", {
  enumerable: true,
  get: function () {
    return _axis.axisRight;
  }
});
Object.defineProperty(exports, "axisBottom", {
  enumerable: true,
  get: function () {
    return _axis.axisBottom;
  }
});
Object.defineProperty(exports, "axisLeft", {
  enumerable: true,
  get: function () {
    return _axis.axisLeft;
  }
});

var _axis = require("./axis");
},{"./axis":"../node_modules/d3-axis/src/axis.js"}],"../node_modules/d3-dispatch/src/dispatch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var noop = {
  value: function () {}
};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || t in _ || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
    _[t] = [];
  }

  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {
      type: t,
      name: name
    };
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function (typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length; // If no callback was specified, return the callback of the given type and name.

    if (arguments.length < 2) {
      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;

      return;
    } // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.


    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);

    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
    }

    return this;
  },
  copy: function () {
    var copy = {},
        _ = this._;

    for (var t in _) copy[t] = _[t].slice();

    return new Dispatch(copy);
  },
  call: function (type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  },
  apply: function (type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  }
};

function get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }

  if (callback != null) type.push({
    name: name,
    value: callback
  });
  return type;
}

var _default = dispatch;
exports.default = _default;
},{}],"../node_modules/d3-dispatch/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "dispatch", {
  enumerable: true,
  get: function () {
    return _dispatch.default;
  }
});

var _dispatch = _interopRequireDefault(require("./dispatch.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./dispatch.js":"../node_modules/d3-dispatch/src/dispatch.js"}],"../node_modules/d3-selection/src/namespaces.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.xhtml = void 0;
var xhtml = "http://www.w3.org/1999/xhtml";
exports.xhtml = xhtml;
var _default = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
exports.default = _default;
},{}],"../node_modules/d3-selection/src/namespace.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespaces = _interopRequireDefault(require("./namespaces"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  var prefix = name += "",
      i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return _namespaces.default.hasOwnProperty(prefix) ? {
    space: _namespaces.default[prefix],
    local: name
  } : name;
}
},{"./namespaces":"../node_modules/d3-selection/src/namespaces.js"}],"../node_modules/d3-selection/src/creator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespace = _interopRequireDefault(require("./namespace"));

var _namespaces = require("./namespaces");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function creatorInherit(name) {
  return function () {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === _namespaces.xhtml && document.documentElement.namespaceURI === _namespaces.xhtml ? document.createElement(name) : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function () {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

function _default(name) {
  var fullname = (0, _namespace.default)(name);
  return (fullname.local ? creatorFixed : creatorInherit)(fullname);
}
},{"./namespace":"../node_modules/d3-selection/src/namespace.js","./namespaces":"../node_modules/d3-selection/src/namespaces.js"}],"../node_modules/d3-selection/src/selector.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function none() {}

function _default(selector) {
  return selector == null ? none : function () {
    return this.querySelector(selector);
  };
}
},{}],"../node_modules/d3-selection/src/selection/select.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _selector = _interopRequireDefault(require("../selector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(select) {
  if (typeof select !== "function") select = (0, _selector.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new _index.Selection(subgroups, this._parents);
}
},{"./index":"../node_modules/d3-selection/src/selection/index.js","../selector":"../node_modules/d3-selection/src/selector.js"}],"../node_modules/d3-selection/src/selectorAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function empty() {
  return [];
}

function _default(selector) {
  return selector == null ? empty : function () {
    return this.querySelectorAll(selector);
  };
}
},{}],"../node_modules/d3-selection/src/selection/selectAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _selectorAll = _interopRequireDefault(require("../selectorAll"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(select) {
  if (typeof select !== "function") select = (0, _selectorAll.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new _index.Selection(subgroups, parents);
}
},{"./index":"../node_modules/d3-selection/src/selection/index.js","../selectorAll":"../node_modules/d3-selection/src/selectorAll.js"}],"../node_modules/d3-selection/src/matcher.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(selector) {
  return function () {
    return this.matches(selector);
  };
}
},{}],"../node_modules/d3-selection/src/selection/filter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _matcher = _interopRequireDefault(require("../matcher"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(match) {
  if (typeof match !== "function") match = (0, _matcher.default)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index.Selection(subgroups, this._parents);
}
},{"./index":"../node_modules/d3-selection/src/selection/index.js","../matcher":"../node_modules/d3-selection/src/matcher.js"}],"../node_modules/d3-selection/src/selection/sparse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(update) {
  return new Array(update.length);
}
},{}],"../node_modules/d3-selection/src/selection/enter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.EnterNode = EnterNode;

var _sparse = _interopRequireDefault(require("./sparse"));

var _index = require("./index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return new _index.Selection(this._enter || this._groups.map(_sparse.default), this._parents);
}

function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}

EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function (child) {
    return this._parent.insertBefore(child, this._next);
  },
  insertBefore: function (child, next) {
    return this._parent.insertBefore(child, next);
  },
  querySelector: function (selector) {
    return this._parent.querySelector(selector);
  },
  querySelectorAll: function (selector) {
    return this._parent.querySelectorAll(selector);
  }
};
},{"./sparse":"../node_modules/d3-selection/src/selection/sparse.js","./index":"../node_modules/d3-selection/src/selection/index.js"}],"../node_modules/d3-selection/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../node_modules/d3-selection/src/selection/data.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _enter = require("./enter");

var _constant = _interopRequireDefault(require("../constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var keyPrefix = "$"; // Protect against keys like “__proto__”.

function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length; // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.

  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new _enter.EnterNode(parent, data[i]);
    }
  } // Put any non-null nodes that don’t fit into exit.


  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = {},
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue; // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.

  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);

      if (keyValue in nodeByKeyValue) {
        exit[i] = node;
      } else {
        nodeByKeyValue[keyValue] = node;
      }
    }
  } // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.


  for (i = 0; i < dataLength; ++i) {
    keyValue = keyPrefix + key.call(parent, data[i], i, data);

    if (node = nodeByKeyValue[keyValue]) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue[keyValue] = null;
    } else {
      enter[i] = new _enter.EnterNode(parent, data[i]);
    }
  } // Add any remaining nodes that were not bound to data to exit.


  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {
      exit[i] = node;
    }
  }
}

function _default(value, key) {
  if (!value) {
    data = new Array(this.size()), j = -1;
    this.each(function (d) {
      data[++j] = d;
    });
    return data;
  }

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;
  if (typeof value !== "function") value = (0, _constant.default)(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = value.call(parent, parent && parent.__data__, j, parents),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);
    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.

    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;

        while (!(next = updateGroup[i1]) && ++i1 < dataLength);

        previous._next = next || null;
      }
    }
  }

  update = new _index.Selection(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}
},{"./index":"../node_modules/d3-selection/src/selection/index.js","./enter":"../node_modules/d3-selection/src/selection/enter.js","../constant":"../node_modules/d3-selection/src/constant.js"}],"../node_modules/d3-selection/src/selection/exit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sparse = _interopRequireDefault(require("./sparse"));

var _index = require("./index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return new _index.Selection(this._exit || this._groups.map(_sparse.default), this._parents);
}
},{"./sparse":"../node_modules/d3-selection/src/selection/sparse.js","./index":"../node_modules/d3-selection/src/selection/index.js"}],"../node_modules/d3-selection/src/selection/join.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(onenter, onupdate, onexit) {
  var enter = this.enter(),
      update = this,
      exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null) update = onupdate(update);
  if (onexit == null) exit.remove();else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}
},{}],"../node_modules/d3-selection/src/selection/merge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

function _default(selection) {
  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index.Selection(merges, this._parents);
}
},{"./index":"../node_modules/d3-selection/src/selection/index.js"}],"../node_modules/d3-selection/src/selection/order.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
}
},{}],"../node_modules/d3-selection/src/selection/sort.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

function _default(compare) {
  if (!compare) compare = ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }

    sortgroup.sort(compareNode);
  }

  return new _index.Selection(sortgroups, this._parents).order();
}

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
},{"./index":"../node_modules/d3-selection/src/selection/index.js"}],"../node_modules/d3-selection/src/selection/call.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}
},{}],"../node_modules/d3-selection/src/selection/nodes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var nodes = new Array(this.size()),
      i = -1;
  this.each(function () {
    nodes[++i] = this;
  });
  return nodes;
}
},{}],"../node_modules/d3-selection/src/selection/node.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
}
},{}],"../node_modules/d3-selection/src/selection/size.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var size = 0;
  this.each(function () {
    ++size;
  });
  return size;
}
},{}],"../node_modules/d3-selection/src/selection/empty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return !this.node();
}
},{}],"../node_modules/d3-selection/src/selection/each.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
}
},{}],"../node_modules/d3-selection/src/selection/attr.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespace = _interopRequireDefault(require("../namespace"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function () {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function () {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

function _default(name, value) {
  var fullname = (0, _namespace.default)(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
  }

  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
}
},{"../namespace":"../node_modules/d3-selection/src/namespace.js"}],"../node_modules/d3-selection/src/window.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node) {
  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node
  node.document && node // node is a Window
  || node.defaultView; // node is a Document
}
},{}],"../node_modules/d3-selection/src/selection/style.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.styleValue = styleValue;

var _window = _interopRequireDefault(require("../window"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function () {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);
  };
}

function _default(name, value, priority) {
  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
}

function styleValue(node, name) {
  return node.style.getPropertyValue(name) || (0, _window.default)(node).getComputedStyle(node, null).getPropertyValue(name);
}
},{"../window":"../node_modules/d3-selection/src/window.js"}],"../node_modules/d3-selection/src/selection/property.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function propertyRemove(name) {
  return function () {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function () {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];else this[name] = v;
  };
}

function _default(name, value) {
  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
}
},{}],"../node_modules/d3-selection/src/selection/classed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function (name) {
    var i = this._names.indexOf(name);

    if (i < 0) {
      this._names.push(name);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function (name) {
    var i = this._names.indexOf(name);

    if (i >= 0) {
      this._names.splice(i, 1);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function (name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) list.add(names[i]);
}

function classedRemove(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) list.remove(names[i]);
}

function classedTrue(names) {
  return function () {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function () {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function () {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

function _default(name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()),
        i = -1,
        n = names.length;

    while (++i < n) if (!list.contains(names[i])) return false;

    return true;
  }

  return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
}
},{}],"../node_modules/d3-selection/src/selection/text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

function _default(value) {
  return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;
}
},{}],"../node_modules/d3-selection/src/selection/html.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function () {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

function _default(value) {
  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
}
},{}],"../node_modules/d3-selection/src/selection/raise.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

function _default() {
  return this.each(raise);
}
},{}],"../node_modules/d3-selection/src/selection/lower.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

function _default() {
  return this.each(lower);
}
},{}],"../node_modules/d3-selection/src/selection/append.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("../creator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  var create = typeof name === "function" ? name : (0, _creator.default)(name);
  return this.select(function () {
    return this.appendChild(create.apply(this, arguments));
  });
}
},{"../creator":"../node_modules/d3-selection/src/creator.js"}],"../node_modules/d3-selection/src/selection/insert.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("../creator"));

var _selector = _interopRequireDefault(require("../selector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function constantNull() {
  return null;
}

function _default(name, before) {
  var create = typeof name === "function" ? name : (0, _creator.default)(name),
      select = before == null ? constantNull : typeof before === "function" ? before : (0, _selector.default)(before);
  return this.select(function () {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
}
},{"../creator":"../node_modules/d3-selection/src/creator.js","../selector":"../node_modules/d3-selection/src/selector.js"}],"../node_modules/d3-selection/src/selection/remove.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

function _default() {
  return this.each(remove);
}
},{}],"../node_modules/d3-selection/src/selection/clone.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function selection_cloneShallow() {
  var clone = this.cloneNode(false),
      parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function selection_cloneDeep() {
  var clone = this.cloneNode(true),
      parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function _default(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}
},{}],"../node_modules/d3-selection/src/selection/datum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(value) {
  return arguments.length ? this.property("__data__", value) : this.node().__data__;
}
},{}],"../node_modules/d3-selection/src/selection/on.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.customEvent = customEvent;
exports.event = void 0;
var filterEvents = {};
var event = null;
exports.event = event;

if (typeof document !== "undefined") {
  var element = document.documentElement;

  if (!("onmouseenter" in element)) {
    filterEvents = {
      mouseenter: "mouseover",
      mouseleave: "mouseout"
    };
  }
}

function filterContextListener(listener, index, group) {
  listener = contextListener(listener, index, group);
  return function (event) {
    var related = event.relatedTarget;

    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {
      listener.call(this, event);
    }
  };
}

function contextListener(listener, index, group) {
  return function (event1) {
    var event0 = event; // Events can be reentrant (e.g., focus).

    exports.event = event = event1;

    try {
      listener.call(this, this.__data__, index, group);
    } finally {
      exports.event = event = event0;
    }
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {
      type: t,
      name: name
    };
  });
}

function onRemove(typename) {
  return function () {
    var on = this.__on;
    if (!on) return;

    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
      } else {
        on[++i] = o;
      }
    }

    if (++i) on.length = i;else delete this.__on;
  };
}

function onAdd(typename, value, capture) {
  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
  return function (d, i, group) {
    var on = this.__on,
        o,
        listener = wrap(value, i, group);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
        this.addEventListener(o.type, o.listener = listener, o.capture = capture);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, capture);
    o = {
      type: typename.type,
      name: typename.name,
      value: value,
      listener: listener,
      capture: capture
    };
    if (!on) this.__on = [o];else on.push(o);
  };
}

function _default(typename, value, capture) {
  var typenames = parseTypenames(typename + ""),
      i,
      n = typenames.length,
      t;

  if (arguments.length < 2) {
    var on = this.node().__on;

    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  if (capture == null) capture = false;

  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));

  return this;
}

function customEvent(event1, listener, that, args) {
  var event0 = event;
  event1.sourceEvent = event;
  exports.event = event = event1;

  try {
    return listener.apply(that, args);
  } finally {
    exports.event = event = event0;
  }
}
},{}],"../node_modules/d3-selection/src/selection/dispatch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _window = _interopRequireDefault(require("../window"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dispatchEvent(node, type, params) {
  var window = (0, _window.default)(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function () {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function () {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

function _default(type, params) {
  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));
}
},{"../window":"../node_modules/d3-selection/src/window.js"}],"../node_modules/d3-selection/src/selection/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Selection = Selection;
exports.default = exports.root = void 0;

var _select = _interopRequireDefault(require("./select"));

var _selectAll = _interopRequireDefault(require("./selectAll"));

var _filter = _interopRequireDefault(require("./filter"));

var _data = _interopRequireDefault(require("./data"));

var _enter = _interopRequireDefault(require("./enter"));

var _exit = _interopRequireDefault(require("./exit"));

var _join = _interopRequireDefault(require("./join"));

var _merge = _interopRequireDefault(require("./merge"));

var _order = _interopRequireDefault(require("./order"));

var _sort = _interopRequireDefault(require("./sort"));

var _call = _interopRequireDefault(require("./call"));

var _nodes = _interopRequireDefault(require("./nodes"));

var _node = _interopRequireDefault(require("./node"));

var _size = _interopRequireDefault(require("./size"));

var _empty = _interopRequireDefault(require("./empty"));

var _each = _interopRequireDefault(require("./each"));

var _attr = _interopRequireDefault(require("./attr"));

var _style = _interopRequireDefault(require("./style"));

var _property = _interopRequireDefault(require("./property"));

var _classed = _interopRequireDefault(require("./classed"));

var _text = _interopRequireDefault(require("./text"));

var _html = _interopRequireDefault(require("./html"));

var _raise = _interopRequireDefault(require("./raise"));

var _lower = _interopRequireDefault(require("./lower"));

var _append = _interopRequireDefault(require("./append"));

var _insert = _interopRequireDefault(require("./insert"));

var _remove = _interopRequireDefault(require("./remove"));

var _clone = _interopRequireDefault(require("./clone"));

var _datum = _interopRequireDefault(require("./datum"));

var _on = _interopRequireDefault(require("./on"));

var _dispatch = _interopRequireDefault(require("./dispatch"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var root = [null];
exports.root = root;

function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: _select.default,
  selectAll: _selectAll.default,
  filter: _filter.default,
  data: _data.default,
  enter: _enter.default,
  exit: _exit.default,
  join: _join.default,
  merge: _merge.default,
  order: _order.default,
  sort: _sort.default,
  call: _call.default,
  nodes: _nodes.default,
  node: _node.default,
  size: _size.default,
  empty: _empty.default,
  each: _each.default,
  attr: _attr.default,
  style: _style.default,
  property: _property.default,
  classed: _classed.default,
  text: _text.default,
  html: _html.default,
  raise: _raise.default,
  lower: _lower.default,
  append: _append.default,
  insert: _insert.default,
  remove: _remove.default,
  clone: _clone.default,
  datum: _datum.default,
  on: _on.default,
  dispatch: _dispatch.default
};
var _default = selection;
exports.default = _default;
},{"./select":"../node_modules/d3-selection/src/selection/select.js","./selectAll":"../node_modules/d3-selection/src/selection/selectAll.js","./filter":"../node_modules/d3-selection/src/selection/filter.js","./data":"../node_modules/d3-selection/src/selection/data.js","./enter":"../node_modules/d3-selection/src/selection/enter.js","./exit":"../node_modules/d3-selection/src/selection/exit.js","./join":"../node_modules/d3-selection/src/selection/join.js","./merge":"../node_modules/d3-selection/src/selection/merge.js","./order":"../node_modules/d3-selection/src/selection/order.js","./sort":"../node_modules/d3-selection/src/selection/sort.js","./call":"../node_modules/d3-selection/src/selection/call.js","./nodes":"../node_modules/d3-selection/src/selection/nodes.js","./node":"../node_modules/d3-selection/src/selection/node.js","./size":"../node_modules/d3-selection/src/selection/size.js","./empty":"../node_modules/d3-selection/src/selection/empty.js","./each":"../node_modules/d3-selection/src/selection/each.js","./attr":"../node_modules/d3-selection/src/selection/attr.js","./style":"../node_modules/d3-selection/src/selection/style.js","./property":"../node_modules/d3-selection/src/selection/property.js","./classed":"../node_modules/d3-selection/src/selection/classed.js","./text":"../node_modules/d3-selection/src/selection/text.js","./html":"../node_modules/d3-selection/src/selection/html.js","./raise":"../node_modules/d3-selection/src/selection/raise.js","./lower":"../node_modules/d3-selection/src/selection/lower.js","./append":"../node_modules/d3-selection/src/selection/append.js","./insert":"../node_modules/d3-selection/src/selection/insert.js","./remove":"../node_modules/d3-selection/src/selection/remove.js","./clone":"../node_modules/d3-selection/src/selection/clone.js","./datum":"../node_modules/d3-selection/src/selection/datum.js","./on":"../node_modules/d3-selection/src/selection/on.js","./dispatch":"../node_modules/d3-selection/src/selection/dispatch.js"}],"../node_modules/d3-selection/src/select.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./selection/index");

function _default(selector) {
  return typeof selector === "string" ? new _index.Selection([[document.querySelector(selector)]], [document.documentElement]) : new _index.Selection([[selector]], _index.root);
}
},{"./selection/index":"../node_modules/d3-selection/src/selection/index.js"}],"../node_modules/d3-selection/src/create.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("./creator"));

var _select = _interopRequireDefault(require("./select"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  return (0, _select.default)((0, _creator.default)(name).call(document.documentElement));
}
},{"./creator":"../node_modules/d3-selection/src/creator.js","./select":"../node_modules/d3-selection/src/select.js"}],"../node_modules/d3-selection/src/local.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = local;
var nextId = 0;

function local() {
  return new Local();
}

function Local() {
  this._ = "@" + (++nextId).toString(36);
}

Local.prototype = local.prototype = {
  constructor: Local,
  get: function (node) {
    var id = this._;

    while (!(id in node)) if (!(node = node.parentNode)) return;

    return node[id];
  },
  set: function (node, value) {
    return node[this._] = value;
  },
  remove: function (node) {
    return this._ in node && delete node[this._];
  },
  toString: function () {
    return this._;
  }
};
},{}],"../node_modules/d3-selection/src/sourceEvent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _on = require("./selection/on");

function _default() {
  var current = _on.event,
      source;

  while (source = current.sourceEvent) current = source;

  return current;
}
},{"./selection/on":"../node_modules/d3-selection/src/selection/on.js"}],"../node_modules/d3-selection/src/point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node, event) {
  var svg = node.ownerSVGElement || node;

  if (svg.createSVGPoint) {
    var point = svg.createSVGPoint();
    point.x = event.clientX, point.y = event.clientY;
    point = point.matrixTransform(node.getScreenCTM().inverse());
    return [point.x, point.y];
  }

  var rect = node.getBoundingClientRect();
  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
}
},{}],"../node_modules/d3-selection/src/mouse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node) {
  var event = (0, _sourceEvent.default)();
  if (event.changedTouches) event = event.changedTouches[0];
  return (0, _point.default)(node, event);
}
},{"./sourceEvent":"../node_modules/d3-selection/src/sourceEvent.js","./point":"../node_modules/d3-selection/src/point.js"}],"../node_modules/d3-selection/src/selectAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./selection/index");

function _default(selector) {
  return typeof selector === "string" ? new _index.Selection([document.querySelectorAll(selector)], [document.documentElement]) : new _index.Selection([selector == null ? [] : selector], _index.root);
}
},{"./selection/index":"../node_modules/d3-selection/src/selection/index.js"}],"../node_modules/d3-selection/src/touch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node, touches, identifier) {
  if (arguments.length < 3) identifier = touches, touches = (0, _sourceEvent.default)().changedTouches;

  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
    if ((touch = touches[i]).identifier === identifier) {
      return (0, _point.default)(node, touch);
    }
  }

  return null;
}
},{"./sourceEvent":"../node_modules/d3-selection/src/sourceEvent.js","./point":"../node_modules/d3-selection/src/point.js"}],"../node_modules/d3-selection/src/touches.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node, touches) {
  if (touches == null) touches = (0, _sourceEvent.default)().touches;

  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {
    points[i] = (0, _point.default)(node, touches[i]);
  }

  return points;
}
},{"./sourceEvent":"../node_modules/d3-selection/src/sourceEvent.js","./point":"../node_modules/d3-selection/src/point.js"}],"../node_modules/d3-selection/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "create", {
  enumerable: true,
  get: function () {
    return _create.default;
  }
});
Object.defineProperty(exports, "creator", {
  enumerable: true,
  get: function () {
    return _creator.default;
  }
});
Object.defineProperty(exports, "local", {
  enumerable: true,
  get: function () {
    return _local.default;
  }
});
Object.defineProperty(exports, "matcher", {
  enumerable: true,
  get: function () {
    return _matcher.default;
  }
});
Object.defineProperty(exports, "mouse", {
  enumerable: true,
  get: function () {
    return _mouse.default;
  }
});
Object.defineProperty(exports, "namespace", {
  enumerable: true,
  get: function () {
    return _namespace.default;
  }
});
Object.defineProperty(exports, "namespaces", {
  enumerable: true,
  get: function () {
    return _namespaces.default;
  }
});
Object.defineProperty(exports, "clientPoint", {
  enumerable: true,
  get: function () {
    return _point.default;
  }
});
Object.defineProperty(exports, "select", {
  enumerable: true,
  get: function () {
    return _select.default;
  }
});
Object.defineProperty(exports, "selectAll", {
  enumerable: true,
  get: function () {
    return _selectAll.default;
  }
});
Object.defineProperty(exports, "selection", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "selector", {
  enumerable: true,
  get: function () {
    return _selector.default;
  }
});
Object.defineProperty(exports, "selectorAll", {
  enumerable: true,
  get: function () {
    return _selectorAll.default;
  }
});
Object.defineProperty(exports, "style", {
  enumerable: true,
  get: function () {
    return _style.styleValue;
  }
});
Object.defineProperty(exports, "touch", {
  enumerable: true,
  get: function () {
    return _touch.default;
  }
});
Object.defineProperty(exports, "touches", {
  enumerable: true,
  get: function () {
    return _touches.default;
  }
});
Object.defineProperty(exports, "window", {
  enumerable: true,
  get: function () {
    return _window.default;
  }
});
Object.defineProperty(exports, "event", {
  enumerable: true,
  get: function () {
    return _on.event;
  }
});
Object.defineProperty(exports, "customEvent", {
  enumerable: true,
  get: function () {
    return _on.customEvent;
  }
});

var _create = _interopRequireDefault(require("./create"));

var _creator = _interopRequireDefault(require("./creator"));

var _local = _interopRequireDefault(require("./local"));

var _matcher = _interopRequireDefault(require("./matcher"));

var _mouse = _interopRequireDefault(require("./mouse"));

var _namespace = _interopRequireDefault(require("./namespace"));

var _namespaces = _interopRequireDefault(require("./namespaces"));

var _point = _interopRequireDefault(require("./point"));

var _select = _interopRequireDefault(require("./select"));

var _selectAll = _interopRequireDefault(require("./selectAll"));

var _index = _interopRequireDefault(require("./selection/index"));

var _selector = _interopRequireDefault(require("./selector"));

var _selectorAll = _interopRequireDefault(require("./selectorAll"));

var _style = require("./selection/style");

var _touch = _interopRequireDefault(require("./touch"));

var _touches = _interopRequireDefault(require("./touches"));

var _window = _interopRequireDefault(require("./window"));

var _on = require("./selection/on");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./create":"../node_modules/d3-selection/src/create.js","./creator":"../node_modules/d3-selection/src/creator.js","./local":"../node_modules/d3-selection/src/local.js","./matcher":"../node_modules/d3-selection/src/matcher.js","./mouse":"../node_modules/d3-selection/src/mouse.js","./namespace":"../node_modules/d3-selection/src/namespace.js","./namespaces":"../node_modules/d3-selection/src/namespaces.js","./point":"../node_modules/d3-selection/src/point.js","./select":"../node_modules/d3-selection/src/select.js","./selectAll":"../node_modules/d3-selection/src/selectAll.js","./selection/index":"../node_modules/d3-selection/src/selection/index.js","./selector":"../node_modules/d3-selection/src/selector.js","./selectorAll":"../node_modules/d3-selection/src/selectorAll.js","./selection/style":"../node_modules/d3-selection/src/selection/style.js","./touch":"../node_modules/d3-selection/src/touch.js","./touches":"../node_modules/d3-selection/src/touches.js","./window":"../node_modules/d3-selection/src/window.js","./selection/on":"../node_modules/d3-selection/src/selection/on.js"}],"../node_modules/d3-drag/src/noevent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nopropagation = nopropagation;
exports.default = _default;

var _d3Selection = require("d3-selection");

function nopropagation() {
  _d3Selection.event.stopImmediatePropagation();
}

function _default() {
  _d3Selection.event.preventDefault();

  _d3Selection.event.stopImmediatePropagation();
}
},{"d3-selection":"../node_modules/d3-selection/src/index.js"}],"../node_modules/d3-drag/src/nodrag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.yesdrag = yesdrag;

var _d3Selection = require("d3-selection");

var _noevent = _interopRequireDefault(require("./noevent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(view) {
  var root = view.document.documentElement,
      selection = (0, _d3Selection.select)(view).on("dragstart.drag", _noevent.default, true);

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", _noevent.default, true);
  } else {
    root.__noselect = root.style.MozUserSelect;
    root.style.MozUserSelect = "none";
  }
}

function yesdrag(view, noclick) {
  var root = view.document.documentElement,
      selection = (0, _d3Selection.select)(view).on("dragstart.drag", null);

  if (noclick) {
    selection.on("click.drag", _noevent.default, true);
    setTimeout(function () {
      selection.on("click.drag", null);
    }, 0);
  }

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", null);
  } else {
    root.style.MozUserSelect = root.__noselect;
    delete root.__noselect;
  }
}
},{"d3-selection":"../node_modules/d3-selection/src/index.js","./noevent.js":"../node_modules/d3-drag/src/noevent.js"}],"../node_modules/d3-drag/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../node_modules/d3-drag/src/event.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DragEvent;

function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {
  this.target = target;
  this.type = type;
  this.subject = subject;
  this.identifier = id;
  this.active = active;
  this.x = x;
  this.y = y;
  this.dx = dx;
  this.dy = dy;
  this._ = dispatch;
}

DragEvent.prototype.on = function () {
  var value = this._.on.apply(this._, arguments);

  return value === this._ ? this : value;
};
},{}],"../node_modules/d3-drag/src/drag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Selection = require("d3-selection");

var _nodrag = _interopRequireWildcard(require("./nodrag.js"));

var _noevent = _interopRequireWildcard(require("./noevent.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Ignore right-click, since that should open the context menu.
function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultContainer() {
  return this.parentNode;
}

function defaultSubject(d) {
  return d == null ? {
    x: _d3Selection.event.x,
    y: _d3Selection.event.y
  } : d;
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}

function _default() {
  var filter = defaultFilter,
      container = defaultContainer,
      subject = defaultSubject,
      touchable = defaultTouchable,
      gestures = {},
      listeners = (0, _d3Dispatch.dispatch)("start", "drag", "end"),
      active = 0,
      mousedownx,
      mousedowny,
      mousemoving,
      touchending,
      clickDistance2 = 0;

  function drag(selection) {
    selection.on("mousedown.drag", mousedowned).filter(touchable).on("touchstart.drag", touchstarted).on("touchmove.drag", touchmoved).on("touchend.drag touchcancel.drag", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var gesture = beforestart("mouse", container.apply(this, arguments), _d3Selection.mouse, this, arguments);
    if (!gesture) return;
    (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
    (0, _nodrag.default)(_d3Selection.event.view);
    (0, _noevent.nopropagation)();
    mousemoving = false;
    mousedownx = _d3Selection.event.clientX;
    mousedowny = _d3Selection.event.clientY;
    gesture("start");
  }

  function mousemoved() {
    (0, _noevent.default)();

    if (!mousemoving) {
      var dx = _d3Selection.event.clientX - mousedownx,
          dy = _d3Selection.event.clientY - mousedowny;
      mousemoving = dx * dx + dy * dy > clickDistance2;
    }

    gestures.mouse("drag");
  }

  function mouseupped() {
    (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.drag mouseup.drag", null);
    (0, _nodrag.yesdrag)(_d3Selection.event.view, mousemoving);
    (0, _noevent.default)();
    gestures.mouse("end");
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var touches = _d3Selection.event.changedTouches,
        c = container.apply(this, arguments),
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = beforestart(touches[i].identifier, c, _d3Selection.touch, this, arguments)) {
        (0, _noevent.nopropagation)();
        gesture("start");
      }
    }
  }

  function touchmoved() {
    var touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        (0, _noevent.default)();
        gesture("drag");
      }
    }
  }

  function touchended() {
    var touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        gesture;
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, 500); // Ghost clicks are delayed!

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        (0, _noevent.nopropagation)();
        gesture("end");
      }
    }
  }

  function beforestart(id, container, point, that, args) {
    var p = point(container, id),
        s,
        dx,
        dy,
        sublisteners = listeners.copy();
    if (!(0, _d3Selection.customEvent)(new _event.default(drag, "beforestart", s, id, active, p[0], p[1], 0, 0, sublisteners), function () {
      if ((_d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;
      dx = s.x - p[0] || 0;
      dy = s.y - p[1] || 0;
      return true;
    })) return;
    return function gesture(type) {
      var p0 = p,
          n;

      switch (type) {
        case "start":
          gestures[id] = gesture, n = active++;
          break;

        case "end":
          delete gestures[id], --active;
        // nobreak

        case "drag":
          p = point(container, id), n = active;
          break;
      }

      (0, _d3Selection.customEvent)(new _event.default(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);
    };
  }

  drag.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), drag) : filter;
  };

  drag.container = function (_) {
    return arguments.length ? (container = typeof _ === "function" ? _ : (0, _constant.default)(_), drag) : container;
  };

  drag.subject = function (_) {
    return arguments.length ? (subject = typeof _ === "function" ? _ : (0, _constant.default)(_), drag) : subject;
  };

  drag.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), drag) : touchable;
  };

  drag.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? drag : value;
  };

  drag.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
  };

  return drag;
}
},{"d3-dispatch":"../node_modules/d3-dispatch/src/index.js","d3-selection":"../node_modules/d3-selection/src/index.js","./nodrag.js":"../node_modules/d3-drag/src/nodrag.js","./noevent.js":"../node_modules/d3-drag/src/noevent.js","./constant.js":"../node_modules/d3-drag/src/constant.js","./event.js":"../node_modules/d3-drag/src/event.js"}],"../node_modules/d3-drag/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "drag", {
  enumerable: true,
  get: function () {
    return _drag.default;
  }
});
Object.defineProperty(exports, "dragDisable", {
  enumerable: true,
  get: function () {
    return _nodrag.default;
  }
});
Object.defineProperty(exports, "dragEnable", {
  enumerable: true,
  get: function () {
    return _nodrag.yesdrag;
  }
});

var _drag = _interopRequireDefault(require("./drag.js"));

var _nodrag = _interopRequireWildcard(require("./nodrag.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./drag.js":"../node_modules/d3-drag/src/drag.js","./nodrag.js":"../node_modules/d3-drag/src/nodrag.js"}],"../node_modules/d3-color/src/define.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.extend = extend;

function _default(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);

  for (var key in definition) prototype[key] = definition[key];

  return prototype;
}
},{}],"../node_modules/d3-color/src/color.js":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Color = Color;
exports.default = color;
exports.rgbConvert = rgbConvert;
exports.rgb = rgb;
exports.Rgb = Rgb;
exports.hslConvert = hslConvert;
exports.hsl = hsl;
exports.brighter = exports.darker = void 0;

var _define = _interopRequireWildcard(require("./define.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Color() {}

var darker = 0.7;
exports.darker = darker;
var brighter = 1 / darker;
exports.brighter = brighter;
var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};
(0, _define.default)(Color, color, {
  copy: function (channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable: function () {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
  : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
  : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
  : l === 4 ? rgba(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000
  : null // invalid hex
  ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
  : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
  : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Rgb, rgb, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function () {
    return this;
  },
  displayable: function () {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: rgb_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity;
  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl();
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;

  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }

  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Hsl, hsl, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
  },
  displayable: function () {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl: function () {
    var a = this.opacity;
    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a === 1 ? ")" : ", " + a + ")");
  }
}));
/* From FvD 13.37, CSS Color Module Level 3 */

function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}
},{"./define.js":"../node_modules/d3-color/src/define.js"}],"../node_modules/d3-color/src/math.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rad2deg = exports.deg2rad = void 0;
var deg2rad = Math.PI / 180;
exports.deg2rad = deg2rad;
var rad2deg = 180 / Math.PI;
exports.rad2deg = rad2deg;
},{}],"../node_modules/d3-color/src/lab.js":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gray = gray;
exports.default = lab;
exports.Lab = Lab;
exports.lch = lch;
exports.hcl = hcl;
exports.Hcl = Hcl;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// https://observablehq.com/@mbostock/lab-and-rgb
var K = 18,
    Xn = 0.96422,
    Yn = 1,
    Zn = 0.82521,
    t0 = 4 / 29,
    t1 = 6 / 29,
    t2 = 3 * t1 * t1,
    t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl) return hcl2lab(o);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),
      x,
      z;
  if (r === g && g === b) x = z = y;else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}

function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}

function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Lab, lab, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function (k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function () {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color.Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);

  var h = Math.atan2(o.b, o.a) * _math.rad2deg;

  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}

function hcl2lab(o) {
  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * _math.deg2rad;
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}

(0, _define.default)(Hcl, hcl, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function (k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function () {
    return hcl2lab(this).rgb();
  }
}));
},{"./define.js":"../node_modules/d3-color/src/define.js","./color.js":"../node_modules/d3-color/src/color.js","./math.js":"../node_modules/d3-color/src/math.js"}],"../node_modules/d3-color/src/cubehelix.js":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cubehelix;
exports.Cubehelix = Cubehelix;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),
      // NaN if l=0 or l=1
  h = s ? Math.atan2(k, bl) * _math.rad2deg - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}

function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Cubehelix, cubehelix, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    k = k == null ? _color.brighter : Math.pow(_color.brighter, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? _color.darker : Math.pow(_color.darker, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math.deg2rad,
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color.Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
  }
}));
},{"./define.js":"../node_modules/d3-color/src/define.js","./color.js":"../node_modules/d3-color/src/color.js","./math.js":"../node_modules/d3-color/src/math.js"}],"../node_modules/d3-color/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "color", {
  enumerable: true,
  get: function () {
    return _color.default;
  }
});
Object.defineProperty(exports, "rgb", {
  enumerable: true,
  get: function () {
    return _color.rgb;
  }
});
Object.defineProperty(exports, "hsl", {
  enumerable: true,
  get: function () {
    return _color.hsl;
  }
});
Object.defineProperty(exports, "lab", {
  enumerable: true,
  get: function () {
    return _lab.default;
  }
});
Object.defineProperty(exports, "hcl", {
  enumerable: true,
  get: function () {
    return _lab.hcl;
  }
});
Object.defineProperty(exports, "lch", {
  enumerable: true,
  get: function () {
    return _lab.lch;
  }
});
Object.defineProperty(exports, "gray", {
  enumerable: true,
  get: function () {
    return _lab.gray;
  }
});
Object.defineProperty(exports, "cubehelix", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});

var _color = _interopRequireWildcard(require("./color.js"));

var _lab = _interopRequireWildcard(require("./lab.js"));

var _cubehelix = _interopRequireDefault(require("./cubehelix.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./color.js":"../node_modules/d3-color/src/color.js","./lab.js":"../node_modules/d3-color/src/lab.js","./cubehelix.js":"../node_modules/d3-color/src/cubehelix.js"}],"../node_modules/d3-interpolate/src/basis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.basis = basis;
exports.default = _default;

function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1,
      t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
}

function _default(values) {
  var n = values.length - 1;
  return function (t) {
    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}
},{}],"../node_modules/d3-interpolate/src/basisClosed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _basis = require("./basis.js");

function _default(values) {
  var n = values.length;
  return function (t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return (0, _basis.basis)((t - i / n) * n, v0, v1, v2, v3);
  };
}
},{"./basis.js":"../node_modules/d3-interpolate/src/basis.js"}],"../node_modules/d3-interpolate/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../node_modules/d3-interpolate/src/color.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hue = hue;
exports.gamma = gamma;
exports.default = nogamma;

var _constant = _interopRequireDefault(require("./constant.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function linear(a, d) {
  return function (t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : (0, _constant.default)(isNaN(a) ? b : a);
}

function gamma(y) {
  return (y = +y) === 1 ? nogamma : function (a, b) {
    return b - a ? exponential(a, b, y) : (0, _constant.default)(isNaN(a) ? b : a);
  };
}

function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : (0, _constant.default)(isNaN(a) ? b : a);
}
},{"./constant.js":"../node_modules/d3-interpolate/src/constant.js"}],"../node_modules/d3-interpolate/src/rgb.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbBasisClosed = exports.rgbBasis = exports.default = void 0;

var _d3Color = require("d3-color");

var _basis = _interopRequireDefault(require("./basis.js"));

var _basisClosed = _interopRequireDefault(require("./basisClosed.js"));

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function rgbGamma(y) {
  var color = (0, _color.gamma)(y);

  function rgb(start, end) {
    var r = color((start = (0, _d3Color.rgb)(start)).r, (end = (0, _d3Color.rgb)(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;
  return rgb;
}(1);

exports.default = _default;

function rgbSpline(spline) {
  return function (colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i,
        color;

    for (i = 0; i < n; ++i) {
      color = (0, _d3Color.rgb)(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }

    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function (t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(_basis.default);
exports.rgbBasis = rgbBasis;
var rgbBasisClosed = rgbSpline(_basisClosed.default);
exports.rgbBasisClosed = rgbBasisClosed;
},{"d3-color":"../node_modules/d3-color/src/index.js","./basis.js":"../node_modules/d3-interpolate/src/basis.js","./basisClosed.js":"../node_modules/d3-interpolate/src/basisClosed.js","./color.js":"../node_modules/d3-interpolate/src/color.js"}],"../node_modules/d3-interpolate/src/numberArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.isNumberArray = isNumberArray;

function _default(a, b) {
  if (!b) b = [];
  var n = a ? Math.min(b.length, a.length) : 0,
      c = b.slice(),
      i;
  return function (t) {
    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;

    return c;
  };
}

function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}
},{}],"../node_modules/d3-interpolate/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.genericArray = genericArray;

var _value = _interopRequireDefault(require("./value.js"));

var _numberArray = _interopRequireWildcard(require("./numberArray.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  return ((0, _numberArray.isNumberArray)(b) ? _numberArray.default : genericArray)(a, b);
}

function genericArray(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = (0, _value.default)(a[i], b[i]);

  for (; i < nb; ++i) c[i] = b[i];

  return function (t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);

    return c;
  };
}
},{"./value.js":"../node_modules/d3-interpolate/src/value.js","./numberArray.js":"../node_modules/d3-interpolate/src/numberArray.js"}],"../node_modules/d3-interpolate/src/date.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  var d = new Date();
  return a = +a, b = +b, function (t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
}
},{}],"../node_modules/d3-interpolate/src/number.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a = +a, b = +b, function (t) {
    return a * (1 - t) + b * t;
  };
}
},{}],"../node_modules/d3-interpolate/src/object.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _value = _interopRequireDefault(require("./value.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  var i = {},
      c = {},
      k;
  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = (0, _value.default)(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function (t) {
    for (k in i) c[k] = i[k](t);

    return c;
  };
}
},{"./value.js":"../node_modules/d3-interpolate/src/value.js"}],"../node_modules/d3-interpolate/src/string.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function () {
    return b;
  };
}

function one(b) {
  return function (t) {
    return b(t) + "";
  };
}

function _default(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0,
      // scan index for next number in b
  am,
      // current match in a
  bm,
      // current match in b
  bs,
      // string preceding current number in b, if any
  i = -1,
      // index in s
  s = [],
      // string constants and placeholders
  q = []; // number interpolators
  // Coerce inputs to strings.

  a = a + "", b = b + ""; // Interpolate pairs of numbers in a & b.

  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }

    if ((am = am[0]) === (bm = bm[0])) {
      // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else {
      // interpolate non-matching numbers
      s[++i] = null;
      q.push({
        i: i,
        x: (0, _number.default)(am, bm)
      });
    }

    bi = reB.lastIndex;
  } // Add remains of b.


  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  } // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.


  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {
    for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);

    return s.join("");
  });
}
},{"./number.js":"../node_modules/d3-interpolate/src/number.js"}],"../node_modules/d3-interpolate/src/value.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var _rgb = _interopRequireDefault(require("./rgb.js"));

var _array = require("./array.js");

var _date = _interopRequireDefault(require("./date.js"));

var _number = _interopRequireDefault(require("./number.js"));

var _object = _interopRequireDefault(require("./object.js"));

var _string = _interopRequireDefault(require("./string.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _numberArray = _interopRequireWildcard(require("./numberArray.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  var t = typeof b,
      c;
  return b == null || t === "boolean" ? (0, _constant.default)(b) : (t === "number" ? _number.default : t === "string" ? (c = (0, _d3Color.color)(b)) ? (b = c, _rgb.default) : _string.default : b instanceof _d3Color.color ? _rgb.default : b instanceof Date ? _date.default : (0, _numberArray.isNumberArray)(b) ? _numberArray.default : Array.isArray(b) ? _array.genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object.default : _number.default)(a, b);
}
},{"d3-color":"../node_modules/d3-color/src/index.js","./rgb.js":"../node_modules/d3-interpolate/src/rgb.js","./array.js":"../node_modules/d3-interpolate/src/array.js","./date.js":"../node_modules/d3-interpolate/src/date.js","./number.js":"../node_modules/d3-interpolate/src/number.js","./object.js":"../node_modules/d3-interpolate/src/object.js","./string.js":"../node_modules/d3-interpolate/src/string.js","./constant.js":"../node_modules/d3-interpolate/src/constant.js","./numberArray.js":"../node_modules/d3-interpolate/src/numberArray.js"}],"../node_modules/d3-interpolate/src/discrete.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}
},{}],"../node_modules/d3-interpolate/src/hue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _color = require("./color.js");

function _default(a, b) {
  var i = (0, _color.hue)(+a, +b);
  return function (t) {
    var x = i(t);
    return x - 360 * Math.floor(x / 360);
  };
}
},{"./color.js":"../node_modules/d3-interpolate/src/color.js"}],"../node_modules/d3-interpolate/src/round.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a = +a, b = +b, function (t) {
    return Math.round(a * (1 - t) + b * t);
  };
}
},{}],"../node_modules/d3-interpolate/src/transform/decompose.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.identity = void 0;
var degrees = 180 / Math.PI;
var identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
exports.identity = identity;

function _default(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
}
},{}],"../node_modules/d3-interpolate/src/transform/parse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseCss = parseCss;
exports.parseSvg = parseSvg;

var _decompose = _interopRequireWildcard(require("./decompose.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var cssNode, cssRoot, cssView, svgNode;

function parseCss(value) {
  if (value === "none") return _decompose.identity;
  if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
  cssNode.style.transform = value;
  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
  cssRoot.removeChild(cssNode);
  value = value.slice(7, -1).split(",");
  return (0, _decompose.default)(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
}

function parseSvg(value) {
  if (value == null) return _decompose.identity;
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose.identity;
  value = value.matrix;
  return (0, _decompose.default)(value.a, value.b, value.c, value.d, value.e, value.f);
}
},{"./decompose.js":"../node_modules/d3-interpolate/src/transform/decompose.js"}],"../node_modules/d3-interpolate/src/transform/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interpolateTransformSvg = exports.interpolateTransformCss = void 0;

var _number = _interopRequireDefault(require("../number.js"));

var _parse = require("./parse.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function interpolateTransform(parse, pxComma, pxParen, degParen) {
  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({
        i: i - 4,
        x: (0, _number.default)(xa, xb)
      }, {
        i: i - 2,
        x: (0, _number.default)(ya, yb)
      });
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path

      q.push({
        i: s.push(pop(s) + "rotate(", null, degParen) - 2,
        x: (0, _number.default)(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({
        i: s.push(pop(s) + "skewX(", null, degParen) - 2,
        x: (0, _number.default)(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({
        i: i - 4,
        x: (0, _number.default)(xa, xb)
      }, {
        i: i - 2,
        x: (0, _number.default)(ya, yb)
      });
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function (a, b) {
    var s = [],
        // string constants and placeholders
    q = []; // number interpolators

    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc

    return function (t) {
      var i = -1,
          n = q.length,
          o;

      while (++i < n) s[(o = q[i]).i] = o.x(t);

      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(_parse.parseCss, "px, ", "px)", "deg)");
exports.interpolateTransformCss = interpolateTransformCss;
var interpolateTransformSvg = interpolateTransform(_parse.parseSvg, ", ", ")", ")");
exports.interpolateTransformSvg = interpolateTransformSvg;
},{"../number.js":"../node_modules/d3-interpolate/src/number.js","./parse.js":"../node_modules/d3-interpolate/src/transform/parse.js"}],"../node_modules/d3-interpolate/src/zoom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var rho = Math.SQRT2,
    rho2 = 2,
    rho4 = 4,
    epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
} // p0 = [ux0, uy0, w0]
// p1 = [ux1, uy1, w1]


function _default(p0, p1) {
  var ux0 = p0[0],
      uy0 = p0[1],
      w0 = p0[2],
      ux1 = p1[0],
      uy1 = p1[1],
      w1 = p1[2],
      dx = ux1 - ux0,
      dy = uy1 - uy0,
      d2 = dx * dx + dy * dy,
      i,
      S; // Special case for u0 ≅ u1.

  if (d2 < epsilon2) {
    S = Math.log(w1 / w0) / rho;

    i = function (t) {
      return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];
    };
  } // General case.
  else {
      var d1 = Math.sqrt(d2),
          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / rho;

      i = function (t) {
        var s = t * S,
            coshr0 = cosh(r0),
            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];
      };
    }

  i.duration = S * 1000;
  return i;
}
},{}],"../node_modules/d3-interpolate/src/hsl.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hslLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function hsl(hue) {
  return function (start, end) {
    var h = hue((start = (0, _d3Color.hsl)(start)).h, (end = (0, _d3Color.hsl)(end)).h),
        s = (0, _color.default)(start.s, end.s),
        l = (0, _color.default)(start.l, end.l),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.s = s(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

var _default = hsl(_color.hue);

exports.default = _default;
var hslLong = hsl(_color.default);
exports.hslLong = hslLong;
},{"d3-color":"../node_modules/d3-color/src/index.js","./color.js":"../node_modules/d3-interpolate/src/color.js"}],"../node_modules/d3-interpolate/src/lab.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = lab;

var _d3Color = require("d3-color");

var _color = _interopRequireDefault(require("./color.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function lab(start, end) {
  var l = (0, _color.default)((start = (0, _d3Color.lab)(start)).l, (end = (0, _d3Color.lab)(end)).l),
      a = (0, _color.default)(start.a, end.a),
      b = (0, _color.default)(start.b, end.b),
      opacity = (0, _color.default)(start.opacity, end.opacity);
  return function (t) {
    start.l = l(t);
    start.a = a(t);
    start.b = b(t);
    start.opacity = opacity(t);
    return start + "";
  };
}
},{"d3-color":"../node_modules/d3-color/src/index.js","./color.js":"../node_modules/d3-interpolate/src/color.js"}],"../node_modules/d3-interpolate/src/hcl.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hclLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function hcl(hue) {
  return function (start, end) {
    var h = hue((start = (0, _d3Color.hcl)(start)).h, (end = (0, _d3Color.hcl)(end)).h),
        c = (0, _color.default)(start.c, end.c),
        l = (0, _color.default)(start.l, end.l),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

var _default = hcl(_color.hue);

exports.default = _default;
var hclLong = hcl(_color.default);
exports.hclLong = hclLong;
},{"d3-color":"../node_modules/d3-color/src/index.js","./color.js":"../node_modules/d3-interpolate/src/color.js"}],"../node_modules/d3-interpolate/src/cubehelix.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubehelixLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cubehelix(hue) {
  return function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = (0, _d3Color.cubehelix)(start)).h, (end = (0, _d3Color.cubehelix)(end)).h),
          s = (0, _color.default)(start.s, end.s),
          l = (0, _color.default)(start.l, end.l),
          opacity = (0, _color.default)(start.opacity, end.opacity);
      return function (t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;
    return cubehelix;
  }(1);
}

var _default = cubehelix(_color.hue);

exports.default = _default;
var cubehelixLong = cubehelix(_color.default);
exports.cubehelixLong = cubehelixLong;
},{"d3-color":"../node_modules/d3-color/src/index.js","./color.js":"../node_modules/d3-interpolate/src/color.js"}],"../node_modules/d3-interpolate/src/piecewise.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = piecewise;

function piecewise(interpolate, values) {
  var i = 0,
      n = values.length - 1,
      v = values[0],
      I = new Array(n < 0 ? 0 : n);

  while (i < n) I[i] = interpolate(v, v = values[++i]);

  return function (t) {
    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
    return I[i](t - i);
  };
}
},{}],"../node_modules/d3-interpolate/src/quantize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(interpolator, n) {
  var samples = new Array(n);

  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));

  return samples;
}
},{}],"../node_modules/d3-interpolate/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "interpolate", {
  enumerable: true,
  get: function () {
    return _value.default;
  }
});
Object.defineProperty(exports, "interpolateArray", {
  enumerable: true,
  get: function () {
    return _array.default;
  }
});
Object.defineProperty(exports, "interpolateBasis", {
  enumerable: true,
  get: function () {
    return _basis.default;
  }
});
Object.defineProperty(exports, "interpolateBasisClosed", {
  enumerable: true,
  get: function () {
    return _basisClosed.default;
  }
});
Object.defineProperty(exports, "interpolateDate", {
  enumerable: true,
  get: function () {
    return _date.default;
  }
});
Object.defineProperty(exports, "interpolateDiscrete", {
  enumerable: true,
  get: function () {
    return _discrete.default;
  }
});
Object.defineProperty(exports, "interpolateHue", {
  enumerable: true,
  get: function () {
    return _hue.default;
  }
});
Object.defineProperty(exports, "interpolateNumber", {
  enumerable: true,
  get: function () {
    return _number.default;
  }
});
Object.defineProperty(exports, "interpolateNumberArray", {
  enumerable: true,
  get: function () {
    return _numberArray.default;
  }
});
Object.defineProperty(exports, "interpolateObject", {
  enumerable: true,
  get: function () {
    return _object.default;
  }
});
Object.defineProperty(exports, "interpolateRound", {
  enumerable: true,
  get: function () {
    return _round.default;
  }
});
Object.defineProperty(exports, "interpolateString", {
  enumerable: true,
  get: function () {
    return _string.default;
  }
});
Object.defineProperty(exports, "interpolateTransformCss", {
  enumerable: true,
  get: function () {
    return _index.interpolateTransformCss;
  }
});
Object.defineProperty(exports, "interpolateTransformSvg", {
  enumerable: true,
  get: function () {
    return _index.interpolateTransformSvg;
  }
});
Object.defineProperty(exports, "interpolateZoom", {
  enumerable: true,
  get: function () {
    return _zoom.default;
  }
});
Object.defineProperty(exports, "interpolateRgb", {
  enumerable: true,
  get: function () {
    return _rgb.default;
  }
});
Object.defineProperty(exports, "interpolateRgbBasis", {
  enumerable: true,
  get: function () {
    return _rgb.rgbBasis;
  }
});
Object.defineProperty(exports, "interpolateRgbBasisClosed", {
  enumerable: true,
  get: function () {
    return _rgb.rgbBasisClosed;
  }
});
Object.defineProperty(exports, "interpolateHsl", {
  enumerable: true,
  get: function () {
    return _hsl.default;
  }
});
Object.defineProperty(exports, "interpolateHslLong", {
  enumerable: true,
  get: function () {
    return _hsl.hslLong;
  }
});
Object.defineProperty(exports, "interpolateLab", {
  enumerable: true,
  get: function () {
    return _lab.default;
  }
});
Object.defineProperty(exports, "interpolateHcl", {
  enumerable: true,
  get: function () {
    return _hcl.default;
  }
});
Object.defineProperty(exports, "interpolateHclLong", {
  enumerable: true,
  get: function () {
    return _hcl.hclLong;
  }
});
Object.defineProperty(exports, "interpolateCubehelix", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});
Object.defineProperty(exports, "interpolateCubehelixLong", {
  enumerable: true,
  get: function () {
    return _cubehelix.cubehelixLong;
  }
});
Object.defineProperty(exports, "piecewise", {
  enumerable: true,
  get: function () {
    return _piecewise.default;
  }
});
Object.defineProperty(exports, "quantize", {
  enumerable: true,
  get: function () {
    return _quantize.default;
  }
});

var _value = _interopRequireDefault(require("./value.js"));

var _array = _interopRequireDefault(require("./array.js"));

var _basis = _interopRequireDefault(require("./basis.js"));

var _basisClosed = _interopRequireDefault(require("./basisClosed.js"));

var _date = _interopRequireDefault(require("./date.js"));

var _discrete = _interopRequireDefault(require("./discrete.js"));

var _hue = _interopRequireDefault(require("./hue.js"));

var _number = _interopRequireDefault(require("./number.js"));

var _numberArray = _interopRequireDefault(require("./numberArray.js"));

var _object = _interopRequireDefault(require("./object.js"));

var _round = _interopRequireDefault(require("./round.js"));

var _string = _interopRequireDefault(require("./string.js"));

var _index = require("./transform/index.js");

var _zoom = _interopRequireDefault(require("./zoom.js"));

var _rgb = _interopRequireWildcard(require("./rgb.js"));

var _hsl = _interopRequireWildcard(require("./hsl.js"));

var _lab = _interopRequireDefault(require("./lab.js"));

var _hcl = _interopRequireWildcard(require("./hcl.js"));

var _cubehelix = _interopRequireWildcard(require("./cubehelix.js"));

var _piecewise = _interopRequireDefault(require("./piecewise.js"));

var _quantize = _interopRequireDefault(require("./quantize.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./value.js":"../node_modules/d3-interpolate/src/value.js","./array.js":"../node_modules/d3-interpolate/src/array.js","./basis.js":"../node_modules/d3-interpolate/src/basis.js","./basisClosed.js":"../node_modules/d3-interpolate/src/basisClosed.js","./date.js":"../node_modules/d3-interpolate/src/date.js","./discrete.js":"../node_modules/d3-interpolate/src/discrete.js","./hue.js":"../node_modules/d3-interpolate/src/hue.js","./number.js":"../node_modules/d3-interpolate/src/number.js","./numberArray.js":"../node_modules/d3-interpolate/src/numberArray.js","./object.js":"../node_modules/d3-interpolate/src/object.js","./round.js":"../node_modules/d3-interpolate/src/round.js","./string.js":"../node_modules/d3-interpolate/src/string.js","./transform/index.js":"../node_modules/d3-interpolate/src/transform/index.js","./zoom.js":"../node_modules/d3-interpolate/src/zoom.js","./rgb.js":"../node_modules/d3-interpolate/src/rgb.js","./hsl.js":"../node_modules/d3-interpolate/src/hsl.js","./lab.js":"../node_modules/d3-interpolate/src/lab.js","./hcl.js":"../node_modules/d3-interpolate/src/hcl.js","./cubehelix.js":"../node_modules/d3-interpolate/src/cubehelix.js","./piecewise.js":"../node_modules/d3-interpolate/src/piecewise.js","./quantize.js":"../node_modules/d3-interpolate/src/quantize.js"}],"../node_modules/d3-timer/src/timer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.now = now;
exports.Timer = Timer;
exports.timer = timer;
exports.timerFlush = timerFlush;
var frame = 0,
    // is an animation frame pending?
timeout = 0,
    // is a timeout pending?
interval = 0,
    // are any timers active?
pokeDelay = 1000,
    // how frequently we check for clock skew
taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = typeof performance === "object" && performance.now ? performance : Date,
    setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {
  setTimeout(f, 17);
};

function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call = this._time = this._next = null;
}

Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function (callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);

    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;else taskHead = this;
      taskTail = this;
    }

    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function () {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};

function timer(callback, delay, time) {
  var t = new Timer();
  t.restart(callback, delay, time);
  return t;
}

function timerFlush() {
  now(); // Get the current time, if not already set.

  ++frame; // Pretend we’ve set an alarm, if we haven’t already.

  var t = taskHead,
      e;

  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
    t = t._next;
  }

  --frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout = 0;

  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(),
      delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0,
      t1 = taskHead,
      t2,
      time = Infinity;

  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }

  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (frame) return; // Soonest alarm already set, or will be.

  if (timeout) timeout = clearTimeout(timeout);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.

  if (delay > 24) {
    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}
},{}],"../node_modules/d3-timer/src/timeout.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _timer = require("./timer.js");

function _default(callback, delay, time) {
  var t = new _timer.Timer();
  delay = delay == null ? 0 : +delay;
  t.restart(function (elapsed) {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
}
},{"./timer.js":"../node_modules/d3-timer/src/timer.js"}],"../node_modules/d3-timer/src/interval.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _timer = require("./timer.js");

function _default(callback, delay, time) {
  var t = new _timer.Timer(),
      total = delay;
  if (delay == null) return t.restart(callback, delay, time), t;
  delay = +delay, time = time == null ? (0, _timer.now)() : +time;
  t.restart(function tick(elapsed) {
    elapsed += total;
    t.restart(tick, total += delay, time);
    callback(elapsed);
  }, delay, time);
  return t;
}
},{"./timer.js":"../node_modules/d3-timer/src/timer.js"}],"../node_modules/d3-timer/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "now", {
  enumerable: true,
  get: function () {
    return _timer.now;
  }
});
Object.defineProperty(exports, "timer", {
  enumerable: true,
  get: function () {
    return _timer.timer;
  }
});
Object.defineProperty(exports, "timerFlush", {
  enumerable: true,
  get: function () {
    return _timer.timerFlush;
  }
});
Object.defineProperty(exports, "timeout", {
  enumerable: true,
  get: function () {
    return _timeout.default;
  }
});
Object.defineProperty(exports, "interval", {
  enumerable: true,
  get: function () {
    return _interval.default;
  }
});

var _timer = require("./timer.js");

var _timeout = _interopRequireDefault(require("./timeout.js"));

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./timer.js":"../node_modules/d3-timer/src/timer.js","./timeout.js":"../node_modules/d3-timer/src/timeout.js","./interval.js":"../node_modules/d3-timer/src/interval.js"}],"../node_modules/d3-transition/src/transition/schedule.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.init = init;
exports.set = set;
exports.get = get;
exports.ENDED = exports.ENDING = exports.RUNNING = exports.STARTED = exports.STARTING = exports.SCHEDULED = exports.CREATED = void 0;

var _d3Dispatch = require("d3-dispatch");

var _d3Timer = require("d3-timer");

var emptyOn = (0, _d3Dispatch.dispatch)("start", "end", "cancel", "interrupt");
var emptyTween = [];
var CREATED = 0;
exports.CREATED = CREATED;
var SCHEDULED = 1;
exports.SCHEDULED = SCHEDULED;
var STARTING = 2;
exports.STARTING = STARTING;
var STARTED = 3;
exports.STARTED = STARTED;
var RUNNING = 4;
exports.RUNNING = RUNNING;
var ENDING = 5;
exports.ENDING = ENDING;
var ENDED = 6;
exports.ENDED = ENDED;

function _default(node, name, id, index, group, timing) {
  var schedules = node.__transition;
  if (!schedules) node.__transition = {};else if (id in schedules) return;
  create(node, id, {
    name: name,
    index: index,
    // For context during callback.
    group: group,
    // For context during callback.
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}

function init(node, id) {
  var schedule = get(node, id);
  if (schedule.state > CREATED) throw new Error("too late; already scheduled");
  return schedule;
}

function set(node, id) {
  var schedule = get(node, id);
  if (schedule.state > STARTED) throw new Error("too late; already running");
  return schedule;
}

function get(node, id) {
  var schedule = node.__transition;
  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
  return schedule;
}

function create(node, id, self) {
  var schedules = node.__transition,
      tween; // Initialize the self timer when the transition is created.
  // Note the actual delay is not known until the first callback!

  schedules[id] = self;
  self.timer = (0, _d3Timer.timer)(schedule, 0, self.time);

  function schedule(elapsed) {
    self.state = SCHEDULED;
    self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.

    if (self.delay <= elapsed) start(elapsed - self.delay);
  }

  function start(elapsed) {
    var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.

    if (self.state !== SCHEDULED) return stop();

    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,
      // defer starting an interrupting transition until that transition has a
      // chance to tick (and possibly end); see d3/d3-transition#54!

      if (o.state === STARTED) return (0, _d3Timer.timeout)(start); // Interrupt the active transition, if any.

      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      } // Cancel any pre-empted transitions.
      else if (+i < id) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("cancel", node, node.__data__, o.index, o.group);
          delete schedules[i];
        }
    } // Defer the first tick to end of the current frame; see d3/d3#1576.
    // Note the transition may be canceled after start and before the first tick!
    // Note this must be scheduled before the start event; see d3/d3-transition#16!
    // Assuming this is successful, subsequent callbacks go straight to tick.


    (0, _d3Timer.timeout)(function () {
      if (self.state === STARTED) {
        self.state = RUNNING;
        self.timer.restart(tick, self.delay, self.time);
        tick(elapsed);
      }
    }); // Dispatch the start event.
    // Note this must be done before the tween are initialized.

    self.state = STARTING;
    self.on.call("start", node, node.__data__, self.index, self.group);
    if (self.state !== STARTING) return; // interrupted

    self.state = STARTED; // Initialize the tween, deleting null tween.

    tween = new Array(n = self.tween.length);

    for (i = 0, j = -1; i < n; ++i) {
      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
        tween[++j] = o;
      }
    }

    tween.length = j + 1;
  }

  function tick(elapsed) {
    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
        i = -1,
        n = tween.length;

    while (++i < n) {
      tween[i].call(node, t);
    } // Dispatch the end event.


    if (self.state === ENDING) {
      self.on.call("end", node, node.__data__, self.index, self.group);
      stop();
    }
  }

  function stop() {
    self.state = ENDED;
    self.timer.stop();
    delete schedules[id];

    for (var i in schedules) return; // eslint-disable-line no-unused-vars


    delete node.__transition;
  }
}
},{"d3-dispatch":"../node_modules/d3-dispatch/src/index.js","d3-timer":"../node_modules/d3-timer/src/index.js"}],"../node_modules/d3-transition/src/interrupt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./transition/schedule.js");

function _default(node, name) {
  var schedules = node.__transition,
      schedule,
      active,
      empty = true,
      i;
  if (!schedules) return;
  name = name == null ? null : name + "";

  for (i in schedules) {
    if ((schedule = schedules[i]).name !== name) {
      empty = false;
      continue;
    }

    active = schedule.state > _schedule.STARTING && schedule.state < _schedule.ENDING;
    schedule.state = _schedule.ENDED;
    schedule.timer.stop();
    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
    delete schedules[i];
  }

  if (empty) delete node.__transition;
}
},{"./transition/schedule.js":"../node_modules/d3-transition/src/transition/schedule.js"}],"../node_modules/d3-transition/src/selection/interrupt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _interrupt = _interopRequireDefault(require("../interrupt.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  return this.each(function () {
    (0, _interrupt.default)(this, name);
  });
}
},{"../interrupt.js":"../node_modules/d3-transition/src/interrupt.js"}],"../node_modules/d3-transition/src/transition/tween.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.tweenValue = tweenValue;

var _schedule = require("./schedule.js");

function tweenRemove(id, name) {
  var tween0, tween1;
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = tween0 = tween;

      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }

    schedule.tween = tween1;
  };
}

function tweenFunction(id, name, value) {
  var tween0, tween1;
  if (typeof value !== "function") throw new Error();
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();

      for (var t = {
        name: name,
        value: value
      }, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t;
          break;
        }
      }

      if (i === n) tween1.push(t);
    }

    schedule.tween = tween1;
  };
}

function _default(name, value) {
  var id = this._id;
  name += "";

  if (arguments.length < 2) {
    var tween = (0, _schedule.get)(this.node(), id).tween;

    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name) {
        return t.value;
      }
    }

    return null;
  }

  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
}

function tweenValue(transition, name, value) {
  var id = transition._id;
  transition.each(function () {
    var schedule = (0, _schedule.set)(this, id);
    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
  });
  return function (node) {
    return (0, _schedule.get)(node, id).value[name];
  };
}
},{"./schedule.js":"../node_modules/d3-transition/src/transition/schedule.js"}],"../node_modules/d3-transition/src/transition/interpolate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

function _default(a, b) {
  var c;
  return (typeof b === "number" ? _d3Interpolate.interpolateNumber : b instanceof _d3Color.color ? _d3Interpolate.interpolateRgb : (c = (0, _d3Color.color)(b)) ? (b = c, _d3Interpolate.interpolateRgb) : _d3Interpolate.interpolateString)(a, b);
}
},{"d3-color":"../node_modules/d3-color/src/index.js","d3-interpolate":"../node_modules/d3-interpolate/src/index.js"}],"../node_modules/d3-transition/src/transition/attr.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _tween = require("./tween.js");

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrConstantNS(fullname, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function attrFunctionNS(fullname, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function _default(name, value) {
  var fullname = (0, _d3Selection.namespace)(name),
      i = fullname === "transform" ? _d3Interpolate.interpolateTransformSvg : _interpolate.default;
  return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, (0, _tween.tweenValue)(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
}
},{"d3-interpolate":"../node_modules/d3-interpolate/src/index.js","d3-selection":"../node_modules/d3-selection/src/index.js","./tween.js":"../node_modules/d3-transition/src/transition/tween.js","./interpolate.js":"../node_modules/d3-transition/src/transition/interpolate.js"}],"../node_modules/d3-transition/src/transition/attrTween.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

function attrInterpolate(name, i) {
  return function (t) {
    this.setAttribute(name, i.call(this, t));
  };
}

function attrInterpolateNS(fullname, i) {
  return function (t) {
    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
  };
}

function attrTweenNS(fullname, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function attrTween(name, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function _default(name, value) {
  var key = "attr." + name;
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  var fullname = (0, _d3Selection.namespace)(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
}
},{"d3-selection":"../node_modules/d3-selection/src/index.js"}],"../node_modules/d3-transition/src/transition/delay.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function delayFunction(id, value) {
  return function () {
    (0, _schedule.init)(this, id).delay = +value.apply(this, arguments);
  };
}

function delayConstant(id, value) {
  return value = +value, function () {
    (0, _schedule.init)(this, id).delay = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id, value)) : (0, _schedule.get)(this.node(), id).delay;
}
},{"./schedule.js":"../node_modules/d3-transition/src/transition/schedule.js"}],"../node_modules/d3-transition/src/transition/duration.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function durationFunction(id, value) {
  return function () {
    (0, _schedule.set)(this, id).duration = +value.apply(this, arguments);
  };
}

function durationConstant(id, value) {
  return value = +value, function () {
    (0, _schedule.set)(this, id).duration = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id, value)) : (0, _schedule.get)(this.node(), id).duration;
}
},{"./schedule.js":"../node_modules/d3-transition/src/transition/schedule.js"}],"../node_modules/d3-transition/src/transition/ease.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function easeConstant(id, value) {
  if (typeof value !== "function") throw new Error();
  return function () {
    (0, _schedule.set)(this, id).ease = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each(easeConstant(id, value)) : (0, _schedule.get)(this.node(), id).ease;
}
},{"./schedule.js":"../node_modules/d3-transition/src/transition/schedule.js"}],"../node_modules/d3-transition/src/transition/filter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

function _default(match) {
  if (typeof match !== "function") match = (0, _d3Selection.matcher)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index.Transition(subgroups, this._parents, this._name, this._id);
}
},{"d3-selection":"../node_modules/d3-selection/src/index.js","./index.js":"../node_modules/d3-transition/src/transition/index.js"}],"../node_modules/d3-transition/src/transition/merge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

function _default(transition) {
  if (transition._id !== this._id) throw new Error();

  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index.Transition(merges, this._parents, this._name, this._id);
}
},{"./index.js":"../node_modules/d3-transition/src/transition/index.js"}],"../node_modules/d3-transition/src/transition/on.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function (t) {
    var i = t.indexOf(".");
    if (i >= 0) t = t.slice(0, i);
    return !t || t === "start";
  });
}

function onFunction(id, name, listener) {
  var on0,
      on1,
      sit = start(name) ? _schedule.init : _schedule.set;
  return function () {
    var schedule = sit(this, id),
        on = schedule.on; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);
    schedule.on = on1;
  };
}

function _default(name, listener) {
  var id = this._id;
  return arguments.length < 2 ? (0, _schedule.get)(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));
}
},{"./schedule.js":"../node_modules/d3-transition/src/transition/schedule.js"}],"../node_modules/d3-transition/src/transition/remove.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function removeFunction(id) {
  return function () {
    var parent = this.parentNode;

    for (var i in this.__transition) if (+i !== id) return;

    if (parent) parent.removeChild(this);
  };
}

function _default() {
  return this.on("end.remove", removeFunction(this._id));
}
},{}],"../node_modules/d3-transition/src/transition/select.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default(select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = (0, _d3Selection.selector)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        (0, _schedule.default)(subgroup[i], name, id, i, subgroup, (0, _schedule.get)(node, id));
      }
    }
  }

  return new _index.Transition(subgroups, this._parents, name, id);
}
},{"d3-selection":"../node_modules/d3-selection/src/index.js","./index.js":"../node_modules/d3-transition/src/transition/index.js","./schedule.js":"../node_modules/d3-transition/src/transition/schedule.js"}],"../node_modules/d3-transition/src/transition/selectAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default(select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = (0, _d3Selection.selectorAll)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        for (var children = select.call(node, node.__data__, i, group), child, inherit = (0, _schedule.get)(node, id), k = 0, l = children.length; k < l; ++k) {
          if (child = children[k]) {
            (0, _schedule.default)(child, name, id, k, children, inherit);
          }
        }

        subgroups.push(children);
        parents.push(node);
      }
    }
  }

  return new _index.Transition(subgroups, parents, name, id);
}
},{"d3-selection":"../node_modules/d3-selection/src/index.js","./index.js":"../node_modules/d3-transition/src/transition/index.js","./schedule.js":"../node_modules/d3-transition/src/transition/schedule.js"}],"../node_modules/d3-transition/src/transition/selection.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var Selection = _d3Selection.selection.prototype.constructor;

function _default() {
  return new Selection(this._groups, this._parents);
}
},{"d3-selection":"../node_modules/d3-selection/src/index.js"}],"../node_modules/d3-transition/src/transition/style.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _schedule = require("./schedule.js");

var _tween = require("./tween.js");

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function styleNull(name, interpolate) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name),
        string1 = (this.style.removeProperty(name), (0, _d3Selection.style)(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);
  };
}

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function styleFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name),
        value1 = value(this),
        string1 = value1 + "";
    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), (0, _d3Selection.style)(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function styleMaybeRemove(id, name) {
  var on0,
      on1,
      listener0,
      key = "style." + name,
      event = "end." + key,
      remove;
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        on = schedule.on,
        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);
    schedule.on = on1;
  };
}

function _default(name, value, priority) {
  var i = (name += "") === "transform" ? _d3Interpolate.interpolateTransformCss : _interpolate.default;
  return value == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, styleRemove(name)) : typeof value === "function" ? this.styleTween(name, styleFunction(name, i, (0, _tween.tweenValue)(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant(name, i, value), priority).on("end.style." + name, null);
}
},{"d3-interpolate":"../node_modules/d3-interpolate/src/index.js","d3-selection":"../node_modules/d3-selection/src/index.js","./schedule.js":"../node_modules/d3-transition/src/transition/schedule.js","./tween.js":"../node_modules/d3-transition/src/transition/tween.js","./interpolate.js":"../node_modules/d3-transition/src/transition/interpolate.js"}],"../node_modules/d3-transition/src/transition/styleTween.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function styleInterpolate(name, i, priority) {
  return function (t) {
    this.style.setProperty(name, i.call(this, t), priority);
  };
}

function styleTween(name, value, priority) {
  var t, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
    return t;
  }

  tween._value = value;
  return tween;
}

function _default(name, value, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
}
},{}],"../node_modules/d3-transition/src/transition/text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _tween = require("./tween.js");

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}

function _default(value) {
  return this.tween("text", typeof value === "function" ? textFunction((0, _tween.tweenValue)(this, "text", value)) : textConstant(value == null ? "" : value + ""));
}
},{"./tween.js":"../node_modules/d3-transition/src/transition/tween.js"}],"../node_modules/d3-transition/src/transition/textTween.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function textInterpolate(i) {
  return function (t) {
    this.textContent = i.call(this, t);
  };
}

function textTween(value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function _default(value) {
  var key = "text";
  if (arguments.length < 1) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, textTween(value));
}
},{}],"../node_modules/d3-transition/src/transition/transition.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default() {
  var name = this._name,
      id0 = this._id,
      id1 = (0, _index.newId)();

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        var inherit = (0, _schedule.get)(node, id0);
        (0, _schedule.default)(node, name, id1, i, group, {
          time: inherit.time + inherit.delay + inherit.duration,
          delay: 0,
          duration: inherit.duration,
          ease: inherit.ease
        });
      }
    }
  }

  return new _index.Transition(groups, this._parents, name, id1);
}
},{"./index.js":"../node_modules/d3-transition/src/transition/index.js","./schedule.js":"../node_modules/d3-transition/src/transition/schedule.js"}],"../node_modules/d3-transition/src/transition/end.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function _default() {
  var on0,
      on1,
      that = this,
      id = that._id,
      size = that.size();
  return new Promise(function (resolve, reject) {
    var cancel = {
      value: reject
    },
        end = {
      value: function () {
        if (--size === 0) resolve();
      }
    };
    that.each(function () {
      var schedule = (0, _schedule.set)(this, id),
          on = schedule.on; // If this node shared a dispatch with the previous node,
      // just assign the updated shared dispatch and we’re done!
      // Otherwise, copy-on-write.

      if (on !== on0) {
        on1 = (on0 = on).copy();

        on1._.cancel.push(cancel);

        on1._.interrupt.push(cancel);

        on1._.end.push(end);
      }

      schedule.on = on1;
    });
  });
}
},{"./schedule.js":"../node_modules/d3-transition/src/transition/schedule.js"}],"../node_modules/d3-transition/src/transition/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Transition = Transition;
exports.default = transition;
exports.newId = newId;

var _d3Selection = require("d3-selection");

var _attr = _interopRequireDefault(require("./attr.js"));

var _attrTween = _interopRequireDefault(require("./attrTween.js"));

var _delay = _interopRequireDefault(require("./delay.js"));

var _duration = _interopRequireDefault(require("./duration.js"));

var _ease = _interopRequireDefault(require("./ease.js"));

var _filter = _interopRequireDefault(require("./filter.js"));

var _merge = _interopRequireDefault(require("./merge.js"));

var _on = _interopRequireDefault(require("./on.js"));

var _remove = _interopRequireDefault(require("./remove.js"));

var _select = _interopRequireDefault(require("./select.js"));

var _selectAll = _interopRequireDefault(require("./selectAll.js"));

var _selection = _interopRequireDefault(require("./selection.js"));

var _style = _interopRequireDefault(require("./style.js"));

var _styleTween = _interopRequireDefault(require("./styleTween.js"));

var _text = _interopRequireDefault(require("./text.js"));

var _textTween = _interopRequireDefault(require("./textTween.js"));

var _transition = _interopRequireDefault(require("./transition.js"));

var _tween = _interopRequireDefault(require("./tween.js"));

var _end = _interopRequireDefault(require("./end.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var id = 0;

function Transition(groups, parents, name, id) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id;
}

function transition(name) {
  return (0, _d3Selection.selection)().transition(name);
}

function newId() {
  return ++id;
}

var selection_prototype = _d3Selection.selection.prototype;
Transition.prototype = transition.prototype = {
  constructor: Transition,
  select: _select.default,
  selectAll: _selectAll.default,
  filter: _filter.default,
  merge: _merge.default,
  selection: _selection.default,
  transition: _transition.default,
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: _on.default,
  attr: _attr.default,
  attrTween: _attrTween.default,
  style: _style.default,
  styleTween: _styleTween.default,
  text: _text.default,
  textTween: _textTween.default,
  remove: _remove.default,
  tween: _tween.default,
  delay: _delay.default,
  duration: _duration.default,
  ease: _ease.default,
  end: _end.default
};
},{"d3-selection":"../node_modules/d3-selection/src/index.js","./attr.js":"../node_modules/d3-transition/src/transition/attr.js","./attrTween.js":"../node_modules/d3-transition/src/transition/attrTween.js","./delay.js":"../node_modules/d3-transition/src/transition/delay.js","./duration.js":"../node_modules/d3-transition/src/transition/duration.js","./ease.js":"../node_modules/d3-transition/src/transition/ease.js","./filter.js":"../node_modules/d3-transition/src/transition/filter.js","./merge.js":"../node_modules/d3-transition/src/transition/merge.js","./on.js":"../node_modules/d3-transition/src/transition/on.js","./remove.js":"../node_modules/d3-transition/src/transition/remove.js","./select.js":"../node_modules/d3-transition/src/transition/select.js","./selectAll.js":"../node_modules/d3-transition/src/transition/selectAll.js","./selection.js":"../node_modules/d3-transition/src/transition/selection.js","./style.js":"../node_modules/d3-transition/src/transition/style.js","./styleTween.js":"../node_modules/d3-transition/src/transition/styleTween.js","./text.js":"../node_modules/d3-transition/src/transition/text.js","./textTween.js":"../node_modules/d3-transition/src/transition/textTween.js","./transition.js":"../node_modules/d3-transition/src/transition/transition.js","./tween.js":"../node_modules/d3-transition/src/transition/tween.js","./end.js":"../node_modules/d3-transition/src/transition/end.js"}],"../node_modules/d3-ease/src/linear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linear = linear;

function linear(t) {
  return +t;
}
},{}],"../node_modules/d3-ease/src/quad.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quadIn = quadIn;
exports.quadOut = quadOut;
exports.quadInOut = quadInOut;

function quadIn(t) {
  return t * t;
}

function quadOut(t) {
  return t * (2 - t);
}

function quadInOut(t) {
  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
}
},{}],"../node_modules/d3-ease/src/cubic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubicIn = cubicIn;
exports.cubicOut = cubicOut;
exports.cubicInOut = cubicInOut;

function cubicIn(t) {
  return t * t * t;
}

function cubicOut(t) {
  return --t * t * t + 1;
}

function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}
},{}],"../node_modules/d3-ease/src/poly.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.polyInOut = exports.polyOut = exports.polyIn = void 0;
var exponent = 3;

var polyIn = function custom(e) {
  e = +e;

  function polyIn(t) {
    return Math.pow(t, e);
  }

  polyIn.exponent = custom;
  return polyIn;
}(exponent);

exports.polyIn = polyIn;

var polyOut = function custom(e) {
  e = +e;

  function polyOut(t) {
    return 1 - Math.pow(1 - t, e);
  }

  polyOut.exponent = custom;
  return polyOut;
}(exponent);

exports.polyOut = polyOut;

var polyInOut = function custom(e) {
  e = +e;

  function polyInOut(t) {
    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
  }

  polyInOut.exponent = custom;
  return polyInOut;
}(exponent);

exports.polyInOut = polyInOut;
},{}],"../node_modules/d3-ease/src/sin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sinIn = sinIn;
exports.sinOut = sinOut;
exports.sinInOut = sinInOut;
var pi = Math.PI,
    halfPi = pi / 2;

function sinIn(t) {
  return 1 - Math.cos(t * halfPi);
}

function sinOut(t) {
  return Math.sin(t * halfPi);
}

function sinInOut(t) {
  return (1 - Math.cos(pi * t)) / 2;
}
},{}],"../node_modules/d3-ease/src/exp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expIn = expIn;
exports.expOut = expOut;
exports.expInOut = expInOut;

function expIn(t) {
  return Math.pow(2, 10 * t - 10);
}

function expOut(t) {
  return 1 - Math.pow(2, -10 * t);
}

function expInOut(t) {
  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
}
},{}],"../node_modules/d3-ease/src/circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circleIn = circleIn;
exports.circleOut = circleOut;
exports.circleInOut = circleInOut;

function circleIn(t) {
  return 1 - Math.sqrt(1 - t * t);
}

function circleOut(t) {
  return Math.sqrt(1 - --t * t);
}

function circleInOut(t) {
  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
}
},{}],"../node_modules/d3-ease/src/bounce.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bounceIn = bounceIn;
exports.bounceOut = bounceOut;
exports.bounceInOut = bounceInOut;
var b1 = 4 / 11,
    b2 = 6 / 11,
    b3 = 8 / 11,
    b4 = 3 / 4,
    b5 = 9 / 11,
    b6 = 10 / 11,
    b7 = 15 / 16,
    b8 = 21 / 22,
    b9 = 63 / 64,
    b0 = 1 / b1 / b1;

function bounceIn(t) {
  return 1 - bounceOut(1 - t);
}

function bounceOut(t) {
  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
}

function bounceInOut(t) {
  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
}
},{}],"../node_modules/d3-ease/src/back.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.backInOut = exports.backOut = exports.backIn = void 0;
var overshoot = 1.70158;

var backIn = function custom(s) {
  s = +s;

  function backIn(t) {
    return t * t * ((s + 1) * t - s);
  }

  backIn.overshoot = custom;
  return backIn;
}(overshoot);

exports.backIn = backIn;

var backOut = function custom(s) {
  s = +s;

  function backOut(t) {
    return --t * t * ((s + 1) * t + s) + 1;
  }

  backOut.overshoot = custom;
  return backOut;
}(overshoot);

exports.backOut = backOut;

var backInOut = function custom(s) {
  s = +s;

  function backInOut(t) {
    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
  }

  backInOut.overshoot = custom;
  return backInOut;
}(overshoot);

exports.backInOut = backInOut;
},{}],"../node_modules/d3-ease/src/elastic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.elasticInOut = exports.elasticOut = exports.elasticIn = void 0;
var tau = 2 * Math.PI,
    amplitude = 1,
    period = 0.3;

var elasticIn = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticIn(t) {
    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
  }

  elasticIn.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticIn.period = function (p) {
    return custom(a, p);
  };

  return elasticIn;
}(amplitude, period);

exports.elasticIn = elasticIn;

var elasticOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticOut(t) {
    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
  }

  elasticOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticOut.period = function (p) {
    return custom(a, p);
  };

  return elasticOut;
}(amplitude, period);

exports.elasticOut = elasticOut;

var elasticInOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticInOut(t) {
    return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
  }

  elasticInOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticInOut.period = function (p) {
    return custom(a, p);
  };

  return elasticInOut;
}(amplitude, period);

exports.elasticInOut = elasticInOut;
},{}],"../node_modules/d3-ease/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "easeLinear", {
  enumerable: true,
  get: function () {
    return _linear.linear;
  }
});
Object.defineProperty(exports, "easeQuad", {
  enumerable: true,
  get: function () {
    return _quad.quadInOut;
  }
});
Object.defineProperty(exports, "easeQuadIn", {
  enumerable: true,
  get: function () {
    return _quad.quadIn;
  }
});
Object.defineProperty(exports, "easeQuadOut", {
  enumerable: true,
  get: function () {
    return _quad.quadOut;
  }
});
Object.defineProperty(exports, "easeQuadInOut", {
  enumerable: true,
  get: function () {
    return _quad.quadInOut;
  }
});
Object.defineProperty(exports, "easeCubic", {
  enumerable: true,
  get: function () {
    return _cubic.cubicInOut;
  }
});
Object.defineProperty(exports, "easeCubicIn", {
  enumerable: true,
  get: function () {
    return _cubic.cubicIn;
  }
});
Object.defineProperty(exports, "easeCubicOut", {
  enumerable: true,
  get: function () {
    return _cubic.cubicOut;
  }
});
Object.defineProperty(exports, "easeCubicInOut", {
  enumerable: true,
  get: function () {
    return _cubic.cubicInOut;
  }
});
Object.defineProperty(exports, "easePoly", {
  enumerable: true,
  get: function () {
    return _poly.polyInOut;
  }
});
Object.defineProperty(exports, "easePolyIn", {
  enumerable: true,
  get: function () {
    return _poly.polyIn;
  }
});
Object.defineProperty(exports, "easePolyOut", {
  enumerable: true,
  get: function () {
    return _poly.polyOut;
  }
});
Object.defineProperty(exports, "easePolyInOut", {
  enumerable: true,
  get: function () {
    return _poly.polyInOut;
  }
});
Object.defineProperty(exports, "easeSin", {
  enumerable: true,
  get: function () {
    return _sin.sinInOut;
  }
});
Object.defineProperty(exports, "easeSinIn", {
  enumerable: true,
  get: function () {
    return _sin.sinIn;
  }
});
Object.defineProperty(exports, "easeSinOut", {
  enumerable: true,
  get: function () {
    return _sin.sinOut;
  }
});
Object.defineProperty(exports, "easeSinInOut", {
  enumerable: true,
  get: function () {
    return _sin.sinInOut;
  }
});
Object.defineProperty(exports, "easeExp", {
  enumerable: true,
  get: function () {
    return _exp.expInOut;
  }
});
Object.defineProperty(exports, "easeExpIn", {
  enumerable: true,
  get: function () {
    return _exp.expIn;
  }
});
Object.defineProperty(exports, "easeExpOut", {
  enumerable: true,
  get: function () {
    return _exp.expOut;
  }
});
Object.defineProperty(exports, "easeExpInOut", {
  enumerable: true,
  get: function () {
    return _exp.expInOut;
  }
});
Object.defineProperty(exports, "easeCircle", {
  enumerable: true,
  get: function () {
    return _circle.circleInOut;
  }
});
Object.defineProperty(exports, "easeCircleIn", {
  enumerable: true,
  get: function () {
    return _circle.circleIn;
  }
});
Object.defineProperty(exports, "easeCircleOut", {
  enumerable: true,
  get: function () {
    return _circle.circleOut;
  }
});
Object.defineProperty(exports, "easeCircleInOut", {
  enumerable: true,
  get: function () {
    return _circle.circleInOut;
  }
});
Object.defineProperty(exports, "easeBounce", {
  enumerable: true,
  get: function () {
    return _bounce.bounceOut;
  }
});
Object.defineProperty(exports, "easeBounceIn", {
  enumerable: true,
  get: function () {
    return _bounce.bounceIn;
  }
});
Object.defineProperty(exports, "easeBounceOut", {
  enumerable: true,
  get: function () {
    return _bounce.bounceOut;
  }
});
Object.defineProperty(exports, "easeBounceInOut", {
  enumerable: true,
  get: function () {
    return _bounce.bounceInOut;
  }
});
Object.defineProperty(exports, "easeBack", {
  enumerable: true,
  get: function () {
    return _back.backInOut;
  }
});
Object.defineProperty(exports, "easeBackIn", {
  enumerable: true,
  get: function () {
    return _back.backIn;
  }
});
Object.defineProperty(exports, "easeBackOut", {
  enumerable: true,
  get: function () {
    return _back.backOut;
  }
});
Object.defineProperty(exports, "easeBackInOut", {
  enumerable: true,
  get: function () {
    return _back.backInOut;
  }
});
Object.defineProperty(exports, "easeElastic", {
  enumerable: true,
  get: function () {
    return _elastic.elasticOut;
  }
});
Object.defineProperty(exports, "easeElasticIn", {
  enumerable: true,
  get: function () {
    return _elastic.elasticIn;
  }
});
Object.defineProperty(exports, "easeElasticOut", {
  enumerable: true,
  get: function () {
    return _elastic.elasticOut;
  }
});
Object.defineProperty(exports, "easeElasticInOut", {
  enumerable: true,
  get: function () {
    return _elastic.elasticInOut;
  }
});

var _linear = require("./linear.js");

var _quad = require("./quad.js");

var _cubic = require("./cubic.js");

var _poly = require("./poly.js");

var _sin = require("./sin.js");

var _exp = require("./exp.js");

var _circle = require("./circle.js");

var _bounce = require("./bounce.js");

var _back = require("./back.js");

var _elastic = require("./elastic.js");
},{"./linear.js":"../node_modules/d3-ease/src/linear.js","./quad.js":"../node_modules/d3-ease/src/quad.js","./cubic.js":"../node_modules/d3-ease/src/cubic.js","./poly.js":"../node_modules/d3-ease/src/poly.js","./sin.js":"../node_modules/d3-ease/src/sin.js","./exp.js":"../node_modules/d3-ease/src/exp.js","./circle.js":"../node_modules/d3-ease/src/circle.js","./bounce.js":"../node_modules/d3-ease/src/bounce.js","./back.js":"../node_modules/d3-ease/src/back.js","./elastic.js":"../node_modules/d3-ease/src/elastic.js"}],"../node_modules/d3-transition/src/selection/transition.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("../transition/index.js");

var _schedule = _interopRequireDefault(require("../transition/schedule.js"));

var _d3Ease = require("d3-ease");

var _d3Timer = require("d3-timer");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultTiming = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: _d3Ease.easeCubicInOut
};

function inherit(node, id) {
  var timing;

  while (!(timing = node.__transition) || !(timing = timing[id])) {
    if (!(node = node.parentNode)) {
      return defaultTiming.time = (0, _d3Timer.now)(), defaultTiming;
    }
  }

  return timing;
}

function _default(name) {
  var id, timing;

  if (name instanceof _index.Transition) {
    id = name._id, name = name._name;
  } else {
    id = (0, _index.newId)(), (timing = defaultTiming).time = (0, _d3Timer.now)(), name = name == null ? null : name + "";
  }

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        (0, _schedule.default)(node, name, id, i, group, timing || inherit(node, id));
      }
    }
  }

  return new _index.Transition(groups, this._parents, name, id);
}
},{"../transition/index.js":"../node_modules/d3-transition/src/transition/index.js","../transition/schedule.js":"../node_modules/d3-transition/src/transition/schedule.js","d3-ease":"../node_modules/d3-ease/src/index.js","d3-timer":"../node_modules/d3-timer/src/index.js"}],"../node_modules/d3-transition/src/selection/index.js":[function(require,module,exports) {
"use strict";

var _d3Selection = require("d3-selection");

var _interrupt = _interopRequireDefault(require("./interrupt.js"));

var _transition = _interopRequireDefault(require("./transition.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_d3Selection.selection.prototype.interrupt = _interrupt.default;
_d3Selection.selection.prototype.transition = _transition.default;
},{"d3-selection":"../node_modules/d3-selection/src/index.js","./interrupt.js":"../node_modules/d3-transition/src/selection/interrupt.js","./transition.js":"../node_modules/d3-transition/src/selection/transition.js"}],"../node_modules/d3-transition/src/active.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./transition/index.js");

var _schedule = require("./transition/schedule.js");

var root = [null];

function _default(node, name) {
  var schedules = node.__transition,
      schedule,
      i;

  if (schedules) {
    name = name == null ? null : name + "";

    for (i in schedules) {
      if ((schedule = schedules[i]).state > _schedule.SCHEDULED && schedule.name === name) {
        return new _index.Transition([[node]], root, name, +i);
      }
    }
  }

  return null;
}
},{"./transition/index.js":"../node_modules/d3-transition/src/transition/index.js","./transition/schedule.js":"../node_modules/d3-transition/src/transition/schedule.js"}],"../node_modules/d3-transition/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "transition", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "active", {
  enumerable: true,
  get: function () {
    return _active.default;
  }
});
Object.defineProperty(exports, "interrupt", {
  enumerable: true,
  get: function () {
    return _interrupt.default;
  }
});

require("./selection/index.js");

var _index2 = _interopRequireDefault(require("./transition/index.js"));

var _active = _interopRequireDefault(require("./active.js"));

var _interrupt = _interopRequireDefault(require("./interrupt.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./selection/index.js":"../node_modules/d3-transition/src/selection/index.js","./transition/index.js":"../node_modules/d3-transition/src/transition/index.js","./active.js":"../node_modules/d3-transition/src/active.js","./interrupt.js":"../node_modules/d3-transition/src/interrupt.js"}],"../node_modules/d3-brush/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../node_modules/d3-brush/src/event.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(target, type, selection) {
  this.target = target;
  this.type = type;
  this.selection = selection;
}
},{}],"../node_modules/d3-brush/src/noevent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nopropagation = nopropagation;
exports.default = _default;

var _d3Selection = require("d3-selection");

function nopropagation() {
  _d3Selection.event.stopImmediatePropagation();
}

function _default() {
  _d3Selection.event.preventDefault();

  _d3Selection.event.stopImmediatePropagation();
}
},{"d3-selection":"../node_modules/d3-selection/src/index.js"}],"../node_modules/d3-brush/src/brush.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.brushSelection = brushSelection;
exports.brushX = brushX;
exports.brushY = brushY;
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Drag = require("d3-drag");

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _d3Transition = require("d3-transition");

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

var _noevent = _interopRequireWildcard(require("./noevent.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MODE_DRAG = {
  name: "drag"
},
    MODE_SPACE = {
  name: "space"
},
    MODE_HANDLE = {
  name: "handle"
},
    MODE_CENTER = {
  name: "center"
};

function number1(e) {
  return [+e[0], +e[1]];
}

function number2(e) {
  return [number1(e[0]), number1(e[1])];
}

function toucher(identifier) {
  return function (target) {
    return (0, _d3Selection.touch)(target, _d3Selection.event.touches, identifier);
  };
}

var X = {
  name: "x",
  handles: ["w", "e"].map(type),
  input: function (x, e) {
    return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]];
  },
  output: function (xy) {
    return xy && [xy[0][0], xy[1][0]];
  }
};
var Y = {
  name: "y",
  handles: ["n", "s"].map(type),
  input: function (y, e) {
    return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]];
  },
  output: function (xy) {
    return xy && [xy[0][1], xy[1][1]];
  }
};
var XY = {
  name: "xy",
  handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
  input: function (xy) {
    return xy == null ? null : number2(xy);
  },
  output: function (xy) {
    return xy;
  }
};
var cursors = {
  overlay: "crosshair",
  selection: "move",
  n: "ns-resize",
  e: "ew-resize",
  s: "ns-resize",
  w: "ew-resize",
  nw: "nwse-resize",
  ne: "nesw-resize",
  se: "nwse-resize",
  sw: "nesw-resize"
};
var flipX = {
  e: "w",
  w: "e",
  nw: "ne",
  ne: "nw",
  se: "sw",
  sw: "se"
};
var flipY = {
  n: "s",
  s: "n",
  nw: "sw",
  ne: "se",
  se: "ne",
  sw: "nw"
};
var signsX = {
  overlay: +1,
  selection: +1,
  n: null,
  e: +1,
  s: null,
  w: -1,
  nw: -1,
  ne: +1,
  se: +1,
  sw: -1
};
var signsY = {
  overlay: +1,
  selection: +1,
  n: -1,
  e: null,
  s: +1,
  w: null,
  nw: -1,
  ne: -1,
  se: +1,
  sw: +1
};

function type(t) {
  return {
    type: t
  };
} // Ignore right-click, since that should open the context menu.


function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultExtent() {
  var svg = this.ownerSVGElement || this;

  if (svg.hasAttribute("viewBox")) {
    svg = svg.viewBox.baseVal;
    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];
  }

  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
} // Like d3.local, but with the name “__brush” rather than auto-generated.


function local(node) {
  while (!node.__brush) if (!(node = node.parentNode)) return;

  return node.__brush;
}

function empty(extent) {
  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];
}

function brushSelection(node) {
  var state = node.__brush;
  return state ? state.dim.output(state.selection) : null;
}

function brushX() {
  return brush(X);
}

function brushY() {
  return brush(Y);
}

function _default() {
  return brush(XY);
}

function brush(dim) {
  var extent = defaultExtent,
      filter = defaultFilter,
      touchable = defaultTouchable,
      keys = true,
      listeners = (0, _d3Dispatch.dispatch)("start", "brush", "end"),
      handleSize = 6,
      touchending;

  function brush(group) {
    var overlay = group.property("__brush", initialize).selectAll(".overlay").data([type("overlay")]);
    overlay.enter().append("rect").attr("class", "overlay").attr("pointer-events", "all").attr("cursor", cursors.overlay).merge(overlay).each(function () {
      var extent = local(this).extent;
      (0, _d3Selection.select)(this).attr("x", extent[0][0]).attr("y", extent[0][1]).attr("width", extent[1][0] - extent[0][0]).attr("height", extent[1][1] - extent[0][1]);
    });
    group.selectAll(".selection").data([type("selection")]).enter().append("rect").attr("class", "selection").attr("cursor", cursors.selection).attr("fill", "#777").attr("fill-opacity", 0.3).attr("stroke", "#fff").attr("shape-rendering", "crispEdges");
    var handle = group.selectAll(".handle").data(dim.handles, function (d) {
      return d.type;
    });
    handle.exit().remove();
    handle.enter().append("rect").attr("class", function (d) {
      return "handle handle--" + d.type;
    }).attr("cursor", function (d) {
      return cursors[d.type];
    });
    group.each(redraw).attr("fill", "none").attr("pointer-events", "all").on("mousedown.brush", started).filter(touchable).on("touchstart.brush", started).on("touchmove.brush", touchmoved).on("touchend.brush touchcancel.brush", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  brush.move = function (group, selection) {
    if (group.selection) {
      group.on("start.brush", function () {
        emitter(this, arguments).beforestart().start();
      }).on("interrupt.brush end.brush", function () {
        emitter(this, arguments).end();
      }).tween("brush", function () {
        var that = this,
            state = that.__brush,
            emit = emitter(that, arguments),
            selection0 = state.selection,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
            i = (0, _d3Interpolate.interpolate)(selection0, selection1);

        function tween(t) {
          state.selection = t === 1 && selection1 === null ? null : i(t);
          redraw.call(that);
          emit.brush();
        }

        return selection0 !== null && selection1 !== null ? tween : tween(1);
      });
    } else {
      group.each(function () {
        var that = this,
            args = arguments,
            state = that.__brush,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
            emit = emitter(that, args).beforestart();
        (0, _d3Transition.interrupt)(that);
        state.selection = selection1 === null ? null : selection1;
        redraw.call(that);
        emit.start().brush().end();
      });
    }
  };

  brush.clear = function (group) {
    brush.move(group, null);
  };

  function redraw() {
    var group = (0, _d3Selection.select)(this),
        selection = local(this).selection;

    if (selection) {
      group.selectAll(".selection").style("display", null).attr("x", selection[0][0]).attr("y", selection[0][1]).attr("width", selection[1][0] - selection[0][0]).attr("height", selection[1][1] - selection[0][1]);
      group.selectAll(".handle").style("display", null).attr("x", function (d) {
        return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;
      }).attr("y", function (d) {
        return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;
      }).attr("width", function (d) {
        return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize;
      }).attr("height", function (d) {
        return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize;
      });
    } else {
      group.selectAll(".selection,.handle").style("display", "none").attr("x", null).attr("y", null).attr("width", null).attr("height", null);
    }
  }

  function emitter(that, args, clean) {
    return !clean && that.__brush.emitter || new Emitter(that, args);
  }

  function Emitter(that, args) {
    this.that = that;
    this.args = args;
    this.state = that.__brush;
    this.active = 0;
  }

  Emitter.prototype = {
    beforestart: function () {
      if (++this.active === 1) this.state.emitter = this, this.starting = true;
      return this;
    },
    start: function () {
      if (this.starting) this.starting = false, this.emit("start");else this.emit("brush");
      return this;
    },
    brush: function () {
      this.emit("brush");
      return this;
    },
    end: function () {
      if (--this.active === 0) delete this.state.emitter, this.emit("end");
      return this;
    },
    emit: function (type) {
      (0, _d3Selection.customEvent)(new _event.default(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);
    }
  };

  function started() {
    if (touchending && !_d3Selection.event.touches) return;
    if (!filter.apply(this, arguments)) return;
    var that = this,
        type = _d3Selection.event.target.__data__.type,
        mode = (keys && _d3Selection.event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : keys && _d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE,
        signX = dim === Y ? null : signsX[type],
        signY = dim === X ? null : signsY[type],
        state = local(that),
        extent = state.extent,
        selection = state.selection,
        W = extent[0][0],
        w0,
        w1,
        N = extent[0][1],
        n0,
        n1,
        E = extent[1][0],
        e0,
        e1,
        S = extent[1][1],
        s0,
        s1,
        dx = 0,
        dy = 0,
        moving,
        shifting = signX && signY && keys && _d3Selection.event.shiftKey,
        lockX,
        lockY,
        pointer = _d3Selection.event.touches ? toucher(_d3Selection.event.changedTouches[0].identifier) : _d3Selection.mouse,
        point0 = pointer(that),
        point = point0,
        emit = emitter(that, arguments, true).beforestart();

    if (type === "overlay") {
      if (selection) moving = true;
      state.selection = selection = [[w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]], [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]];
    } else {
      w0 = selection[0][0];
      n0 = selection[0][1];
      e0 = selection[1][0];
      s0 = selection[1][1];
    }

    w1 = w0;
    n1 = n0;
    e1 = e0;
    s1 = s0;
    var group = (0, _d3Selection.select)(that).attr("pointer-events", "none");
    var overlay = group.selectAll(".overlay").attr("cursor", cursors[type]);

    if (_d3Selection.event.touches) {
      emit.moved = moved;
      emit.ended = ended;
    } else {
      var view = (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.brush", moved, true).on("mouseup.brush", ended, true);
      if (keys) view.on("keydown.brush", keydowned, true).on("keyup.brush", keyupped, true);
      (0, _d3Drag.dragDisable)(_d3Selection.event.view);
    }

    (0, _noevent.nopropagation)();
    (0, _d3Transition.interrupt)(that);
    redraw.call(that);
    emit.start();

    function moved() {
      var point1 = pointer(that);

      if (shifting && !lockX && !lockY) {
        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;else lockX = true;
      }

      point = point1;
      moving = true;
      (0, _noevent.default)();
      move();
    }

    function move() {
      var t;
      dx = point[0] - point0[0];
      dy = point[1] - point0[1];

      switch (mode) {
        case MODE_SPACE:
        case MODE_DRAG:
          {
            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
            break;
          }

        case MODE_HANDLE:
          {
            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;
            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;
            break;
          }

        case MODE_CENTER:
          {
            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));
            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));
            break;
          }
      }

      if (e1 < w1) {
        signX *= -1;
        t = w0, w0 = e0, e0 = t;
        t = w1, w1 = e1, e1 = t;
        if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
      }

      if (s1 < n1) {
        signY *= -1;
        t = n0, n0 = s0, s0 = t;
        t = n1, n1 = s1, s1 = t;
        if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
      }

      if (state.selection) selection = state.selection; // May be set by brush.move!

      if (lockX) w1 = selection[0][0], e1 = selection[1][0];
      if (lockY) n1 = selection[0][1], s1 = selection[1][1];

      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {
        state.selection = [[w1, n1], [e1, s1]];
        redraw.call(that);
        emit.brush();
      }
    }

    function ended() {
      (0, _noevent.nopropagation)();

      if (_d3Selection.event.touches) {
        if (_d3Selection.event.touches.length) return;
        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function () {
          touchending = null;
        }, 500); // Ghost clicks are delayed!
      } else {
        (0, _d3Drag.dragEnable)(_d3Selection.event.view, moving);
        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
      }

      group.attr("pointer-events", "all");
      overlay.attr("cursor", cursors.overlay);
      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!

      if (empty(selection)) state.selection = null, redraw.call(that);
      emit.end();
    }

    function keydowned() {
      switch (_d3Selection.event.keyCode) {
        case 16:
          {
            // SHIFT
            shifting = signX && signY;
            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_HANDLE) {
              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
              mode = MODE_CENTER;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE; takes priority over ALT
            if (mode === MODE_HANDLE || mode === MODE_CENTER) {
              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;
              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;
              mode = MODE_SPACE;
              overlay.attr("cursor", cursors.selection);
              move();
            }

            break;
          }

        default:
          return;
      }

      (0, _noevent.default)();
    }

    function keyupped() {
      switch (_d3Selection.event.keyCode) {
        case 16:
          {
            // SHIFT
            if (shifting) {
              lockX = lockY = shifting = false;
              move();
            }

            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_CENTER) {
              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
              mode = MODE_HANDLE;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE
            if (mode === MODE_SPACE) {
              if (_d3Selection.event.altKey) {
                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
                mode = MODE_CENTER;
              } else {
                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
                mode = MODE_HANDLE;
              }

              overlay.attr("cursor", cursors[type]);
              move();
            }

            break;
          }

        default:
          return;
      }

      (0, _noevent.default)();
    }
  }

  function touchmoved() {
    emitter(this, arguments).moved();
  }

  function touchended() {
    emitter(this, arguments).ended();
  }

  function initialize() {
    var state = this.__brush || {
      selection: null
    };
    state.extent = number2(extent.apply(this, arguments));
    state.dim = dim;
    return state;
  }

  brush.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0, _constant.default)(number2(_)), brush) : extent;
  };

  brush.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), brush) : filter;
  };

  brush.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), brush) : touchable;
  };

  brush.handleSize = function (_) {
    return arguments.length ? (handleSize = +_, brush) : handleSize;
  };

  brush.keyModifiers = function (_) {
    return arguments.length ? (keys = !!_, brush) : keys;
  };

  brush.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? brush : value;
  };

  return brush;
}
},{"d3-dispatch":"../node_modules/d3-dispatch/src/index.js","d3-drag":"../node_modules/d3-drag/src/index.js","d3-interpolate":"../node_modules/d3-interpolate/src/index.js","d3-selection":"../node_modules/d3-selection/src/index.js","d3-transition":"../node_modules/d3-transition/src/index.js","./constant.js":"../node_modules/d3-brush/src/constant.js","./event.js":"../node_modules/d3-brush/src/event.js","./noevent.js":"../node_modules/d3-brush/src/noevent.js"}],"../node_modules/d3-brush/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "brush", {
  enumerable: true,
  get: function () {
    return _brush.default;
  }
});
Object.defineProperty(exports, "brushX", {
  enumerable: true,
  get: function () {
    return _brush.brushX;
  }
});
Object.defineProperty(exports, "brushY", {
  enumerable: true,
  get: function () {
    return _brush.brushY;
  }
});
Object.defineProperty(exports, "brushSelection", {
  enumerable: true,
  get: function () {
    return _brush.brushSelection;
  }
});

var _brush = _interopRequireWildcard(require("./brush.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./brush.js":"../node_modules/d3-brush/src/brush.js"}],"../node_modules/d3-chord/src/math.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.max = exports.tau = exports.halfPi = exports.pi = exports.sin = exports.cos = void 0;
var cos = Math.cos;
exports.cos = cos;
var sin = Math.sin;
exports.sin = sin;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var tau = pi * 2;
exports.tau = tau;
var max = Math.max;
exports.max = max;
},{}],"../node_modules/d3-chord/src/chord.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _math = require("./math");

function compareValue(compare) {
  return function (a, b) {
    return compare(a.source.value + a.target.value, b.source.value + b.target.value);
  };
}

function _default() {
  var padAngle = 0,
      sortGroups = null,
      sortSubgroups = null,
      sortChords = null;

  function chord(matrix) {
    var n = matrix.length,
        groupSums = [],
        groupIndex = (0, _d3Array.range)(n),
        subgroupIndex = [],
        chords = [],
        groups = chords.groups = new Array(n),
        subgroups = new Array(n * n),
        k,
        x,
        x0,
        dx,
        i,
        j; // Compute the sum.

    k = 0, i = -1;

    while (++i < n) {
      x = 0, j = -1;

      while (++j < n) {
        x += matrix[i][j];
      }

      groupSums.push(x);
      subgroupIndex.push((0, _d3Array.range)(n));
      k += x;
    } // Sort groups…


    if (sortGroups) groupIndex.sort(function (a, b) {
      return sortGroups(groupSums[a], groupSums[b]);
    }); // Sort subgroups…

    if (sortSubgroups) subgroupIndex.forEach(function (d, i) {
      d.sort(function (a, b) {
        return sortSubgroups(matrix[i][a], matrix[i][b]);
      });
    }); // Convert the sum to scaling factor for [0, 2pi].
    // TODO Allow start and end angle to be specified?
    // TODO Allow padding to be specified as percentage?

    k = (0, _math.max)(0, _math.tau - padAngle * n) / k;
    dx = k ? padAngle : _math.tau / n; // Compute the start and end angle for each group and subgroup.
    // Note: Opera has a bug reordering object literal properties!

    x = 0, i = -1;

    while (++i < n) {
      x0 = x, j = -1;

      while (++j < n) {
        var di = groupIndex[i],
            dj = subgroupIndex[di][j],
            v = matrix[di][dj],
            a0 = x,
            a1 = x += v * k;
        subgroups[dj * n + di] = {
          index: di,
          subindex: dj,
          startAngle: a0,
          endAngle: a1,
          value: v
        };
      }

      groups[di] = {
        index: di,
        startAngle: x0,
        endAngle: x,
        value: groupSums[di]
      };
      x += dx;
    } // Generate chords for each (non-empty) subgroup-subgroup link.


    i = -1;

    while (++i < n) {
      j = i - 1;

      while (++j < n) {
        var source = subgroups[j * n + i],
            target = subgroups[i * n + j];

        if (source.value || target.value) {
          chords.push(source.value < target.value ? {
            source: target,
            target: source
          } : {
            source: source,
            target: target
          });
        }
      }
    }

    return sortChords ? chords.sort(sortChords) : chords;
  }

  chord.padAngle = function (_) {
    return arguments.length ? (padAngle = (0, _math.max)(0, _), chord) : padAngle;
  };

  chord.sortGroups = function (_) {
    return arguments.length ? (sortGroups = _, chord) : sortGroups;
  };

  chord.sortSubgroups = function (_) {
    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
  };

  chord.sortChords = function (_) {
    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
  };

  return chord;
}
},{"d3-array":"../node_modules/d3-array/src/index.js","./math":"../node_modules/d3-chord/src/math.js"}],"../node_modules/d3-chord/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;
},{}],"../node_modules/d3-chord/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../node_modules/d3-path/src/path.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var pi = Math.PI,
    tau = 2 * pi,
    epsilon = 1e-6,
    tauEpsilon = tau - epsilon;

function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath

  this._ = "";
}

function path() {
  return new Path();
}

Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function (x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function () {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function (x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function (x1, y1, x, y) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function (x1, y1, x2, y2, x, y) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function (x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x1,y1).

    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
      // Equivalently, is (x1,y1) coincident with (x2,y2)?
      // Or, is the radius zero? Line to (x1,y1).
      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
          this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
        } // Otherwise, draw an arc!
        else {
            var x20 = x2 - x0,
                y20 = y2 - y0,
                l21_2 = x21 * x21 + y21 * y21,
                l20_2 = x20 * x20 + y20 * y20,
                l21 = Math.sqrt(l21_2),
                l01 = Math.sqrt(l01_2),
                l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
                t01 = l / l01,
                t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.

            if (Math.abs(t01 - 1) > epsilon) {
              this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
            }

            this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
          }
  },
  arc: function (x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x0,y0).

    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
        this._ += "L" + x0 + "," + y0;
      } // Is this arc empty? We’re done.


    if (!r) return; // Does the angle go the wrong way? Flip the direction.

    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.

    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    } // Is this arc non-empty? Draw an arc!
    else if (da > epsilon) {
        this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
      }
  },
  rect: function (x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + +w + "v" + +h + "h" + -w + "Z";
  },
  toString: function () {
    return this._;
  }
};
var _default = path;
exports.default = _default;
},{}],"../node_modules/d3-path/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "path", {
  enumerable: true,
  get: function () {
    return _path.default;
  }
});

var _path = _interopRequireDefault(require("./path.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./path.js":"../node_modules/d3-path/src/path.js"}],"../node_modules/d3-chord/src/ribbon.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array");

var _constant = _interopRequireDefault(require("./constant"));

var _math = require("./math");

var _d3Path = require("d3-path");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defaultSource(d) {
  return d.source;
}

function defaultTarget(d) {
  return d.target;
}

function defaultRadius(d) {
  return d.radius;
}

function defaultStartAngle(d) {
  return d.startAngle;
}

function defaultEndAngle(d) {
  return d.endAngle;
}

function _default() {
  var source = defaultSource,
      target = defaultTarget,
      radius = defaultRadius,
      startAngle = defaultStartAngle,
      endAngle = defaultEndAngle,
      context = null;

  function ribbon() {
    var buffer,
        argv = _array.slice.call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv),
        sr = +radius.apply(this, (argv[0] = s, argv)),
        sa0 = startAngle.apply(this, argv) - _math.halfPi,
        sa1 = endAngle.apply(this, argv) - _math.halfPi,
        sx0 = sr * (0, _math.cos)(sa0),
        sy0 = sr * (0, _math.sin)(sa0),
        tr = +radius.apply(this, (argv[0] = t, argv)),
        ta0 = startAngle.apply(this, argv) - _math.halfPi,
        ta1 = endAngle.apply(this, argv) - _math.halfPi;

    if (!context) context = buffer = (0, _d3Path.path)();
    context.moveTo(sx0, sy0);
    context.arc(0, 0, sr, sa0, sa1);

    if (sa0 !== ta0 || sa1 !== ta1) {
      // TODO sr !== tr?
      context.quadraticCurveTo(0, 0, tr * (0, _math.cos)(ta0), tr * (0, _math.sin)(ta0));
      context.arc(0, 0, tr, ta0, ta1);
    }

    context.quadraticCurveTo(0, 0, sx0, sy0);
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  ribbon.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : radius;
  };

  ribbon.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : startAngle;
  };

  ribbon.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : endAngle;
  };

  ribbon.source = function (_) {
    return arguments.length ? (source = _, ribbon) : source;
  };

  ribbon.target = function (_) {
    return arguments.length ? (target = _, ribbon) : target;
  };

  ribbon.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;
  };

  return ribbon;
}
},{"./array":"../node_modules/d3-chord/src/array.js","./constant":"../node_modules/d3-chord/src/constant.js","./math":"../node_modules/d3-chord/src/math.js","d3-path":"../node_modules/d3-path/src/index.js"}],"../node_modules/d3-chord/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "chord", {
  enumerable: true,
  get: function () {
    return _chord.default;
  }
});
Object.defineProperty(exports, "ribbon", {
  enumerable: true,
  get: function () {
    return _ribbon.default;
  }
});

var _chord = _interopRequireDefault(require("./chord"));

var _ribbon = _interopRequireDefault(require("./ribbon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./chord":"../node_modules/d3-chord/src/chord.js","./ribbon":"../node_modules/d3-chord/src/ribbon.js"}],"../node_modules/d3-collection/src/map.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.prefix = void 0;
var prefix = "$";
exports.prefix = prefix;

function Map() {}

Map.prototype = map.prototype = {
  constructor: Map,
  has: function (key) {
    return prefix + key in this;
  },
  get: function (key) {
    return this[prefix + key];
  },
  set: function (key, value) {
    this[prefix + key] = value;
    return this;
  },
  remove: function (key) {
    var property = prefix + key;
    return property in this && delete this[property];
  },
  clear: function () {
    for (var property in this) if (property[0] === prefix) delete this[property];
  },
  keys: function () {
    var keys = [];

    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));

    return keys;
  },
  values: function () {
    var values = [];

    for (var property in this) if (property[0] === prefix) values.push(this[property]);

    return values;
  },
  entries: function () {
    var entries = [];

    for (var property in this) if (property[0] === prefix) entries.push({
      key: property.slice(1),
      value: this[property]
    });

    return entries;
  },
  size: function () {
    var size = 0;

    for (var property in this) if (property[0] === prefix) ++size;

    return size;
  },
  empty: function () {
    for (var property in this) if (property[0] === prefix) return false;

    return true;
  },
  each: function (f) {
    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);
  }
};

function map(object, f) {
  var map = new Map(); // Copy constructor.

  if (object instanceof Map) object.each(function (value, key) {
    map.set(key, value);
  }); // Index array by numeric index or specified key function.
  else if (Array.isArray(object)) {
      var i = -1,
          n = object.length,
          o;
      if (f == null) while (++i < n) map.set(i, object[i]);else while (++i < n) map.set(f(o = object[i], i, object), o);
    } // Convert object to map.
    else if (object) for (var key in object) map.set(key, object[key]);
  return map;
}

var _default = map;
exports.default = _default;
},{}],"../node_modules/d3-collection/src/nest.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _map = _interopRequireDefault(require("./map"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var keys = [],
      sortKeys = [],
      sortValues,
      rollup,
      nest;

  function apply(array, depth, createResult, setResult) {
    if (depth >= keys.length) {
      if (sortValues != null) array.sort(sortValues);
      return rollup != null ? rollup(array) : array;
    }

    var i = -1,
        n = array.length,
        key = keys[depth++],
        keyValue,
        value,
        valuesByKey = (0, _map.default)(),
        values,
        result = createResult();

    while (++i < n) {
      if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
        values.push(value);
      } else {
        valuesByKey.set(keyValue, [value]);
      }
    }

    valuesByKey.each(function (values, key) {
      setResult(result, key, apply(values, depth, createResult, setResult));
    });
    return result;
  }

  function entries(map, depth) {
    if (++depth > keys.length) return map;
    var array,
        sortKey = sortKeys[depth - 1];
    if (rollup != null && depth >= keys.length) array = map.entries();else array = [], map.each(function (v, k) {
      array.push({
        key: k,
        values: entries(v, depth)
      });
    });
    return sortKey != null ? array.sort(function (a, b) {
      return sortKey(a.key, b.key);
    }) : array;
  }

  return nest = {
    object: function (array) {
      return apply(array, 0, createObject, setObject);
    },
    map: function (array) {
      return apply(array, 0, createMap, setMap);
    },
    entries: function (array) {
      return entries(apply(array, 0, createMap, setMap), 0);
    },
    key: function (d) {
      keys.push(d);
      return nest;
    },
    sortKeys: function (order) {
      sortKeys[keys.length - 1] = order;
      return nest;
    },
    sortValues: function (order) {
      sortValues = order;
      return nest;
    },
    rollup: function (f) {
      rollup = f;
      return nest;
    }
  };
}

function createObject() {
  return {};
}

function setObject(object, key, value) {
  object[key] = value;
}

function createMap() {
  return (0, _map.default)();
}

function setMap(map, key, value) {
  map.set(key, value);
}
},{"./map":"../node_modules/d3-collection/src/map.js"}],"../node_modules/d3-collection/src/set.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _map = _interopRequireWildcard(require("./map"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Set() {}

var proto = _map.default.prototype;
Set.prototype = set.prototype = {
  constructor: Set,
  has: proto.has,
  add: function (value) {
    value += "";
    this[_map.prefix + value] = value;
    return this;
  },
  remove: proto.remove,
  clear: proto.clear,
  values: proto.keys,
  size: proto.size,
  empty: proto.empty,
  each: proto.each
};

function set(object, f) {
  var set = new Set(); // Copy constructor.

  if (object instanceof Set) object.each(function (value) {
    set.add(value);
  }); // Otherwise, assume it’s an array.
  else if (object) {
      var i = -1,
          n = object.length;
      if (f == null) while (++i < n) set.add(object[i]);else while (++i < n) set.add(f(object[i], i, object));
    }
  return set;
}

var _default = set;
exports.default = _default;
},{"./map":"../node_modules/d3-collection/src/map.js"}],"../node_modules/d3-collection/src/keys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var keys = [];

  for (var key in map) keys.push(key);

  return keys;
}
},{}],"../node_modules/d3-collection/src/values.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var values = [];

  for (var key in map) values.push(map[key]);

  return values;
}
},{}],"../node_modules/d3-collection/src/entries.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var entries = [];

  for (var key in map) entries.push({
    key: key,
    value: map[key]
  });

  return entries;
}
},{}],"../node_modules/d3-collection/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "nest", {
  enumerable: true,
  get: function () {
    return _nest.default;
  }
});
Object.defineProperty(exports, "set", {
  enumerable: true,
  get: function () {
    return _set.default;
  }
});
Object.defineProperty(exports, "map", {
  enumerable: true,
  get: function () {
    return _map.default;
  }
});
Object.defineProperty(exports, "keys", {
  enumerable: true,
  get: function () {
    return _keys.default;
  }
});
Object.defineProperty(exports, "values", {
  enumerable: true,
  get: function () {
    return _values.default;
  }
});
Object.defineProperty(exports, "entries", {
  enumerable: true,
  get: function () {
    return _entries.default;
  }
});

var _nest = _interopRequireDefault(require("./nest"));

var _set = _interopRequireDefault(require("./set"));

var _map = _interopRequireDefault(require("./map"));

var _keys = _interopRequireDefault(require("./keys"));

var _values = _interopRequireDefault(require("./values"));

var _entries = _interopRequireDefault(require("./entries"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./nest":"../node_modules/d3-collection/src/nest.js","./set":"../node_modules/d3-collection/src/set.js","./map":"../node_modules/d3-collection/src/map.js","./keys":"../node_modules/d3-collection/src/keys.js","./values":"../node_modules/d3-collection/src/values.js","./entries":"../node_modules/d3-collection/src/entries.js"}],"../node_modules/d3-contour/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var array = Array.prototype;
var slice = array.slice;
exports.slice = slice;
},{}],"../node_modules/d3-contour/src/ascending.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a - b;
}
},{}],"../node_modules/d3-contour/src/area.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(ring) {
  var i = 0,
      n = ring.length,
      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];

  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];

  return area;
}
},{}],"../node_modules/d3-contour/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../node_modules/d3-contour/src/contains.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(ring, hole) {
  var i = -1,
      n = hole.length,
      c;

  while (++i < n) if (c = ringContains(ring, hole[i])) return c;

  return 0;
}

function ringContains(ring, point) {
  var x = point[0],
      y = point[1],
      contains = -1;

  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {
    var pi = ring[i],
        xi = pi[0],
        yi = pi[1],
        pj = ring[j],
        xj = pj[0],
        yj = pj[1];
    if (segmentContains(pi, pj, point)) return 0;
    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;
  }

  return contains;
}

function segmentContains(a, b, c) {
  var i;
  return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);
}

function collinear(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);
}

function within(p, q, r) {
  return p <= q && q <= r || r <= q && q <= p;
}
},{}],"../node_modules/d3-contour/src/noop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {}
},{}],"../node_modules/d3-contour/src/contours.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _array = require("./array");

var _ascending = _interopRequireDefault(require("./ascending"));

var _area = _interopRequireDefault(require("./area"));

var _constant = _interopRequireDefault(require("./constant"));

var _contains = _interopRequireDefault(require("./contains"));

var _noop = _interopRequireDefault(require("./noop"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []];

function _default() {
  var dx = 1,
      dy = 1,
      threshold = _d3Array.thresholdSturges,
      smooth = smoothLinear;

  function contours(values) {
    var tz = threshold(values); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var domain = (0, _d3Array.extent)(values),
          start = domain[0],
          stop = domain[1];
      tz = (0, _d3Array.tickStep)(start, stop, tz);
      tz = (0, _d3Array.range)(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);
    } else {
      tz = tz.slice().sort(_ascending.default);
    }

    return tz.map(function (value) {
      return contour(values, value);
    });
  } // Accumulate, smooth contour rings, assign holes to exterior rings.
  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js


  function contour(values, value) {
    var polygons = [],
        holes = [];
    isorings(values, value, function (ring) {
      smooth(ring, values, value);
      if ((0, _area.default)(ring) > 0) polygons.push([ring]);else holes.push(ring);
    });
    holes.forEach(function (hole) {
      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {
        if ((0, _contains.default)((polygon = polygons[i])[0], hole) !== -1) {
          polygon.push(hole);
          return;
        }
      }
    });
    return {
      type: "MultiPolygon",
      value: value,
      coordinates: polygons
    };
  } // Marching squares with isolines stitched into rings.
  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js


  function isorings(values, value, callback) {
    var fragmentByStart = new Array(),
        fragmentByEnd = new Array(),
        x,
        y,
        t0,
        t1,
        t2,
        t3; // Special case for the first row (y = -1, t2 = t3 = 0).

    x = y = -1;
    t1 = values[0] >= value;
    cases[t1 << 1].forEach(stitch);

    while (++x < dx - 1) {
      t0 = t1, t1 = values[x + 1] >= value;
      cases[t0 | t1 << 1].forEach(stitch);
    }

    cases[t1 << 0].forEach(stitch); // General case for the intermediate rows.

    while (++y < dy - 1) {
      x = -1;
      t1 = values[y * dx + dx] >= value;
      t2 = values[y * dx] >= value;
      cases[t1 << 1 | t2 << 2].forEach(stitch);

      while (++x < dx - 1) {
        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;
        t3 = t2, t2 = values[y * dx + x + 1] >= value;
        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);
      }

      cases[t1 | t2 << 3].forEach(stitch);
    } // Special case for the last row (y = dy - 1, t0 = t1 = 0).


    x = -1;
    t2 = values[y * dx] >= value;
    cases[t2 << 2].forEach(stitch);

    while (++x < dx - 1) {
      t3 = t2, t2 = values[y * dx + x + 1] >= value;
      cases[t2 << 2 | t3 << 3].forEach(stitch);
    }

    cases[t2 << 3].forEach(stitch);

    function stitch(line) {
      var start = [line[0][0] + x, line[0][1] + y],
          end = [line[1][0] + x, line[1][1] + y],
          startIndex = index(start),
          endIndex = index(end),
          f,
          g;

      if (f = fragmentByEnd[startIndex]) {
        if (g = fragmentByStart[endIndex]) {
          delete fragmentByEnd[f.end];
          delete fragmentByStart[g.start];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[f.start] = fragmentByEnd[g.end] = {
              start: f.start,
              end: g.end,
              ring: f.ring.concat(g.ring)
            };
          }
        } else {
          delete fragmentByEnd[f.end];
          f.ring.push(end);
          fragmentByEnd[f.end = endIndex] = f;
        }
      } else if (f = fragmentByStart[endIndex]) {
        if (g = fragmentByEnd[startIndex]) {
          delete fragmentByStart[f.start];
          delete fragmentByEnd[g.end];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[g.start] = fragmentByEnd[f.end] = {
              start: g.start,
              end: f.end,
              ring: g.ring.concat(f.ring)
            };
          }
        } else {
          delete fragmentByStart[f.start];
          f.ring.unshift(start);
          fragmentByStart[f.start = startIndex] = f;
        }
      } else {
        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {
          start: startIndex,
          end: endIndex,
          ring: [start, end]
        };
      }
    }
  }

  function index(point) {
    return point[0] * 2 + point[1] * (dx + 1) * 4;
  }

  function smoothLinear(ring, values, value) {
    ring.forEach(function (point) {
      var x = point[0],
          y = point[1],
          xt = x | 0,
          yt = y | 0,
          v0,
          v1 = values[yt * dx + xt];

      if (x > 0 && x < dx && xt === x) {
        v0 = values[yt * dx + xt - 1];
        point[0] = x + (value - v0) / (v1 - v0) - 0.5;
      }

      if (y > 0 && y < dy && yt === y) {
        v0 = values[(yt - 1) * dx + xt];
        point[1] = y + (value - v0) / (v1 - v0) - 0.5;
      }
    });
  }

  contours.contour = contour;

  contours.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.ceil(_[0]),
        _1 = Math.ceil(_[1]);

    if (!(_0 > 0) || !(_1 > 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, contours;
  };

  contours.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), contours) : threshold;
  };

  contours.smooth = function (_) {
    return arguments.length ? (smooth = _ ? smoothLinear : _noop.default, contours) : smooth === smoothLinear;
  };

  return contours;
}
},{"d3-array":"../node_modules/d3-array/src/index.js","./array":"../node_modules/d3-contour/src/array.js","./ascending":"../node_modules/d3-contour/src/ascending.js","./area":"../node_modules/d3-contour/src/area.js","./constant":"../node_modules/d3-contour/src/constant.js","./contains":"../node_modules/d3-contour/src/contains.js","./noop":"../node_modules/d3-contour/src/noop.js"}],"../node_modules/d3-contour/src/blur.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.blurX = blurX;
exports.blurY = blurY;

// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurX(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var j = 0; j < m; ++j) {
    for (var i = 0, sr = 0; i < n + r; ++i) {
      if (i < n) {
        sr += source.data[i + j * n];
      }

      if (i >= r) {
        if (i >= w) {
          sr -= source.data[i - w + j * n];
        }

        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);
      }
    }
  }
} // TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.


function blurY(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var i = 0; i < n; ++i) {
    for (var j = 0, sr = 0; j < m + r; ++j) {
      if (j < m) {
        sr += source.data[i + j * n];
      }

      if (j >= r) {
        if (j >= w) {
          sr -= source.data[i + (j - w) * n];
        }

        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);
      }
    }
  }
}
},{}],"../node_modules/d3-contour/src/density.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _array = require("./array");

var _blur = require("./blur");

var _constant = _interopRequireDefault(require("./constant"));

var _contours = _interopRequireDefault(require("./contours"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defaultX(d) {
  return d[0];
}

function defaultY(d) {
  return d[1];
}

function defaultWeight() {
  return 1;
}

function _default() {
  var x = defaultX,
      y = defaultY,
      weight = defaultWeight,
      dx = 960,
      dy = 500,
      r = 20,
      // blur radius
  k = 2,
      // log2(grid cell size)
  o = r * 3,
      // grid offset, to pad for blur
  n = dx + o * 2 >> k,
      // grid width
  m = dy + o * 2 >> k,
      // grid height
  threshold = (0, _constant.default)(20);

  function density(data) {
    var values0 = new Float32Array(n * m),
        values1 = new Float32Array(n * m);
    data.forEach(function (d, i, data) {
      var xi = +x(d, i, data) + o >> k,
          yi = +y(d, i, data) + o >> k,
          wi = +weight(d, i, data);

      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {
        values0[xi + yi * n] += wi;
      }
    }); // TODO Optimize.

    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    var tz = threshold(values0); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var stop = (0, _d3Array.max)(values0);
      tz = (0, _d3Array.tickStep)(0, stop, tz);
      tz = (0, _d3Array.range)(0, Math.floor(stop / tz) * tz, tz);
      tz.shift();
    }

    return (0, _contours.default)().thresholds(tz).size([n, m])(values0).map(transform);
  }

  function transform(geometry) {
    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.

    geometry.coordinates.forEach(transformPolygon);
    return geometry;
  }

  function transformPolygon(coordinates) {
    coordinates.forEach(transformRing);
  }

  function transformRing(coordinates) {
    coordinates.forEach(transformPoint);
  } // TODO Optimize.


  function transformPoint(coordinates) {
    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;
    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;
  }

  function resize() {
    o = r * 3;
    n = dx + o * 2 >> k;
    m = dy + o * 2 >> k;
    return density;
  }

  density.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : x;
  };

  density.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : y;
  };

  density.weight = function (_) {
    return arguments.length ? (weight = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : weight;
  };

  density.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.ceil(_[0]),
        _1 = Math.ceil(_[1]);

    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, resize();
  };

  density.cellSize = function (_) {
    if (!arguments.length) return 1 << k;
    if (!((_ = +_) >= 1)) throw new Error("invalid cell size");
    return k = Math.floor(Math.log(_) / Math.LN2), resize();
  };

  density.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), density) : threshold;
  };

  density.bandwidth = function (_) {
    if (!arguments.length) return Math.sqrt(r * (r + 1));
    if (!((_ = +_) >= 0)) throw new Error("invalid bandwidth");
    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();
  };

  return density;
}
},{"d3-array":"../node_modules/d3-array/src/index.js","./array":"../node_modules/d3-contour/src/array.js","./blur":"../node_modules/d3-contour/src/blur.js","./constant":"../node_modules/d3-contour/src/constant.js","./contours":"../node_modules/d3-contour/src/contours.js"}],"../node_modules/d3-contour/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "contours", {
  enumerable: true,
  get: function () {
    return _contours.default;
  }
});
Object.defineProperty(exports, "contourDensity", {
  enumerable: true,
  get: function () {
    return _density.default;
  }
});

var _contours = _interopRequireDefault(require("./contours"));

var _density = _interopRequireDefault(require("./density"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./contours":"../node_modules/d3-contour/src/contours.js","./density":"../node_modules/d3-contour/src/density.js"}],"../node_modules/d3-dsv/src/dsv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var EOL = {},
    EOF = {},
    QUOTE = 34,
    NEWLINE = 10,
    RETURN = 13;

function objectConverter(columns) {
  return new Function("d", "return {" + columns.map(function (name, i) {
    return JSON.stringify(name) + ": d[" + i + "] || \"\"";
  }).join(",") + "}");
}

function customConverter(columns, f) {
  var object = objectConverter(columns);
  return function (row, i) {
    return f(object(row), i, columns);
  };
} // Compute unique columns in order of discovery.


function inferColumns(rows) {
  var columnSet = Object.create(null),
      columns = [];
  rows.forEach(function (row) {
    for (var column in row) {
      if (!(column in columnSet)) {
        columns.push(columnSet[column] = column);
      }
    }
  });
  return columns;
}

function pad(value, width) {
  var s = value + "",
      length = s.length;
  return length < width ? new Array(width - length + 1).join(0) + s : s;
}

function formatYear(year) {
  return year < 0 ? "-" + pad(-year, 6) : year > 9999 ? "+" + pad(year, 6) : pad(year, 4);
}

function formatDate(date) {
  var hours = date.getUTCHours(),
      minutes = date.getUTCMinutes(),
      seconds = date.getUTCSeconds(),
      milliseconds = date.getUTCMilliseconds();
  return isNaN(date) ? "Invalid Date" : formatYear(date.getUTCFullYear(), 4) + "-" + pad(date.getUTCMonth() + 1, 2) + "-" + pad(date.getUTCDate(), 2) + (milliseconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "." + pad(milliseconds, 3) + "Z" : seconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "Z" : minutes || hours ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + "Z" : "");
}

function _default(delimiter) {
  var reFormat = new RegExp("[\"" + delimiter + "\n\r]"),
      DELIMITER = delimiter.charCodeAt(0);

  function parse(text, f) {
    var convert,
        columns,
        rows = parseRows(text, function (row, i) {
      if (convert) return convert(row, i - 1);
      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
    });
    rows.columns = columns || [];
    return rows;
  }

  function parseRows(text, f) {
    var rows = [],
        // output rows
    N = text.length,
        I = 0,
        // current character index
    n = 0,
        // current line number
    t,
        // current token
    eof = N <= 0,
        // current token followed by EOF?
    eol = false; // current token followed by EOL?
    // Strip the trailing newline.

    if (text.charCodeAt(N - 1) === NEWLINE) --N;
    if (text.charCodeAt(N - 1) === RETURN) --N;

    function token() {
      if (eof) return EOF;
      if (eol) return eol = false, EOL; // Unescape quotes.

      var i,
          j = I,
          c;

      if (text.charCodeAt(j) === QUOTE) {
        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);

        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        }
        return text.slice(j + 1, i - 1).replace(/""/g, "\"");
      } // Find next delimiter or newline.


      while (I < N) {
        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        } else if (c !== DELIMITER) continue;
        return text.slice(j, i);
      } // Return last token before EOF.


      return eof = true, text.slice(j, N);
    }

    while ((t = token()) !== EOF) {
      var row = [];

      while (t !== EOL && t !== EOF) row.push(t), t = token();

      if (f && (row = f(row, n++)) == null) continue;
      rows.push(row);
    }

    return rows;
  }

  function preformatBody(rows, columns) {
    return rows.map(function (row) {
      return columns.map(function (column) {
        return formatValue(row[column]);
      }).join(delimiter);
    });
  }

  function format(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
  }

  function formatBody(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return preformatBody(rows, columns).join("\n");
  }

  function formatRows(rows) {
    return rows.map(formatRow).join("\n");
  }

  function formatRow(row) {
    return row.map(formatValue).join(delimiter);
  }

  function formatValue(value) {
    return value == null ? "" : value instanceof Date ? formatDate(value) : reFormat.test(value += "") ? "\"" + value.replace(/"/g, "\"\"") + "\"" : value;
  }

  return {
    parse: parse,
    parseRows: parseRows,
    format: format,
    formatBody: formatBody,
    formatRows: formatRows,
    formatRow: formatRow,
    formatValue: formatValue
  };
}
},{}],"../node_modules/d3-dsv/src/csv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.csvFormatValue = exports.csvFormatRow = exports.csvFormatRows = exports.csvFormatBody = exports.csvFormat = exports.csvParseRows = exports.csvParse = void 0;

var _dsv = _interopRequireDefault(require("./dsv.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var csv = (0, _dsv.default)(",");
var csvParse = csv.parse;
exports.csvParse = csvParse;
var csvParseRows = csv.parseRows;
exports.csvParseRows = csvParseRows;
var csvFormat = csv.format;
exports.csvFormat = csvFormat;
var csvFormatBody = csv.formatBody;
exports.csvFormatBody = csvFormatBody;
var csvFormatRows = csv.formatRows;
exports.csvFormatRows = csvFormatRows;
var csvFormatRow = csv.formatRow;
exports.csvFormatRow = csvFormatRow;
var csvFormatValue = csv.formatValue;
exports.csvFormatValue = csvFormatValue;
},{"./dsv.js":"../node_modules/d3-dsv/src/dsv.js"}],"../node_modules/d3-dsv/src/tsv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tsvFormatValue = exports.tsvFormatRow = exports.tsvFormatRows = exports.tsvFormatBody = exports.tsvFormat = exports.tsvParseRows = exports.tsvParse = void 0;

var _dsv = _interopRequireDefault(require("./dsv.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var tsv = (0, _dsv.default)("\t");
var tsvParse = tsv.parse;
exports.tsvParse = tsvParse;
var tsvParseRows = tsv.parseRows;
exports.tsvParseRows = tsvParseRows;
var tsvFormat = tsv.format;
exports.tsvFormat = tsvFormat;
var tsvFormatBody = tsv.formatBody;
exports.tsvFormatBody = tsvFormatBody;
var tsvFormatRows = tsv.formatRows;
exports.tsvFormatRows = tsvFormatRows;
var tsvFormatRow = tsv.formatRow;
exports.tsvFormatRow = tsvFormatRow;
var tsvFormatValue = tsv.formatValue;
exports.tsvFormatValue = tsvFormatValue;
},{"./dsv.js":"../node_modules/d3-dsv/src/dsv.js"}],"../node_modules/d3-dsv/src/autoType.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = autoType;

function autoType(object) {
  for (var key in object) {
    var value = object[key].trim(),
        number,
        m;
    if (!value) value = null;else if (value === "true") value = true;else if (value === "false") value = false;else if (value === "NaN") value = NaN;else if (!isNaN(number = +value)) value = number;else if (m = value.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)) {
      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, "/").replace(/T/, " ");
      value = new Date(value);
    } else continue;
    object[key] = value;
  }

  return object;
} // https://github.com/d3/d3-dsv/issues/45


var fixtz = new Date("2019-01-01T00:00").getHours() || new Date("2019-07-01T00:00").getHours();
},{}],"../node_modules/d3-dsv/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "dsvFormat", {
  enumerable: true,
  get: function () {
    return _dsv.default;
  }
});
Object.defineProperty(exports, "csvParse", {
  enumerable: true,
  get: function () {
    return _csv.csvParse;
  }
});
Object.defineProperty(exports, "csvParseRows", {
  enumerable: true,
  get: function () {
    return _csv.csvParseRows;
  }
});
Object.defineProperty(exports, "csvFormat", {
  enumerable: true,
  get: function () {
    return _csv.csvFormat;
  }
});
Object.defineProperty(exports, "csvFormatBody", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatBody;
  }
});
Object.defineProperty(exports, "csvFormatRows", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatRows;
  }
});
Object.defineProperty(exports, "csvFormatRow", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatRow;
  }
});
Object.defineProperty(exports, "csvFormatValue", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatValue;
  }
});
Object.defineProperty(exports, "tsvParse", {
  enumerable: true,
  get: function () {
    return _tsv.tsvParse;
  }
});
Object.defineProperty(exports, "tsvParseRows", {
  enumerable: true,
  get: function () {
    return _tsv.tsvParseRows;
  }
});
Object.defineProperty(exports, "tsvFormat", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormat;
  }
});
Object.defineProperty(exports, "tsvFormatBody", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatBody;
  }
});
Object.defineProperty(exports, "tsvFormatRows", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatRows;
  }
});
Object.defineProperty(exports, "tsvFormatRow", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatRow;
  }
});
Object.defineProperty(exports, "tsvFormatValue", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatValue;
  }
});
Object.defineProperty(exports, "autoType", {
  enumerable: true,
  get: function () {
    return _autoType.default;
  }
});

var _dsv = _interopRequireDefault(require("./dsv.js"));

var _csv = require("./csv.js");

var _tsv = require("./tsv.js");

var _autoType = _interopRequireDefault(require("./autoType.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./dsv.js":"../node_modules/d3-dsv/src/dsv.js","./csv.js":"../node_modules/d3-dsv/src/csv.js","./tsv.js":"../node_modules/d3-dsv/src/tsv.js","./autoType.js":"../node_modules/d3-dsv/src/autoType.js"}],"../node_modules/d3-fetch/src/blob.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseBlob(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.blob();
}

function _default(input, init) {
  return fetch(input, init).then(responseBlob);
}
},{}],"../node_modules/d3-fetch/src/buffer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseArrayBuffer(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.arrayBuffer();
}

function _default(input, init) {
  return fetch(input, init).then(responseArrayBuffer);
}
},{}],"../node_modules/d3-fetch/src/text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseText(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.text();
}

function _default(input, init) {
  return fetch(input, init).then(responseText);
}
},{}],"../node_modules/d3-fetch/src/dsv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = dsv;
exports.tsv = exports.csv = void 0;

var _d3Dsv = require("d3-dsv");

var _text = _interopRequireDefault(require("./text"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dsvParse(parse) {
  return function (input, init, row) {
    if (arguments.length === 2 && typeof init === "function") row = init, init = undefined;
    return (0, _text.default)(input, init).then(function (response) {
      return parse(response, row);
    });
  };
}

function dsv(delimiter, input, init, row) {
  if (arguments.length === 3 && typeof init === "function") row = init, init = undefined;
  var format = (0, _d3Dsv.dsvFormat)(delimiter);
  return (0, _text.default)(input, init).then(function (response) {
    return format.parse(response, row);
  });
}

var csv = dsvParse(_d3Dsv.csvParse);
exports.csv = csv;
var tsv = dsvParse(_d3Dsv.tsvParse);
exports.tsv = tsv;
},{"d3-dsv":"../node_modules/d3-dsv/src/index.js","./text":"../node_modules/d3-fetch/src/text.js"}],"../node_modules/d3-fetch/src/image.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(input, init) {
  return new Promise(function (resolve, reject) {
    var image = new Image();

    for (var key in init) image[key] = init[key];

    image.onerror = reject;

    image.onload = function () {
      resolve(image);
    };

    image.src = input;
  });
}
},{}],"../node_modules/d3-fetch/src/json.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseJson(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.json();
}

function _default(input, init) {
  return fetch(input, init).then(responseJson);
}
},{}],"../node_modules/d3-fetch/src/xml.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.svg = exports.html = exports.default = void 0;

var _text = _interopRequireDefault(require("./text"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parser(type) {
  return function (input, init) {
    return (0, _text.default)(input, init).then(function (text) {
      return new DOMParser().parseFromString(text, type);
    });
  };
}

var _default = parser("application/xml");

exports.default = _default;
var html = parser("text/html");
exports.html = html;
var svg = parser("image/svg+xml");
exports.svg = svg;
},{"./text":"../node_modules/d3-fetch/src/text.js"}],"../node_modules/d3-fetch/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "blob", {
  enumerable: true,
  get: function () {
    return _blob.default;
  }
});
Object.defineProperty(exports, "buffer", {
  enumerable: true,
  get: function () {
    return _buffer.default;
  }
});
Object.defineProperty(exports, "dsv", {
  enumerable: true,
  get: function () {
    return _dsv.default;
  }
});
Object.defineProperty(exports, "csv", {
  enumerable: true,
  get: function () {
    return _dsv.csv;
  }
});
Object.defineProperty(exports, "tsv", {
  enumerable: true,
  get: function () {
    return _dsv.tsv;
  }
});
Object.defineProperty(exports, "image", {
  enumerable: true,
  get: function () {
    return _image.default;
  }
});
Object.defineProperty(exports, "json", {
  enumerable: true,
  get: function () {
    return _json.default;
  }
});
Object.defineProperty(exports, "text", {
  enumerable: true,
  get: function () {
    return _text.default;
  }
});
Object.defineProperty(exports, "xml", {
  enumerable: true,
  get: function () {
    return _xml.default;
  }
});
Object.defineProperty(exports, "html", {
  enumerable: true,
  get: function () {
    return _xml.html;
  }
});
Object.defineProperty(exports, "svg", {
  enumerable: true,
  get: function () {
    return _xml.svg;
  }
});

var _blob = _interopRequireDefault(require("./blob"));

var _buffer = _interopRequireDefault(require("./buffer"));

var _dsv = _interopRequireWildcard(require("./dsv"));

var _image = _interopRequireDefault(require("./image"));

var _json = _interopRequireDefault(require("./json"));

var _text = _interopRequireDefault(require("./text"));

var _xml = _interopRequireWildcard(require("./xml"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./blob":"../node_modules/d3-fetch/src/blob.js","./buffer":"../node_modules/d3-fetch/src/buffer.js","./dsv":"../node_modules/d3-fetch/src/dsv.js","./image":"../node_modules/d3-fetch/src/image.js","./json":"../node_modules/d3-fetch/src/json.js","./text":"../node_modules/d3-fetch/src/text.js","./xml":"../node_modules/d3-fetch/src/xml.js"}],"../node_modules/d3-force/src/center.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  var nodes;
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force() {
    var i,
        n = nodes.length,
        node,
        sx = 0,
        sy = 0;

    for (i = 0; i < n; ++i) {
      node = nodes[i], sx += node.x, sy += node.y;
    }

    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {
      node = nodes[i], node.x -= sx, node.y -= sy;
    }
  }

  force.initialize = function (_) {
    nodes = _;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
}
},{}],"../node_modules/d3-force/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../node_modules/d3-force/src/jiggle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return (Math.random() - 0.5) * 1e-6;
}
},{}],"../node_modules/d3-quadtree/src/add.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.addAll = addAll;

function _default(d) {
  var x = +this._x.call(null, d),
      y = +this._y.call(null, d);
  return add(this.cover(x, y), x, y, d);
}

function add(tree, x, y, d) {
  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points

  var parent,
      node = tree._root,
      leaf = {
    data: d
  },
      x0 = tree._x0,
      y0 = tree._y0,
      x1 = tree._x1,
      y1 = tree._y1,
      xm,
      ym,
      xp,
      yp,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.

  while (node.length) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
  } // Is the new point is exactly coincident with the existing point?


  xp = +tree._x.call(null, node.data);
  yp = +tree._y.call(null, node.data);
  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.

  do {
    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));

  return parent[j] = node, parent[i] = leaf, tree;
}

function addAll(data) {
  var d,
      i,
      n = data.length,
      x,
      y,
      xz = new Array(n),
      yz = new Array(n),
      x0 = Infinity,
      y0 = Infinity,
      x1 = -Infinity,
      y1 = -Infinity; // Compute the points and their extent.

  for (i = 0; i < n; ++i) {
    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
    xz[i] = x;
    yz[i] = y;
    if (x < x0) x0 = x;
    if (x > x1) x1 = x;
    if (y < y0) y0 = y;
    if (y > y1) y1 = y;
  } // If there were no (valid) points, abort.


  if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.

  this.cover(x0, y0).cover(x1, y1); // Add the new points.

  for (i = 0; i < n; ++i) {
    add(this, xz[i], yz[i], data[i]);
  }

  return this;
}
},{}],"../node_modules/d3-quadtree/src/cover.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points

  var x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1; // If the quadtree has no extent, initialize them.
  // Integer extent are necessary so that if we later double the extent,
  // the existing quadrant boundaries don’t change due to floating point error!

  if (isNaN(x0)) {
    x1 = (x0 = Math.floor(x)) + 1;
    y1 = (y0 = Math.floor(y)) + 1;
  } // Otherwise, double repeatedly to cover.
  else {
      var z = x1 - x0,
          node = this._root,
          parent,
          i;

      while (x0 > x || x >= x1 || y0 > y || y >= y1) {
        i = (y < y0) << 1 | x < x0;
        parent = new Array(4), parent[i] = node, node = parent, z *= 2;

        switch (i) {
          case 0:
            x1 = x0 + z, y1 = y0 + z;
            break;

          case 1:
            x0 = x1 - z, y1 = y0 + z;
            break;

          case 2:
            x1 = x0 + z, y0 = y1 - z;
            break;

          case 3:
            x0 = x1 - z, y0 = y1 - z;
            break;
        }
      }

      if (this._root && this._root.length) this._root = node;
    }

  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  return this;
}
},{}],"../node_modules/d3-quadtree/src/data.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var data = [];
  this.visit(function (node) {
    if (!node.length) do data.push(node.data); while (node = node.next);
  });
  return data;
}
},{}],"../node_modules/d3-quadtree/src/extent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(_) {
  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
}
},{}],"../node_modules/d3-quadtree/src/quad.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node, x0, y0, x1, y1) {
  this.node = node;
  this.x0 = x0;
  this.y0 = y0;
  this.x1 = x1;
  this.y1 = y1;
}
},{}],"../node_modules/d3-quadtree/src/find.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x, y, radius) {
  var data,
      x0 = this._x0,
      y0 = this._y0,
      x1,
      y1,
      x2,
      y2,
      x3 = this._x1,
      y3 = this._y1,
      quads = [],
      node = this._root,
      q,
      i;
  if (node) quads.push(new _quad.default(node, x0, y0, x3, y3));
  if (radius == null) radius = Infinity;else {
    x0 = x - radius, y0 = y - radius;
    x3 = x + radius, y3 = y + radius;
    radius *= radius;
  }

  while (q = quads.pop()) {
    // Stop searching if this quadrant can’t contain a closer node.
    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.

    if (node.length) {
      var xm = (x1 + x2) / 2,
          ym = (y1 + y2) / 2;
      quads.push(new _quad.default(node[3], xm, ym, x2, y2), new _quad.default(node[2], x1, ym, xm, y2), new _quad.default(node[1], xm, y1, x2, ym), new _quad.default(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.

      if (i = (y >= ym) << 1 | x >= xm) {
        q = quads[quads.length - 1];
        quads[quads.length - 1] = quads[quads.length - 1 - i];
        quads[quads.length - 1 - i] = q;
      }
    } // Visit this point. (Visiting coincident points isn’t necessary!)
    else {
        var dx = x - +this._x.call(null, node.data),
            dy = y - +this._y.call(null, node.data),
            d2 = dx * dx + dy * dy;

        if (d2 < radius) {
          var d = Math.sqrt(radius = d2);
          x0 = x - d, y0 = y - d;
          x3 = x + d, y3 = y + d;
          data = node.data;
        }
      }
  }

  return data;
}
},{"./quad.js":"../node_modules/d3-quadtree/src/quad.js"}],"../node_modules/d3-quadtree/src/remove.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.removeAll = removeAll;

function _default(d) {
  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points

  var parent,
      node = this._root,
      retainer,
      previous,
      next,
      x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1,
      x,
      y,
      xm,
      ym,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return this; // Find the leaf node for the point.
  // While descending, also retain the deepest parent with a non-removed sibling.

  if (node.length) while (true) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
    if (!node.length) break;
    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;
  } // Find the point to remove.

  while (node.data !== d) if (!(previous = node, node = node.next)) return this;

  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.

  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.

  if (!parent) return this._root = next, this; // Remove this leaf.

  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.

  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {
    if (retainer) retainer[j] = node;else this._root = node;
  }

  return this;
}

function removeAll(data) {
  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);

  return this;
}
},{}],"../node_modules/d3-quadtree/src/root.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return this._root;
}
},{}],"../node_modules/d3-quadtree/src/size.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var size = 0;
  this.visit(function (node) {
    if (!node.length) do ++size; while (node = node.next);
  });
  return size;
}
},{}],"../node_modules/d3-quadtree/src/visit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(callback) {
  var quads = [],
      q,
      node = this._root,
      child,
      x0,
      y0,
      x1,
      y1;
  if (node) quads.push(new _quad.default(node, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
      var xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[3]) quads.push(new _quad.default(child, xm, ym, x1, y1));
      if (child = node[2]) quads.push(new _quad.default(child, x0, ym, xm, y1));
      if (child = node[1]) quads.push(new _quad.default(child, xm, y0, x1, ym));
      if (child = node[0]) quads.push(new _quad.default(child, x0, y0, xm, ym));
    }
  }

  return this;
}
},{"./quad.js":"../node_modules/d3-quadtree/src/quad.js"}],"../node_modules/d3-quadtree/src/visitAfter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(callback) {
  var quads = [],
      next = [],
      q;
  if (this._root) quads.push(new _quad.default(this._root, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    var node = q.node;

    if (node.length) {
      var child,
          x0 = q.x0,
          y0 = q.y0,
          x1 = q.x1,
          y1 = q.y1,
          xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[0]) quads.push(new _quad.default(child, x0, y0, xm, ym));
      if (child = node[1]) quads.push(new _quad.default(child, xm, y0, x1, ym));
      if (child = node[2]) quads.push(new _quad.default(child, x0, ym, xm, y1));
      if (child = node[3]) quads.push(new _quad.default(child, xm, ym, x1, y1));
    }

    next.push(q);
  }

  while (q = next.pop()) {
    callback(q.node, q.x0, q.y0, q.x1, q.y1);
  }

  return this;
}
},{"./quad.js":"../node_modules/d3-quadtree/src/quad.js"}],"../node_modules/d3-quadtree/src/x.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultX = defaultX;
exports.default = _default;

function defaultX(d) {
  return d[0];
}

function _default(_) {
  return arguments.length ? (this._x = _, this) : this._x;
}
},{}],"../node_modules/d3-quadtree/src/y.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultY = defaultY;
exports.default = _default;

function defaultY(d) {
  return d[1];
}

function _default(_) {
  return arguments.length ? (this._y = _, this) : this._y;
}
},{}],"../node_modules/d3-quadtree/src/quadtree.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quadtree;

var _add = _interopRequireWildcard(require("./add.js"));

var _cover = _interopRequireDefault(require("./cover.js"));

var _data = _interopRequireDefault(require("./data.js"));

var _extent = _interopRequireDefault(require("./extent.js"));

var _find = _interopRequireDefault(require("./find.js"));

var _remove = _interopRequireWildcard(require("./remove.js"));

var _root = _interopRequireDefault(require("./root.js"));

var _size = _interopRequireDefault(require("./size.js"));

var _visit = _interopRequireDefault(require("./visit.js"));

var _visitAfter = _interopRequireDefault(require("./visitAfter.js"));

var _x = _interopRequireWildcard(require("./x.js"));

var _y = _interopRequireWildcard(require("./y.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function quadtree(nodes, x, y) {
  var tree = new Quadtree(x == null ? _x.defaultX : x, y == null ? _y.defaultY : y, NaN, NaN, NaN, NaN);
  return nodes == null ? tree : tree.addAll(nodes);
}

function Quadtree(x, y, x0, y0, x1, y1) {
  this._x = x;
  this._y = y;
  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  this._root = undefined;
}

function leaf_copy(leaf) {
  var copy = {
    data: leaf.data
  },
      next = copy;

  while (leaf = leaf.next) next = next.next = {
    data: leaf.data
  };

  return copy;
}

var treeProto = quadtree.prototype = Quadtree.prototype;

treeProto.copy = function () {
  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
      node = this._root,
      nodes,
      child;
  if (!node) return copy;
  if (!node.length) return copy._root = leaf_copy(node), copy;
  nodes = [{
    source: node,
    target: copy._root = new Array(4)
  }];

  while (node = nodes.pop()) {
    for (var i = 0; i < 4; ++i) {
      if (child = node.source[i]) {
        if (child.length) nodes.push({
          source: child,
          target: node.target[i] = new Array(4)
        });else node.target[i] = leaf_copy(child);
      }
    }
  }

  return copy;
};

treeProto.add = _add.default;
treeProto.addAll = _add.addAll;
treeProto.cover = _cover.default;
treeProto.data = _data.default;
treeProto.extent = _extent.default;
treeProto.find = _find.default;
treeProto.remove = _remove.default;
treeProto.removeAll = _remove.removeAll;
treeProto.root = _root.default;
treeProto.size = _size.default;
treeProto.visit = _visit.default;
treeProto.visitAfter = _visitAfter.default;
treeProto.x = _x.default;
treeProto.y = _y.default;
},{"./add.js":"../node_modules/d3-quadtree/src/add.js","./cover.js":"../node_modules/d3-quadtree/src/cover.js","./data.js":"../node_modules/d3-quadtree/src/data.js","./extent.js":"../node_modules/d3-quadtree/src/extent.js","./find.js":"../node_modules/d3-quadtree/src/find.js","./remove.js":"../node_modules/d3-quadtree/src/remove.js","./root.js":"../node_modules/d3-quadtree/src/root.js","./size.js":"../node_modules/d3-quadtree/src/size.js","./visit.js":"../node_modules/d3-quadtree/src/visit.js","./visitAfter.js":"../node_modules/d3-quadtree/src/visitAfter.js","./x.js":"../node_modules/d3-quadtree/src/x.js","./y.js":"../node_modules/d3-quadtree/src/y.js"}],"../node_modules/d3-quadtree/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "quadtree", {
  enumerable: true,
  get: function () {
    return _quadtree.default;
  }
});

var _quadtree = _interopRequireDefault(require("./quadtree.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./quadtree.js":"../node_modules/d3-quadtree/src/quadtree.js"}],"../node_modules/d3-force/src/collide.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Quadtree = require("d3-quadtree");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function x(d) {
  return d.x + d.vx;
}

function y(d) {
  return d.y + d.vy;
}

function _default(radius) {
  var nodes,
      radii,
      strength = 1,
      iterations = 1;
  if (typeof radius !== "function") radius = (0, _constant.default)(radius == null ? 1 : +radius);

  function force() {
    var i,
        n = nodes.length,
        tree,
        node,
        xi,
        yi,
        ri,
        ri2;

    for (var k = 0; k < iterations; ++k) {
      tree = (0, _d3Quadtree.quadtree)(nodes, x, y).visitAfter(prepare);

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        ri = radii[node.index], ri2 = ri * ri;
        xi = node.x + node.vx;
        yi = node.y + node.vy;
        tree.visit(apply);
      }
    }

    function apply(quad, x0, y0, x1, y1) {
      var data = quad.data,
          rj = quad.r,
          r = ri + rj;

      if (data) {
        if (data.index > node.index) {
          var x = xi - data.x - data.vx,
              y = yi - data.y - data.vy,
              l = x * x + y * y;

          if (l < r * r) {
            if (x === 0) x = (0, _jiggle.default)(), l += x * x;
            if (y === 0) y = (0, _jiggle.default)(), l += y * y;
            l = (r - (l = Math.sqrt(l))) / l * strength;
            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
            node.vy += (y *= l) * r;
            data.vx -= x * (r = 1 - r);
            data.vy -= y * r;
          }
        }

        return;
      }

      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
    }
  }

  function prepare(quad) {
    if (quad.data) return quad.r = radii[quad.data.index];

    for (var i = quad.r = 0; i < 4; ++i) {
      if (quad[i] && quad[i].r > quad.r) {
        quad.r = quad[i].r;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    radii = new Array(n);

    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : radius;
  };

  return force;
}
},{"./constant":"../node_modules/d3-force/src/constant.js","./jiggle":"../node_modules/d3-force/src/jiggle.js","d3-quadtree":"../node_modules/d3-quadtree/src/index.js"}],"../node_modules/d3-force/src/link.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Collection = require("d3-collection");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function index(d) {
  return d.index;
}

function find(nodeById, nodeId) {
  var node = nodeById.get(nodeId);
  if (!node) throw new Error("missing: " + nodeId);
  return node;
}

function _default(links) {
  var id = index,
      strength = defaultStrength,
      strengths,
      distance = (0, _constant.default)(30),
      distances,
      nodes,
      count,
      bias,
      iterations = 1;
  if (links == null) links = [];

  function defaultStrength(link) {
    return 1 / Math.min(count[link.source.index], count[link.target.index]);
  }

  function force(alpha) {
    for (var k = 0, n = links.length; k < iterations; ++k) {
      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
        link = links[i], source = link.source, target = link.target;
        x = target.x + target.vx - source.x - source.vx || (0, _jiggle.default)();
        y = target.y + target.vy - source.y - source.vy || (0, _jiggle.default)();
        l = Math.sqrt(x * x + y * y);
        l = (l - distances[i]) / l * alpha * strengths[i];
        x *= l, y *= l;
        target.vx -= x * (b = bias[i]);
        target.vy -= y * b;
        source.vx += x * (b = 1 - b);
        source.vy += y * b;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        m = links.length,
        nodeById = (0, _d3Collection.map)(nodes, id),
        link;

    for (i = 0, count = new Array(n); i < m; ++i) {
      link = links[i], link.index = i;
      if (typeof link.source !== "object") link.source = find(nodeById, link.source);
      if (typeof link.target !== "object") link.target = find(nodeById, link.target);
      count[link.source.index] = (count[link.source.index] || 0) + 1;
      count[link.target.index] = (count[link.target.index] || 0) + 1;
    }

    for (i = 0, bias = new Array(m); i < m; ++i) {
      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
    }

    strengths = new Array(m), initializeStrength();
    distances = new Array(m), initializeDistance();
  }

  function initializeStrength() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      strengths[i] = +strength(links[i], i, links);
    }
  }

  function initializeDistance() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      distances[i] = +distance(links[i], i, links);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.links = function (_) {
    return arguments.length ? (links = _, initialize(), force) : links;
  };

  force.id = function (_) {
    return arguments.length ? (id = _, force) : id;
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initializeStrength(), force) : strength;
  };

  force.distance = function (_) {
    return arguments.length ? (distance = typeof _ === "function" ? _ : (0, _constant.default)(+_), initializeDistance(), force) : distance;
  };

  return force;
}
},{"./constant":"../node_modules/d3-force/src/constant.js","./jiggle":"../node_modules/d3-force/src/jiggle.js","d3-collection":"../node_modules/d3-collection/src/index.js"}],"../node_modules/d3-force/src/simulation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Collection = require("d3-collection");

var _d3Timer = require("d3-timer");

function x(d) {
  return d.x;
}

function y(d) {
  return d.y;
}

var initialRadius = 10,
    initialAngle = Math.PI * (3 - Math.sqrt(5));

function _default(nodes) {
  var simulation,
      alpha = 1,
      alphaMin = 0.001,
      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),
      alphaTarget = 0,
      velocityDecay = 0.6,
      forces = (0, _d3Collection.map)(),
      stepper = (0, _d3Timer.timer)(step),
      event = (0, _d3Dispatch.dispatch)("tick", "end");
  if (nodes == null) nodes = [];

  function step() {
    tick();
    event.call("tick", simulation);

    if (alpha < alphaMin) {
      stepper.stop();
      event.call("end", simulation);
    }
  }

  function tick(iterations) {
    var i,
        n = nodes.length,
        node;
    if (iterations === undefined) iterations = 1;

    for (var k = 0; k < iterations; ++k) {
      alpha += (alphaTarget - alpha) * alphaDecay;
      forces.each(function (force) {
        force(alpha);
      });

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        if (node.fx == null) node.x += node.vx *= velocityDecay;else node.x = node.fx, node.vx = 0;
        if (node.fy == null) node.y += node.vy *= velocityDecay;else node.y = node.fy, node.vy = 0;
      }
    }

    return simulation;
  }

  function initializeNodes() {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.index = i;
      if (node.fx != null) node.x = node.fx;
      if (node.fy != null) node.y = node.fy;

      if (isNaN(node.x) || isNaN(node.y)) {
        var radius = initialRadius * Math.sqrt(i),
            angle = i * initialAngle;
        node.x = radius * Math.cos(angle);
        node.y = radius * Math.sin(angle);
      }

      if (isNaN(node.vx) || isNaN(node.vy)) {
        node.vx = node.vy = 0;
      }
    }
  }

  function initializeForce(force) {
    if (force.initialize) force.initialize(nodes);
    return force;
  }

  initializeNodes();
  return simulation = {
    tick: tick,
    restart: function () {
      return stepper.restart(step), simulation;
    },
    stop: function () {
      return stepper.stop(), simulation;
    },
    nodes: function (_) {
      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;
    },
    alpha: function (_) {
      return arguments.length ? (alpha = +_, simulation) : alpha;
    },
    alphaMin: function (_) {
      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
    },
    alphaDecay: function (_) {
      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
    },
    alphaTarget: function (_) {
      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
    },
    velocityDecay: function (_) {
      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
    },
    force: function (name, _) {
      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);
    },
    find: function (x, y, radius) {
      var i = 0,
          n = nodes.length,
          dx,
          dy,
          d2,
          node,
          closest;
      if (radius == null) radius = Infinity;else radius *= radius;

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        dx = x - node.x;
        dy = y - node.y;
        d2 = dx * dx + dy * dy;
        if (d2 < radius) closest = node, radius = d2;
      }

      return closest;
    },
    on: function (name, _) {
      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
    }
  };
}
},{"d3-dispatch":"../node_modules/d3-dispatch/src/index.js","d3-collection":"../node_modules/d3-collection/src/index.js","d3-timer":"../node_modules/d3-timer/src/index.js"}],"../node_modules/d3-force/src/manyBody.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Quadtree = require("d3-quadtree");

var _simulation = require("./simulation");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var nodes,
      node,
      alpha,
      strength = (0, _constant.default)(-30),
      strengths,
      distanceMin2 = 1,
      distanceMax2 = Infinity,
      theta2 = 0.81;

  function force(_) {
    var i,
        n = nodes.length,
        tree = (0, _d3Quadtree.quadtree)(nodes, _simulation.x, _simulation.y).visitAfter(accumulate);

    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    strengths = new Array(n);

    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);
  }

  function accumulate(quad) {
    var strength = 0,
        q,
        c,
        weight = 0,
        x,
        y,
        i; // For internal nodes, accumulate forces from child quadrants.

    if (quad.length) {
      for (x = y = i = 0; i < 4; ++i) {
        if ((q = quad[i]) && (c = Math.abs(q.value))) {
          strength += q.value, weight += c, x += c * q.x, y += c * q.y;
        }
      }

      quad.x = x / weight;
      quad.y = y / weight;
    } // For leaf nodes, accumulate forces from coincident quadrants.
    else {
        q = quad;
        q.x = q.data.x;
        q.y = q.data.y;

        do strength += strengths[q.data.index]; while (q = q.next);
      }

    quad.value = strength;
  }

  function apply(quad, x1, _, x2) {
    if (!quad.value) return true;
    var x = quad.x - node.x,
        y = quad.y - node.y,
        w = x2 - x1,
        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.
    // Limit forces for very close nodes; randomize direction if coincident.

    if (w * w / theta2 < l) {
      if (l < distanceMax2) {
        if (x === 0) x = (0, _jiggle.default)(), l += x * x;
        if (y === 0) y = (0, _jiggle.default)(), l += y * y;
        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
        node.vx += x * quad.value * alpha / l;
        node.vy += y * quad.value * alpha / l;
      }

      return true;
    } // Otherwise, process points directly.
    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.


    if (quad.data !== node || quad.next) {
      if (x === 0) x = (0, _jiggle.default)(), l += x * x;
      if (y === 0) y = (0, _jiggle.default)(), l += y * y;
      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
    }

    do if (quad.data !== node) {
      w = strengths[quad.data.index] * alpha / l;
      node.vx += x * w;
      node.vy += y * w;
    } while (quad = quad.next);
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.distanceMin = function (_) {
    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
  };

  force.distanceMax = function (_) {
    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
  };

  force.theta = function (_) {
    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
  };

  return force;
}
},{"./constant":"../node_modules/d3-force/src/constant.js","./jiggle":"../node_modules/d3-force/src/jiggle.js","d3-quadtree":"../node_modules/d3-quadtree/src/index.js","./simulation":"../node_modules/d3-force/src/simulation.js"}],"../node_modules/d3-force/src/radial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(radius, x, y) {
  var nodes,
      strength = (0, _constant.default)(0.1),
      strengths,
      radiuses;
  if (typeof radius !== "function") radius = (0, _constant.default)(+radius);
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force(alpha) {
    for (var i = 0, n = nodes.length; i < n; ++i) {
      var node = nodes[i],
          dx = node.x - x || 1e-6,
          dy = node.y - y || 1e-6,
          r = Math.sqrt(dx * dx + dy * dy),
          k = (radiuses[i] - r) * strengths[i] * alpha / r;
      node.vx += dx * k;
      node.vy += dy * k;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    radiuses = new Array(n);

    for (i = 0; i < n; ++i) {
      radiuses[i] = +radius(nodes[i], i, nodes);
      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _, initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : radius;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
}
},{"./constant":"../node_modules/d3-force/src/constant.js"}],"../node_modules/d3-force/src/x.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x) {
  var strength = (0, _constant.default)(0.1),
      nodes,
      strengths,
      xz;
  if (typeof x !== "function") x = (0, _constant.default)(x == null ? 0 : +x);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    xz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : x;
  };

  return force;
}
},{"./constant":"../node_modules/d3-force/src/constant.js"}],"../node_modules/d3-force/src/y.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(y) {
  var strength = (0, _constant.default)(0.1),
      nodes,
      strengths,
      yz;
  if (typeof y !== "function") y = (0, _constant.default)(y == null ? 0 : +y);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    yz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : y;
  };

  return force;
}
},{"./constant":"../node_modules/d3-force/src/constant.js"}],"../node_modules/d3-force/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "forceCenter", {
  enumerable: true,
  get: function () {
    return _center.default;
  }
});
Object.defineProperty(exports, "forceCollide", {
  enumerable: true,
  get: function () {
    return _collide.default;
  }
});
Object.defineProperty(exports, "forceLink", {
  enumerable: true,
  get: function () {
    return _link.default;
  }
});
Object.defineProperty(exports, "forceManyBody", {
  enumerable: true,
  get: function () {
    return _manyBody.default;
  }
});
Object.defineProperty(exports, "forceRadial", {
  enumerable: true,
  get: function () {
    return _radial.default;
  }
});
Object.defineProperty(exports, "forceSimulation", {
  enumerable: true,
  get: function () {
    return _simulation.default;
  }
});
Object.defineProperty(exports, "forceX", {
  enumerable: true,
  get: function () {
    return _x.default;
  }
});
Object.defineProperty(exports, "forceY", {
  enumerable: true,
  get: function () {
    return _y.default;
  }
});

var _center = _interopRequireDefault(require("./center"));

var _collide = _interopRequireDefault(require("./collide"));

var _link = _interopRequireDefault(require("./link"));

var _manyBody = _interopRequireDefault(require("./manyBody"));

var _radial = _interopRequireDefault(require("./radial"));

var _simulation = _interopRequireDefault(require("./simulation"));

var _x = _interopRequireDefault(require("./x"));

var _y = _interopRequireDefault(require("./y"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./center":"../node_modules/d3-force/src/center.js","./collide":"../node_modules/d3-force/src/collide.js","./link":"../node_modules/d3-force/src/link.js","./manyBody":"../node_modules/d3-force/src/manyBody.js","./radial":"../node_modules/d3-force/src/radial.js","./simulation":"../node_modules/d3-force/src/simulation.js","./x":"../node_modules/d3-force/src/x.js","./y":"../node_modules/d3-force/src/y.js"}],"../node_modules/d3-format/src/formatDecimal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimal(1.23) returns ["123", 0].
function _default(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity

  var i,
      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).

  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
}
},{}],"../node_modules/d3-format/src/exponent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x) {
  return x = (0, _formatDecimal.default)(Math.abs(x)), x ? x[1] : NaN;
}
},{"./formatDecimal.js":"../node_modules/d3-format/src/formatDecimal.js"}],"../node_modules/d3-format/src/formatGroup.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(grouping, thousands) {
  return function (value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
}
},{}],"../node_modules/d3-format/src/formatNumerals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(numerals) {
  return function (value) {
    return value.replace(/[0-9]/g, function (i) {
      return numerals[+i];
    });
  };
}
},{}],"../node_modules/d3-format/src/formatSpecifier.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = formatSpecifier;
exports.FormatSpecifier = FormatSpecifier;
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}

formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier.prototype.toString = function () {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === undefined ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};
},{}],"../node_modules/d3-format/src/formatTrim.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
function _default(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".":
        i0 = i1 = i;
        break;

      case "0":
        if (i0 === 0) i0 = i;
        i1 = i;
        break;

      default:
        if (!+s[i]) break out;
        if (i0 > 0) i0 = 0;
        break;
    }
  }

  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}
},{}],"../node_modules/d3-format/src/formatPrefixAuto.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.prefixExponent = void 0;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var prefixExponent;
exports.prefixExponent = prefixExponent;

function _default(x, p) {
  var d = (0, _formatDecimal.default)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (exports.prefixExponent = prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + (0, _formatDecimal.default)(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}
},{"./formatDecimal.js":"../node_modules/d3-format/src/formatDecimal.js"}],"../node_modules/d3-format/src/formatRounded.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x, p) {
  var d = (0, _formatDecimal.default)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}
},{"./formatDecimal.js":"../node_modules/d3-format/src/formatDecimal.js"}],"../node_modules/d3-format/src/formatTypes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _formatPrefixAuto = _interopRequireDefault(require("./formatPrefixAuto.js"));

var _formatRounded = _interopRequireDefault(require("./formatRounded.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  "%": function (x, p) {
    return (x * 100).toFixed(p);
  },
  "b": function (x) {
    return Math.round(x).toString(2);
  },
  "c": function (x) {
    return x + "";
  },
  "d": function (x) {
    return Math.round(x).toString(10);
  },
  "e": function (x, p) {
    return x.toExponential(p);
  },
  "f": function (x, p) {
    return x.toFixed(p);
  },
  "g": function (x, p) {
    return x.toPrecision(p);
  },
  "o": function (x) {
    return Math.round(x).toString(8);
  },
  "p": function (x, p) {
    return (0, _formatRounded.default)(x * 100, p);
  },
  "r": _formatRounded.default,
  "s": _formatPrefixAuto.default,
  "X": function (x) {
    return Math.round(x).toString(16).toUpperCase();
  },
  "x": function (x) {
    return Math.round(x).toString(16);
  }
};
exports.default = _default;
},{"./formatPrefixAuto.js":"../node_modules/d3-format/src/formatPrefixAuto.js","./formatRounded.js":"../node_modules/d3-format/src/formatRounded.js"}],"../node_modules/d3-format/src/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x;
}
},{}],"../node_modules/d3-format/src/locale.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

var _formatGroup = _interopRequireDefault(require("./formatGroup.js"));

var _formatNumerals = _interopRequireDefault(require("./formatNumerals.js"));

var _formatSpecifier = _interopRequireDefault(require("./formatSpecifier.js"));

var _formatTrim = _interopRequireDefault(require("./formatTrim.js"));

var _formatTypes = _interopRequireDefault(require("./formatTypes.js"));

var _formatPrefixAuto = require("./formatPrefixAuto.js");

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var map = Array.prototype.map,
    prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];

function _default(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? _identity.default : (0, _formatGroup.default)(map.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? _identity.default : (0, _formatNumerals.default)(map.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "-" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = (0, _formatSpecifier.default)(specifier);
    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type; // The "n" type is an alias for ",g".

    if (type === "n") comma = true, type = "g"; // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!_formatTypes.default[type]) precision === undefined && (precision = 12), trim = true, type = "g"; // If zero fill is specified, padding goes after sign and before digits.

    if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "="; // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.

    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : ""; // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?

    var formatType = _formatTypes.default[type],
        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].

    precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i,
          n,
          c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value; // Determine the sign. -0 is not less than 0, but 1 / -0 is!

        var valueNegative = value < 0 || 1 / value < 0; // Perform the initial formatting.

        value = isNaN(value) ? nan : formatType(Math.abs(value), precision); // Trim insignificant zeros.

        if (trim) value = (0, _formatTrim.default)(value); // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.

        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false; // Compute the prefix and suffix.

        valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto.prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : ""); // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.

        if (maybeSuffix) {
          i = -1, n = value.length;

          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      } // If the fill character is not "0", grouping is applied before padding.


      if (comma && !zero) value = group(value, Infinity); // Compute the padding.

      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : ""; // If the fill character is "0", grouping is applied after padding.

      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = ""; // Reconstruct the final output based on the desired alignment.

      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;

        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;

        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;

        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }

      return numerals(value);
    }

    format.toString = function () {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = (0, _formatSpecifier.default)(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function (value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
}
},{"./exponent.js":"../node_modules/d3-format/src/exponent.js","./formatGroup.js":"../node_modules/d3-format/src/formatGroup.js","./formatNumerals.js":"../node_modules/d3-format/src/formatNumerals.js","./formatSpecifier.js":"../node_modules/d3-format/src/formatSpecifier.js","./formatTrim.js":"../node_modules/d3-format/src/formatTrim.js","./formatTypes.js":"../node_modules/d3-format/src/formatTypes.js","./formatPrefixAuto.js":"../node_modules/d3-format/src/formatPrefixAuto.js","./identity.js":"../node_modules/d3-format/src/identity.js"}],"../node_modules/d3-format/src/defaultLocale.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defaultLocale;
exports.formatPrefix = exports.format = void 0;

var _locale = _interopRequireDefault(require("./locale.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var locale;
var format;
exports.format = format;
var formatPrefix;
exports.formatPrefix = formatPrefix;
defaultLocale({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""],
  minus: "-"
});

function defaultLocale(definition) {
  locale = (0, _locale.default)(definition);
  exports.format = format = locale.format;
  exports.formatPrefix = formatPrefix = locale.formatPrefix;
  return locale;
}
},{"./locale.js":"../node_modules/d3-format/src/locale.js"}],"../node_modules/d3-format/src/precisionFixed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step) {
  return Math.max(0, -(0, _exponent.default)(Math.abs(step)));
}
},{"./exponent.js":"../node_modules/d3-format/src/exponent.js"}],"../node_modules/d3-format/src/precisionPrefix.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3 - (0, _exponent.default)(Math.abs(step)));
}
},{"./exponent.js":"../node_modules/d3-format/src/exponent.js"}],"../node_modules/d3-format/src/precisionRound.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, (0, _exponent.default)(max) - (0, _exponent.default)(step)) + 1;
}
},{"./exponent.js":"../node_modules/d3-format/src/exponent.js"}],"../node_modules/d3-format/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "formatDefaultLocale", {
  enumerable: true,
  get: function () {
    return _defaultLocale.default;
  }
});
Object.defineProperty(exports, "format", {
  enumerable: true,
  get: function () {
    return _defaultLocale.format;
  }
});
Object.defineProperty(exports, "formatPrefix", {
  enumerable: true,
  get: function () {
    return _defaultLocale.formatPrefix;
  }
});
Object.defineProperty(exports, "formatLocale", {
  enumerable: true,
  get: function () {
    return _locale.default;
  }
});
Object.defineProperty(exports, "formatSpecifier", {
  enumerable: true,
  get: function () {
    return _formatSpecifier.default;
  }
});
Object.defineProperty(exports, "FormatSpecifier", {
  enumerable: true,
  get: function () {
    return _formatSpecifier.FormatSpecifier;
  }
});
Object.defineProperty(exports, "precisionFixed", {
  enumerable: true,
  get: function () {
    return _precisionFixed.default;
  }
});
Object.defineProperty(exports, "precisionPrefix", {
  enumerable: true,
  get: function () {
    return _precisionPrefix.default;
  }
});
Object.defineProperty(exports, "precisionRound", {
  enumerable: true,
  get: function () {
    return _precisionRound.default;
  }
});

var _defaultLocale = _interopRequireWildcard(require("./defaultLocale.js"));

var _locale = _interopRequireDefault(require("./locale.js"));

var _formatSpecifier = _interopRequireWildcard(require("./formatSpecifier.js"));

var _precisionFixed = _interopRequireDefault(require("./precisionFixed.js"));

var _precisionPrefix = _interopRequireDefault(require("./precisionPrefix.js"));

var _precisionRound = _interopRequireDefault(require("./precisionRound.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./defaultLocale.js":"../node_modules/d3-format/src/defaultLocale.js","./locale.js":"../node_modules/d3-format/src/locale.js","./formatSpecifier.js":"../node_modules/d3-format/src/formatSpecifier.js","./precisionFixed.js":"../node_modules/d3-format/src/precisionFixed.js","./precisionPrefix.js":"../node_modules/d3-format/src/precisionPrefix.js","./precisionRound.js":"../node_modules/d3-format/src/precisionRound.js"}],"../node_modules/d3-geo/src/adder.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Adds floating point numbers with twice the normal precision.
// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and
// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)
// 305–363 (1997).
// Code adapted from GeographicLib by Charles F. F. Karney,
// http://geographiclib.sourceforge.net/
function _default() {
  return new Adder();
}

function Adder() {
  this.reset();
}

Adder.prototype = {
  constructor: Adder,
  reset: function () {
    this.s = // rounded value
    this.t = 0; // exact error
  },
  add: function (y) {
    add(temp, y, this.t);
    add(this, temp.s, this.s);
    if (this.s) this.t += temp.t;else this.s = temp.t;
  },
  valueOf: function () {
    return this.s;
  }
};
var temp = new Adder();

function add(adder, a, b) {
  var x = adder.s = a + b,
      bv = x - a,
      av = x - bv;
  adder.t = a - av + (b - bv);
}
},{}],"../node_modules/d3-geo/src/math.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acos = acos;
exports.asin = asin;
exports.haversin = haversin;
exports.tan = exports.sqrt = exports.sign = exports.sin = exports.pow = exports.log = exports.floor = exports.exp = exports.ceil = exports.cos = exports.atan2 = exports.atan = exports.abs = exports.radians = exports.degrees = exports.tau = exports.quarterPi = exports.halfPi = exports.pi = exports.epsilon2 = exports.epsilon = void 0;
var epsilon = 1e-6;
exports.epsilon = epsilon;
var epsilon2 = 1e-12;
exports.epsilon2 = epsilon2;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var quarterPi = pi / 4;
exports.quarterPi = quarterPi;
var tau = pi * 2;
exports.tau = tau;
var degrees = 180 / pi;
exports.degrees = degrees;
var radians = pi / 180;
exports.radians = radians;
var abs = Math.abs;
exports.abs = abs;
var atan = Math.atan;
exports.atan = atan;
var atan2 = Math.atan2;
exports.atan2 = atan2;
var cos = Math.cos;
exports.cos = cos;
var ceil = Math.ceil;
exports.ceil = ceil;
var exp = Math.exp;
exports.exp = exp;
var floor = Math.floor;
exports.floor = floor;
var log = Math.log;
exports.log = log;
var pow = Math.pow;
exports.pow = pow;
var sin = Math.sin;
exports.sin = sin;

var sign = Math.sign || function (x) {
  return x > 0 ? 1 : x < 0 ? -1 : 0;
};

exports.sign = sign;
var sqrt = Math.sqrt;
exports.sqrt = sqrt;
var tan = Math.tan;
exports.tan = tan;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}

function haversin(x) {
  return (x = sin(x / 2)) * x;
}
},{}],"../node_modules/d3-geo/src/noop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = noop;

function noop() {}
},{}],"../node_modules/d3-geo/src/stream.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}

var streamObjectType = {
  Feature: function (object, stream) {
    streamGeometry(object.geometry, stream);
  },
  FeatureCollection: function (object, stream) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) streamGeometry(features[i].geometry, stream);
  }
};
var streamGeometryType = {
  Sphere: function (object, stream) {
    stream.sphere();
  },
  Point: function (object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  },
  MultiPoint: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
  },
  LineString: function (object, stream) {
    streamLine(object.coordinates, stream, 0);
  },
  MultiLineString: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) streamLine(coordinates[i], stream, 0);
  },
  Polygon: function (object, stream) {
    streamPolygon(object.coordinates, stream);
  },
  MultiPolygon: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) streamPolygon(coordinates[i], stream);
  },
  GeometryCollection: function (object, stream) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) streamGeometry(geometries[i], stream);
  }
};

function streamLine(coordinates, stream, closed) {
  var i = -1,
      n = coordinates.length - closed,
      coordinate;
  stream.lineStart();

  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);

  stream.lineEnd();
}

function streamPolygon(coordinates, stream) {
  var i = -1,
      n = coordinates.length;
  stream.polygonStart();

  while (++i < n) streamLine(coordinates[i], stream, 1);

  stream.polygonEnd();
}

function _default(object, stream) {
  if (object && streamObjectType.hasOwnProperty(object.type)) {
    streamObjectType[object.type](object, stream);
  } else {
    streamGeometry(object, stream);
  }
}
},{}],"../node_modules/d3-geo/src/area.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.areaStream = exports.areaRingSum = void 0;

var _adder = _interopRequireDefault(require("./adder.js"));

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var areaRingSum = (0, _adder.default)();
exports.areaRingSum = areaRingSum;
var areaSum = (0, _adder.default)(),
    lambda00,
    phi00,
    lambda0,
    cosPhi0,
    sinPhi0;
var areaStream = {
  point: _noop.default,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: function () {
    areaRingSum.reset();
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function () {
    var areaRing = +areaRingSum;
    areaSum.add(areaRing < 0 ? _math.tau + areaRing : areaRing);
    this.lineStart = this.lineEnd = this.point = _noop.default;
  },
  sphere: function () {
    areaSum.add(_math.tau);
  }
};
exports.areaStream = areaStream;

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaRingEnd() {
  areaPoint(lambda00, phi00);
}

function areaPointFirst(lambda, phi) {
  areaStream.point = areaPoint;
  lambda00 = lambda, phi00 = phi;
  lambda *= _math.radians, phi *= _math.radians;
  lambda0 = lambda, cosPhi0 = (0, _math.cos)(phi = phi / 2 + _math.quarterPi), sinPhi0 = (0, _math.sin)(phi);
}

function areaPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  phi = phi / 2 + _math.quarterPi; // half the angular distance from south pole
  // Spherical excess E for a spherical triangle with vertices: south pole,
  // previous point, current point.  Uses a formula derived from Cagnoli’s
  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).

  var dLambda = lambda - lambda0,
      sdLambda = dLambda >= 0 ? 1 : -1,
      adLambda = sdLambda * dLambda,
      cosPhi = (0, _math.cos)(phi),
      sinPhi = (0, _math.sin)(phi),
      k = sinPhi0 * sinPhi,
      u = cosPhi0 * cosPhi + k * (0, _math.cos)(adLambda),
      v = k * sdLambda * (0, _math.sin)(adLambda);
  areaRingSum.add((0, _math.atan2)(v, u)); // Advance the previous points.

  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
}

function _default(object) {
  areaSum.reset();
  (0, _stream.default)(object, areaStream);
  return areaSum * 2;
}
},{"./adder.js":"../node_modules/d3-geo/src/adder.js","./math.js":"../node_modules/d3-geo/src/math.js","./noop.js":"../node_modules/d3-geo/src/noop.js","./stream.js":"../node_modules/d3-geo/src/stream.js"}],"../node_modules/d3-geo/src/cartesian.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.spherical = spherical;
exports.cartesian = cartesian;
exports.cartesianDot = cartesianDot;
exports.cartesianCross = cartesianCross;
exports.cartesianAddInPlace = cartesianAddInPlace;
exports.cartesianScale = cartesianScale;
exports.cartesianNormalizeInPlace = cartesianNormalizeInPlace;

var _math = require("./math.js");

function spherical(cartesian) {
  return [(0, _math.atan2)(cartesian[1], cartesian[0]), (0, _math.asin)(cartesian[2])];
}

function cartesian(spherical) {
  var lambda = spherical[0],
      phi = spherical[1],
      cosPhi = (0, _math.cos)(phi);
  return [cosPhi * (0, _math.cos)(lambda), cosPhi * (0, _math.sin)(lambda), (0, _math.sin)(phi)];
}

function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}

function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
} // TODO return a


function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}

function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
} // TODO return d


function cartesianNormalizeInPlace(d) {
  var l = (0, _math.sqrt)(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}
},{"./math.js":"../node_modules/d3-geo/src/math.js"}],"../node_modules/d3-geo/src/bounds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder.js"));

var _area = require("./area.js");

var _cartesian = require("./cartesian.js");

var _math = require("./math.js");

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lambda0,
    phi0,
    lambda1,
    phi1,
    // bounds
lambda2,
    // previous lambda-coordinate
lambda00,
    phi00,
    // first point
p0,
    // previous 3D point
deltaSum = (0, _adder.default)(),
    ranges,
    range;
var boundsStream = {
  point: boundsPoint,
  lineStart: boundsLineStart,
  lineEnd: boundsLineEnd,
  polygonStart: function () {
    boundsStream.point = boundsRingPoint;
    boundsStream.lineStart = boundsRingStart;
    boundsStream.lineEnd = boundsRingEnd;
    deltaSum.reset();

    _area.areaStream.polygonStart();
  },
  polygonEnd: function () {
    _area.areaStream.polygonEnd();

    boundsStream.point = boundsPoint;
    boundsStream.lineStart = boundsLineStart;
    boundsStream.lineEnd = boundsLineEnd;
    if (_area.areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > _math.epsilon) phi1 = 90;else if (deltaSum < -_math.epsilon) phi0 = -90;
    range[0] = lambda0, range[1] = lambda1;
  },
  sphere: function () {
    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
  }
};

function boundsPoint(lambda, phi) {
  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
}

function linePoint(lambda, phi) {
  var p = (0, _cartesian.cartesian)([lambda * _math.radians, phi * _math.radians]);

  if (p0) {
    var normal = (0, _cartesian.cartesianCross)(p0, p),
        equatorial = [normal[1], -normal[0], 0],
        inflection = (0, _cartesian.cartesianCross)(equatorial, normal);
    (0, _cartesian.cartesianNormalizeInPlace)(inflection);
    inflection = (0, _cartesian.spherical)(inflection);
    var delta = lambda - lambda2,
        sign = delta > 0 ? 1 : -1,
        lambdai = inflection[0] * _math.degrees * sign,
        phii,
        antimeridian = (0, _math.abs)(delta) > 180;

    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = inflection[1] * _math.degrees;
      if (phii > phi1) phi1 = phii;
    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = -inflection[1] * _math.degrees;
      if (phii < phi0) phi0 = phii;
    } else {
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
    }

    if (antimeridian) {
      if (lambda < lambda2) {
        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
      } else {
        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
      }
    } else {
      if (lambda1 >= lambda0) {
        if (lambda < lambda0) lambda0 = lambda;
        if (lambda > lambda1) lambda1 = lambda;
      } else {
        if (lambda > lambda2) {
          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
        } else {
          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
        }
      }
    }
  } else {
    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  }

  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
  p0 = p, lambda2 = lambda;
}

function boundsLineStart() {
  boundsStream.point = linePoint;
}

function boundsLineEnd() {
  range[0] = lambda0, range[1] = lambda1;
  boundsStream.point = boundsPoint;
  p0 = null;
}

function boundsRingPoint(lambda, phi) {
  if (p0) {
    var delta = lambda - lambda2;
    deltaSum.add((0, _math.abs)(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
  } else {
    lambda00 = lambda, phi00 = phi;
  }

  _area.areaStream.point(lambda, phi);

  linePoint(lambda, phi);
}

function boundsRingStart() {
  _area.areaStream.lineStart();
}

function boundsRingEnd() {
  boundsRingPoint(lambda00, phi00);

  _area.areaStream.lineEnd();

  if ((0, _math.abs)(deltaSum) > _math.epsilon) lambda0 = -(lambda1 = 180);
  range[0] = lambda0, range[1] = lambda1;
  p0 = null;
} // Finds the left-right distance between two longitudes.
// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
// the distance between ±180° to be 360°.


function angle(lambda0, lambda1) {
  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
}

function rangeCompare(a, b) {
  return a[0] - b[0];
}

function rangeContains(range, x) {
  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
}

function _default(feature) {
  var i, n, a, b, merged, deltaMax, delta;
  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);
  ranges = [];
  (0, _stream.default)(feature, boundsStream); // First, sort ranges by their minimum longitudes.

  if (n = ranges.length) {
    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.

    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
      b = ranges[i];

      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
      } else {
        merged.push(a = b);
      }
    } // Finally, find the largest gap between the merged ranges.
    // The final bounding box will be the inverse of this gap.


    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
      b = merged[i];
      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];
    }
  }

  ranges = range = null;
  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];
}
},{"./adder.js":"../node_modules/d3-geo/src/adder.js","./area.js":"../node_modules/d3-geo/src/area.js","./cartesian.js":"../node_modules/d3-geo/src/cartesian.js","./math.js":"../node_modules/d3-geo/src/math.js","./stream.js":"../node_modules/d3-geo/src/stream.js"}],"../node_modules/d3-geo/src/centroid.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point
x0, y0, z0; // previous point

var centroidStream = {
  sphere: _noop.default,
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function () {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function () {
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  }
}; // Arithmetic mean of Cartesian vectors.

function centroidPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi);
  centroidPointCartesian(cosPhi * (0, _math.cos)(lambda), cosPhi * (0, _math.sin)(lambda), (0, _math.sin)(phi));
}

function centroidPointCartesian(x, y, z) {
  ++W0;
  X0 += (x - X0) / W0;
  Y0 += (y - Y0) / W0;
  Z0 += (z - Z0) / W0;
}

function centroidLineStart() {
  centroidStream.point = centroidLinePointFirst;
}

function centroidLinePointFirst(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi);
  x0 = cosPhi * (0, _math.cos)(lambda);
  y0 = cosPhi * (0, _math.sin)(lambda);
  z0 = (0, _math.sin)(phi);
  centroidStream.point = centroidLinePoint;
  centroidPointCartesian(x0, y0, z0);
}

function centroidLinePoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi),
      x = cosPhi * (0, _math.cos)(lambda),
      y = cosPhi * (0, _math.sin)(lambda),
      z = (0, _math.sin)(phi),
      w = (0, _math.atan2)((0, _math.sqrt)((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
// J. Applied Mechanics 42, 239 (1975).


function centroidRingStart() {
  centroidStream.point = centroidRingPointFirst;
}

function centroidRingEnd() {
  centroidRingPoint(lambda00, phi00);
  centroidStream.point = centroidPoint;
}

function centroidRingPointFirst(lambda, phi) {
  lambda00 = lambda, phi00 = phi;
  lambda *= _math.radians, phi *= _math.radians;
  centroidStream.point = centroidRingPoint;
  var cosPhi = (0, _math.cos)(phi);
  x0 = cosPhi * (0, _math.cos)(lambda);
  y0 = cosPhi * (0, _math.sin)(lambda);
  z0 = (0, _math.sin)(phi);
  centroidPointCartesian(x0, y0, z0);
}

function centroidRingPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi),
      x = cosPhi * (0, _math.cos)(lambda),
      y = cosPhi * (0, _math.sin)(lambda),
      z = (0, _math.sin)(phi),
      cx = y0 * z - z0 * y,
      cy = z0 * x - x0 * z,
      cz = x0 * y - y0 * x,
      m = (0, _math.sqrt)(cx * cx + cy * cy + cz * cz),
      w = (0, _math.asin)(m),
      // line weight = angle
  v = m && -w / m; // area weight multiplier

  X2 += v * cx;
  Y2 += v * cy;
  Z2 += v * cz;
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function _default(object) {
  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
  (0, _stream.default)(object, centroidStream);
  var x = X2,
      y = Y2,
      z = Z2,
      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.

  if (m < _math.epsilon2) {
    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.

    if (W1 < _math.epsilon) x = X0, y = Y0, z = Z0;
    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.

    if (m < _math.epsilon2) return [NaN, NaN];
  }

  return [(0, _math.atan2)(y, x) * _math.degrees, (0, _math.asin)(z / (0, _math.sqrt)(m)) * _math.degrees];
}
},{"./math.js":"../node_modules/d3-geo/src/math.js","./noop.js":"../node_modules/d3-geo/src/noop.js","./stream.js":"../node_modules/d3-geo/src/stream.js"}],"../node_modules/d3-geo/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../node_modules/d3-geo/src/compose.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  function compose(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }

  if (a.invert && b.invert) compose.invert = function (x, y) {
    return x = b.invert(x, y), x && a.invert(x[0], x[1]);
  };
  return compose;
}
},{}],"../node_modules/d3-geo/src/rotation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rotateRadians = rotateRadians;
exports.default = _default;

var _compose = _interopRequireDefault(require("./compose.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function rotationIdentity(lambda, phi) {
  return [(0, _math.abs)(lambda) > _math.pi ? lambda + Math.round(-lambda / _math.tau) * _math.tau : lambda, phi];
}

rotationIdentity.invert = rotationIdentity;

function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= _math.tau) ? deltaPhi || deltaGamma ? (0, _compose.default)(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;
}

function forwardRotationLambda(deltaLambda) {
  return function (lambda, phi) {
    return lambda += deltaLambda, [lambda > _math.pi ? lambda - _math.tau : lambda < -_math.pi ? lambda + _math.tau : lambda, phi];
  };
}

function rotationLambda(deltaLambda) {
  var rotation = forwardRotationLambda(deltaLambda);
  rotation.invert = forwardRotationLambda(-deltaLambda);
  return rotation;
}

function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = (0, _math.cos)(deltaPhi),
      sinDeltaPhi = (0, _math.sin)(deltaPhi),
      cosDeltaGamma = (0, _math.cos)(deltaGamma),
      sinDeltaGamma = (0, _math.sin)(deltaGamma);

  function rotation(lambda, phi) {
    var cosPhi = (0, _math.cos)(phi),
        x = (0, _math.cos)(lambda) * cosPhi,
        y = (0, _math.sin)(lambda) * cosPhi,
        z = (0, _math.sin)(phi),
        k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [(0, _math.atan2)(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), (0, _math.asin)(k * cosDeltaGamma + y * sinDeltaGamma)];
  }

  rotation.invert = function (lambda, phi) {
    var cosPhi = (0, _math.cos)(phi),
        x = (0, _math.cos)(lambda) * cosPhi,
        y = (0, _math.sin)(lambda) * cosPhi,
        z = (0, _math.sin)(phi),
        k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [(0, _math.atan2)(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), (0, _math.asin)(k * cosDeltaPhi - x * sinDeltaPhi)];
  };

  return rotation;
}

function _default(rotate) {
  rotate = rotateRadians(rotate[0] * _math.radians, rotate[1] * _math.radians, rotate.length > 2 ? rotate[2] * _math.radians : 0);

  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * _math.radians, coordinates[1] * _math.radians);
    return coordinates[0] *= _math.degrees, coordinates[1] *= _math.degrees, coordinates;
  }

  forward.invert = function (coordinates) {
    coordinates = rotate.invert(coordinates[0] * _math.radians, coordinates[1] * _math.radians);
    return coordinates[0] *= _math.degrees, coordinates[1] *= _math.degrees, coordinates;
  };

  return forward;
}
},{"./compose.js":"../node_modules/d3-geo/src/compose.js","./math.js":"../node_modules/d3-geo/src/math.js"}],"../node_modules/d3-geo/src/circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circleStream = circleStream;
exports.default = _default;

var _cartesian = require("./cartesian.js");

var _constant = _interopRequireDefault(require("./constant.js"));

var _math = require("./math.js");

var _rotation = require("./rotation.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Generates a circle centered at [0°, 0°], with a given radius and precision.
function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta) return;
  var cosRadius = (0, _math.cos)(radius),
      sinRadius = (0, _math.sin)(radius),
      step = direction * delta;

  if (t0 == null) {
    t0 = radius + direction * _math.tau;
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * _math.tau;
  }

  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = (0, _cartesian.spherical)([cosRadius, -sinRadius * (0, _math.cos)(t), -sinRadius * (0, _math.sin)(t)]);
    stream.point(point[0], point[1]);
  }
} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].


function circleRadius(cosRadius, point) {
  point = (0, _cartesian.cartesian)(point), point[0] -= cosRadius;
  (0, _cartesian.cartesianNormalizeInPlace)(point);
  var radius = (0, _math.acos)(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + _math.tau - _math.epsilon) % _math.tau;
}

function _default() {
  var center = (0, _constant.default)([0, 0]),
      radius = (0, _constant.default)(90),
      precision = (0, _constant.default)(6),
      ring,
      rotate,
      stream = {
    point: point
  };

  function point(x, y) {
    ring.push(x = rotate(x, y));
    x[0] *= _math.degrees, x[1] *= _math.degrees;
  }

  function circle() {
    var c = center.apply(this, arguments),
        r = radius.apply(this, arguments) * _math.radians,
        p = precision.apply(this, arguments) * _math.radians;

    ring = [];
    rotate = (0, _rotation.rotateRadians)(-c[0] * _math.radians, -c[1] * _math.radians, 0).invert;
    circleStream(stream, r, p, 1);
    c = {
      type: "Polygon",
      coordinates: [ring]
    };
    ring = rotate = null;
    return c;
  }

  circle.center = function (_) {
    return arguments.length ? (center = typeof _ === "function" ? _ : (0, _constant.default)([+_[0], +_[1]]), circle) : center;
  };

  circle.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), circle) : radius;
  };

  circle.precision = function (_) {
    return arguments.length ? (precision = typeof _ === "function" ? _ : (0, _constant.default)(+_), circle) : precision;
  };

  return circle;
}
},{"./cartesian.js":"../node_modules/d3-geo/src/cartesian.js","./constant.js":"../node_modules/d3-geo/src/constant.js","./math.js":"../node_modules/d3-geo/src/math.js","./rotation.js":"../node_modules/d3-geo/src/rotation.js"}],"../node_modules/d3-geo/src/clip/buffer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var lines = [],
      line;
  return {
    point: function (x, y) {
      line.push([x, y]);
    },
    lineStart: function () {
      lines.push(line = []);
    },
    lineEnd: _noop.default,
    rejoin: function () {
      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
    },
    result: function () {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
}
},{"../noop.js":"../node_modules/d3-geo/src/noop.js"}],"../node_modules/d3-geo/src/pointEqual.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math.js");

function _default(a, b) {
  return (0, _math.abs)(a[0] - b[0]) < _math.epsilon && (0, _math.abs)(a[1] - b[1]) < _math.epsilon;
}
},{"./math.js":"../node_modules/d3-geo/src/math.js"}],"../node_modules/d3-geo/src/clip/rejoin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _pointEqual = _interopRequireDefault(require("../pointEqual.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other; // another intersection

  this.e = entry; // is an entry?

  this.v = false; // visited

  this.n = this.p = null; // next & previous
} // A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.


function _default(segments, compareIntersection, startInside, interpolate, stream) {
  var subject = [],
      clip = [],
      i,
      n;
  segments.forEach(function (segment) {
    if ((n = segment.length - 1) <= 0) return;
    var n,
        p0 = segment[0],
        p1 = segment[n],
        x; // If the first and last points of a segment are coincident, then treat as a
    // closed ring. TODO if all rings are closed, then the winding order of the
    // exterior ring should be checked.

    if ((0, _pointEqual.default)(p0, p1)) {
      stream.lineStart();

      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);

      stream.lineEnd();
      return;
    }

    subject.push(x = new Intersection(p0, segment, null, true));
    clip.push(x.o = new Intersection(p0, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip.push(x.o = new Intersection(p1, null, x, true));
  });
  if (!subject.length) return;
  clip.sort(compareIntersection);
  link(subject);
  link(clip);

  for (i = 0, n = clip.length; i < n; ++i) {
    clip[i].e = startInside = !startInside;
  }

  var start = subject[0],
      points,
      point;

  while (1) {
    // Find first unvisited intersection.
    var current = start,
        isSubject = true;

    while (current.v) if ((current = current.n) === start) return;

    points = current.z;
    stream.lineStart();

    do {
      current.v = current.o.v = true;

      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.n.x, 1, stream);
        }

        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;

          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.p.x, -1, stream);
        }

        current = current.p;
      }

      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);

    stream.lineEnd();
  }
}

function link(array) {
  if (!(n = array.length)) return;
  var n,
      i = 0,
      a = array[0],
      b;

  while (++i < n) {
    a.n = b = array[i];
    b.p = a;
    a = b;
  }

  a.n = b = array[0];
  b.p = a;
}
},{"../pointEqual.js":"../node_modules/d3-geo/src/pointEqual.js"}],"../node_modules/d3-geo/src/polygonContains.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder.js"));

var _cartesian = require("./cartesian.js");

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var sum = (0, _adder.default)();

function longitude(point) {
  if ((0, _math.abs)(point[0]) <= _math.pi) return point[0];else return (0, _math.sign)(point[0]) * (((0, _math.abs)(point[0]) + _math.pi) % _math.tau - _math.pi);
}

function _default(polygon, point) {
  var lambda = longitude(point),
      phi = point[1],
      sinPhi = (0, _math.sin)(phi),
      normal = [(0, _math.sin)(lambda), -(0, _math.cos)(lambda), 0],
      angle = 0,
      winding = 0;
  sum.reset();
  if (sinPhi === 1) phi = _math.halfPi + _math.epsilon;else if (sinPhi === -1) phi = -_math.halfPi - _math.epsilon;

  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length)) continue;
    var ring,
        m,
        point0 = ring[m - 1],
        lambda0 = longitude(point0),
        phi0 = point0[1] / 2 + _math.quarterPi,
        sinPhi0 = (0, _math.sin)(phi0),
        cosPhi0 = (0, _math.cos)(phi0);

    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j],
          lambda1 = longitude(point1),
          phi1 = point1[1] / 2 + _math.quarterPi,
          sinPhi1 = (0, _math.sin)(phi1),
          cosPhi1 = (0, _math.cos)(phi1),
          delta = lambda1 - lambda0,
          sign = delta >= 0 ? 1 : -1,
          absDelta = sign * delta,
          antimeridian = absDelta > _math.pi,
          k = sinPhi0 * sinPhi1;
      sum.add((0, _math.atan2)(k * sign * (0, _math.sin)(absDelta), cosPhi0 * cosPhi1 + k * (0, _math.cos)(absDelta)));
      angle += antimeridian ? delta + sign * _math.tau : delta; // Are the longitudes either side of the point’s meridian (lambda),
      // and are the latitudes smaller than the parallel (phi)?

      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = (0, _cartesian.cartesianCross)((0, _cartesian.cartesian)(point0), (0, _cartesian.cartesian)(point1));
        (0, _cartesian.cartesianNormalizeInPlace)(arc);
        var intersection = (0, _cartesian.cartesianCross)(normal, arc);
        (0, _cartesian.cartesianNormalizeInPlace)(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * (0, _math.asin)(intersection[2]);

        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  } // First, determine whether the South pole is inside or outside:
  //
  // It is inside if:
  // * the polygon winds around it in a clockwise direction.
  // * the polygon does not (cumulatively) wind around it, but has a negative
  //   (counter-clockwise) area.
  //
  // Second, count the (signed) number of times a segment crosses a lambda
  // from the point to the South pole.  If it is zero, then the point is the
  // same side as the South pole.


  return (angle < -_math.epsilon || angle < _math.epsilon && sum < -_math.epsilon) ^ winding & 1;
}
},{"./adder.js":"../node_modules/d3-geo/src/adder.js","./cartesian.js":"../node_modules/d3-geo/src/cartesian.js","./math.js":"../node_modules/d3-geo/src/math.js"}],"../node_modules/d3-geo/src/clip/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _buffer = _interopRequireDefault(require("./buffer.js"));

var _rejoin = _interopRequireDefault(require("./rejoin.js"));

var _math = require("../math.js");

var _polygonContains = _interopRequireDefault(require("../polygonContains.js"));

var _d3Array = require("d3-array");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(pointVisible, clipLine, interpolate, start) {
  return function (sink) {
    var line = clipLine(sink),
        ringBuffer = (0, _buffer.default)(),
        ringSink = clipLine(ringBuffer),
        polygonStarted = false,
        polygon,
        segments,
        ring;
    var clip = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function () {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function () {
        clip.point = point;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = (0, _d3Array.merge)(segments);
        var startInside = (0, _polygonContains.default)(polygon, start);

        if (segments.length) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          (0, _rejoin.default)(segments, compareIntersection, startInside, interpolate, sink);
        } else if (startInside) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate(null, null, 1, sink);
          sink.lineEnd();
        }

        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function () {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };

    function point(lambda, phi) {
      if (pointVisible(lambda, phi)) sink.point(lambda, phi);
    }

    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }

    function lineStart() {
      clip.point = pointLine;
      line.lineStart();
    }

    function lineEnd() {
      clip.point = point;
      line.lineEnd();
    }

    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }

    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }

    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();
      var clean = ringSink.clean(),
          ringSegments = ringBuffer.result(),
          i,
          n = ringSegments.length,
          m,
          segment,
          point;
      ring.pop();
      polygon.push(ring);
      ring = null;
      if (!n) return; // No intersections.

      if (clean & 1) {
        segment = ringSegments[0];

        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();

          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);

          sink.lineEnd();
        }

        return;
      } // Rejoin connected segments.
      // TODO reuse ringBuffer.rejoin()?


      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
      segments.push(ringSegments.filter(validSegment));
    }

    return clip;
  };
}

function validSegment(segment) {
  return segment.length > 1;
} // Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.


function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - _math.halfPi - _math.epsilon : _math.halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - _math.halfPi - _math.epsilon : _math.halfPi - b[1]);
}
},{"./buffer.js":"../node_modules/d3-geo/src/clip/buffer.js","./rejoin.js":"../node_modules/d3-geo/src/clip/rejoin.js","../math.js":"../node_modules/d3-geo/src/math.js","../polygonContains.js":"../node_modules/d3-geo/src/polygonContains.js","d3-array":"../node_modules/d3-array/src/index.js"}],"../node_modules/d3-geo/src/clip/antimeridian.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _index.default)(function () {
  return true;
}, clipAntimeridianLine, clipAntimeridianInterpolate, [-_math.pi, -_math.halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.


exports.default = _default;

function clipAntimeridianLine(stream) {
  var lambda0 = NaN,
      phi0 = NaN,
      sign0 = NaN,
      clean; // no intersections

  return {
    lineStart: function () {
      stream.lineStart();
      clean = 1;
    },
    point: function (lambda1, phi1) {
      var sign1 = lambda1 > 0 ? _math.pi : -_math.pi,
          delta = (0, _math.abs)(lambda1 - lambda0);

      if ((0, _math.abs)(delta - _math.pi) < _math.epsilon) {
        // line crosses a pole
        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? _math.halfPi : -_math.halfPi);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        stream.point(lambda1, phi0);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= _math.pi) {
        // line crosses antimeridian
        if ((0, _math.abs)(lambda0 - sign0) < _math.epsilon) lambda0 -= sign0 * _math.epsilon; // handle degeneracies

        if ((0, _math.abs)(lambda1 - sign1) < _math.epsilon) lambda1 -= sign1 * _math.epsilon;
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        clean = 0;
      }

      stream.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function () {
      stream.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function () {
      return 2 - clean; // if intersections, rejoin first and last segments
    }
  };
}

function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0,
      cosPhi1,
      sinLambda0Lambda1 = (0, _math.sin)(lambda0 - lambda1);
  return (0, _math.abs)(sinLambda0Lambda1) > _math.epsilon ? (0, _math.atan)(((0, _math.sin)(phi0) * (cosPhi1 = (0, _math.cos)(phi1)) * (0, _math.sin)(lambda1) - (0, _math.sin)(phi1) * (cosPhi0 = (0, _math.cos)(phi0)) * (0, _math.sin)(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;
}

function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;

  if (from == null) {
    phi = direction * _math.halfPi;
    stream.point(-_math.pi, phi);
    stream.point(0, phi);
    stream.point(_math.pi, phi);
    stream.point(_math.pi, 0);
    stream.point(_math.pi, -phi);
    stream.point(0, -phi);
    stream.point(-_math.pi, -phi);
    stream.point(-_math.pi, 0);
    stream.point(-_math.pi, phi);
  } else if ((0, _math.abs)(from[0] - to[0]) > _math.epsilon) {
    var lambda = from[0] < to[0] ? _math.pi : -_math.pi;
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}
},{"./index.js":"../node_modules/d3-geo/src/clip/index.js","../math.js":"../node_modules/d3-geo/src/math.js"}],"../node_modules/d3-geo/src/clip/circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cartesian = require("../cartesian.js");

var _circle = require("../circle.js");

var _math = require("../math.js");

var _pointEqual = _interopRequireDefault(require("../pointEqual.js"));

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(radius) {
  var cr = (0, _math.cos)(radius),
      delta = 6 * _math.radians,
      smallRadius = cr > 0,
      notHemisphere = (0, _math.abs)(cr) > _math.epsilon; // TODO optimise for this common case


  function interpolate(from, to, direction, stream) {
    (0, _circle.circleStream)(stream, radius, delta, direction, from, to);
  }

  function visible(lambda, phi) {
    return (0, _math.cos)(lambda) * (0, _math.cos)(phi) > cr;
  } // Takes a line and cuts into visible segments. Return values used for polygon
  // clipping: 0 - there were intersections or the line was empty; 1 - no
  // intersections 2 - there were intersections, and the first and last segments
  // should be rejoined.


  function clipLine(stream) {
    var point0, // previous point
    c0, // code for previous point
    v0, // visibility of previous point
    v00, // visibility of first point
    clean; // no intersections

    return {
      lineStart: function () {
        v00 = v0 = false;
        clean = 1;
      },
      point: function (lambda, phi) {
        var point1 = [lambda, phi],
            point2,
            v = visible(lambda, phi),
            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? _math.pi : -_math.pi), phi) : 0;
        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.
        // TODO ignore if not clipping polygons.

        if (v !== v0) {
          point2 = intersect(point0, point1);

          if (!point2 || (0, _pointEqual.default)(point0, point2) || (0, _pointEqual.default)(point1, point2)) {
            point1[0] += _math.epsilon;
            point1[1] += _math.epsilon;
            v = visible(point1[0], point1[1]);
          }
        }

        if (v !== v0) {
          clean = 0;

          if (v) {
            // outside going in
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            // inside going out
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1]);
            stream.lineEnd();
          }

          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t; // If the codes for two points are different, or are both zero,
          // and there this segment intersects with the small circle.

          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            clean = 0;

            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
            }
          }
        }

        if (v && (!point0 || !(0, _pointEqual.default)(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }

        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function () {
        if (v0) stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function () {
        return clean | (v00 && v0) << 1;
      }
    };
  } // Intersects the great circle between a and b with the clip circle.


  function intersect(a, b, two) {
    var pa = (0, _cartesian.cartesian)(a),
        pb = (0, _cartesian.cartesian)(b); // We have two planes, n1.p = d1 and n2.p = d2.
    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).

    var n1 = [1, 0, 0],
        // normal
    n2 = (0, _cartesian.cartesianCross)(pa, pb),
        n2n2 = (0, _cartesian.cartesianDot)(n2, n2),
        n1n2 = n2[0],
        // cartesianDot(n1, n2),
    determinant = n2n2 - n1n2 * n1n2; // Two polar points.

    if (!determinant) return !two && a;
    var c1 = cr * n2n2 / determinant,
        c2 = -cr * n1n2 / determinant,
        n1xn2 = (0, _cartesian.cartesianCross)(n1, n2),
        A = (0, _cartesian.cartesianScale)(n1, c1),
        B = (0, _cartesian.cartesianScale)(n2, c2);
    (0, _cartesian.cartesianAddInPlace)(A, B); // Solve |p(t)|^2 = 1.

    var u = n1xn2,
        w = (0, _cartesian.cartesianDot)(A, u),
        uu = (0, _cartesian.cartesianDot)(u, u),
        t2 = w * w - uu * ((0, _cartesian.cartesianDot)(A, A) - 1);
    if (t2 < 0) return;
    var t = (0, _math.sqrt)(t2),
        q = (0, _cartesian.cartesianScale)(u, (-w - t) / uu);
    (0, _cartesian.cartesianAddInPlace)(q, A);
    q = (0, _cartesian.spherical)(q);
    if (!two) return q; // Two intersection points.

    var lambda0 = a[0],
        lambda1 = b[0],
        phi0 = a[1],
        phi1 = b[1],
        z;
    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;

    var delta = lambda1 - lambda0,
        polar = (0, _math.abs)(delta - _math.pi) < _math.epsilon,
        meridian = polar || delta < _math.epsilon;

    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.

    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < ((0, _math.abs)(q[0] - lambda0) < _math.epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > _math.pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
      var q1 = (0, _cartesian.cartesianScale)(u, (-w + t) / uu);
      (0, _cartesian.cartesianAddInPlace)(q1, A);
      return [q, (0, _cartesian.spherical)(q1)];
    }
  } // Generates a 4-bit vector representing the location of a point relative to
  // the small circle's bounding box.


  function code(lambda, phi) {
    var r = smallRadius ? radius : _math.pi - radius,
        code = 0;
    if (lambda < -r) code |= 1; // left
    else if (lambda > r) code |= 2; // right

    if (phi < -r) code |= 4; // below
    else if (phi > r) code |= 8; // above

    return code;
  }

  return (0, _index.default)(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-_math.pi, radius - _math.pi]);
}
},{"../cartesian.js":"../node_modules/d3-geo/src/cartesian.js","../circle.js":"../node_modules/d3-geo/src/circle.js","../math.js":"../node_modules/d3-geo/src/math.js","../pointEqual.js":"../node_modules/d3-geo/src/pointEqual.js","./index.js":"../node_modules/d3-geo/src/clip/index.js"}],"../node_modules/d3-geo/src/clip/line.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b, x0, y0, x1, y1) {
  var ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
}
},{}],"../node_modules/d3-geo/src/clip/rectangle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = clipRectangle;

var _math = require("../math.js");

var _buffer = _interopRequireDefault(require("./buffer.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _rejoin = _interopRequireDefault(require("./rejoin.js"));

var _d3Array = require("d3-array");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var clipMax = 1e9,
    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

function clipRectangle(x0, y0, x1, y1) {
  function visible(x, y) {
    return x0 <= x && x <= x1 && y0 <= y && y <= y1;
  }

  function interpolate(from, to, direction, stream) {
    var a = 0,
        a1 = 0;

    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {
      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0); while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }

  function corner(p, direction) {
    return (0, _math.abs)(p[0] - x0) < _math.epsilon ? direction > 0 ? 0 : 3 : (0, _math.abs)(p[0] - x1) < _math.epsilon ? direction > 0 ? 2 : 1 : (0, _math.abs)(p[1] - y0) < _math.epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
  }

  function compareIntersection(a, b) {
    return comparePoint(a.x, b.x);
  }

  function comparePoint(a, b) {
    var ca = corner(a, 1),
        cb = corner(b, 1);
    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
  }

  return function (stream) {
    var activeStream = stream,
        bufferStream = (0, _buffer.default)(),
        segments,
        polygon,
        ring,
        x__,
        y__,
        v__,
        // first point
    x_,
        y_,
        v_,
        // previous point
    first,
        clean;
    var clipStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: polygonStart,
      polygonEnd: polygonEnd
    };

    function point(x, y) {
      if (visible(x, y)) activeStream.point(x, y);
    }

    function polygonInside() {
      var winding = 0;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];

          if (a1 <= y1) {
            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;
          } else {
            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;
          }
        }
      }

      return winding;
    } // Buffer geometry within a polygon and then clip it en masse.


    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }

    function polygonEnd() {
      var startInside = polygonInside(),
          cleanInside = clean && startInside,
          visible = (segments = (0, _d3Array.merge)(segments)).length;

      if (cleanInside || visible) {
        stream.polygonStart();

        if (cleanInside) {
          stream.lineStart();
          interpolate(null, null, 1, stream);
          stream.lineEnd();
        }

        if (visible) {
          (0, _rejoin.default)(segments, compareIntersection, startInside, interpolate, stream);
        }

        stream.polygonEnd();
      }

      activeStream = stream, segments = polygon = ring = null;
    }

    function lineStart() {
      clipStream.point = linePoint;
      if (polygon) polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    } // TODO rather than special-case polygons, simply handle them separately.
    // Ideally, coincident intersection points should be jittered to avoid
    // clipping issues.


    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_) bufferStream.rejoin();
        segments.push(bufferStream.result());
      }

      clipStream.point = point;
      if (v_) activeStream.lineEnd();
    }

    function linePoint(x, y) {
      var v = visible(x, y);
      if (polygon) ring.push([x, y]);

      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;

        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_) activeStream.point(x, y);else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];

          if ((0, _line.default)(a, b, x0, y0, x1, y1)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }

            activeStream.point(b[0], b[1]);
            if (!v) activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }

      x_ = x, y_ = y, v_ = v;
    }

    return clipStream;
  };
}
},{"../math.js":"../node_modules/d3-geo/src/math.js","./buffer.js":"../node_modules/d3-geo/src/clip/buffer.js","./line.js":"../node_modules/d3-geo/src/clip/line.js","./rejoin.js":"../node_modules/d3-geo/src/clip/rejoin.js","d3-array":"../node_modules/d3-array/src/index.js"}],"../node_modules/d3-geo/src/clip/extent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _rectangle = _interopRequireDefault(require("./rectangle.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x0 = 0,
      y0 = 0,
      x1 = 960,
      y1 = 500,
      cache,
      cacheStream,
      clip;
  return clip = {
    stream: function (stream) {
      return cache && cacheStream === stream ? cache : cache = (0, _rectangle.default)(x0, y0, x1, y1)(cacheStream = stream);
    },
    extent: function (_) {
      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
    }
  };
}
},{"./rectangle.js":"../node_modules/d3-geo/src/clip/rectangle.js"}],"../node_modules/d3-geo/src/length.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder.js"));

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lengthSum = (0, _adder.default)(),
    lambda0,
    sinPhi0,
    cosPhi0;
var lengthStream = {
  sphere: _noop.default,
  point: _noop.default,
  lineStart: lengthLineStart,
  lineEnd: _noop.default,
  polygonStart: _noop.default,
  polygonEnd: _noop.default
};

function lengthLineStart() {
  lengthStream.point = lengthPointFirst;
  lengthStream.lineEnd = lengthLineEnd;
}

function lengthLineEnd() {
  lengthStream.point = lengthStream.lineEnd = _noop.default;
}

function lengthPointFirst(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  lambda0 = lambda, sinPhi0 = (0, _math.sin)(phi), cosPhi0 = (0, _math.cos)(phi);
  lengthStream.point = lengthPoint;
}

function lengthPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var sinPhi = (0, _math.sin)(phi),
      cosPhi = (0, _math.cos)(phi),
      delta = (0, _math.abs)(lambda - lambda0),
      cosDelta = (0, _math.cos)(delta),
      sinDelta = (0, _math.sin)(delta),
      x = cosPhi * sinDelta,
      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,
      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
  lengthSum.add((0, _math.atan2)((0, _math.sqrt)(x * x + y * y), z));
  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
}

function _default(object) {
  lengthSum.reset();
  (0, _stream.default)(object, lengthStream);
  return +lengthSum;
}
},{"./adder.js":"../node_modules/d3-geo/src/adder.js","./math.js":"../node_modules/d3-geo/src/math.js","./noop.js":"../node_modules/d3-geo/src/noop.js","./stream.js":"../node_modules/d3-geo/src/stream.js"}],"../node_modules/d3-geo/src/distance.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _length = _interopRequireDefault(require("./length.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var coordinates = [null, null],
    object = {
  type: "LineString",
  coordinates: coordinates
};

function _default(a, b) {
  coordinates[0] = a;
  coordinates[1] = b;
  return (0, _length.default)(object);
}
},{"./length.js":"../node_modules/d3-geo/src/length.js"}],"../node_modules/d3-geo/src/contains.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _polygonContains = _interopRequireDefault(require("./polygonContains.js"));

var _distance = _interopRequireDefault(require("./distance.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var containsObjectType = {
  Feature: function (object, point) {
    return containsGeometry(object.geometry, point);
  },
  FeatureCollection: function (object, point) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;

    return false;
  }
};
var containsGeometryType = {
  Sphere: function () {
    return true;
  },
  Point: function (object, point) {
    return containsPoint(object.coordinates, point);
  },
  MultiPoint: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsPoint(coordinates[i], point)) return true;

    return false;
  },
  LineString: function (object, point) {
    return containsLine(object.coordinates, point);
  },
  MultiLineString: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsLine(coordinates[i], point)) return true;

    return false;
  },
  Polygon: function (object, point) {
    return containsPolygon(object.coordinates, point);
  },
  MultiPolygon: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;

    return false;
  },
  GeometryCollection: function (object, point) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) if (containsGeometry(geometries[i], point)) return true;

    return false;
  }
};

function containsGeometry(geometry, point) {
  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;
}

function containsPoint(coordinates, point) {
  return (0, _distance.default)(coordinates, point) === 0;
}

function containsLine(coordinates, point) {
  var ao, bo, ab;

  for (var i = 0, n = coordinates.length; i < n; i++) {
    bo = (0, _distance.default)(coordinates[i], point);
    if (bo === 0) return true;

    if (i > 0) {
      ab = (0, _distance.default)(coordinates[i], coordinates[i - 1]);
      if (ab > 0 && ao <= ab && bo <= ab && (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < _math.epsilon2 * ab) return true;
    }

    ao = bo;
  }

  return false;
}

function containsPolygon(coordinates, point) {
  return !!(0, _polygonContains.default)(coordinates.map(ringRadians), pointRadians(point));
}

function ringRadians(ring) {
  return ring = ring.map(pointRadians), ring.pop(), ring;
}

function pointRadians(point) {
  return [point[0] * _math.radians, point[1] * _math.radians];
}

function _default(object, point) {
  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);
}
},{"./polygonContains.js":"../node_modules/d3-geo/src/polygonContains.js","./distance.js":"../node_modules/d3-geo/src/distance.js","./math.js":"../node_modules/d3-geo/src/math.js"}],"../node_modules/d3-geo/src/graticule.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = graticule;
exports.graticule10 = graticule10;

var _d3Array = require("d3-array");

var _math = require("./math.js");

function graticuleX(y0, y1, dy) {
  var y = (0, _d3Array.range)(y0, y1 - _math.epsilon, dy).concat(y1);
  return function (x) {
    return y.map(function (y) {
      return [x, y];
    });
  };
}

function graticuleY(x0, x1, dx) {
  var x = (0, _d3Array.range)(x0, x1 - _math.epsilon, dx).concat(x1);
  return function (y) {
    return x.map(function (x) {
      return [x, y];
    });
  };
}

function graticule() {
  var x1,
      x0,
      X1,
      X0,
      y1,
      y0,
      Y1,
      Y0,
      dx = 10,
      dy = dx,
      DX = 90,
      DY = 360,
      x,
      y,
      X,
      Y,
      precision = 2.5;

  function graticule() {
    return {
      type: "MultiLineString",
      coordinates: lines()
    };
  }

  function lines() {
    return (0, _d3Array.range)((0, _math.ceil)(X0 / DX) * DX, X1, DX).map(X).concat((0, _d3Array.range)((0, _math.ceil)(Y0 / DY) * DY, Y1, DY).map(Y)).concat((0, _d3Array.range)((0, _math.ceil)(x0 / dx) * dx, x1, dx).filter(function (x) {
      return (0, _math.abs)(x % DX) > _math.epsilon;
    }).map(x)).concat((0, _d3Array.range)((0, _math.ceil)(y0 / dy) * dy, y1, dy).filter(function (y) {
      return (0, _math.abs)(y % DY) > _math.epsilon;
    }).map(y));
  }

  graticule.lines = function () {
    return lines().map(function (coordinates) {
      return {
        type: "LineString",
        coordinates: coordinates
      };
    });
  };

  graticule.outline = function () {
    return {
      type: "Polygon",
      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]
    };
  };

  graticule.extent = function (_) {
    if (!arguments.length) return graticule.extentMinor();
    return graticule.extentMajor(_).extentMinor(_);
  };

  graticule.extentMajor = function (_) {
    if (!arguments.length) return [[X0, Y0], [X1, Y1]];
    X0 = +_[0][0], X1 = +_[1][0];
    Y0 = +_[0][1], Y1 = +_[1][1];
    if (X0 > X1) _ = X0, X0 = X1, X1 = _;
    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
    return graticule.precision(precision);
  };

  graticule.extentMinor = function (_) {
    if (!arguments.length) return [[x0, y0], [x1, y1]];
    x0 = +_[0][0], x1 = +_[1][0];
    y0 = +_[0][1], y1 = +_[1][1];
    if (x0 > x1) _ = x0, x0 = x1, x1 = _;
    if (y0 > y1) _ = y0, y0 = y1, y1 = _;
    return graticule.precision(precision);
  };

  graticule.step = function (_) {
    if (!arguments.length) return graticule.stepMinor();
    return graticule.stepMajor(_).stepMinor(_);
  };

  graticule.stepMajor = function (_) {
    if (!arguments.length) return [DX, DY];
    DX = +_[0], DY = +_[1];
    return graticule;
  };

  graticule.stepMinor = function (_) {
    if (!arguments.length) return [dx, dy];
    dx = +_[0], dy = +_[1];
    return graticule;
  };

  graticule.precision = function (_) {
    if (!arguments.length) return precision;
    precision = +_;
    x = graticuleX(y0, y1, 90);
    y = graticuleY(x0, x1, precision);
    X = graticuleX(Y0, Y1, 90);
    Y = graticuleY(X0, X1, precision);
    return graticule;
  };

  return graticule.extentMajor([[-180, -90 + _math.epsilon], [180, 90 - _math.epsilon]]).extentMinor([[-180, -80 - _math.epsilon], [180, 80 + _math.epsilon]]);
}

function graticule10() {
  return graticule()();
}
},{"d3-array":"../node_modules/d3-array/src/index.js","./math.js":"../node_modules/d3-geo/src/math.js"}],"../node_modules/d3-geo/src/interpolate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math.js");

function _default(a, b) {
  var x0 = a[0] * _math.radians,
      y0 = a[1] * _math.radians,
      x1 = b[0] * _math.radians,
      y1 = b[1] * _math.radians,
      cy0 = (0, _math.cos)(y0),
      sy0 = (0, _math.sin)(y0),
      cy1 = (0, _math.cos)(y1),
      sy1 = (0, _math.sin)(y1),
      kx0 = cy0 * (0, _math.cos)(x0),
      ky0 = cy0 * (0, _math.sin)(x0),
      kx1 = cy1 * (0, _math.cos)(x1),
      ky1 = cy1 * (0, _math.sin)(x1),
      d = 2 * (0, _math.asin)((0, _math.sqrt)((0, _math.haversin)(y1 - y0) + cy0 * cy1 * (0, _math.haversin)(x1 - x0))),
      k = (0, _math.sin)(d);
  var interpolate = d ? function (t) {
    var B = (0, _math.sin)(t *= d) / k,
        A = (0, _math.sin)(d - t) / k,
        x = A * kx0 + B * kx1,
        y = A * ky0 + B * ky1,
        z = A * sy0 + B * sy1;
    return [(0, _math.atan2)(y, x) * _math.degrees, (0, _math.atan2)(z, (0, _math.sqrt)(x * x + y * y)) * _math.degrees];
  } : function () {
    return [x0 * _math.degrees, y0 * _math.degrees];
  };
  interpolate.distance = d;
  return interpolate;
}
},{"./math.js":"../node_modules/d3-geo/src/math.js"}],"../node_modules/d3-geo/src/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x;
}
},{}],"../node_modules/d3-geo/src/path/area.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _adder = _interopRequireDefault(require("../adder.js"));

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var areaSum = (0, _adder.default)(),
    areaRingSum = (0, _adder.default)(),
    x00,
    y00,
    x0,
    y0;
var areaStream = {
  point: _noop.default,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: function () {
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function () {
    areaStream.lineStart = areaStream.lineEnd = areaStream.point = _noop.default;
    areaSum.add((0, _math.abs)(areaRingSum));
    areaRingSum.reset();
  },
  result: function () {
    var area = areaSum / 2;
    areaSum.reset();
    return area;
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaPointFirst(x, y) {
  areaStream.point = areaPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function areaPoint(x, y) {
  areaRingSum.add(y0 * x - x0 * y);
  x0 = x, y0 = y;
}

function areaRingEnd() {
  areaPoint(x00, y00);
}

var _default = areaStream;
exports.default = _default;
},{"../adder.js":"../node_modules/d3-geo/src/adder.js","../math.js":"../node_modules/d3-geo/src/math.js","../noop.js":"../node_modules/d3-geo/src/noop.js"}],"../node_modules/d3-geo/src/path/bounds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var x0 = Infinity,
    y0 = x0,
    x1 = -x0,
    y1 = x1;
var boundsStream = {
  point: boundsPoint,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: _noop.default,
  polygonEnd: _noop.default,
  result: function () {
    var bounds = [[x0, y0], [x1, y1]];
    x1 = y1 = -(y0 = x0 = Infinity);
    return bounds;
  }
};

function boundsPoint(x, y) {
  if (x < x0) x0 = x;
  if (x > x1) x1 = x;
  if (y < y0) y0 = y;
  if (y > y1) y1 = y;
}

var _default = boundsStream;
exports.default = _default;
},{"../noop.js":"../node_modules/d3-geo/src/noop.js"}],"../node_modules/d3-geo/src/path/centroid.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

// TODO Enforce positive area for exterior, negative area for interior?
var X0 = 0,
    Y0 = 0,
    Z0 = 0,
    X1 = 0,
    Y1 = 0,
    Z1 = 0,
    X2 = 0,
    Y2 = 0,
    Z2 = 0,
    x00,
    y00,
    x0,
    y0;
var centroidStream = {
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function () {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function () {
    centroidStream.point = centroidPoint;
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  },
  result: function () {
    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];
    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
    return centroid;
  }
};

function centroidPoint(x, y) {
  X0 += x;
  Y0 += y;
  ++Z0;
}

function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine;
}

function centroidPointFirstLine(x, y) {
  centroidStream.point = centroidPointLine;
  centroidPoint(x0 = x, y0 = y);
}

function centroidPointLine(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = (0, _math.sqrt)(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  centroidPoint(x0 = x, y0 = y);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing;
}

function centroidRingEnd() {
  centroidPointRing(x00, y00);
}

function centroidPointFirstRing(x, y) {
  centroidStream.point = centroidPointRing;
  centroidPoint(x00 = x0 = x, y00 = y0 = y);
}

function centroidPointRing(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = (0, _math.sqrt)(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  z = y0 * x - x0 * y;
  X2 += z * (x0 + x);
  Y2 += z * (y0 + y);
  Z2 += z * 3;
  centroidPoint(x0 = x, y0 = y);
}

var _default = centroidStream;
exports.default = _default;
},{"../math.js":"../node_modules/d3-geo/src/math.js"}],"../node_modules/d3-geo/src/path/context.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PathContext;

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PathContext(context) {
  this._context = context;
}

PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function (_) {
    return this._radius = _, this;
  },
  polygonStart: function () {
    this._line = 0;
  },
  polygonEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line === 0) this._context.closePath();
    this._point = NaN;
  },
  point: function (x, y) {
    switch (this._point) {
      case 0:
        {
          this._context.moveTo(x, y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._context.lineTo(x, y);

          break;
        }

      default:
        {
          this._context.moveTo(x + this._radius, y);

          this._context.arc(x, y, this._radius, 0, _math.tau);

          break;
        }
    }
  },
  result: _noop.default
};
},{"../math.js":"../node_modules/d3-geo/src/math.js","../noop.js":"../node_modules/d3-geo/src/noop.js"}],"../node_modules/d3-geo/src/path/measure.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _adder = _interopRequireDefault(require("../adder.js"));

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lengthSum = (0, _adder.default)(),
    lengthRing,
    x00,
    y00,
    x0,
    y0;
var lengthStream = {
  point: _noop.default,
  lineStart: function () {
    lengthStream.point = lengthPointFirst;
  },
  lineEnd: function () {
    if (lengthRing) lengthPoint(x00, y00);
    lengthStream.point = _noop.default;
  },
  polygonStart: function () {
    lengthRing = true;
  },
  polygonEnd: function () {
    lengthRing = null;
  },
  result: function () {
    var length = +lengthSum;
    lengthSum.reset();
    return length;
  }
};

function lengthPointFirst(x, y) {
  lengthStream.point = lengthPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function lengthPoint(x, y) {
  x0 -= x, y0 -= y;
  lengthSum.add((0, _math.sqrt)(x0 * x0 + y0 * y0));
  x0 = x, y0 = y;
}

var _default = lengthStream;
exports.default = _default;
},{"../adder.js":"../node_modules/d3-geo/src/adder.js","../math.js":"../node_modules/d3-geo/src/math.js","../noop.js":"../node_modules/d3-geo/src/noop.js"}],"../node_modules/d3-geo/src/path/string.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PathString;

function PathString() {
  this._string = [];
}

PathString.prototype = {
  _radius: 4.5,
  _circle: circle(4.5),
  pointRadius: function (_) {
    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
    return this;
  },
  polygonStart: function () {
    this._line = 0;
  },
  polygonEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line === 0) this._string.push("Z");
    this._point = NaN;
  },
  point: function (x, y) {
    switch (this._point) {
      case 0:
        {
          this._string.push("M", x, ",", y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._string.push("L", x, ",", y);

          break;
        }

      default:
        {
          if (this._circle == null) this._circle = circle(this._radius);

          this._string.push("M", x, ",", y, this._circle);

          break;
        }
    }
  },
  result: function () {
    if (this._string.length) {
      var result = this._string.join("");

      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};

function circle(radius) {
  return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
}
},{}],"../node_modules/d3-geo/src/path/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _identity = _interopRequireDefault(require("../identity.js"));

var _stream = _interopRequireDefault(require("../stream.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _bounds = _interopRequireDefault(require("./bounds.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _context = _interopRequireDefault(require("./context.js"));

var _measure = _interopRequireDefault(require("./measure.js"));

var _string = _interopRequireDefault(require("./string.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(projection, context) {
  var pointRadius = 4.5,
      projectionStream,
      contextStream;

  function path(object) {
    if (object) {
      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
      (0, _stream.default)(object, projectionStream(contextStream));
    }

    return contextStream.result();
  }

  path.area = function (object) {
    (0, _stream.default)(object, projectionStream(_area.default));
    return _area.default.result();
  };

  path.measure = function (object) {
    (0, _stream.default)(object, projectionStream(_measure.default));
    return _measure.default.result();
  };

  path.bounds = function (object) {
    (0, _stream.default)(object, projectionStream(_bounds.default));
    return _bounds.default.result();
  };

  path.centroid = function (object) {
    (0, _stream.default)(object, projectionStream(_centroid.default));
    return _centroid.default.result();
  };

  path.projection = function (_) {
    return arguments.length ? (projectionStream = _ == null ? (projection = null, _identity.default) : (projection = _).stream, path) : projection;
  };

  path.context = function (_) {
    if (!arguments.length) return context;
    contextStream = _ == null ? (context = null, new _string.default()) : new _context.default(context = _);
    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
    return path;
  };

  path.pointRadius = function (_) {
    if (!arguments.length) return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };

  return path.projection(projection).context(context);
}
},{"../identity.js":"../node_modules/d3-geo/src/identity.js","../stream.js":"../node_modules/d3-geo/src/stream.js","./area.js":"../node_modules/d3-geo/src/path/area.js","./bounds.js":"../node_modules/d3-geo/src/path/bounds.js","./centroid.js":"../node_modules/d3-geo/src/path/centroid.js","./context.js":"../node_modules/d3-geo/src/path/context.js","./measure.js":"../node_modules/d3-geo/src/path/measure.js","./string.js":"../node_modules/d3-geo/src/path/string.js"}],"../node_modules/d3-geo/src/transform.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.transformer = transformer;

function _default(methods) {
  return {
    stream: transformer(methods)
  };
}

function transformer(methods) {
  return function (stream) {
    var s = new TransformStream();

    for (var key in methods) s[key] = methods[key];

    s.stream = stream;
    return s;
  };
}

function TransformStream() {}

TransformStream.prototype = {
  constructor: TransformStream,
  point: function (x, y) {
    this.stream.point(x, y);
  },
  sphere: function () {
    this.stream.sphere();
  },
  lineStart: function () {
    this.stream.lineStart();
  },
  lineEnd: function () {
    this.stream.lineEnd();
  },
  polygonStart: function () {
    this.stream.polygonStart();
  },
  polygonEnd: function () {
    this.stream.polygonEnd();
  }
};
},{}],"../node_modules/d3-geo/src/projection/fit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fitExtent = fitExtent;
exports.fitSize = fitSize;
exports.fitWidth = fitWidth;
exports.fitHeight = fitHeight;

var _stream = _interopRequireDefault(require("../stream.js"));

var _bounds = _interopRequireDefault(require("../path/bounds.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fit(projection, fitBounds, object) {
  var clip = projection.clipExtent && projection.clipExtent();
  projection.scale(150).translate([0, 0]);
  if (clip != null) projection.clipExtent(null);
  (0, _stream.default)(object, projection.stream(_bounds.default));
  fitBounds(_bounds.default.result());
  if (clip != null) projection.clipExtent(clip);
  return projection;
}

function fitExtent(projection, extent, object) {
  return fit(projection, function (b) {
    var w = extent[1][0] - extent[0][0],
        h = extent[1][1] - extent[0][1],
        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitSize(projection, size, object) {
  return fitExtent(projection, [[0, 0], size], object);
}

function fitWidth(projection, width, object) {
  return fit(projection, function (b) {
    var w = +width,
        k = w / (b[1][0] - b[0][0]),
        x = (w - k * (b[1][0] + b[0][0])) / 2,
        y = -k * b[0][1];
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitHeight(projection, height, object) {
  return fit(projection, function (b) {
    var h = +height,
        k = h / (b[1][1] - b[0][1]),
        x = -k * b[0][0],
        y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}
},{"../stream.js":"../node_modules/d3-geo/src/stream.js","../path/bounds.js":"../node_modules/d3-geo/src/path/bounds.js"}],"../node_modules/d3-geo/src/projection/resample.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cartesian = require("../cartesian.js");

var _math = require("../math.js");

var _transform = require("../transform.js");

var maxDepth = 16,
    // maximum depth of subdivision
cosMinDistance = (0, _math.cos)(30 * _math.radians); // cos(minimum angular distance)

function _default(project, delta2) {
  return +delta2 ? resample(project, delta2) : resampleNone(project);
}

function resampleNone(project) {
  return (0, _transform.transformer)({
    point: function (x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}

function resample(project, delta2) {
  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
    var dx = x1 - x0,
        dy = y1 - y0,
        d2 = dx * dx + dy * dy;

    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1,
          b = b0 + b1,
          c = c0 + c1,
          m = (0, _math.sqrt)(a * a + b * b + c * c),
          phi2 = (0, _math.asin)(c /= m),
          lambda2 = (0, _math.abs)((0, _math.abs)(c) - 1) < _math.epsilon || (0, _math.abs)(lambda0 - lambda1) < _math.epsilon ? (lambda0 + lambda1) / 2 : (0, _math.atan2)(b, a),
          p = project(lambda2, phi2),
          x2 = p[0],
          y2 = p[1],
          dx2 = x2 - x0,
          dy2 = y2 - y0,
          dz = dy * dx2 - dx * dy2;

      if (dz * dz / d2 > delta2 // perpendicular projected distance
      || (0, _math.abs)((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
        // angular distance
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
      }
    }
  }

  return function (stream) {
    var lambda00, x00, y00, a00, b00, c00, // first point
    lambda0, x0, y0, a0, b0, c0; // previous point

    var resampleStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function () {
        stream.polygonStart();
        resampleStream.lineStart = ringStart;
      },
      polygonEnd: function () {
        stream.polygonEnd();
        resampleStream.lineStart = lineStart;
      }
    };

    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }

    function lineStart() {
      x0 = NaN;
      resampleStream.point = linePoint;
      stream.lineStart();
    }

    function linePoint(lambda, phi) {
      var c = (0, _cartesian.cartesian)([lambda, phi]),
          p = project(lambda, phi);
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x0, y0);
    }

    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }

    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }

    function ringPoint(lambda, phi) {
      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint;
    }

    function ringEnd() {
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }

    return resampleStream;
  };
}
},{"../cartesian.js":"../node_modules/d3-geo/src/cartesian.js","../math.js":"../node_modules/d3-geo/src/math.js","../transform.js":"../node_modules/d3-geo/src/transform.js"}],"../node_modules/d3-geo/src/projection/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = projection;
exports.projectionMutator = projectionMutator;

var _antimeridian = _interopRequireDefault(require("../clip/antimeridian.js"));

var _circle = _interopRequireDefault(require("../clip/circle.js"));

var _rectangle = _interopRequireDefault(require("../clip/rectangle.js"));

var _compose = _interopRequireDefault(require("../compose.js"));

var _identity = _interopRequireDefault(require("../identity.js"));

var _math = require("../math.js");

var _rotation = require("../rotation.js");

var _transform = require("../transform.js");

var _fit = require("./fit.js");

var _resample = _interopRequireDefault(require("./resample.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var transformRadians = (0, _transform.transformer)({
  point: function (x, y) {
    this.stream.point(x * _math.radians, y * _math.radians);
  }
});

function transformRotate(rotate) {
  return (0, _transform.transformer)({
    point: function (x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}

function scaleTranslate(k, dx, dy, sx, sy) {
  function transform(x, y) {
    x *= sx;
    y *= sy;
    return [dx + k * x, dy - k * y];
  }

  transform.invert = function (x, y) {
    return [(x - dx) / k * sx, (dy - y) / k * sy];
  };

  return transform;
}

function scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {
  var cosAlpha = (0, _math.cos)(alpha),
      sinAlpha = (0, _math.sin)(alpha),
      a = cosAlpha * k,
      b = sinAlpha * k,
      ai = cosAlpha / k,
      bi = sinAlpha / k,
      ci = (sinAlpha * dy - cosAlpha * dx) / k,
      fi = (sinAlpha * dx + cosAlpha * dy) / k;

  function transform(x, y) {
    x *= sx;
    y *= sy;
    return [a * x - b * y + dx, dy - b * x - a * y];
  }

  transform.invert = function (x, y) {
    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];
  };

  return transform;
}

function projection(project) {
  return projectionMutator(function () {
    return project;
  })();
}

function projectionMutator(projectAt) {
  var project,
      k = 150,
      // scale
  x = 480,
      y = 250,
      // translate
  lambda = 0,
      phi = 0,
      // center
  deltaLambda = 0,
      deltaPhi = 0,
      deltaGamma = 0,
      rotate,
      // pre-rotate
  alpha = 0,
      // post-rotate angle
  sx = 1,
      // reflectX
  sy = 1,
      // reflectX
  theta = null,
      preclip = _antimeridian.default,
      // pre-clip angle
  x0 = null,
      y0,
      x1,
      y1,
      postclip = _identity.default,
      // post-clip extent
  delta2 = 0.5,
      // precision
  projectResample,
      projectTransform,
      projectRotateTransform,
      cache,
      cacheStream;

  function projection(point) {
    return projectRotateTransform(point[0] * _math.radians, point[1] * _math.radians);
  }

  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * _math.degrees, point[1] * _math.degrees];
  }

  projection.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };

  projection.preclip = function (_) {
    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
  };

  projection.postclip = function (_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipAngle = function (_) {
    return arguments.length ? (preclip = +_ ? (0, _circle.default)(theta = _ * _math.radians) : (theta = null, _antimeridian.default), reset()) : theta * _math.degrees;
  };

  projection.clipExtent = function (_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity.default) : (0, _rectangle.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function (_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };

  projection.translate = function (_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };

  projection.center = function (_) {
    return arguments.length ? (lambda = _[0] % 360 * _math.radians, phi = _[1] % 360 * _math.radians, recenter()) : [lambda * _math.degrees, phi * _math.degrees];
  };

  projection.rotate = function (_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * _math.radians, deltaPhi = _[1] % 360 * _math.radians, deltaGamma = _.length > 2 ? _[2] % 360 * _math.radians : 0, recenter()) : [deltaLambda * _math.degrees, deltaPhi * _math.degrees, deltaGamma * _math.degrees];
  };

  projection.angle = function (_) {
    return arguments.length ? (alpha = _ % 360 * _math.radians, recenter()) : alpha * _math.degrees;
  };

  projection.reflectX = function (_) {
    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;
  };

  projection.reflectY = function (_) {
    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;
  };

  projection.precision = function (_) {
    return arguments.length ? (projectResample = (0, _resample.default)(projectTransform, delta2 = _ * _), reset()) : (0, _math.sqrt)(delta2);
  };

  projection.fitExtent = function (extent, object) {
    return (0, _fit.fitExtent)(projection, extent, object);
  };

  projection.fitSize = function (size, object) {
    return (0, _fit.fitSize)(projection, size, object);
  };

  projection.fitWidth = function (width, object) {
    return (0, _fit.fitWidth)(projection, width, object);
  };

  projection.fitHeight = function (height, object) {
    return (0, _fit.fitHeight)(projection, height, object);
  };

  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),
        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);
    rotate = (0, _rotation.rotateRadians)(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = (0, _compose.default)(project, transform);
    projectRotateTransform = (0, _compose.default)(rotate, projectTransform);
    projectResample = (0, _resample.default)(projectTransform, delta2);
    return reset();
  }

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return function () {
    project = projectAt.apply(this, arguments);
    projection.invert = project.invert && invert;
    return recenter();
  };
}
},{"../clip/antimeridian.js":"../node_modules/d3-geo/src/clip/antimeridian.js","../clip/circle.js":"../node_modules/d3-geo/src/clip/circle.js","../clip/rectangle.js":"../node_modules/d3-geo/src/clip/rectangle.js","../compose.js":"../node_modules/d3-geo/src/compose.js","../identity.js":"../node_modules/d3-geo/src/identity.js","../math.js":"../node_modules/d3-geo/src/math.js","../rotation.js":"../node_modules/d3-geo/src/rotation.js","../transform.js":"../node_modules/d3-geo/src/transform.js","./fit.js":"../node_modules/d3-geo/src/projection/fit.js","./resample.js":"../node_modules/d3-geo/src/projection/resample.js"}],"../node_modules/d3-geo/src/projection/conic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicProjection = conicProjection;

var _math = require("../math.js");

var _index = require("./index.js");

function conicProjection(projectAt) {
  var phi0 = 0,
      phi1 = _math.pi / 3,
      m = (0, _index.projectionMutator)(projectAt),
      p = m(phi0, phi1);

  p.parallels = function (_) {
    return arguments.length ? m(phi0 = _[0] * _math.radians, phi1 = _[1] * _math.radians) : [phi0 * _math.degrees, phi1 * _math.degrees];
  };

  return p;
}
},{"../math.js":"../node_modules/d3-geo/src/math.js","./index.js":"../node_modules/d3-geo/src/projection/index.js"}],"../node_modules/d3-geo/src/projection/cylindricalEqualArea.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cylindricalEqualAreaRaw = cylindricalEqualAreaRaw;

var _math = require("../math.js");

function cylindricalEqualAreaRaw(phi0) {
  var cosPhi0 = (0, _math.cos)(phi0);

  function forward(lambda, phi) {
    return [lambda * cosPhi0, (0, _math.sin)(phi) / cosPhi0];
  }

  forward.invert = function (x, y) {
    return [x / cosPhi0, (0, _math.asin)(y * cosPhi0)];
  };

  return forward;
}
},{"../math.js":"../node_modules/d3-geo/src/math.js"}],"../node_modules/d3-geo/src/projection/conicEqualArea.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicEqualAreaRaw = conicEqualAreaRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _cylindricalEqualArea = require("./cylindricalEqualArea.js");

function conicEqualAreaRaw(y0, y1) {
  var sy0 = (0, _math.sin)(y0),
      n = (sy0 + (0, _math.sin)(y1)) / 2; // Are the parallels symmetrical around the Equator?

  if ((0, _math.abs)(n) < _math.epsilon) return (0, _cylindricalEqualArea.cylindricalEqualAreaRaw)(y0);
  var c = 1 + sy0 * (2 * n - sy0),
      r0 = (0, _math.sqrt)(c) / n;

  function project(x, y) {
    var r = (0, _math.sqrt)(c - 2 * n * (0, _math.sin)(y)) / n;
    return [r * (0, _math.sin)(x *= n), r0 - r * (0, _math.cos)(x)];
  }

  project.invert = function (x, y) {
    var r0y = r0 - y,
        l = (0, _math.atan2)(x, (0, _math.abs)(r0y)) * (0, _math.sign)(r0y);
    if (r0y * n < 0) l -= _math.pi * (0, _math.sign)(x) * (0, _math.sign)(r0y);
    return [l / n, (0, _math.asin)((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);
}
},{"../math.js":"../node_modules/d3-geo/src/math.js","./conic.js":"../node_modules/d3-geo/src/projection/conic.js","./cylindricalEqualArea.js":"../node_modules/d3-geo/src/projection/cylindricalEqualArea.js"}],"../node_modules/d3-geo/src/projection/albers.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _conicEqualArea = _interopRequireDefault(require("./conicEqualArea.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return (0, _conicEqualArea.default)().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);
}
},{"./conicEqualArea.js":"../node_modules/d3-geo/src/projection/conicEqualArea.js"}],"../node_modules/d3-geo/src/projection/albersUsa.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("../math.js");

var _albers = _interopRequireDefault(require("./albers.js"));

var _conicEqualArea = _interopRequireDefault(require("./conicEqualArea.js"));

var _fit = require("./fit.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.
function multiplex(streams) {
  var n = streams.length;
  return {
    point: function (x, y) {
      var i = -1;

      while (++i < n) streams[i].point(x, y);
    },
    sphere: function () {
      var i = -1;

      while (++i < n) streams[i].sphere();
    },
    lineStart: function () {
      var i = -1;

      while (++i < n) streams[i].lineStart();
    },
    lineEnd: function () {
      var i = -1;

      while (++i < n) streams[i].lineEnd();
    },
    polygonStart: function () {
      var i = -1;

      while (++i < n) streams[i].polygonStart();
    },
    polygonEnd: function () {
      var i = -1;

      while (++i < n) streams[i].polygonEnd();
    }
  };
} // A composite projection for the United States, configured by default for
// 960×500. The projection also works quite well at 960×600 if you change the
// scale to 1285 and adjust the translate accordingly. The set of standard
// parallels for each region comes from USGS, which is published here:
// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers


function _default() {
  var cache,
      cacheStream,
      lower48 = (0, _albers.default)(),
      lower48Point,
      alaska = (0, _conicEqualArea.default)().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),
      alaskaPoint,
      // EPSG:3338
  hawaii = (0, _conicEqualArea.default)().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),
      hawaiiPoint,
      // ESRI:102007
  point,
      pointStream = {
    point: function (x, y) {
      point = [x, y];
    }
  };

  function albersUsa(coordinates) {
    var x = coordinates[0],
        y = coordinates[1];
    return point = null, (lower48Point.point(x, y), point) || (alaskaPoint.point(x, y), point) || (hawaiiPoint.point(x, y), point);
  }

  albersUsa.invert = function (coordinates) {
    var k = lower48.scale(),
        t = lower48.translate(),
        x = (coordinates[0] - t[0]) / k,
        y = (coordinates[1] - t[1]) / k;
    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);
  };

  albersUsa.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
  };

  albersUsa.precision = function (_) {
    if (!arguments.length) return lower48.precision();
    lower48.precision(_), alaska.precision(_), hawaii.precision(_);
    return reset();
  };

  albersUsa.scale = function (_) {
    if (!arguments.length) return lower48.scale();
    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
    return albersUsa.translate(lower48.translate());
  };

  albersUsa.translate = function (_) {
    if (!arguments.length) return lower48.translate();
    var k = lower48.scale(),
        x = +_[0],
        y = +_[1];
    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);
    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + _math.epsilon, y + 0.120 * k + _math.epsilon], [x - 0.214 * k - _math.epsilon, y + 0.234 * k - _math.epsilon]]).stream(pointStream);
    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + _math.epsilon, y + 0.166 * k + _math.epsilon], [x - 0.115 * k - _math.epsilon, y + 0.234 * k - _math.epsilon]]).stream(pointStream);
    return reset();
  };

  albersUsa.fitExtent = function (extent, object) {
    return (0, _fit.fitExtent)(albersUsa, extent, object);
  };

  albersUsa.fitSize = function (size, object) {
    return (0, _fit.fitSize)(albersUsa, size, object);
  };

  albersUsa.fitWidth = function (width, object) {
    return (0, _fit.fitWidth)(albersUsa, width, object);
  };

  albersUsa.fitHeight = function (height, object) {
    return (0, _fit.fitHeight)(albersUsa, height, object);
  };

  function reset() {
    cache = cacheStream = null;
    return albersUsa;
  }

  return albersUsa.scale(1070);
}
},{"../math.js":"../node_modules/d3-geo/src/math.js","./albers.js":"../node_modules/d3-geo/src/projection/albers.js","./conicEqualArea.js":"../node_modules/d3-geo/src/projection/conicEqualArea.js","./fit.js":"../node_modules/d3-geo/src/projection/fit.js"}],"../node_modules/d3-geo/src/projection/azimuthal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.azimuthalRaw = azimuthalRaw;
exports.azimuthalInvert = azimuthalInvert;

var _math = require("../math.js");

function azimuthalRaw(scale) {
  return function (x, y) {
    var cx = (0, _math.cos)(x),
        cy = (0, _math.cos)(y),
        k = scale(cx * cy);
    return [k * cy * (0, _math.sin)(x), k * (0, _math.sin)(y)];
  };
}

function azimuthalInvert(angle) {
  return function (x, y) {
    var z = (0, _math.sqrt)(x * x + y * y),
        c = angle(z),
        sc = (0, _math.sin)(c),
        cc = (0, _math.cos)(c);
    return [(0, _math.atan2)(x * sc, z * cc), (0, _math.asin)(z && y * sc / z)];
  };
}
},{"../math.js":"../node_modules/d3-geo/src/math.js"}],"../node_modules/d3-geo/src/projection/azimuthalEqualArea.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.azimuthalEqualAreaRaw = void 0;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var azimuthalEqualAreaRaw = (0, _azimuthal.azimuthalRaw)(function (cxcy) {
  return (0, _math.sqrt)(2 / (1 + cxcy));
});
exports.azimuthalEqualAreaRaw = azimuthalEqualAreaRaw;
azimuthalEqualAreaRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return 2 * (0, _math.asin)(z / 2);
});

function _default() {
  return (0, _index.default)(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);
}
},{"../math.js":"../node_modules/d3-geo/src/math.js","./azimuthal.js":"../node_modules/d3-geo/src/projection/azimuthal.js","./index.js":"../node_modules/d3-geo/src/projection/index.js"}],"../node_modules/d3-geo/src/projection/azimuthalEquidistant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.azimuthalEquidistantRaw = void 0;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var azimuthalEquidistantRaw = (0, _azimuthal.azimuthalRaw)(function (c) {
  return (c = (0, _math.acos)(c)) && c / (0, _math.sin)(c);
});
exports.azimuthalEquidistantRaw = azimuthalEquidistantRaw;
azimuthalEquidistantRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return z;
});

function _default() {
  return (0, _index.default)(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);
}
},{"../math.js":"../node_modules/d3-geo/src/math.js","./azimuthal.js":"../node_modules/d3-geo/src/projection/azimuthal.js","./index.js":"../node_modules/d3-geo/src/projection/index.js"}],"../node_modules/d3-geo/src/projection/mercator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mercatorRaw = mercatorRaw;
exports.default = _default;
exports.mercatorProjection = mercatorProjection;

var _math = require("../math.js");

var _rotation = _interopRequireDefault(require("../rotation.js"));

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function mercatorRaw(lambda, phi) {
  return [lambda, (0, _math.log)((0, _math.tan)((_math.halfPi + phi) / 2))];
}

mercatorRaw.invert = function (x, y) {
  return [x, 2 * (0, _math.atan)((0, _math.exp)(y)) - _math.halfPi];
};

function _default() {
  return mercatorProjection(mercatorRaw).scale(961 / _math.tau);
}

function mercatorProjection(project) {
  var m = (0, _index.default)(project),
      center = m.center,
      scale = m.scale,
      translate = m.translate,
      clipExtent = m.clipExtent,
      x0 = null,
      y0,
      x1,
      y1; // clip extent

  m.scale = function (_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };

  m.translate = function (_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };

  m.center = function (_) {
    return arguments.length ? (center(_), reclip()) : center();
  };

  m.clipExtent = function (_) {
    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  function reclip() {
    var k = _math.pi * scale(),
        t = m((0, _rotation.default)(m.rotate()).invert([0, 0]));
    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
  }

  return reclip();
}
},{"../math.js":"../node_modules/d3-geo/src/math.js","../rotation.js":"../node_modules/d3-geo/src/rotation.js","./index.js":"../node_modules/d3-geo/src/projection/index.js"}],"../node_modules/d3-geo/src/projection/conicConformal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicConformalRaw = conicConformalRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _mercator = require("./mercator.js");

function tany(y) {
  return (0, _math.tan)((_math.halfPi + y) / 2);
}

function conicConformalRaw(y0, y1) {
  var cy0 = (0, _math.cos)(y0),
      n = y0 === y1 ? (0, _math.sin)(y0) : (0, _math.log)(cy0 / (0, _math.cos)(y1)) / (0, _math.log)(tany(y1) / tany(y0)),
      f = cy0 * (0, _math.pow)(tany(y0), n) / n;
  if (!n) return _mercator.mercatorRaw;

  function project(x, y) {
    if (f > 0) {
      if (y < -_math.halfPi + _math.epsilon) y = -_math.halfPi + _math.epsilon;
    } else {
      if (y > _math.halfPi - _math.epsilon) y = _math.halfPi - _math.epsilon;
    }

    var r = f / (0, _math.pow)(tany(y), n);
    return [r * (0, _math.sin)(n * x), f - r * (0, _math.cos)(n * x)];
  }

  project.invert = function (x, y) {
    var fy = f - y,
        r = (0, _math.sign)(n) * (0, _math.sqrt)(x * x + fy * fy),
        l = (0, _math.atan2)(x, (0, _math.abs)(fy)) * (0, _math.sign)(fy);
    if (fy * n < 0) l -= _math.pi * (0, _math.sign)(x) * (0, _math.sign)(fy);
    return [l / n, 2 * (0, _math.atan)((0, _math.pow)(f / r, 1 / n)) - _math.halfPi];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicConformalRaw).scale(109.5).parallels([30, 30]);
}
},{"../math.js":"../node_modules/d3-geo/src/math.js","./conic.js":"../node_modules/d3-geo/src/projection/conic.js","./mercator.js":"../node_modules/d3-geo/src/projection/mercator.js"}],"../node_modules/d3-geo/src/projection/equirectangular.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equirectangularRaw = equirectangularRaw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function equirectangularRaw(lambda, phi) {
  return [lambda, phi];
}

equirectangularRaw.invert = equirectangularRaw;

function _default() {
  return (0, _index.default)(equirectangularRaw).scale(152.63);
}
},{"./index.js":"../node_modules/d3-geo/src/projection/index.js"}],"../node_modules/d3-geo/src/projection/conicEquidistant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicEquidistantRaw = conicEquidistantRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _equirectangular = require("./equirectangular.js");

function conicEquidistantRaw(y0, y1) {
  var cy0 = (0, _math.cos)(y0),
      n = y0 === y1 ? (0, _math.sin)(y0) : (cy0 - (0, _math.cos)(y1)) / (y1 - y0),
      g = cy0 / n + y0;
  if ((0, _math.abs)(n) < _math.epsilon) return _equirectangular.equirectangularRaw;

  function project(x, y) {
    var gy = g - y,
        nx = n * x;
    return [gy * (0, _math.sin)(nx), g - gy * (0, _math.cos)(nx)];
  }

  project.invert = function (x, y) {
    var gy = g - y,
        l = (0, _math.atan2)(x, (0, _math.abs)(gy)) * (0, _math.sign)(gy);
    if (gy * n < 0) l -= _math.pi * (0, _math.sign)(x) * (0, _math.sign)(gy);
    return [l / n, g - (0, _math.sign)(n) * (0, _math.sqrt)(x * x + gy * gy)];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);
}
},{"../math.js":"../node_modules/d3-geo/src/math.js","./conic.js":"../node_modules/d3-geo/src/projection/conic.js","./equirectangular.js":"../node_modules/d3-geo/src/projection/equirectangular.js"}],"../node_modules/d3-geo/src/projection/equalEarth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equalEarthRaw = equalEarthRaw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var A1 = 1.340264,
    A2 = -0.081106,
    A3 = 0.000893,
    A4 = 0.003796,
    M = (0, _math.sqrt)(3) / 2,
    iterations = 12;

function equalEarthRaw(lambda, phi) {
  var l = (0, _math.asin)(M * (0, _math.sin)(phi)),
      l2 = l * l,
      l6 = l2 * l2 * l2;
  return [lambda * (0, _math.cos)(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];
}

equalEarthRaw.invert = function (x, y) {
  var l = y,
      l2 = l * l,
      l6 = l2 * l2 * l2;

  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
    if ((0, _math.abs)(delta) < _math.epsilon2) break;
  }

  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / (0, _math.cos)(l), (0, _math.asin)((0, _math.sin)(l) / M)];
};

function _default() {
  return (0, _index.default)(equalEarthRaw).scale(177.158);
}
},{"./index.js":"../node_modules/d3-geo/src/projection/index.js","../math.js":"../node_modules/d3-geo/src/math.js"}],"../node_modules/d3-geo/src/projection/gnomonic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gnomonicRaw = gnomonicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function gnomonicRaw(x, y) {
  var cy = (0, _math.cos)(y),
      k = (0, _math.cos)(x) * cy;
  return [cy * (0, _math.sin)(x) / k, (0, _math.sin)(y) / k];
}

gnomonicRaw.invert = (0, _azimuthal.azimuthalInvert)(_math.atan);

function _default() {
  return (0, _index.default)(gnomonicRaw).scale(144.049).clipAngle(60);
}
},{"../math.js":"../node_modules/d3-geo/src/math.js","./azimuthal.js":"../node_modules/d3-geo/src/projection/azimuthal.js","./index.js":"../node_modules/d3-geo/src/projection/index.js"}],"../node_modules/d3-geo/src/projection/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _rectangle = _interopRequireDefault(require("../clip/rectangle.js"));

var _identity = _interopRequireDefault(require("../identity.js"));

var _transform = require("../transform.js");

var _fit = require("./fit.js");

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var k = 1,
      tx = 0,
      ty = 0,
      sx = 1,
      sy = 1,
      // scale, translate and reflect
  alpha = 0,
      ca,
      sa,
      // angle
  x0 = null,
      y0,
      x1,
      y1,
      // clip extent
  kx = 1,
      ky = 1,
      transform = (0, _transform.transformer)({
    point: function (x, y) {
      var p = projection([x, y]);
      this.stream.point(p[0], p[1]);
    }
  }),
      postclip = _identity.default,
      cache,
      cacheStream;

  function reset() {
    kx = k * sx;
    ky = k * sy;
    cache = cacheStream = null;
    return projection;
  }

  function projection(p) {
    var x = p[0] * kx,
        y = p[1] * ky;

    if (alpha) {
      var t = y * ca - x * sa;
      x = x * ca + y * sa;
      y = t;
    }

    return [x + tx, y + ty];
  }

  projection.invert = function (p) {
    var x = p[0] - tx,
        y = p[1] - ty;

    if (alpha) {
      var t = y * ca + x * sa;
      x = x * ca - y * sa;
      y = t;
    }

    return [x / kx, y / ky];
  };

  projection.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));
  };

  projection.postclip = function (_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipExtent = function (_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity.default) : (0, _rectangle.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function (_) {
    return arguments.length ? (k = +_, reset()) : k;
  };

  projection.translate = function (_) {
    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];
  };

  projection.angle = function (_) {
    return arguments.length ? (alpha = _ % 360 * _math.radians, sa = (0, _math.sin)(alpha), ca = (0, _math.cos)(alpha), reset()) : alpha * _math.degrees;
  };

  projection.reflectX = function (_) {
    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;
  };

  projection.reflectY = function (_) {
    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;
  };

  projection.fitExtent = function (extent, object) {
    return (0, _fit.fitExtent)(projection, extent, object);
  };

  projection.fitSize = function (size, object) {
    return (0, _fit.fitSize)(projection, size, object);
  };

  projection.fitWidth = function (width, object) {
    return (0, _fit.fitWidth)(projection, width, object);
  };

  projection.fitHeight = function (height, object) {
    return (0, _fit.fitHeight)(projection, height, object);
  };

  return projection;
}
},{"../clip/rectangle.js":"../node_modules/d3-geo/src/clip/rectangle.js","../identity.js":"../node_modules/d3-geo/src/identity.js","../transform.js":"../node_modules/d3-geo/src/transform.js","./fit.js":"../node_modules/d3-geo/src/projection/fit.js","../math.js":"../node_modules/d3-geo/src/math.js"}],"../node_modules/d3-geo/src/projection/naturalEarth1.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.naturalEarth1Raw = naturalEarth1Raw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function naturalEarth1Raw(lambda, phi) {
  var phi2 = phi * phi,
      phi4 = phi2 * phi2;
  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];
}

naturalEarth1Raw.invert = function (x, y) {
  var phi = y,
      i = 25,
      delta;

  do {
    var phi2 = phi * phi,
        phi4 = phi2 * phi2;
    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
  } while ((0, _math.abs)(delta) > _math.epsilon && --i > 0);

  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];
};

function _default() {
  return (0, _index.default)(naturalEarth1Raw).scale(175.295);
}
},{"./index.js":"../node_modules/d3-geo/src/projection/index.js","../math.js":"../node_modules/d3-geo/src/math.js"}],"../node_modules/d3-geo/src/projection/orthographic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.orthographicRaw = orthographicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function orthographicRaw(x, y) {
  return [(0, _math.cos)(y) * (0, _math.sin)(x), (0, _math.sin)(y)];
}

orthographicRaw.invert = (0, _azimuthal.azimuthalInvert)(_math.asin);

function _default() {
  return (0, _index.default)(orthographicRaw).scale(249.5).clipAngle(90 + _math.epsilon);
}
},{"../math.js":"../node_modules/d3-geo/src/math.js","./azimuthal.js":"../node_modules/d3-geo/src/projection/azimuthal.js","./index.js":"../node_modules/d3-geo/src/projection/index.js"}],"../node_modules/d3-geo/src/projection/stereographic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stereographicRaw = stereographicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stereographicRaw(x, y) {
  var cy = (0, _math.cos)(y),
      k = 1 + (0, _math.cos)(x) * cy;
  return [cy * (0, _math.sin)(x) / k, (0, _math.sin)(y) / k];
}

stereographicRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return 2 * (0, _math.atan)(z);
});

function _default() {
  return (0, _index.default)(stereographicRaw).scale(250).clipAngle(142);
}
},{"../math.js":"../node_modules/d3-geo/src/math.js","./azimuthal.js":"../node_modules/d3-geo/src/projection/azimuthal.js","./index.js":"../node_modules/d3-geo/src/projection/index.js"}],"../node_modules/d3-geo/src/projection/transverseMercator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transverseMercatorRaw = transverseMercatorRaw;
exports.default = _default;

var _math = require("../math.js");

var _mercator = require("./mercator.js");

function transverseMercatorRaw(lambda, phi) {
  return [(0, _math.log)((0, _math.tan)((_math.halfPi + phi) / 2)), -lambda];
}

transverseMercatorRaw.invert = function (x, y) {
  return [-y, 2 * (0, _math.atan)((0, _math.exp)(x)) - _math.halfPi];
};

function _default() {
  var m = (0, _mercator.mercatorProjection)(transverseMercatorRaw),
      center = m.center,
      rotate = m.rotate;

  m.center = function (_) {
    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
  };

  m.rotate = function (_) {
    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
  };

  return rotate([0, 0, 90]).scale(159.155);
}
},{"../math.js":"../node_modules/d3-geo/src/math.js","./mercator.js":"../node_modules/d3-geo/src/projection/mercator.js"}],"../node_modules/d3-geo/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "geoArea", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "geoBounds", {
  enumerable: true,
  get: function () {
    return _bounds.default;
  }
});
Object.defineProperty(exports, "geoCentroid", {
  enumerable: true,
  get: function () {
    return _centroid.default;
  }
});
Object.defineProperty(exports, "geoCircle", {
  enumerable: true,
  get: function () {
    return _circle.default;
  }
});
Object.defineProperty(exports, "geoClipAntimeridian", {
  enumerable: true,
  get: function () {
    return _antimeridian.default;
  }
});
Object.defineProperty(exports, "geoClipCircle", {
  enumerable: true,
  get: function () {
    return _circle2.default;
  }
});
Object.defineProperty(exports, "geoClipExtent", {
  enumerable: true,
  get: function () {
    return _extent.default;
  }
});
Object.defineProperty(exports, "geoClipRectangle", {
  enumerable: true,
  get: function () {
    return _rectangle.default;
  }
});
Object.defineProperty(exports, "geoContains", {
  enumerable: true,
  get: function () {
    return _contains.default;
  }
});
Object.defineProperty(exports, "geoDistance", {
  enumerable: true,
  get: function () {
    return _distance.default;
  }
});
Object.defineProperty(exports, "geoGraticule", {
  enumerable: true,
  get: function () {
    return _graticule.default;
  }
});
Object.defineProperty(exports, "geoGraticule10", {
  enumerable: true,
  get: function () {
    return _graticule.graticule10;
  }
});
Object.defineProperty(exports, "geoInterpolate", {
  enumerable: true,
  get: function () {
    return _interpolate.default;
  }
});
Object.defineProperty(exports, "geoLength", {
  enumerable: true,
  get: function () {
    return _length.default;
  }
});
Object.defineProperty(exports, "geoPath", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "geoAlbers", {
  enumerable: true,
  get: function () {
    return _albers.default;
  }
});
Object.defineProperty(exports, "geoAlbersUsa", {
  enumerable: true,
  get: function () {
    return _albersUsa.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEqualArea", {
  enumerable: true,
  get: function () {
    return _azimuthalEqualArea.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEqualAreaRaw", {
  enumerable: true,
  get: function () {
    return _azimuthalEqualArea.azimuthalEqualAreaRaw;
  }
});
Object.defineProperty(exports, "geoAzimuthalEquidistant", {
  enumerable: true,
  get: function () {
    return _azimuthalEquidistant.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEquidistantRaw", {
  enumerable: true,
  get: function () {
    return _azimuthalEquidistant.azimuthalEquidistantRaw;
  }
});
Object.defineProperty(exports, "geoConicConformal", {
  enumerable: true,
  get: function () {
    return _conicConformal.default;
  }
});
Object.defineProperty(exports, "geoConicConformalRaw", {
  enumerable: true,
  get: function () {
    return _conicConformal.conicConformalRaw;
  }
});
Object.defineProperty(exports, "geoConicEqualArea", {
  enumerable: true,
  get: function () {
    return _conicEqualArea.default;
  }
});
Object.defineProperty(exports, "geoConicEqualAreaRaw", {
  enumerable: true,
  get: function () {
    return _conicEqualArea.conicEqualAreaRaw;
  }
});
Object.defineProperty(exports, "geoConicEquidistant", {
  enumerable: true,
  get: function () {
    return _conicEquidistant.default;
  }
});
Object.defineProperty(exports, "geoConicEquidistantRaw", {
  enumerable: true,
  get: function () {
    return _conicEquidistant.conicEquidistantRaw;
  }
});
Object.defineProperty(exports, "geoEqualEarth", {
  enumerable: true,
  get: function () {
    return _equalEarth.default;
  }
});
Object.defineProperty(exports, "geoEqualEarthRaw", {
  enumerable: true,
  get: function () {
    return _equalEarth.equalEarthRaw;
  }
});
Object.defineProperty(exports, "geoEquirectangular", {
  enumerable: true,
  get: function () {
    return _equirectangular.default;
  }
});
Object.defineProperty(exports, "geoEquirectangularRaw", {
  enumerable: true,
  get: function () {
    return _equirectangular.equirectangularRaw;
  }
});
Object.defineProperty(exports, "geoGnomonic", {
  enumerable: true,
  get: function () {
    return _gnomonic.default;
  }
});
Object.defineProperty(exports, "geoGnomonicRaw", {
  enumerable: true,
  get: function () {
    return _gnomonic.gnomonicRaw;
  }
});
Object.defineProperty(exports, "geoIdentity", {
  enumerable: true,
  get: function () {
    return _identity.default;
  }
});
Object.defineProperty(exports, "geoProjection", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "geoProjectionMutator", {
  enumerable: true,
  get: function () {
    return _index2.projectionMutator;
  }
});
Object.defineProperty(exports, "geoMercator", {
  enumerable: true,
  get: function () {
    return _mercator.default;
  }
});
Object.defineProperty(exports, "geoMercatorRaw", {
  enumerable: true,
  get: function () {
    return _mercator.mercatorRaw;
  }
});
Object.defineProperty(exports, "geoNaturalEarth1", {
  enumerable: true,
  get: function () {
    return _naturalEarth.default;
  }
});
Object.defineProperty(exports, "geoNaturalEarth1Raw", {
  enumerable: true,
  get: function () {
    return _naturalEarth.naturalEarth1Raw;
  }
});
Object.defineProperty(exports, "geoOrthographic", {
  enumerable: true,
  get: function () {
    return _orthographic.default;
  }
});
Object.defineProperty(exports, "geoOrthographicRaw", {
  enumerable: true,
  get: function () {
    return _orthographic.orthographicRaw;
  }
});
Object.defineProperty(exports, "geoStereographic", {
  enumerable: true,
  get: function () {
    return _stereographic.default;
  }
});
Object.defineProperty(exports, "geoStereographicRaw", {
  enumerable: true,
  get: function () {
    return _stereographic.stereographicRaw;
  }
});
Object.defineProperty(exports, "geoTransverseMercator", {
  enumerable: true,
  get: function () {
    return _transverseMercator.default;
  }
});
Object.defineProperty(exports, "geoTransverseMercatorRaw", {
  enumerable: true,
  get: function () {
    return _transverseMercator.transverseMercatorRaw;
  }
});
Object.defineProperty(exports, "geoRotation", {
  enumerable: true,
  get: function () {
    return _rotation.default;
  }
});
Object.defineProperty(exports, "geoStream", {
  enumerable: true,
  get: function () {
    return _stream.default;
  }
});
Object.defineProperty(exports, "geoTransform", {
  enumerable: true,
  get: function () {
    return _transform.default;
  }
});

var _area = _interopRequireDefault(require("./area.js"));

var _bounds = _interopRequireDefault(require("./bounds.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _circle = _interopRequireDefault(require("./circle.js"));

var _antimeridian = _interopRequireDefault(require("./clip/antimeridian.js"));

var _circle2 = _interopRequireDefault(require("./clip/circle.js"));

var _extent = _interopRequireDefault(require("./clip/extent.js"));

var _rectangle = _interopRequireDefault(require("./clip/rectangle.js"));

var _contains = _interopRequireDefault(require("./contains.js"));

var _distance = _interopRequireDefault(require("./distance.js"));

var _graticule = _interopRequireWildcard(require("./graticule.js"));

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

var _length = _interopRequireDefault(require("./length.js"));

var _index = _interopRequireDefault(require("./path/index.js"));

var _albers = _interopRequireDefault(require("./projection/albers.js"));

var _albersUsa = _interopRequireDefault(require("./projection/albersUsa.js"));

var _azimuthalEqualArea = _interopRequireWildcard(require("./projection/azimuthalEqualArea.js"));

var _azimuthalEquidistant = _interopRequireWildcard(require("./projection/azimuthalEquidistant.js"));

var _conicConformal = _interopRequireWildcard(require("./projection/conicConformal.js"));

var _conicEqualArea = _interopRequireWildcard(require("./projection/conicEqualArea.js"));

var _conicEquidistant = _interopRequireWildcard(require("./projection/conicEquidistant.js"));

var _equalEarth = _interopRequireWildcard(require("./projection/equalEarth.js"));

var _equirectangular = _interopRequireWildcard(require("./projection/equirectangular.js"));

var _gnomonic = _interopRequireWildcard(require("./projection/gnomonic.js"));

var _identity = _interopRequireDefault(require("./projection/identity.js"));

var _index2 = _interopRequireWildcard(require("./projection/index.js"));

var _mercator = _interopRequireWildcard(require("./projection/mercator.js"));

var _naturalEarth = _interopRequireWildcard(require("./projection/naturalEarth1.js"));

var _orthographic = _interopRequireWildcard(require("./projection/orthographic.js"));

var _stereographic = _interopRequireWildcard(require("./projection/stereographic.js"));

var _transverseMercator = _interopRequireWildcard(require("./projection/transverseMercator.js"));

var _rotation = _interopRequireDefault(require("./rotation.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

var _transform = _interopRequireDefault(require("./transform.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./area.js":"../node_modules/d3-geo/src/area.js","./bounds.js":"../node_modules/d3-geo/src/bounds.js","./centroid.js":"../node_modules/d3-geo/src/centroid.js","./circle.js":"../node_modules/d3-geo/src/circle.js","./clip/antimeridian.js":"../node_modules/d3-geo/src/clip/antimeridian.js","./clip/circle.js":"../node_modules/d3-geo/src/clip/circle.js","./clip/extent.js":"../node_modules/d3-geo/src/clip/extent.js","./clip/rectangle.js":"../node_modules/d3-geo/src/clip/rectangle.js","./contains.js":"../node_modules/d3-geo/src/contains.js","./distance.js":"../node_modules/d3-geo/src/distance.js","./graticule.js":"../node_modules/d3-geo/src/graticule.js","./interpolate.js":"../node_modules/d3-geo/src/interpolate.js","./length.js":"../node_modules/d3-geo/src/length.js","./path/index.js":"../node_modules/d3-geo/src/path/index.js","./projection/albers.js":"../node_modules/d3-geo/src/projection/albers.js","./projection/albersUsa.js":"../node_modules/d3-geo/src/projection/albersUsa.js","./projection/azimuthalEqualArea.js":"../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","./projection/azimuthalEquidistant.js":"../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","./projection/conicConformal.js":"../node_modules/d3-geo/src/projection/conicConformal.js","./projection/conicEqualArea.js":"../node_modules/d3-geo/src/projection/conicEqualArea.js","./projection/conicEquidistant.js":"../node_modules/d3-geo/src/projection/conicEquidistant.js","./projection/equalEarth.js":"../node_modules/d3-geo/src/projection/equalEarth.js","./projection/equirectangular.js":"../node_modules/d3-geo/src/projection/equirectangular.js","./projection/gnomonic.js":"../node_modules/d3-geo/src/projection/gnomonic.js","./projection/identity.js":"../node_modules/d3-geo/src/projection/identity.js","./projection/index.js":"../node_modules/d3-geo/src/projection/index.js","./projection/mercator.js":"../node_modules/d3-geo/src/projection/mercator.js","./projection/naturalEarth1.js":"../node_modules/d3-geo/src/projection/naturalEarth1.js","./projection/orthographic.js":"../node_modules/d3-geo/src/projection/orthographic.js","./projection/stereographic.js":"../node_modules/d3-geo/src/projection/stereographic.js","./projection/transverseMercator.js":"../node_modules/d3-geo/src/projection/transverseMercator.js","./rotation.js":"../node_modules/d3-geo/src/rotation.js","./stream.js":"../node_modules/d3-geo/src/stream.js","./transform.js":"../node_modules/d3-geo/src/transform.js"}],"../node_modules/d3-hierarchy/src/cluster.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

function meanX(children) {
  return children.reduce(meanXReduce, 0) / children.length;
}

function meanXReduce(x, c) {
  return x + c.x;
}

function maxY(children) {
  return 1 + children.reduce(maxYReduce, 0);
}

function maxYReduce(y, c) {
  return Math.max(y, c.y);
}

function leafLeft(node) {
  var children;

  while (children = node.children) node = children[0];

  return node;
}

function leafRight(node) {
  var children;

  while (children = node.children) node = children[children.length - 1];

  return node;
}

function _default() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = false;

  function cluster(root) {
    var previousNode,
        x = 0; // First walk, computing the initial x & y values.

    root.eachAfter(function (node) {
      var children = node.children;

      if (children) {
        node.x = meanX(children);
        node.y = maxY(children);
      } else {
        node.x = previousNode ? x += separation(node, previousNode) : 0;
        node.y = 0;
        previousNode = node;
      }
    });
    var left = leafLeft(root),
        right = leafRight(root),
        x0 = left.x - separation(left, right) / 2,
        x1 = right.x + separation(right, left) / 2; // Second walk, normalizing x & y to the desired size.

    return root.eachAfter(nodeSize ? function (node) {
      node.x = (node.x - root.x) * dx;
      node.y = (root.y - node.y) * dy;
    } : function (node) {
      node.x = (node.x - x0) / (x1 - x0) * dx;
      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
    });
  }

  cluster.separation = function (x) {
    return arguments.length ? (separation = x, cluster) : separation;
  };

  cluster.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : nodeSize ? null : [dx, dy];
  };

  cluster.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : nodeSize ? [dx, dy] : null;
  };

  return cluster;
}
},{}],"../node_modules/d3-hierarchy/src/hierarchy/count.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function count(node) {
  var sum = 0,
      children = node.children,
      i = children && children.length;
  if (!i) sum = 1;else while (--i >= 0) sum += children[i].value;
  node.value = sum;
}

function _default() {
  return this.eachAfter(count);
}
},{}],"../node_modules/d3-hierarchy/src/hierarchy/each.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      current,
      next = [node],
      children,
      i,
      n;

  do {
    current = next.reverse(), next = [];

    while (node = current.pop()) {
      callback(node), children = node.children;
      if (children) for (i = 0, n = children.length; i < n; ++i) {
        next.push(children[i]);
      }
    }
  } while (next.length);

  return this;
}
},{}],"../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      nodes = [node],
      children,
      i;

  while (node = nodes.pop()) {
    callback(node), children = node.children;
    if (children) for (i = children.length - 1; i >= 0; --i) {
      nodes.push(children[i]);
    }
  }

  return this;
}
},{}],"../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      nodes = [node],
      next = [],
      children,
      i,
      n;

  while (node = nodes.pop()) {
    next.push(node), children = node.children;
    if (children) for (i = 0, n = children.length; i < n; ++i) {
      nodes.push(children[i]);
    }
  }

  while (node = next.pop()) {
    callback(node);
  }

  return this;
}
},{}],"../node_modules/d3-hierarchy/src/hierarchy/sum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(value) {
  return this.eachAfter(function (node) {
    var sum = +value(node.data) || 0,
        children = node.children,
        i = children && children.length;

    while (--i >= 0) sum += children[i].value;

    node.value = sum;
  });
}
},{}],"../node_modules/d3-hierarchy/src/hierarchy/sort.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(compare) {
  return this.eachBefore(function (node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
}
},{}],"../node_modules/d3-hierarchy/src/hierarchy/path.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(end) {
  var start = this,
      ancestor = leastCommonAncestor(start, end),
      nodes = [start];

  while (start !== ancestor) {
    start = start.parent;
    nodes.push(start);
  }

  var k = nodes.length;

  while (end !== ancestor) {
    nodes.splice(k, 0, end);
    end = end.parent;
  }

  return nodes;
}

function leastCommonAncestor(a, b) {
  if (a === b) return a;
  var aNodes = a.ancestors(),
      bNodes = b.ancestors(),
      c = null;
  a = aNodes.pop();
  b = bNodes.pop();

  while (a === b) {
    c = a;
    a = aNodes.pop();
    b = bNodes.pop();
  }

  return c;
}
},{}],"../node_modules/d3-hierarchy/src/hierarchy/ancestors.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var node = this,
      nodes = [node];

  while (node = node.parent) {
    nodes.push(node);
  }

  return nodes;
}
},{}],"../node_modules/d3-hierarchy/src/hierarchy/descendants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var nodes = [];
  this.each(function (node) {
    nodes.push(node);
  });
  return nodes;
}
},{}],"../node_modules/d3-hierarchy/src/hierarchy/leaves.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var leaves = [];
  this.eachBefore(function (node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
}
},{}],"../node_modules/d3-hierarchy/src/hierarchy/links.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var root = this,
      links = [];
  root.each(function (node) {
    if (node !== root) {
      // Don’t include the root’s parent, if any.
      links.push({
        source: node.parent,
        target: node
      });
    }
  });
  return links;
}
},{}],"../node_modules/d3-hierarchy/src/hierarchy/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hierarchy;
exports.computeHeight = computeHeight;
exports.Node = Node;

var _count = _interopRequireDefault(require("./count.js"));

var _each = _interopRequireDefault(require("./each.js"));

var _eachBefore = _interopRequireDefault(require("./eachBefore.js"));

var _eachAfter = _interopRequireDefault(require("./eachAfter.js"));

var _sum = _interopRequireDefault(require("./sum.js"));

var _sort = _interopRequireDefault(require("./sort.js"));

var _path = _interopRequireDefault(require("./path.js"));

var _ancestors = _interopRequireDefault(require("./ancestors.js"));

var _descendants = _interopRequireDefault(require("./descendants.js"));

var _leaves = _interopRequireDefault(require("./leaves.js"));

var _links = _interopRequireDefault(require("./links.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function hierarchy(data, children) {
  var root = new Node(data),
      valued = +data.value && (root.value = data.value),
      node,
      nodes = [root],
      child,
      childs,
      i,
      n;
  if (children == null) children = defaultChildren;

  while (node = nodes.pop()) {
    if (valued) node.value = +node.data.value;

    if ((childs = children(node.data)) && (n = childs.length)) {
      node.children = new Array(n);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new Node(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }

  return root.eachBefore(computeHeight);
}

function node_copy() {
  return hierarchy(this).eachBefore(copyData);
}

function defaultChildren(d) {
  return d.children;
}

function copyData(node) {
  node.data = node.data.data;
}

function computeHeight(node) {
  var height = 0;

  do node.height = height; while ((node = node.parent) && node.height < ++height);
}

function Node(data) {
  this.data = data;
  this.depth = this.height = 0;
  this.parent = null;
}

Node.prototype = hierarchy.prototype = {
  constructor: Node,
  count: _count.default,
  each: _each.default,
  eachAfter: _eachAfter.default,
  eachBefore: _eachBefore.default,
  sum: _sum.default,
  sort: _sort.default,
  path: _path.default,
  ancestors: _ancestors.default,
  descendants: _descendants.default,
  leaves: _leaves.default,
  links: _links.default,
  copy: node_copy
};
},{"./count.js":"../node_modules/d3-hierarchy/src/hierarchy/count.js","./each.js":"../node_modules/d3-hierarchy/src/hierarchy/each.js","./eachBefore.js":"../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","./eachAfter.js":"../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","./sum.js":"../node_modules/d3-hierarchy/src/hierarchy/sum.js","./sort.js":"../node_modules/d3-hierarchy/src/hierarchy/sort.js","./path.js":"../node_modules/d3-hierarchy/src/hierarchy/path.js","./ancestors.js":"../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","./descendants.js":"../node_modules/d3-hierarchy/src/hierarchy/descendants.js","./leaves.js":"../node_modules/d3-hierarchy/src/hierarchy/leaves.js","./links.js":"../node_modules/d3-hierarchy/src/hierarchy/links.js"}],"../node_modules/d3-hierarchy/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shuffle = shuffle;
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;

function shuffle(array) {
  var m = array.length,
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m];
    array[m] = array[i];
    array[i] = t;
  }

  return array;
}
},{}],"../node_modules/d3-hierarchy/src/pack/enclose.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("../array.js");

function _default(circles) {
  var i = 0,
      n = (circles = (0, _array.shuffle)(_array.slice.call(circles))).length,
      B = [],
      p,
      e;

  while (i < n) {
    p = circles[i];
    if (e && enclosesWeak(e, p)) ++i;else e = encloseBasis(B = extendBasis(B, p)), i = 0;
  }

  return e;
}

function extendBasis(B, p) {
  var i, j;
  if (enclosesWeakAll(p, B)) return [p]; // If we get here then B must have at least one element.

  for (i = 0; i < B.length; ++i) {
    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {
      return [B[i], p];
    }
  } // If we get here then B must have at least two elements.


  for (i = 0; i < B.length - 1; ++i) {
    for (j = i + 1; j < B.length; ++j) {
      if (enclosesNot(encloseBasis2(B[i], B[j]), p) && enclosesNot(encloseBasis2(B[i], p), B[j]) && enclosesNot(encloseBasis2(B[j], p), B[i]) && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {
        return [B[i], B[j], p];
      }
    }
  } // If we get here then something is very wrong.


  throw new Error();
}

function enclosesNot(a, b) {
  var dr = a.r - b.r,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr < 0 || dr * dr < dx * dx + dy * dy;
}

function enclosesWeak(a, b) {
  var dr = a.r - b.r + 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function enclosesWeakAll(a, B) {
  for (var i = 0; i < B.length; ++i) {
    if (!enclosesWeak(a, B[i])) {
      return false;
    }
  }

  return true;
}

function encloseBasis(B) {
  switch (B.length) {
    case 1:
      return encloseBasis1(B[0]);

    case 2:
      return encloseBasis2(B[0], B[1]);

    case 3:
      return encloseBasis3(B[0], B[1], B[2]);
  }
}

function encloseBasis1(a) {
  return {
    x: a.x,
    y: a.y,
    r: a.r
  };
}

function encloseBasis2(a, b) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x21 = x2 - x1,
      y21 = y2 - y1,
      r21 = r2 - r1,
      l = Math.sqrt(x21 * x21 + y21 * y21);
  return {
    x: (x1 + x2 + x21 / l * r21) / 2,
    y: (y1 + y2 + y21 / l * r21) / 2,
    r: (l + r1 + r2) / 2
  };
}

function encloseBasis3(a, b, c) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x3 = c.x,
      y3 = c.y,
      r3 = c.r,
      a2 = x1 - x2,
      a3 = x1 - x3,
      b2 = y1 - y2,
      b3 = y1 - y3,
      c2 = r2 - r1,
      c3 = r3 - r1,
      d1 = x1 * x1 + y1 * y1 - r1 * r1,
      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,
      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,
      ab = a3 * b2 - a2 * b3,
      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,
      xb = (b3 * c2 - b2 * c3) / ab,
      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,
      yb = (a2 * c3 - a3 * c2) / ab,
      A = xb * xb + yb * yb - 1,
      B = 2 * (r1 + xa * xb + ya * yb),
      C = xa * xa + ya * ya - r1 * r1,
      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
  return {
    x: x1 + xa + xb * r,
    y: y1 + ya + yb * r,
    r: r
  };
}
},{"../array.js":"../node_modules/d3-hierarchy/src/array.js"}],"../node_modules/d3-hierarchy/src/pack/siblings.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packEnclose = packEnclose;
exports.default = _default;

var _enclose = _interopRequireDefault(require("./enclose.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function place(b, a, c) {
  var dx = b.x - a.x,
      x,
      a2,
      dy = b.y - a.y,
      y,
      b2,
      d2 = dx * dx + dy * dy;

  if (d2) {
    a2 = a.r + c.r, a2 *= a2;
    b2 = b.r + c.r, b2 *= b2;

    if (a2 > b2) {
      x = (d2 + b2 - a2) / (2 * d2);
      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
      c.x = b.x - x * dx - y * dy;
      c.y = b.y - x * dy + y * dx;
    } else {
      x = (d2 + a2 - b2) / (2 * d2);
      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));
      c.x = a.x + x * dx - y * dy;
      c.y = a.y + x * dy + y * dx;
    }
  } else {
    c.x = a.x + c.r;
    c.y = a.y;
  }
}

function intersects(a, b) {
  var dr = a.r + b.r - 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function score(node) {
  var a = node._,
      b = node.next._,
      ab = a.r + b.r,
      dx = (a.x * b.r + b.x * a.r) / ab,
      dy = (a.y * b.r + b.y * a.r) / ab;
  return dx * dx + dy * dy;
}

function Node(circle) {
  this._ = circle;
  this.next = null;
  this.previous = null;
}

function packEnclose(circles) {
  if (!(n = circles.length)) return 0;
  var a, b, c, n, aa, ca, i, j, k, sj, sk; // Place the first circle.

  a = circles[0], a.x = 0, a.y = 0;
  if (!(n > 1)) return a.r; // Place the second circle.

  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
  if (!(n > 2)) return a.r + b.r; // Place the third circle.

  place(b, a, c = circles[2]); // Initialize the front-chain using the first three circles a, b and c.

  a = new Node(a), b = new Node(b), c = new Node(c);
  a.next = c.previous = b;
  b.next = a.previous = c;
  c.next = b.previous = a; // Attempt to place each remaining circle…

  pack: for (i = 3; i < n; ++i) {
    place(a._, b._, c = circles[i]), c = new Node(c); // Find the closest intersecting circle on the front-chain, if any.
    // “Closeness” is determined by linear distance along the front-chain.
    // “Ahead” or “behind” is likewise determined by linear distance.

    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;

    do {
      if (sj <= sk) {
        if (intersects(j._, c._)) {
          b = j, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sj += j._.r, j = j.next;
      } else {
        if (intersects(k._, c._)) {
          a = k, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sk += k._.r, k = k.previous;
      }
    } while (j !== k.next); // Success! Insert the new circle c between a and b.


    c.previous = a, c.next = b, a.next = b.previous = b = c; // Compute the new closest circle pair to the centroid.

    aa = score(a);

    while ((c = c.next) !== b) {
      if ((ca = score(c)) < aa) {
        a = c, aa = ca;
      }
    }

    b = a.next;
  } // Compute the enclosing circle of the front chain.


  a = [b._], c = b;

  while ((c = c.next) !== b) a.push(c._);

  c = (0, _enclose.default)(a); // Translate the circles to put the enclosing circle around the origin.

  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;

  return c.r;
}

function _default(circles) {
  packEnclose(circles);
  return circles;
}
},{"./enclose.js":"../node_modules/d3-hierarchy/src/pack/enclose.js"}],"../node_modules/d3-hierarchy/src/accessors.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.optional = optional;
exports.required = required;

function optional(f) {
  return f == null ? null : required(f);
}

function required(f) {
  if (typeof f !== "function") throw new Error();
  return f;
}
},{}],"../node_modules/d3-hierarchy/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.constantZero = constantZero;
exports.default = _default;

function constantZero() {
  return 0;
}

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../node_modules/d3-hierarchy/src/pack/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _siblings = require("./siblings.js");

var _accessors = require("../accessors.js");

var _constant = _interopRequireWildcard(require("../constant.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function defaultRadius(d) {
  return Math.sqrt(d.value);
}

function _default() {
  var radius = null,
      dx = 1,
      dy = 1,
      padding = _constant.constantZero;

  function pack(root) {
    root.x = dx / 2, root.y = dy / 2;

    if (radius) {
      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));
    } else {
      root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(_constant.constantZero, 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
    }

    return root;
  }

  pack.radius = function (x) {
    return arguments.length ? (radius = (0, _accessors.optional)(x), pack) : radius;
  };

  pack.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
  };

  pack.padding = function (x) {
    return arguments.length ? (padding = typeof x === "function" ? x : (0, _constant.default)(+x), pack) : padding;
  };

  return pack;
}

function radiusLeaf(radius) {
  return function (node) {
    if (!node.children) {
      node.r = Math.max(0, +radius(node) || 0);
    }
  };
}

function packChildren(padding, k) {
  return function (node) {
    if (children = node.children) {
      var children,
          i,
          n = children.length,
          r = padding(node) * k || 0,
          e;
      if (r) for (i = 0; i < n; ++i) children[i].r += r;
      e = (0, _siblings.packEnclose)(children);
      if (r) for (i = 0; i < n; ++i) children[i].r -= r;
      node.r = e + r;
    }
  };
}

function translateChild(k) {
  return function (node) {
    var parent = node.parent;
    node.r *= k;

    if (parent) {
      node.x = parent.x + k * node.x;
      node.y = parent.y + k * node.y;
    }
  };
}
},{"./siblings.js":"../node_modules/d3-hierarchy/src/pack/siblings.js","../accessors.js":"../node_modules/d3-hierarchy/src/accessors.js","../constant.js":"../node_modules/d3-hierarchy/src/constant.js"}],"../node_modules/d3-hierarchy/src/treemap/round.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node) {
  node.x0 = Math.round(node.x0);
  node.y0 = Math.round(node.y0);
  node.x1 = Math.round(node.x1);
  node.y1 = Math.round(node.y1);
}
},{}],"../node_modules/d3-hierarchy/src/treemap/dice.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (x1 - x0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.y0 = y0, node.y1 = y1;
    node.x0 = x0, node.x1 = x0 += node.value * k;
  }
}
},{}],"../node_modules/d3-hierarchy/src/partition.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _round = _interopRequireDefault(require("./treemap/round.js"));

var _dice = _interopRequireDefault(require("./treemap/dice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var dx = 1,
      dy = 1,
      padding = 0,
      round = false;

  function partition(root) {
    var n = root.height + 1;
    root.x0 = root.y0 = padding;
    root.x1 = dx;
    root.y1 = dy / n;
    root.eachBefore(positionNode(dy, n));
    if (round) root.eachBefore(_round.default);
    return root;
  }

  function positionNode(dy, n) {
    return function (node) {
      if (node.children) {
        (0, _dice.default)(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
      }

      var x0 = node.x0,
          y0 = node.y0,
          x1 = node.x1 - padding,
          y1 = node.y1 - padding;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      node.x0 = x0;
      node.y0 = y0;
      node.x1 = x1;
      node.y1 = y1;
    };
  }

  partition.round = function (x) {
    return arguments.length ? (round = !!x, partition) : round;
  };

  partition.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
  };

  partition.padding = function (x) {
    return arguments.length ? (padding = +x, partition) : padding;
  };

  return partition;
}
},{"./treemap/round.js":"../node_modules/d3-hierarchy/src/treemap/round.js","./treemap/dice.js":"../node_modules/d3-hierarchy/src/treemap/dice.js"}],"../node_modules/d3-hierarchy/src/stratify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _accessors = require("./accessors.js");

var _index = require("./hierarchy/index.js");

var keyPrefix = "$",
    // Protect against keys like “__proto__”.
preroot = {
  depth: -1
},
    ambiguous = {};

function defaultId(d) {
  return d.id;
}

function defaultParentId(d) {
  return d.parentId;
}

function _default() {
  var id = defaultId,
      parentId = defaultParentId;

  function stratify(data) {
    var d,
        i,
        n = data.length,
        root,
        parent,
        node,
        nodes = new Array(n),
        nodeId,
        nodeKey,
        nodeByKey = {};

    for (i = 0; i < n; ++i) {
      d = data[i], node = nodes[i] = new _index.Node(d);

      if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
        nodeKey = keyPrefix + (node.id = nodeId);
        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;
      }
    }

    for (i = 0; i < n; ++i) {
      node = nodes[i], nodeId = parentId(data[i], i, data);

      if (nodeId == null || !(nodeId += "")) {
        if (root) throw new Error("multiple roots");
        root = node;
      } else {
        parent = nodeByKey[keyPrefix + nodeId];
        if (!parent) throw new Error("missing: " + nodeId);
        if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
        if (parent.children) parent.children.push(node);else parent.children = [node];
        node.parent = parent;
      }
    }

    if (!root) throw new Error("no root");
    root.parent = preroot;
    root.eachBefore(function (node) {
      node.depth = node.parent.depth + 1;
      --n;
    }).eachBefore(_index.computeHeight);
    root.parent = null;
    if (n > 0) throw new Error("cycle");
    return root;
  }

  stratify.id = function (x) {
    return arguments.length ? (id = (0, _accessors.required)(x), stratify) : id;
  };

  stratify.parentId = function (x) {
    return arguments.length ? (parentId = (0, _accessors.required)(x), stratify) : parentId;
  };

  return stratify;
}
},{"./accessors.js":"../node_modules/d3-hierarchy/src/accessors.js","./hierarchy/index.js":"../node_modules/d3-hierarchy/src/hierarchy/index.js"}],"../node_modules/d3-hierarchy/src/tree.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./hierarchy/index.js");

function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
} // function radialSeparation(a, b) {
//   return (a.parent === b.parent ? 1 : 2) / a.depth;
// }
// This function is used to traverse the left contour of a subtree (or
// subforest). It returns the successor of v on this contour. This successor is
// either given by the leftmost child of v or by the thread of v. The function
// returns null if and only if v is on the highest level of its subtree.


function nextLeft(v) {
  var children = v.children;
  return children ? children[0] : v.t;
} // This function works analogously to nextLeft.


function nextRight(v) {
  var children = v.children;
  return children ? children[children.length - 1] : v.t;
} // Shifts the current subtree rooted at w+. This is done by increasing
// prelim(w+) and mod(w+) by shift.


function moveSubtree(wm, wp, shift) {
  var change = shift / (wp.i - wm.i);
  wp.c -= change;
  wp.s += shift;
  wm.c += change;
  wp.z += shift;
  wp.m += shift;
} // All other shifts, applied to the smaller subtrees between w- and w+, are
// performed by this function. To prepare the shifts, we have to adjust
// change(w+), shift(w+), and change(w-).


function executeShifts(v) {
  var shift = 0,
      change = 0,
      children = v.children,
      i = children.length,
      w;

  while (--i >= 0) {
    w = children[i];
    w.z += shift;
    w.m += shift;
    shift += w.s + (change += w.c);
  }
} // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
// returns the specified (default) ancestor.


function nextAncestor(vim, v, ancestor) {
  return vim.a.parent === v.parent ? vim.a : ancestor;
}

function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null; // default ancestor

  this.a = this; // ancestor

  this.z = 0; // prelim

  this.m = 0; // mod

  this.c = 0; // change

  this.s = 0; // shift

  this.t = null; // thread

  this.i = i; // number
}

TreeNode.prototype = Object.create(_index.Node.prototype);

function treeRoot(root) {
  var tree = new TreeNode(root, 0),
      node,
      nodes = [tree],
      child,
      children,
      i,
      n;

  while (node = nodes.pop()) {
    if (children = node._.children) {
      node.children = new Array(n = children.length);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new TreeNode(children[i], i));
        child.parent = node;
      }
    }
  }

  (tree.parent = new TreeNode(null, 0)).children = [tree];
  return tree;
} // Node-link tree diagram using the Reingold-Tilford "tidy" algorithm


function _default() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = null;

  function tree(root) {
    var t = treeRoot(root); // Compute the layout using Buchheim et al.’s algorithm.

    t.eachAfter(firstWalk), t.parent.m = -t.z;
    t.eachBefore(secondWalk); // If a fixed node size is specified, scale x and y.

    if (nodeSize) root.eachBefore(sizeNode); // If a fixed tree size is specified, scale x and y based on the extent.
    // Compute the left-most, right-most, and depth-most nodes for extents.
    else {
        var left = root,
            right = root,
            bottom = root;
        root.eachBefore(function (node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var s = left === right ? 1 : separation(left, right) / 2,
            tx = s - left.x,
            kx = dx / (right.x + s + tx),
            ky = dy / (bottom.depth || 1);
        root.eachBefore(function (node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
    return root;
  } // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
  // applied recursively to the children of v, as well as the function
  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
  // node v is placed to the midpoint of its outermost children.


  function firstWalk(v) {
    var children = v.children,
        siblings = v.parent.children,
        w = v.i ? siblings[v.i - 1] : null;

    if (children) {
      executeShifts(v);
      var midpoint = (children[0].z + children[children.length - 1].z) / 2;

      if (w) {
        v.z = w.z + separation(v._, w._);
        v.m = v.z - midpoint;
      } else {
        v.z = midpoint;
      }
    } else if (w) {
      v.z = w.z + separation(v._, w._);
    }

    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
  } // Computes all real x-coordinates by summing up the modifiers recursively.


  function secondWalk(v) {
    v._.x = v.z + v.parent.m;
    v.m += v.parent.m;
  } // The core of the algorithm. Here, a new subtree is combined with the
  // previous subtrees. Threads are used to traverse the inside and outside
  // contours of the left and right subtree up to the highest common level. The
  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
  // superscript o means outside and i means inside, the subscript - means left
  // subtree and + means right subtree. For summing up the modifiers along the
  // contour, we use respective variables si+, si-, so-, and so+. Whenever two
  // nodes of the inside contours conflict, we compute the left one of the
  // greatest uncommon ancestors using the function ANCESTOR and call MOVE
  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
  // Finally, we add a new thread (if necessary).


  function apportion(v, w, ancestor) {
    if (w) {
      var vip = v,
          vop = v,
          vim = w,
          vom = vip.parent.children[0],
          sip = vip.m,
          sop = vop.m,
          sim = vim.m,
          som = vom.m,
          shift;

      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
        vom = nextLeft(vom);
        vop = nextRight(vop);
        vop.a = v;
        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);

        if (shift > 0) {
          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
          sip += shift;
          sop += shift;
        }

        sim += vim.m;
        sip += vip.m;
        som += vom.m;
        sop += vop.m;
      }

      if (vim && !nextRight(vop)) {
        vop.t = vim;
        vop.m += sim - sop;
      }

      if (vip && !nextLeft(vom)) {
        vom.t = vip;
        vom.m += sip - som;
        ancestor = v;
      }
    }

    return ancestor;
  }

  function sizeNode(node) {
    node.x *= dx;
    node.y = node.depth * dy;
  }

  tree.separation = function (x) {
    return arguments.length ? (separation = x, tree) : separation;
  };

  tree.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : nodeSize ? null : [dx, dy];
  };

  tree.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : nodeSize ? [dx, dy] : null;
  };

  return tree;
}
},{"./hierarchy/index.js":"../node_modules/d3-hierarchy/src/hierarchy/index.js"}],"../node_modules/d3-hierarchy/src/treemap/slice.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (y1 - y0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.x0 = x0, node.x1 = x1;
    node.y0 = y0, node.y1 = y0 += node.value * k;
  }
}
},{}],"../node_modules/d3-hierarchy/src/treemap/squarify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.squarifyRatio = squarifyRatio;
exports.default = exports.phi = void 0;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var phi = (1 + Math.sqrt(5)) / 2;
exports.phi = phi;

function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
  var rows = [],
      nodes = parent.children,
      row,
      nodeValue,
      i0 = 0,
      i1 = 0,
      n = nodes.length,
      dx,
      dy,
      value = parent.value,
      sumValue,
      minValue,
      maxValue,
      newRatio,
      minRatio,
      alpha,
      beta;

  while (i0 < n) {
    dx = x1 - x0, dy = y1 - y0; // Find the next non-empty node.

    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);

    minValue = maxValue = sumValue;
    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
    beta = sumValue * sumValue * alpha;
    minRatio = Math.max(maxValue / beta, beta / minValue); // Keep adding nodes while the aspect ratio maintains or improves.

    for (; i1 < n; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue) minValue = nodeValue;
      if (nodeValue > maxValue) maxValue = nodeValue;
      beta = sumValue * sumValue * alpha;
      newRatio = Math.max(maxValue / beta, beta / minValue);

      if (newRatio > minRatio) {
        sumValue -= nodeValue;
        break;
      }

      minRatio = newRatio;
    } // Position and record the row orientation.


    rows.push(row = {
      value: sumValue,
      dice: dx < dy,
      children: nodes.slice(i0, i1)
    });
    if (row.dice) (0, _dice.default)(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);else (0, _slice.default)(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
    value -= sumValue, i0 = i1;
  }

  return rows;
}

var _default = function custom(ratio) {
  function squarify(parent, x0, y0, x1, y1) {
    squarifyRatio(ratio, parent, x0, y0, x1, y1);
  }

  squarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return squarify;
}(phi);

exports.default = _default;
},{"./dice.js":"../node_modules/d3-hierarchy/src/treemap/dice.js","./slice.js":"../node_modules/d3-hierarchy/src/treemap/slice.js"}],"../node_modules/d3-hierarchy/src/treemap/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _round = _interopRequireDefault(require("./round.js"));

var _squarify = _interopRequireDefault(require("./squarify.js"));

var _accessors = require("../accessors.js");

var _constant = _interopRequireWildcard(require("../constant.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var tile = _squarify.default,
      round = false,
      dx = 1,
      dy = 1,
      paddingStack = [0],
      paddingInner = _constant.constantZero,
      paddingTop = _constant.constantZero,
      paddingRight = _constant.constantZero,
      paddingBottom = _constant.constantZero,
      paddingLeft = _constant.constantZero;

  function treemap(root) {
    root.x0 = root.y0 = 0;
    root.x1 = dx;
    root.y1 = dy;
    root.eachBefore(positionNode);
    paddingStack = [0];
    if (round) root.eachBefore(_round.default);
    return root;
  }

  function positionNode(node) {
    var p = paddingStack[node.depth],
        x0 = node.x0 + p,
        y0 = node.y0 + p,
        x1 = node.x1 - p,
        y1 = node.y1 - p;
    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
    node.x0 = x0;
    node.y0 = y0;
    node.x1 = x1;
    node.y1 = y1;

    if (node.children) {
      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
      x0 += paddingLeft(node) - p;
      y0 += paddingTop(node) - p;
      x1 -= paddingRight(node) - p;
      y1 -= paddingBottom(node) - p;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      tile(node, x0, y0, x1, y1);
    }
  }

  treemap.round = function (x) {
    return arguments.length ? (round = !!x, treemap) : round;
  };

  treemap.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
  };

  treemap.tile = function (x) {
    return arguments.length ? (tile = (0, _accessors.required)(x), treemap) : tile;
  };

  treemap.padding = function (x) {
    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
  };

  treemap.paddingInner = function (x) {
    return arguments.length ? (paddingInner = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingInner;
  };

  treemap.paddingOuter = function (x) {
    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
  };

  treemap.paddingTop = function (x) {
    return arguments.length ? (paddingTop = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingTop;
  };

  treemap.paddingRight = function (x) {
    return arguments.length ? (paddingRight = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingRight;
  };

  treemap.paddingBottom = function (x) {
    return arguments.length ? (paddingBottom = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingBottom;
  };

  treemap.paddingLeft = function (x) {
    return arguments.length ? (paddingLeft = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingLeft;
  };

  return treemap;
}
},{"./round.js":"../node_modules/d3-hierarchy/src/treemap/round.js","./squarify.js":"../node_modules/d3-hierarchy/src/treemap/squarify.js","../accessors.js":"../node_modules/d3-hierarchy/src/accessors.js","../constant.js":"../node_modules/d3-hierarchy/src/constant.js"}],"../node_modules/d3-hierarchy/src/treemap/binary.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      i,
      n = nodes.length,
      sum,
      sums = new Array(n + 1);

  for (sums[0] = sum = i = 0; i < n; ++i) {
    sums[i + 1] = sum += nodes[i].value;
  }

  partition(0, n, parent.value, x0, y0, x1, y1);

  function partition(i, j, value, x0, y0, x1, y1) {
    if (i >= j - 1) {
      var node = nodes[i];
      node.x0 = x0, node.y0 = y0;
      node.x1 = x1, node.y1 = y1;
      return;
    }

    var valueOffset = sums[i],
        valueTarget = value / 2 + valueOffset,
        k = i + 1,
        hi = j - 1;

    while (k < hi) {
      var mid = k + hi >>> 1;
      if (sums[mid] < valueTarget) k = mid + 1;else hi = mid;
    }

    if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) --k;
    var valueLeft = sums[k] - valueOffset,
        valueRight = value - valueLeft;

    if (x1 - x0 > y1 - y0) {
      var xk = (x0 * valueRight + x1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, xk, y1);
      partition(k, j, valueRight, xk, y0, x1, y1);
    } else {
      var yk = (y0 * valueRight + y1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, x1, yk);
      partition(k, j, valueRight, x0, yk, x1, y1);
    }
  }
}
},{}],"../node_modules/d3-hierarchy/src/treemap/sliceDice.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(parent, x0, y0, x1, y1) {
  (parent.depth & 1 ? _slice.default : _dice.default)(parent, x0, y0, x1, y1);
}
},{"./dice.js":"../node_modules/d3-hierarchy/src/treemap/dice.js","./slice.js":"../node_modules/d3-hierarchy/src/treemap/slice.js"}],"../node_modules/d3-hierarchy/src/treemap/resquarify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

var _squarify = require("./squarify.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function custom(ratio) {
  function resquarify(parent, x0, y0, x1, y1) {
    if ((rows = parent._squarify) && rows.ratio === ratio) {
      var rows,
          row,
          nodes,
          i,
          j = -1,
          n,
          m = rows.length,
          value = parent.value;

      while (++j < m) {
        row = rows[j], nodes = row.children;

        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;

        if (row.dice) (0, _dice.default)(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);else (0, _slice.default)(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);
        value -= row.value;
      }
    } else {
      parent._squarify = rows = (0, _squarify.squarifyRatio)(ratio, parent, x0, y0, x1, y1);
      rows.ratio = ratio;
    }
  }

  resquarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return resquarify;
}(_squarify.phi);

exports.default = _default;
},{"./dice.js":"../node_modules/d3-hierarchy/src/treemap/dice.js","./slice.js":"../node_modules/d3-hierarchy/src/treemap/slice.js","./squarify.js":"../node_modules/d3-hierarchy/src/treemap/squarify.js"}],"../node_modules/d3-hierarchy/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "cluster", {
  enumerable: true,
  get: function () {
    return _cluster.default;
  }
});
Object.defineProperty(exports, "hierarchy", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "pack", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "packSiblings", {
  enumerable: true,
  get: function () {
    return _siblings.default;
  }
});
Object.defineProperty(exports, "packEnclose", {
  enumerable: true,
  get: function () {
    return _enclose.default;
  }
});
Object.defineProperty(exports, "partition", {
  enumerable: true,
  get: function () {
    return _partition.default;
  }
});
Object.defineProperty(exports, "stratify", {
  enumerable: true,
  get: function () {
    return _stratify.default;
  }
});
Object.defineProperty(exports, "tree", {
  enumerable: true,
  get: function () {
    return _tree.default;
  }
});
Object.defineProperty(exports, "treemap", {
  enumerable: true,
  get: function () {
    return _index3.default;
  }
});
Object.defineProperty(exports, "treemapBinary", {
  enumerable: true,
  get: function () {
    return _binary.default;
  }
});
Object.defineProperty(exports, "treemapDice", {
  enumerable: true,
  get: function () {
    return _dice.default;
  }
});
Object.defineProperty(exports, "treemapSlice", {
  enumerable: true,
  get: function () {
    return _slice.default;
  }
});
Object.defineProperty(exports, "treemapSliceDice", {
  enumerable: true,
  get: function () {
    return _sliceDice.default;
  }
});
Object.defineProperty(exports, "treemapSquarify", {
  enumerable: true,
  get: function () {
    return _squarify.default;
  }
});
Object.defineProperty(exports, "treemapResquarify", {
  enumerable: true,
  get: function () {
    return _resquarify.default;
  }
});

var _cluster = _interopRequireDefault(require("./cluster.js"));

var _index = _interopRequireDefault(require("./hierarchy/index.js"));

var _index2 = _interopRequireDefault(require("./pack/index.js"));

var _siblings = _interopRequireDefault(require("./pack/siblings.js"));

var _enclose = _interopRequireDefault(require("./pack/enclose.js"));

var _partition = _interopRequireDefault(require("./partition.js"));

var _stratify = _interopRequireDefault(require("./stratify.js"));

var _tree = _interopRequireDefault(require("./tree.js"));

var _index3 = _interopRequireDefault(require("./treemap/index.js"));

var _binary = _interopRequireDefault(require("./treemap/binary.js"));

var _dice = _interopRequireDefault(require("./treemap/dice.js"));

var _slice = _interopRequireDefault(require("./treemap/slice.js"));

var _sliceDice = _interopRequireDefault(require("./treemap/sliceDice.js"));

var _squarify = _interopRequireDefault(require("./treemap/squarify.js"));

var _resquarify = _interopRequireDefault(require("./treemap/resquarify.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./cluster.js":"../node_modules/d3-hierarchy/src/cluster.js","./hierarchy/index.js":"../node_modules/d3-hierarchy/src/hierarchy/index.js","./pack/index.js":"../node_modules/d3-hierarchy/src/pack/index.js","./pack/siblings.js":"../node_modules/d3-hierarchy/src/pack/siblings.js","./pack/enclose.js":"../node_modules/d3-hierarchy/src/pack/enclose.js","./partition.js":"../node_modules/d3-hierarchy/src/partition.js","./stratify.js":"../node_modules/d3-hierarchy/src/stratify.js","./tree.js":"../node_modules/d3-hierarchy/src/tree.js","./treemap/index.js":"../node_modules/d3-hierarchy/src/treemap/index.js","./treemap/binary.js":"../node_modules/d3-hierarchy/src/treemap/binary.js","./treemap/dice.js":"../node_modules/d3-hierarchy/src/treemap/dice.js","./treemap/slice.js":"../node_modules/d3-hierarchy/src/treemap/slice.js","./treemap/sliceDice.js":"../node_modules/d3-hierarchy/src/treemap/sliceDice.js","./treemap/squarify.js":"../node_modules/d3-hierarchy/src/treemap/squarify.js","./treemap/resquarify.js":"../node_modules/d3-hierarchy/src/treemap/resquarify.js"}],"../node_modules/d3-polygon/src/area.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      a,
      b = polygon[n - 1],
      area = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    area += a[1] * b[0] - a[0] * b[1];
  }

  return area / 2;
}
},{}],"../node_modules/d3-polygon/src/centroid.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      x = 0,
      y = 0,
      a,
      b = polygon[n - 1],
      c,
      k = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    k += c = a[0] * b[1] - b[0] * a[1];
    x += (a[0] + b[0]) * c;
    y += (a[1] + b[1]) * c;
  }

  return k *= 3, [x / k, y / k];
}
},{}],"../node_modules/d3-polygon/src/cross.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of
// the 3D cross product in a quadrant I Cartesian coordinate system (+x is
// right, +y is up). Returns a positive value if ABC is counter-clockwise,
// negative if clockwise, and zero if the points are collinear.
function _default(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
}
},{}],"../node_modules/d3-polygon/src/hull.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cross = _interopRequireDefault(require("./cross.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function lexicographicOrder(a, b) {
  return a[0] - b[0] || a[1] - b[1];
} // Computes the upper convex hull per the monotone chain algorithm.
// Assumes points.length >= 3, is sorted by x, unique in y.
// Returns an array of indices into points in left-to-right order.


function computeUpperHullIndexes(points) {
  var n = points.length,
      indexes = [0, 1],
      size = 2;

  for (var i = 2; i < n; ++i) {
    while (size > 1 && (0, _cross.default)(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;

    indexes[size++] = i;
  }

  return indexes.slice(0, size); // remove popped points
}

function _default(points) {
  if ((n = points.length) < 3) return null;
  var i,
      n,
      sortedPoints = new Array(n),
      flippedPoints = new Array(n);

  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];

  sortedPoints.sort(lexicographicOrder);

  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];

  var upperIndexes = computeUpperHullIndexes(sortedPoints),
      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.

  var skipLeft = lowerIndexes[0] === upperIndexes[0],
      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],
      hull = []; // Add upper hull in right-to-l order.
  // Then add lower hull in left-to-right order.

  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);

  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);

  return hull;
}
},{"./cross.js":"../node_modules/d3-polygon/src/cross.js"}],"../node_modules/d3-polygon/src/contains.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon, point) {
  var n = polygon.length,
      p = polygon[n - 1],
      x = point[0],
      y = point[1],
      x0 = p[0],
      y0 = p[1],
      x1,
      y1,
      inside = false;

  for (var i = 0; i < n; ++i) {
    p = polygon[i], x1 = p[0], y1 = p[1];
    if (y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1) inside = !inside;
    x0 = x1, y0 = y1;
  }

  return inside;
}
},{}],"../node_modules/d3-polygon/src/length.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      b = polygon[n - 1],
      xa,
      ya,
      xb = b[0],
      yb = b[1],
      perimeter = 0;

  while (++i < n) {
    xa = xb;
    ya = yb;
    b = polygon[i];
    xb = b[0];
    yb = b[1];
    xa -= xb;
    ya -= yb;
    perimeter += Math.sqrt(xa * xa + ya * ya);
  }

  return perimeter;
}
},{}],"../node_modules/d3-polygon/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "polygonArea", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "polygonCentroid", {
  enumerable: true,
  get: function () {
    return _centroid.default;
  }
});
Object.defineProperty(exports, "polygonHull", {
  enumerable: true,
  get: function () {
    return _hull.default;
  }
});
Object.defineProperty(exports, "polygonContains", {
  enumerable: true,
  get: function () {
    return _contains.default;
  }
});
Object.defineProperty(exports, "polygonLength", {
  enumerable: true,
  get: function () {
    return _length.default;
  }
});

var _area = _interopRequireDefault(require("./area.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _hull = _interopRequireDefault(require("./hull.js"));

var _contains = _interopRequireDefault(require("./contains.js"));

var _length = _interopRequireDefault(require("./length.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./area.js":"../node_modules/d3-polygon/src/area.js","./centroid.js":"../node_modules/d3-polygon/src/centroid.js","./hull.js":"../node_modules/d3-polygon/src/hull.js","./contains.js":"../node_modules/d3-polygon/src/contains.js","./length.js":"../node_modules/d3-polygon/src/length.js"}],"../node_modules/d3-random/src/defaultSource.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return Math.random();
}
},{}],"../node_modules/d3-random/src/uniform.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomUniform(source) {
  function randomUniform(min, max) {
    min = min == null ? 0 : +min;
    max = max == null ? 1 : +max;
    if (arguments.length === 1) max = min, min = 0;else max -= min;
    return function () {
      return source() * max + min;
    };
  }

  randomUniform.source = sourceRandomUniform;
  return randomUniform;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"../node_modules/d3-random/src/defaultSource.js"}],"../node_modules/d3-random/src/normal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomNormal(source) {
  function randomNormal(mu, sigma) {
    var x, r;
    mu = mu == null ? 0 : +mu;
    sigma = sigma == null ? 1 : +sigma;
    return function () {
      var y; // If available, use the second previously-generated uniform random.

      if (x != null) y = x, x = null; // Otherwise, generate a new x and y.
      else do {
          x = source() * 2 - 1;
          y = source() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);
      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
    };
  }

  randomNormal.source = sourceRandomNormal;
  return randomNormal;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"../node_modules/d3-random/src/defaultSource.js"}],"../node_modules/d3-random/src/logNormal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

var _normal = _interopRequireDefault(require("./normal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomLogNormal(source) {
  function randomLogNormal() {
    var randomNormal = _normal.default.source(source).apply(this, arguments);

    return function () {
      return Math.exp(randomNormal());
    };
  }

  randomLogNormal.source = sourceRandomLogNormal;
  return randomLogNormal;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"../node_modules/d3-random/src/defaultSource.js","./normal":"../node_modules/d3-random/src/normal.js"}],"../node_modules/d3-random/src/irwinHall.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomIrwinHall(source) {
  function randomIrwinHall(n) {
    return function () {
      for (var sum = 0, i = 0; i < n; ++i) sum += source();

      return sum;
    };
  }

  randomIrwinHall.source = sourceRandomIrwinHall;
  return randomIrwinHall;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"../node_modules/d3-random/src/defaultSource.js"}],"../node_modules/d3-random/src/bates.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

var _irwinHall = _interopRequireDefault(require("./irwinHall"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomBates(source) {
  function randomBates(n) {
    var randomIrwinHall = _irwinHall.default.source(source)(n);

    return function () {
      return randomIrwinHall() / n;
    };
  }

  randomBates.source = sourceRandomBates;
  return randomBates;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"../node_modules/d3-random/src/defaultSource.js","./irwinHall":"../node_modules/d3-random/src/irwinHall.js"}],"../node_modules/d3-random/src/exponential.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomExponential(source) {
  function randomExponential(lambda) {
    return function () {
      return -Math.log(1 - source()) / lambda;
    };
  }

  randomExponential.source = sourceRandomExponential;
  return randomExponential;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"../node_modules/d3-random/src/defaultSource.js"}],"../node_modules/d3-random/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "randomUniform", {
  enumerable: true,
  get: function () {
    return _uniform.default;
  }
});
Object.defineProperty(exports, "randomNormal", {
  enumerable: true,
  get: function () {
    return _normal.default;
  }
});
Object.defineProperty(exports, "randomLogNormal", {
  enumerable: true,
  get: function () {
    return _logNormal.default;
  }
});
Object.defineProperty(exports, "randomBates", {
  enumerable: true,
  get: function () {
    return _bates.default;
  }
});
Object.defineProperty(exports, "randomIrwinHall", {
  enumerable: true,
  get: function () {
    return _irwinHall.default;
  }
});
Object.defineProperty(exports, "randomExponential", {
  enumerable: true,
  get: function () {
    return _exponential.default;
  }
});

var _uniform = _interopRequireDefault(require("./uniform"));

var _normal = _interopRequireDefault(require("./normal"));

var _logNormal = _interopRequireDefault(require("./logNormal"));

var _bates = _interopRequireDefault(require("./bates"));

var _irwinHall = _interopRequireDefault(require("./irwinHall"));

var _exponential = _interopRequireDefault(require("./exponential"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./uniform":"../node_modules/d3-random/src/uniform.js","./normal":"../node_modules/d3-random/src/normal.js","./logNormal":"../node_modules/d3-random/src/logNormal.js","./bates":"../node_modules/d3-random/src/bates.js","./irwinHall":"../node_modules/d3-random/src/irwinHall.js","./exponential":"../node_modules/d3-random/src/exponential.js"}],"../node_modules/d3-scale/src/init.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initRange = initRange;
exports.initInterpolator = initInterpolator;

function initRange(domain, range) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.range(domain);
      break;

    default:
      this.range(range).domain(domain);
      break;
  }

  return this;
}

function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.interpolator(domain);
      break;

    default:
      this.interpolator(interpolator).domain(domain);
      break;
  }

  return this;
}
},{}],"../node_modules/d3-scale/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = exports.map = void 0;
var array = Array.prototype;
var map = array.map;
exports.map = map;
var slice = array.slice;
exports.slice = slice;
},{}],"../node_modules/d3-scale/src/ordinal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ordinal;
exports.implicit = void 0;

var _d3Collection = require("d3-collection");

var _array = require("./array");

var _init = require("./init");

var implicit = {
  name: "implicit"
};
exports.implicit = implicit;

function ordinal() {
  var index = (0, _d3Collection.map)(),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    var key = d + "",
        i = index.get(key);

    if (!i) {
      if (unknown !== implicit) return unknown;
      index.set(key, i = domain.push(d));
    }

    return range[(i - 1) % range.length];
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = (0, _d3Collection.map)();
    var i = -1,
        n = _.length,
        d,
        key;

    while (++i < n) if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));

    return scale;
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), scale) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return ordinal(domain, range).unknown(unknown);
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}
},{"d3-collection":"../node_modules/d3-collection/src/index.js","./array":"../node_modules/d3-scale/src/array.js","./init":"../node_modules/d3-scale/src/init.js"}],"../node_modules/d3-scale/src/band.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = band;
exports.point = point;

var _d3Array = require("d3-array");

var _init = require("./init");

var _ordinal = _interopRequireDefault(require("./ordinal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function band() {
  var scale = (0, _ordinal.default)().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      range = [0, 1],
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;
  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = range[1] < range[0],
        start = range[reverse - 0],
        stop = range[1 - reverse];
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = (0, _d3Array.range)(n).map(function (i) {
      return start + step * i;
    });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function (_) {
    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = [+_[0], +_[1]], round = true, rescale();
  };

  scale.bandwidth = function () {
    return bandwidth;
  };

  scale.step = function () {
    return step;
  };

  scale.round = function (_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function (_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function (_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function () {
    return band(domain(), range).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };

  return _init.initRange.apply(rescale(), arguments);
}

function pointish(scale) {
  var copy = scale.copy;
  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;

  scale.copy = function () {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}
},{"d3-array":"../node_modules/d3-array/src/index.js","./init":"../node_modules/d3-scale/src/init.js","./ordinal":"../node_modules/d3-scale/src/ordinal.js"}],"../node_modules/d3-scale/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../node_modules/d3-scale/src/number.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return +x;
}
},{}],"../node_modules/d3-scale/src/continuous.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.identity = identity;
exports.copy = copy;
exports.transformer = transformer;
exports.default = continuous;

var _d3Array = require("d3-array");

var _d3Interpolate = require("d3-interpolate");

var _array = require("./array");

var _constant = _interopRequireDefault(require("./constant"));

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var unit = [0, 1];

function identity(x) {
  return x;
}

function normalize(a, b) {
  return (b -= a = +a) ? function (x) {
    return (x - a) / b;
  } : (0, _constant.default)(isNaN(b) ? NaN : 0.5);
}

function clamper(domain) {
  var a = domain[0],
      b = domain[domain.length - 1],
      t;
  if (a > b) t = a, a = b, b = t;
  return function (x) {
    return Math.max(a, Math.min(b, x));
  };
} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].


function bimap(domain, range, interpolate) {
  var d0 = domain[0],
      d1 = domain[1],
      r0 = range[0],
      r1 = range[1];
  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function (x) {
    return r0(d0(x));
  };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1; // Reverse descending domains.

  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function (x) {
    var i = (0, _d3Array.bisect)(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}

function transformer() {
  var domain = unit,
      range = unit,
      interpolate = _d3Interpolate.interpolate,
      transform,
      untransform,
      unknown,
      clamp = identity,
      piecewise,
      output,
      input;

  function rescale() {
    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
  }

  scale.invert = function (y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), _d3Interpolate.interpolateNumber)))(y)));
  };

  scale.domain = function (_) {
    return arguments.length ? (domain = _array.map.call(_, _number.default), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = _array.slice.call(_), interpolate = _d3Interpolate.interpolateRound, rescale();
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;
  };

  scale.interpolate = function (_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}

function continuous(transform, untransform) {
  return transformer()(transform, untransform);
}
},{"d3-array":"../node_modules/d3-array/src/index.js","d3-interpolate":"../node_modules/d3-interpolate/src/index.js","./array":"../node_modules/d3-scale/src/array.js","./constant":"../node_modules/d3-scale/src/constant.js","./number":"../node_modules/d3-scale/src/number.js"}],"../node_modules/d3-scale/src/tickFormat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _d3Format = require("d3-format");

function _default(start, stop, count, specifier) {
  var step = (0, _d3Array.tickStep)(start, stop, count),
      precision;
  specifier = (0, _d3Format.formatSpecifier)(specifier == null ? ",f" : specifier);

  switch (specifier.type) {
    case "s":
      {
        var value = Math.max(Math.abs(start), Math.abs(stop));
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionPrefix)(step, value))) specifier.precision = precision;
        return (0, _d3Format.formatPrefix)(specifier, value);
      }

    case "":
    case "e":
    case "g":
    case "p":
    case "r":
      {
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionRound)(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
        break;
      }

    case "f":
    case "%":
      {
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionFixed)(step))) specifier.precision = precision - (specifier.type === "%") * 2;
        break;
      }
  }

  return (0, _d3Format.format)(specifier);
}
},{"d3-array":"../node_modules/d3-array/src/index.js","d3-format":"../node_modules/d3-format/src/index.js"}],"../node_modules/d3-scale/src/linear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linearish = linearish;
exports.default = linear;

var _d3Array = require("d3-array");

var _continuous = _interopRequireWildcard(require("./continuous"));

var _init = require("./init");

var _tickFormat = _interopRequireDefault(require("./tickFormat"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function (count) {
    var d = domain();
    return (0, _d3Array.ticks)(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function (count, specifier) {
    var d = domain();
    return (0, _tickFormat.default)(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function (count) {
    if (count == null) count = 10;
    var d = domain(),
        i0 = 0,
        i1 = d.length - 1,
        start = d[i0],
        stop = d[i1],
        step;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }

    step = (0, _d3Array.tickIncrement)(start, stop, count);

    if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
      step = (0, _d3Array.tickIncrement)(start, stop, count);
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
      step = (0, _d3Array.tickIncrement)(start, stop, count);
    }

    if (step > 0) {
      d[i0] = Math.floor(start / step) * step;
      d[i1] = Math.ceil(stop / step) * step;
      domain(d);
    } else if (step < 0) {
      d[i0] = Math.ceil(start * step) / step;
      d[i1] = Math.floor(stop * step) / step;
      domain(d);
    }

    return scale;
  };

  return scale;
}

function linear() {
  var scale = (0, _continuous.default)(_continuous.identity, _continuous.identity);

  scale.copy = function () {
    return (0, _continuous.copy)(scale, linear());
  };

  _init.initRange.apply(scale, arguments);

  return linearish(scale);
}
},{"d3-array":"../node_modules/d3-array/src/index.js","./continuous":"../node_modules/d3-scale/src/continuous.js","./init":"../node_modules/d3-scale/src/init.js","./tickFormat":"../node_modules/d3-scale/src/tickFormat.js"}],"../node_modules/d3-scale/src/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = identity;

var _array = require("./array");

var _linear = require("./linear");

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function identity(domain) {
  var unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : x;
  }

  scale.invert = scale;

  scale.domain = scale.range = function (_) {
    return arguments.length ? (domain = _array.map.call(_, _number.default), scale) : domain.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return identity(domain).unknown(unknown);
  };

  domain = arguments.length ? _array.map.call(domain, _number.default) : [0, 1];
  return (0, _linear.linearish)(scale);
}
},{"./array":"../node_modules/d3-scale/src/array.js","./linear":"../node_modules/d3-scale/src/linear.js","./number":"../node_modules/d3-scale/src/number.js"}],"../node_modules/d3-scale/src/nice.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(domain, interval) {
  domain = domain.slice();
  var i0 = 0,
      i1 = domain.length - 1,
      x0 = domain[i0],
      x1 = domain[i1],
      t;

  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }

  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
}
},{}],"../node_modules/d3-scale/src/log.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loggish = loggish;
exports.default = log;

var _d3Array = require("d3-array");

var _d3Format = require("d3-format");

var _nice = _interopRequireDefault(require("./nice"));

var _continuous = require("./continuous");

var _init = require("./init");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function transformLog(x) {
  return Math.log(x);
}

function transformExp(x) {
  return Math.exp(x);
}

function transformLogn(x) {
  return -Math.log(-x);
}

function transformExpn(x) {
  return -Math.exp(-x);
}

function pow10(x) {
  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}

function powp(base) {
  return base === 10 ? pow10 : base === Math.E ? Math.exp : function (x) {
    return Math.pow(base, x);
  };
}

function logp(base) {
  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function (x) {
    return Math.log(x) / base;
  });
}

function reflect(f) {
  return function (x) {
    return -f(-x);
  };
}

function loggish(transform) {
  var scale = transform(transformLog, transformExp),
      domain = scale.domain,
      base = 10,
      logs,
      pows;

  function rescale() {
    logs = logp(base), pows = powp(base);

    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }

    return scale;
  }

  scale.base = function (_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.ticks = function (count) {
    var d = domain(),
        u = d[0],
        v = d[d.length - 1],
        r;
    if (r = v < u) i = u, u = v, v = i;
    var i = logs(u),
        j = logs(v),
        p,
        k,
        t,
        n = count == null ? 10 : +count,
        z = [];

    if (!(base % 1) && j - i < n) {
      i = Math.round(i) - 1, j = Math.round(j) + 1;
      if (u > 0) for (; i < j; ++i) {
        for (k = 1, p = pows(i); k < base; ++k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      } else for (; i < j; ++i) {
        for (k = base - 1, p = pows(i); k >= 1; --k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      }
    } else {
      z = (0, _d3Array.ticks)(i, j, Math.min(j - i, n)).map(pows);
    }

    return r ? z.reverse() : z;
  };

  scale.tickFormat = function (count, specifier) {
    if (specifier == null) specifier = base === 10 ? ".0e" : ",";
    if (typeof specifier !== "function") specifier = (0, _d3Format.format)(specifier);
    if (count === Infinity) return specifier;
    if (count == null) count = 10;
    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?

    return function (d) {
      var i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5) i *= base;
      return i <= k ? specifier(d) : "";
    };
  };

  scale.nice = function () {
    return domain((0, _nice.default)(domain(), {
      floor: function (x) {
        return pows(Math.floor(logs(x)));
      },
      ceil: function (x) {
        return pows(Math.ceil(logs(x)));
      }
    }));
  };

  return scale;
}

function log() {
  var scale = loggish((0, _continuous.transformer)()).domain([1, 10]);

  scale.copy = function () {
    return (0, _continuous.copy)(scale, log()).base(scale.base());
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}
},{"d3-array":"../node_modules/d3-array/src/index.js","d3-format":"../node_modules/d3-format/src/index.js","./nice":"../node_modules/d3-scale/src/nice.js","./continuous":"../node_modules/d3-scale/src/continuous.js","./init":"../node_modules/d3-scale/src/init.js"}],"../node_modules/d3-scale/src/symlog.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.symlogish = symlogish;
exports.default = symlog;

var _linear = require("./linear");

var _continuous = require("./continuous");

var _init = require("./init");

function transformSymlog(c) {
  return function (x) {
    return Math.sign(x) * Math.log1p(Math.abs(x / c));
  };
}

function transformSymexp(c) {
  return function (x) {
    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
  };
}

function symlogish(transform) {
  var c = 1,
      scale = transform(transformSymlog(c), transformSymexp(c));

  scale.constant = function (_) {
    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
  };

  return (0, _linear.linearish)(scale);
}

function symlog() {
  var scale = symlogish((0, _continuous.transformer)());

  scale.copy = function () {
    return (0, _continuous.copy)(scale, symlog()).constant(scale.constant());
  };

  return _init.initRange.apply(scale, arguments);
}
},{"./linear":"../node_modules/d3-scale/src/linear.js","./continuous":"../node_modules/d3-scale/src/continuous.js","./init":"../node_modules/d3-scale/src/init.js"}],"../node_modules/d3-scale/src/pow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.powish = powish;
exports.default = pow;
exports.sqrt = sqrt;

var _linear = require("./linear");

var _continuous = require("./continuous");

var _init = require("./init");

function transformPow(exponent) {
  return function (x) {
    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  };
}

function transformSqrt(x) {
  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
}

function transformSquare(x) {
  return x < 0 ? -x * x : x * x;
}

function powish(transform) {
  var scale = transform(_continuous.identity, _continuous.identity),
      exponent = 1;

  function rescale() {
    return exponent === 1 ? transform(_continuous.identity, _continuous.identity) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));
  }

  scale.exponent = function (_) {
    return arguments.length ? (exponent = +_, rescale()) : exponent;
  };

  return (0, _linear.linearish)(scale);
}

function pow() {
  var scale = powish((0, _continuous.transformer)());

  scale.copy = function () {
    return (0, _continuous.copy)(scale, pow()).exponent(scale.exponent());
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}

function sqrt() {
  return pow.apply(null, arguments).exponent(0.5);
}
},{"./linear":"../node_modules/d3-scale/src/linear.js","./continuous":"../node_modules/d3-scale/src/continuous.js","./init":"../node_modules/d3-scale/src/init.js"}],"../node_modules/d3-scale/src/quantile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quantile;

var _d3Array = require("d3-array");

var _array = require("./array");

var _init = require("./init");

function quantile() {
  var domain = [],
      range = [],
      thresholds = [],
      unknown;

  function rescale() {
    var i = 0,
        n = Math.max(1, range.length);
    thresholds = new Array(n - 1);

    while (++i < n) thresholds[i - 1] = (0, _d3Array.quantile)(domain, i / n);

    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : range[(0, _d3Array.bisect)(thresholds, x)];
  }

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : [i > 0 ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];
  };

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);

    domain.sort(_d3Array.ascending);
    return rescale();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), rescale()) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.quantiles = function () {
    return thresholds.slice();
  };

  scale.copy = function () {
    return quantile().domain(domain).range(range).unknown(unknown);
  };

  return _init.initRange.apply(scale, arguments);
}
},{"d3-array":"../node_modules/d3-array/src/index.js","./array":"../node_modules/d3-scale/src/array.js","./init":"../node_modules/d3-scale/src/init.js"}],"../node_modules/d3-scale/src/quantize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quantize;

var _d3Array = require("d3-array");

var _array = require("./array");

var _linear = require("./linear");

var _init = require("./init");

function quantize() {
  var x0 = 0,
      x1 = 1,
      n = 1,
      domain = [0.5],
      range = [0, 1],
      unknown;

  function scale(x) {
    return x <= x ? range[(0, _d3Array.bisect)(domain, x, 0, n)] : unknown;
  }

  function rescale() {
    var i = -1;
    domain = new Array(n);

    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);

    return scale;
  }

  scale.domain = function (_) {
    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
  };

  scale.range = function (_) {
    return arguments.length ? (n = (range = _array.slice.call(_)).length - 1, rescale()) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };

  scale.thresholds = function () {
    return domain.slice();
  };

  scale.copy = function () {
    return quantize().domain([x0, x1]).range(range).unknown(unknown);
  };

  return _init.initRange.apply((0, _linear.linearish)(scale), arguments);
}
},{"d3-array":"../node_modules/d3-array/src/index.js","./array":"../node_modules/d3-scale/src/array.js","./linear":"../node_modules/d3-scale/src/linear.js","./init":"../node_modules/d3-scale/src/init.js"}],"../node_modules/d3-scale/src/threshold.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = threshold;

var _d3Array = require("d3-array");

var _array = require("./array");

var _init = require("./init");

function threshold() {
  var domain = [0.5],
      range = [0, 1],
      unknown,
      n = 1;

  function scale(x) {
    return x <= x ? range[(0, _d3Array.bisect)(domain, x, 0, n)] : unknown;
  }

  scale.domain = function (_) {
    return arguments.length ? (domain = _array.slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return threshold().domain(domain).range(range).unknown(unknown);
  };

  return _init.initRange.apply(scale, arguments);
}
},{"d3-array":"../node_modules/d3-array/src/index.js","./array":"../node_modules/d3-scale/src/array.js","./init":"../node_modules/d3-scale/src/init.js"}],"../node_modules/d3-time/src/interval.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = newInterval;
var t0 = new Date(),
    t1 = new Date();

function newInterval(floori, offseti, count, field) {
  function interval(date) {
    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;
  }

  interval.floor = function (date) {
    return floori(date = new Date(+date)), date;
  };

  interval.ceil = function (date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function (date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function (date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function (start, stop, step) {
    var range = [],
        previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date

    do range.push(previous = new Date(+start)), offseti(start, step), floori(start); while (previous < start && start < stop);

    return range;
  };

  interval.filter = function (test) {
    return newInterval(function (date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function (date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty

        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty

        }
      }
    });
  };

  if (count) {
    interval.count = function (start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };

    interval.every = function (step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {
        return field(d) % step === 0;
      } : function (d) {
        return interval.count(0, d) % step === 0;
      });
    };
  }

  return interval;
}
},{}],"../node_modules/d3-time/src/millisecond.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.milliseconds = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var millisecond = (0, _interval.default)(function () {// noop
}, function (date, step) {
  date.setTime(+date + step);
}, function (start, end) {
  return end - start;
}); // An optimized implementation for this simple case.

millisecond.every = function (k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond;
  return (0, _interval.default)(function (date) {
    date.setTime(Math.floor(date / k) * k);
  }, function (date, step) {
    date.setTime(+date + step * k);
  }, function (start, end) {
    return (end - start) / k;
  });
};

var _default = millisecond;
exports.default = _default;
var milliseconds = millisecond.range;
exports.milliseconds = milliseconds;
},{"./interval.js":"../node_modules/d3-time/src/interval.js"}],"../node_modules/d3-time/src/duration.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.durationWeek = exports.durationDay = exports.durationHour = exports.durationMinute = exports.durationSecond = void 0;
var durationSecond = 1e3;
exports.durationSecond = durationSecond;
var durationMinute = 6e4;
exports.durationMinute = durationMinute;
var durationHour = 36e5;
exports.durationHour = durationHour;
var durationDay = 864e5;
exports.durationDay = durationDay;
var durationWeek = 6048e5;
exports.durationWeek = durationWeek;
},{}],"../node_modules/d3-time/src/second.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.seconds = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var second = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds());
}, function (date, step) {
  date.setTime(+date + step * _duration.durationSecond);
}, function (start, end) {
  return (end - start) / _duration.durationSecond;
}, function (date) {
  return date.getUTCSeconds();
});
var _default = second;
exports.default = _default;
var seconds = second.range;
exports.seconds = seconds;
},{"./interval.js":"../node_modules/d3-time/src/interval.js","./duration.js":"../node_modules/d3-time/src/duration.js"}],"../node_modules/d3-time/src/minute.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.minutes = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var minute = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationMinute);
}, function (start, end) {
  return (end - start) / _duration.durationMinute;
}, function (date) {
  return date.getMinutes();
});
var _default = minute;
exports.default = _default;
var minutes = minute.range;
exports.minutes = minutes;
},{"./interval.js":"../node_modules/d3-time/src/interval.js","./duration.js":"../node_modules/d3-time/src/duration.js"}],"../node_modules/d3-time/src/hour.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hours = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hour = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond - date.getMinutes() * _duration.durationMinute);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationHour);
}, function (start, end) {
  return (end - start) / _duration.durationHour;
}, function (date) {
  return date.getHours();
});
var _default = hour;
exports.default = _default;
var hours = hour.range;
exports.hours = hours;
},{"./interval.js":"../node_modules/d3-time/src/interval.js","./duration.js":"../node_modules/d3-time/src/duration.js"}],"../node_modules/d3-time/src/day.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.days = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var day = (0, _interval.default)(function (date) {
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setDate(date.getDate() + step);
}, function (start, end) {
  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationDay;
}, function (date) {
  return date.getDate() - 1;
});
var _default = day;
exports.default = _default;
var days = day.range;
exports.days = days;
},{"./interval.js":"../node_modules/d3-time/src/interval.js","./duration.js":"../node_modules/d3-time/src/duration.js"}],"../node_modules/d3-time/src/week.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.saturdays = exports.fridays = exports.thursdays = exports.wednesdays = exports.tuesdays = exports.mondays = exports.sundays = exports.saturday = exports.friday = exports.thursday = exports.wednesday = exports.tuesday = exports.monday = exports.sunday = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function weekday(i) {
  return (0, _interval.default)(function (date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function (start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationWeek;
  });
}

var sunday = weekday(0);
exports.sunday = sunday;
var monday = weekday(1);
exports.monday = monday;
var tuesday = weekday(2);
exports.tuesday = tuesday;
var wednesday = weekday(3);
exports.wednesday = wednesday;
var thursday = weekday(4);
exports.thursday = thursday;
var friday = weekday(5);
exports.friday = friday;
var saturday = weekday(6);
exports.saturday = saturday;
var sundays = sunday.range;
exports.sundays = sundays;
var mondays = monday.range;
exports.mondays = mondays;
var tuesdays = tuesday.range;
exports.tuesdays = tuesdays;
var wednesdays = wednesday.range;
exports.wednesdays = wednesdays;
var thursdays = thursday.range;
exports.thursdays = thursdays;
var fridays = friday.range;
exports.fridays = fridays;
var saturdays = saturday.range;
exports.saturdays = saturdays;
},{"./interval.js":"../node_modules/d3-time/src/interval.js","./duration.js":"../node_modules/d3-time/src/duration.js"}],"../node_modules/d3-time/src/month.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.months = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var month = (0, _interval.default)(function (date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setMonth(date.getMonth() + step);
}, function (start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function (date) {
  return date.getMonth();
});
var _default = month;
exports.default = _default;
var months = month.range;
exports.months = months;
},{"./interval.js":"../node_modules/d3-time/src/interval.js"}],"../node_modules/d3-time/src/year.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.years = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var year = (0, _interval.default)(function (date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function (start, end) {
  return end.getFullYear() - start.getFullYear();
}, function (date) {
  return date.getFullYear();
}); // An optimized implementation for this simple case.

year.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function (date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

var _default = year;
exports.default = _default;
var years = year.range;
exports.years = years;
},{"./interval.js":"../node_modules/d3-time/src/interval.js"}],"../node_modules/d3-time/src/utcMinute.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcMinutes = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcMinute = (0, _interval.default)(function (date) {
  date.setUTCSeconds(0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationMinute);
}, function (start, end) {
  return (end - start) / _duration.durationMinute;
}, function (date) {
  return date.getUTCMinutes();
});
var _default = utcMinute;
exports.default = _default;
var utcMinutes = utcMinute.range;
exports.utcMinutes = utcMinutes;
},{"./interval.js":"../node_modules/d3-time/src/interval.js","./duration.js":"../node_modules/d3-time/src/duration.js"}],"../node_modules/d3-time/src/utcHour.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcHours = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcHour = (0, _interval.default)(function (date) {
  date.setUTCMinutes(0, 0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationHour);
}, function (start, end) {
  return (end - start) / _duration.durationHour;
}, function (date) {
  return date.getUTCHours();
});
var _default = utcHour;
exports.default = _default;
var utcHours = utcHour.range;
exports.utcHours = utcHours;
},{"./interval.js":"../node_modules/d3-time/src/interval.js","./duration.js":"../node_modules/d3-time/src/duration.js"}],"../node_modules/d3-time/src/utcDay.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcDays = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcDay = (0, _interval.default)(function (date) {
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function (start, end) {
  return (end - start) / _duration.durationDay;
}, function (date) {
  return date.getUTCDate() - 1;
});
var _default = utcDay;
exports.default = _default;
var utcDays = utcDay.range;
exports.utcDays = utcDays;
},{"./interval.js":"../node_modules/d3-time/src/interval.js","./duration.js":"../node_modules/d3-time/src/duration.js"}],"../node_modules/d3-time/src/utcWeek.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcSaturdays = exports.utcFridays = exports.utcThursdays = exports.utcWednesdays = exports.utcTuesdays = exports.utcMondays = exports.utcSundays = exports.utcSaturday = exports.utcFriday = exports.utcThursday = exports.utcWednesday = exports.utcTuesday = exports.utcMonday = exports.utcSunday = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function utcWeekday(i) {
  return (0, _interval.default)(function (date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function (start, end) {
    return (end - start) / _duration.durationWeek;
  });
}

var utcSunday = utcWeekday(0);
exports.utcSunday = utcSunday;
var utcMonday = utcWeekday(1);
exports.utcMonday = utcMonday;
var utcTuesday = utcWeekday(2);
exports.utcTuesday = utcTuesday;
var utcWednesday = utcWeekday(3);
exports.utcWednesday = utcWednesday;
var utcThursday = utcWeekday(4);
exports.utcThursday = utcThursday;
var utcFriday = utcWeekday(5);
exports.utcFriday = utcFriday;
var utcSaturday = utcWeekday(6);
exports.utcSaturday = utcSaturday;
var utcSundays = utcSunday.range;
exports.utcSundays = utcSundays;
var utcMondays = utcMonday.range;
exports.utcMondays = utcMondays;
var utcTuesdays = utcTuesday.range;
exports.utcTuesdays = utcTuesdays;
var utcWednesdays = utcWednesday.range;
exports.utcWednesdays = utcWednesdays;
var utcThursdays = utcThursday.range;
exports.utcThursdays = utcThursdays;
var utcFridays = utcFriday.range;
exports.utcFridays = utcFridays;
var utcSaturdays = utcSaturday.range;
exports.utcSaturdays = utcSaturdays;
},{"./interval.js":"../node_modules/d3-time/src/interval.js","./duration.js":"../node_modules/d3-time/src/duration.js"}],"../node_modules/d3-time/src/utcMonth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcMonths = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcMonth = (0, _interval.default)(function (date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function (start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function (date) {
  return date.getUTCMonth();
});
var _default = utcMonth;
exports.default = _default;
var utcMonths = utcMonth.range;
exports.utcMonths = utcMonths;
},{"./interval.js":"../node_modules/d3-time/src/interval.js"}],"../node_modules/d3-time/src/utcYear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcYears = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcYear = (0, _interval.default)(function (date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function (start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function (date) {
  return date.getUTCFullYear();
}); // An optimized implementation for this simple case.

utcYear.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function (date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

var _default = utcYear;
exports.default = _default;
var utcYears = utcYear.range;
exports.utcYears = utcYears;
},{"./interval.js":"../node_modules/d3-time/src/interval.js"}],"../node_modules/d3-time/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "timeInterval", {
  enumerable: true,
  get: function () {
    return _interval.default;
  }
});
Object.defineProperty(exports, "timeMillisecond", {
  enumerable: true,
  get: function () {
    return _millisecond.default;
  }
});
Object.defineProperty(exports, "timeMilliseconds", {
  enumerable: true,
  get: function () {
    return _millisecond.milliseconds;
  }
});
Object.defineProperty(exports, "utcMillisecond", {
  enumerable: true,
  get: function () {
    return _millisecond.default;
  }
});
Object.defineProperty(exports, "utcMilliseconds", {
  enumerable: true,
  get: function () {
    return _millisecond.milliseconds;
  }
});
Object.defineProperty(exports, "timeSecond", {
  enumerable: true,
  get: function () {
    return _second.default;
  }
});
Object.defineProperty(exports, "timeSeconds", {
  enumerable: true,
  get: function () {
    return _second.seconds;
  }
});
Object.defineProperty(exports, "utcSecond", {
  enumerable: true,
  get: function () {
    return _second.default;
  }
});
Object.defineProperty(exports, "utcSeconds", {
  enumerable: true,
  get: function () {
    return _second.seconds;
  }
});
Object.defineProperty(exports, "timeMinute", {
  enumerable: true,
  get: function () {
    return _minute.default;
  }
});
Object.defineProperty(exports, "timeMinutes", {
  enumerable: true,
  get: function () {
    return _minute.minutes;
  }
});
Object.defineProperty(exports, "timeHour", {
  enumerable: true,
  get: function () {
    return _hour.default;
  }
});
Object.defineProperty(exports, "timeHours", {
  enumerable: true,
  get: function () {
    return _hour.hours;
  }
});
Object.defineProperty(exports, "timeDay", {
  enumerable: true,
  get: function () {
    return _day.default;
  }
});
Object.defineProperty(exports, "timeDays", {
  enumerable: true,
  get: function () {
    return _day.days;
  }
});
Object.defineProperty(exports, "timeWeek", {
  enumerable: true,
  get: function () {
    return _week.sunday;
  }
});
Object.defineProperty(exports, "timeWeeks", {
  enumerable: true,
  get: function () {
    return _week.sundays;
  }
});
Object.defineProperty(exports, "timeSunday", {
  enumerable: true,
  get: function () {
    return _week.sunday;
  }
});
Object.defineProperty(exports, "timeSundays", {
  enumerable: true,
  get: function () {
    return _week.sundays;
  }
});
Object.defineProperty(exports, "timeMonday", {
  enumerable: true,
  get: function () {
    return _week.monday;
  }
});
Object.defineProperty(exports, "timeMondays", {
  enumerable: true,
  get: function () {
    return _week.mondays;
  }
});
Object.defineProperty(exports, "timeTuesday", {
  enumerable: true,
  get: function () {
    return _week.tuesday;
  }
});
Object.defineProperty(exports, "timeTuesdays", {
  enumerable: true,
  get: function () {
    return _week.tuesdays;
  }
});
Object.defineProperty(exports, "timeWednesday", {
  enumerable: true,
  get: function () {
    return _week.wednesday;
  }
});
Object.defineProperty(exports, "timeWednesdays", {
  enumerable: true,
  get: function () {
    return _week.wednesdays;
  }
});
Object.defineProperty(exports, "timeThursday", {
  enumerable: true,
  get: function () {
    return _week.thursday;
  }
});
Object.defineProperty(exports, "timeThursdays", {
  enumerable: true,
  get: function () {
    return _week.thursdays;
  }
});
Object.defineProperty(exports, "timeFriday", {
  enumerable: true,
  get: function () {
    return _week.friday;
  }
});
Object.defineProperty(exports, "timeFridays", {
  enumerable: true,
  get: function () {
    return _week.fridays;
  }
});
Object.defineProperty(exports, "timeSaturday", {
  enumerable: true,
  get: function () {
    return _week.saturday;
  }
});
Object.defineProperty(exports, "timeSaturdays", {
  enumerable: true,
  get: function () {
    return _week.saturdays;
  }
});
Object.defineProperty(exports, "timeMonth", {
  enumerable: true,
  get: function () {
    return _month.default;
  }
});
Object.defineProperty(exports, "timeMonths", {
  enumerable: true,
  get: function () {
    return _month.months;
  }
});
Object.defineProperty(exports, "timeYear", {
  enumerable: true,
  get: function () {
    return _year.default;
  }
});
Object.defineProperty(exports, "timeYears", {
  enumerable: true,
  get: function () {
    return _year.years;
  }
});
Object.defineProperty(exports, "utcMinute", {
  enumerable: true,
  get: function () {
    return _utcMinute.default;
  }
});
Object.defineProperty(exports, "utcMinutes", {
  enumerable: true,
  get: function () {
    return _utcMinute.utcMinutes;
  }
});
Object.defineProperty(exports, "utcHour", {
  enumerable: true,
  get: function () {
    return _utcHour.default;
  }
});
Object.defineProperty(exports, "utcHours", {
  enumerable: true,
  get: function () {
    return _utcHour.utcHours;
  }
});
Object.defineProperty(exports, "utcDay", {
  enumerable: true,
  get: function () {
    return _utcDay.default;
  }
});
Object.defineProperty(exports, "utcDays", {
  enumerable: true,
  get: function () {
    return _utcDay.utcDays;
  }
});
Object.defineProperty(exports, "utcWeek", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSunday;
  }
});
Object.defineProperty(exports, "utcWeeks", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSundays;
  }
});
Object.defineProperty(exports, "utcSunday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSunday;
  }
});
Object.defineProperty(exports, "utcSundays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSundays;
  }
});
Object.defineProperty(exports, "utcMonday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcMonday;
  }
});
Object.defineProperty(exports, "utcMondays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcMondays;
  }
});
Object.defineProperty(exports, "utcTuesday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcTuesday;
  }
});
Object.defineProperty(exports, "utcTuesdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcTuesdays;
  }
});
Object.defineProperty(exports, "utcWednesday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcWednesday;
  }
});
Object.defineProperty(exports, "utcWednesdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcWednesdays;
  }
});
Object.defineProperty(exports, "utcThursday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcThursday;
  }
});
Object.defineProperty(exports, "utcThursdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcThursdays;
  }
});
Object.defineProperty(exports, "utcFriday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcFriday;
  }
});
Object.defineProperty(exports, "utcFridays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcFridays;
  }
});
Object.defineProperty(exports, "utcSaturday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSaturday;
  }
});
Object.defineProperty(exports, "utcSaturdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSaturdays;
  }
});
Object.defineProperty(exports, "utcMonth", {
  enumerable: true,
  get: function () {
    return _utcMonth.default;
  }
});
Object.defineProperty(exports, "utcMonths", {
  enumerable: true,
  get: function () {
    return _utcMonth.utcMonths;
  }
});
Object.defineProperty(exports, "utcYear", {
  enumerable: true,
  get: function () {
    return _utcYear.default;
  }
});
Object.defineProperty(exports, "utcYears", {
  enumerable: true,
  get: function () {
    return _utcYear.utcYears;
  }
});

var _interval = _interopRequireDefault(require("./interval.js"));

var _millisecond = _interopRequireWildcard(require("./millisecond.js"));

var _second = _interopRequireWildcard(require("./second.js"));

var _minute = _interopRequireWildcard(require("./minute.js"));

var _hour = _interopRequireWildcard(require("./hour.js"));

var _day = _interopRequireWildcard(require("./day.js"));

var _week = require("./week.js");

var _month = _interopRequireWildcard(require("./month.js"));

var _year = _interopRequireWildcard(require("./year.js"));

var _utcMinute = _interopRequireWildcard(require("./utcMinute.js"));

var _utcHour = _interopRequireWildcard(require("./utcHour.js"));

var _utcDay = _interopRequireWildcard(require("./utcDay.js"));

var _utcWeek = require("./utcWeek.js");

var _utcMonth = _interopRequireWildcard(require("./utcMonth.js"));

var _utcYear = _interopRequireWildcard(require("./utcYear.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./interval.js":"../node_modules/d3-time/src/interval.js","./millisecond.js":"../node_modules/d3-time/src/millisecond.js","./second.js":"../node_modules/d3-time/src/second.js","./minute.js":"../node_modules/d3-time/src/minute.js","./hour.js":"../node_modules/d3-time/src/hour.js","./day.js":"../node_modules/d3-time/src/day.js","./week.js":"../node_modules/d3-time/src/week.js","./month.js":"../node_modules/d3-time/src/month.js","./year.js":"../node_modules/d3-time/src/year.js","./utcMinute.js":"../node_modules/d3-time/src/utcMinute.js","./utcHour.js":"../node_modules/d3-time/src/utcHour.js","./utcDay.js":"../node_modules/d3-time/src/utcDay.js","./utcWeek.js":"../node_modules/d3-time/src/utcWeek.js","./utcMonth.js":"../node_modules/d3-time/src/utcMonth.js","./utcYear.js":"../node_modules/d3-time/src/utcYear.js"}],"../node_modules/d3-time-format/src/locale.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = formatLocale;

var _d3Time = require("d3-time");

function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }

  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}

function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }

  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}

function newDate(y, m, d) {
  return {
    y: y,
    m: m,
    d: d,
    H: 0,
    M: 0,
    S: 0,
    L: 0
  };
}

function formatLocale(locale) {
  var locale_dateTime = locale.dateTime,
      locale_date = locale.date,
      locale_time = locale.time,
      locale_periods = locale.periods,
      locale_weekdays = locale.days,
      locale_shortWeekdays = locale.shortDays,
      locale_months = locale.months,
      locale_shortMonths = locale.shortMonths;
  var periodRe = formatRe(locale_periods),
      periodLookup = formatLookup(locale_periods),
      weekdayRe = formatRe(locale_weekdays),
      weekdayLookup = formatLookup(locale_weekdays),
      shortWeekdayRe = formatRe(locale_shortWeekdays),
      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
      monthRe = formatRe(locale_months),
      monthLookup = formatLookup(locale_months),
      shortMonthRe = formatRe(locale_shortMonths),
      shortMonthLookup = formatLookup(locale_shortMonths);
  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };
  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };
  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  }; // These recursive directive definitions must be deferred.

  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);

  function newFormat(specifier, formats) {
    return function (date) {
      var string = [],
          i = -1,
          j = 0,
          n = specifier.length,
          c,
          pad,
          format;
      if (!(date instanceof Date)) date = new Date(+date);

      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === "e" ? " " : "0";
          if (format = formats[c]) c = format(date, pad);
          string.push(c);
          j = i + 1;
        }
      }

      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }

  function newParse(specifier, Z) {
    return function (string) {
      var d = newDate(1900, undefined, 1),
          i = parseSpecifier(d, specifier, string += "", 0),
          week,
          day;
      if (i != string.length) return null; // If a UNIX timestamp is specified, return it.

      if ("Q" in d) return new Date(d.Q);
      if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0)); // If this is utcParse, never use the local timezone.

      if (Z && !("Z" in d)) d.Z = 0; // The am-pm flag is 0 for AM, and 1 for PM.

      if ("p" in d) d.H = d.H % 12 + d.p * 12; // If the month was not specified, inherit from the quarter.

      if (d.m === undefined) d.m = "q" in d ? d.q : 0; // Convert day-of-week and week-of-year to day-of-year.

      if ("V" in d) {
        if (d.V < 1 || d.V > 53) return null;
        if (!("w" in d)) d.w = 1;

        if ("Z" in d) {
          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? _d3Time.utcMonday.ceil(week) : (0, _d3Time.utcMonday)(week);
          week = _d3Time.utcDay.offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
          week = day > 4 || day === 0 ? _d3Time.timeMonday.ceil(week) : (0, _d3Time.timeMonday)(week);
          week = _d3Time.timeDay.offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      } // If a time zone is specified, all fields are interpreted as UTC and then
      // offset according to the specified time zone.


      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      } // Otherwise, all fields are in local time.


      return localDate(d);
    };
  }

  function parseSpecifier(d, specifier, string, j) {
    var i = 0,
        n = specifier.length,
        m = string.length,
        c,
        parse;

    while (i < n) {
      if (j >= m) return -1;
      c = specifier.charCodeAt(i++);

      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || (j = parse(d, string, j)) < 0) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }

    return j;
  }

  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }

  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }

  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }

  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }

  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }

  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }

  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }

  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }

  function formatQuarter(d) {
    return 1 + ~~(d.getMonth() / 3);
  }

  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }

  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }

  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }

  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }

  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }

  function formatUTCQuarter(d) {
    return 1 + ~~(d.getUTCMonth() / 3);
  }

  return {
    format: function (specifier) {
      var f = newFormat(specifier += "", formats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    parse: function (specifier) {
      var p = newParse(specifier += "", false);

      p.toString = function () {
        return specifier;
      };

      return p;
    },
    utcFormat: function (specifier) {
      var f = newFormat(specifier += "", utcFormats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    utcParse: function (specifier) {
      var p = newParse(specifier += "", true);

      p.toString = function () {
        return specifier;
      };

      return p;
    }
  };
}

var pads = {
  "-": "",
  "_": " ",
  "0": "0"
},
    numberRe = /^\s*\d+/,
    // note: ignores next directive
percentRe = /^%/,
    requoteRe = /[\\^$*+?|[\]().{}]/g;

function pad(value, fill, width) {
  var sign = value < 0 ? "-" : "",
      string = (sign ? -value : value) + "",
      length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}

function requote(s) {
  return s.replace(requoteRe, "\\$&");
}

function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}

function formatLookup(names) {
  var map = {},
      i = -1,
      n = names.length;

  while (++i < n) map[names[i].toLowerCase()] = i;

  return map;
}

function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}

function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}

function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}

function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}

function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}

function parseQuarter(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}

function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}

function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}

function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}

function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}

function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}

function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}

function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}

function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}

function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}

function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}

function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.s = +n[0], i + n[0].length) : -1;
}

function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}

function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}

function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}

function formatDayOfYear(d, p) {
  return pad(1 + _d3Time.timeDay.count((0, _d3Time.timeYear)(d), d), p, 3);
}

function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}

function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}

function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}

function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}

function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}

function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}

function formatWeekNumberSunday(d, p) {
  return pad(_d3Time.timeSunday.count((0, _d3Time.timeYear)(d) - 1, d), p, 2);
}

function formatWeekNumberISO(d, p) {
  var day = d.getDay();
  d = day >= 4 || day === 0 ? (0, _d3Time.timeThursday)(d) : _d3Time.timeThursday.ceil(d);
  return pad(_d3Time.timeThursday.count((0, _d3Time.timeYear)(d), d) + ((0, _d3Time.timeYear)(d).getDay() === 4), p, 2);
}

function formatWeekdayNumberSunday(d) {
  return d.getDay();
}

function formatWeekNumberMonday(d, p) {
  return pad(_d3Time.timeMonday.count((0, _d3Time.timeYear)(d) - 1, d), p, 2);
}

function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}

function formatFullYear(d, p) {
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
}

function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}

function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}

function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}

function formatUTCDayOfYear(d, p) {
  return pad(1 + _d3Time.utcDay.count((0, _d3Time.utcYear)(d), d), p, 3);
}

function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}

function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}

function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}

function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}

function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}

function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}

function formatUTCWeekNumberSunday(d, p) {
  return pad(_d3Time.utcSunday.count((0, _d3Time.utcYear)(d) - 1, d), p, 2);
}

function formatUTCWeekNumberISO(d, p) {
  var day = d.getUTCDay();
  d = day >= 4 || day === 0 ? (0, _d3Time.utcThursday)(d) : _d3Time.utcThursday.ceil(d);
  return pad(_d3Time.utcThursday.count((0, _d3Time.utcYear)(d), d) + ((0, _d3Time.utcYear)(d).getUTCDay() === 4), p, 2);
}

function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}

function formatUTCWeekNumberMonday(d, p) {
  return pad(_d3Time.utcMonday.count((0, _d3Time.utcYear)(d) - 1, d), p, 2);
}

function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCZone() {
  return "+0000";
}

function formatLiteralPercent() {
  return "%";
}

function formatUnixTimestamp(d) {
  return +d;
}

function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1000);
}
},{"d3-time":"../node_modules/d3-time/src/index.js"}],"../node_modules/d3-time-format/src/defaultLocale.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defaultLocale;
exports.utcParse = exports.utcFormat = exports.timeParse = exports.timeFormat = void 0;

var _locale = _interopRequireDefault(require("./locale.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var locale;
var timeFormat;
exports.timeFormat = timeFormat;
var timeParse;
exports.timeParse = timeParse;
var utcFormat;
exports.utcFormat = utcFormat;
var utcParse;
exports.utcParse = utcParse;
defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});

function defaultLocale(definition) {
  locale = (0, _locale.default)(definition);
  exports.timeFormat = timeFormat = locale.format;
  exports.timeParse = timeParse = locale.parse;
  exports.utcFormat = utcFormat = locale.utcFormat;
  exports.utcParse = utcParse = locale.utcParse;
  return locale;
}
},{"./locale.js":"../node_modules/d3-time-format/src/locale.js"}],"../node_modules/d3-time-format/src/isoFormat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.isoSpecifier = void 0;

var _defaultLocale = require("./defaultLocale.js");

var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
exports.isoSpecifier = isoSpecifier;

function formatIsoNative(date) {
  return date.toISOString();
}

var formatIso = Date.prototype.toISOString ? formatIsoNative : (0, _defaultLocale.utcFormat)(isoSpecifier);
var _default = formatIso;
exports.default = _default;
},{"./defaultLocale.js":"../node_modules/d3-time-format/src/defaultLocale.js"}],"../node_modules/d3-time-format/src/isoParse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isoFormat = require("./isoFormat.js");

var _defaultLocale = require("./defaultLocale.js");

function parseIsoNative(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}

var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : (0, _defaultLocale.utcParse)(_isoFormat.isoSpecifier);
var _default = parseIso;
exports.default = _default;
},{"./isoFormat.js":"../node_modules/d3-time-format/src/isoFormat.js","./defaultLocale.js":"../node_modules/d3-time-format/src/defaultLocale.js"}],"../node_modules/d3-time-format/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "timeFormatDefaultLocale", {
  enumerable: true,
  get: function () {
    return _defaultLocale.default;
  }
});
Object.defineProperty(exports, "timeFormat", {
  enumerable: true,
  get: function () {
    return _defaultLocale.timeFormat;
  }
});
Object.defineProperty(exports, "timeParse", {
  enumerable: true,
  get: function () {
    return _defaultLocale.timeParse;
  }
});
Object.defineProperty(exports, "utcFormat", {
  enumerable: true,
  get: function () {
    return _defaultLocale.utcFormat;
  }
});
Object.defineProperty(exports, "utcParse", {
  enumerable: true,
  get: function () {
    return _defaultLocale.utcParse;
  }
});
Object.defineProperty(exports, "timeFormatLocale", {
  enumerable: true,
  get: function () {
    return _locale.default;
  }
});
Object.defineProperty(exports, "isoFormat", {
  enumerable: true,
  get: function () {
    return _isoFormat.default;
  }
});
Object.defineProperty(exports, "isoParse", {
  enumerable: true,
  get: function () {
    return _isoParse.default;
  }
});

var _defaultLocale = _interopRequireWildcard(require("./defaultLocale.js"));

var _locale = _interopRequireDefault(require("./locale.js"));

var _isoFormat = _interopRequireDefault(require("./isoFormat.js"));

var _isoParse = _interopRequireDefault(require("./isoParse.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./defaultLocale.js":"../node_modules/d3-time-format/src/defaultLocale.js","./locale.js":"../node_modules/d3-time-format/src/locale.js","./isoFormat.js":"../node_modules/d3-time-format/src/isoFormat.js","./isoParse.js":"../node_modules/d3-time-format/src/isoParse.js"}],"../node_modules/d3-scale/src/time.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calendar = calendar;
exports.default = _default;

var _d3Array = require("d3-array");

var _d3Time = require("d3-time");

var _d3TimeFormat = require("d3-time-format");

var _array = require("./array");

var _continuous = _interopRequireWildcard(require("./continuous"));

var _init = require("./init");

var _nice = _interopRequireDefault(require("./nice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var durationSecond = 1000,
    durationMinute = durationSecond * 60,
    durationHour = durationMinute * 60,
    durationDay = durationHour * 24,
    durationWeek = durationDay * 7,
    durationMonth = durationDay * 30,
    durationYear = durationDay * 365;

function date(t) {
  return new Date(t);
}

function number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}

function calendar(year, month, week, day, hour, minute, second, millisecond, format) {
  var scale = (0, _continuous.default)(_continuous.identity, _continuous.identity),
      invert = scale.invert,
      domain = scale.domain;
  var formatMillisecond = format(".%L"),
      formatSecond = format(":%S"),
      formatMinute = format("%I:%M"),
      formatHour = format("%I %p"),
      formatDay = format("%a %d"),
      formatWeek = format("%b %d"),
      formatMonth = format("%B"),
      formatYear = format("%Y");
  var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];

  function tickFormat(date) {
    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);
  }

  function tickInterval(interval, start, stop, step) {
    if (interval == null) interval = 10; // If a desired tick count is specified, pick a reasonable tick interval
    // based on the extent of the domain and a rough estimate of tick size.
    // Otherwise, assume interval is already a time interval and use it.

    if (typeof interval === "number") {
      var target = Math.abs(stop - start) / interval,
          i = (0, _d3Array.bisector)(function (i) {
        return i[2];
      }).right(tickIntervals, target);

      if (i === tickIntervals.length) {
        step = (0, _d3Array.tickStep)(start / durationYear, stop / durationYear, interval);
        interval = year;
      } else if (i) {
        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        step = i[1];
        interval = i[0];
      } else {
        step = Math.max((0, _d3Array.tickStep)(start, stop, interval), 1);
        interval = millisecond;
      }
    }

    return step == null ? interval : interval.every(step);
  }

  scale.invert = function (y) {
    return new Date(invert(y));
  };

  scale.domain = function (_) {
    return arguments.length ? domain(_array.map.call(_, number)) : domain().map(date);
  };

  scale.ticks = function (interval, step) {
    var d = domain(),
        t0 = d[0],
        t1 = d[d.length - 1],
        r = t1 < t0,
        t;
    if (r) t = t0, t0 = t1, t1 = t;
    t = tickInterval(interval, t0, t1, step);
    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop

    return r ? t.reverse() : t;
  };

  scale.tickFormat = function (count, specifier) {
    return specifier == null ? tickFormat : format(specifier);
  };

  scale.nice = function (interval, step) {
    var d = domain();
    return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain((0, _nice.default)(d, interval)) : scale;
  };

  scale.copy = function () {
    return (0, _continuous.copy)(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));
  };

  return scale;
}

function _default() {
  return _init.initRange.apply(calendar(_d3Time.timeYear, _d3Time.timeMonth, _d3Time.timeWeek, _d3Time.timeDay, _d3Time.timeHour, _d3Time.timeMinute, _d3Time.timeSecond, _d3Time.timeMillisecond, _d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
}
},{"d3-array":"../node_modules/d3-array/src/index.js","d3-time":"../node_modules/d3-time/src/index.js","d3-time-format":"../node_modules/d3-time-format/src/index.js","./array":"../node_modules/d3-scale/src/array.js","./continuous":"../node_modules/d3-scale/src/continuous.js","./init":"../node_modules/d3-scale/src/init.js","./nice":"../node_modules/d3-scale/src/nice.js"}],"../node_modules/d3-scale/src/utcTime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _time = require("./time");

var _d3TimeFormat = require("d3-time-format");

var _d3Time = require("d3-time");

var _init = require("./init");

function _default() {
  return _init.initRange.apply((0, _time.calendar)(_d3Time.utcYear, _d3Time.utcMonth, _d3Time.utcWeek, _d3Time.utcDay, _d3Time.utcHour, _d3Time.utcMinute, _d3Time.utcSecond, _d3Time.utcMillisecond, _d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
}
},{"./time":"../node_modules/d3-scale/src/time.js","d3-time-format":"../node_modules/d3-time-format/src/index.js","d3-time":"../node_modules/d3-time/src/index.js","./init":"../node_modules/d3-scale/src/init.js"}],"../node_modules/d3-scale/src/sequential.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.copy = copy;
exports.default = sequential;
exports.sequentialLog = sequentialLog;
exports.sequentialSymlog = sequentialSymlog;
exports.sequentialPow = sequentialPow;
exports.sequentialSqrt = sequentialSqrt;

var _continuous = require("./continuous");

var _init = require("./init");

var _linear = require("./linear");

var _log = require("./log");

var _symlog = require("./symlog");

var _pow = require("./pow");

function transformer() {
  var x0 = 0,
      x1 = 1,
      t0,
      t1,
      k10,
      transform,
      interpolator = _continuous.identity,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
    return scale;
  };
}

function copy(source, target) {
  return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());
}

function sequential() {
  var scale = (0, _linear.linearish)(transformer()(_continuous.identity));

  scale.copy = function () {
    return copy(scale, sequential());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialLog() {
  var scale = (0, _log.loggish)(transformer()).domain([1, 10]);

  scale.copy = function () {
    return copy(scale, sequentialLog()).base(scale.base());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialSymlog() {
  var scale = (0, _symlog.symlogish)(transformer());

  scale.copy = function () {
    return copy(scale, sequentialSymlog()).constant(scale.constant());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialPow() {
  var scale = (0, _pow.powish)(transformer());

  scale.copy = function () {
    return copy(scale, sequentialPow()).exponent(scale.exponent());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialSqrt() {
  return sequentialPow.apply(null, arguments).exponent(0.5);
}
},{"./continuous":"../node_modules/d3-scale/src/continuous.js","./init":"../node_modules/d3-scale/src/init.js","./linear":"../node_modules/d3-scale/src/linear.js","./log":"../node_modules/d3-scale/src/log.js","./symlog":"../node_modules/d3-scale/src/symlog.js","./pow":"../node_modules/d3-scale/src/pow.js"}],"../node_modules/d3-scale/src/sequentialQuantile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = sequentialQuantile;

var _d3Array = require("d3-array");

var _continuous = require("./continuous");

var _init = require("./init");

function sequentialQuantile() {
  var domain = [],
      interpolator = _continuous.identity;

  function scale(x) {
    if (!isNaN(x = +x)) return interpolator(((0, _d3Array.bisect)(domain, x) - 1) / (domain.length - 1));
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);

    domain.sort(_d3Array.ascending);
    return scale;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.copy = function () {
    return sequentialQuantile(interpolator).domain(domain);
  };

  return _init.initInterpolator.apply(scale, arguments);
}
},{"d3-array":"../node_modules/d3-array/src/index.js","./continuous":"../node_modules/d3-scale/src/continuous.js","./init":"../node_modules/d3-scale/src/init.js"}],"../node_modules/d3-scale/src/diverging.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = diverging;
exports.divergingLog = divergingLog;
exports.divergingSymlog = divergingSymlog;
exports.divergingPow = divergingPow;
exports.divergingSqrt = divergingSqrt;

var _continuous = require("./continuous");

var _init = require("./init");

var _linear = require("./linear");

var _log = require("./log");

var _sequential = require("./sequential");

var _symlog = require("./symlog");

var _pow = require("./pow");

function transformer() {
  var x0 = 0,
      x1 = 0.5,
      x2 = 1,
      t0,
      t1,
      t2,
      k10,
      k21,
      interpolator = _continuous.identity,
      transform,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);
    return scale;
  };
}

function diverging() {
  var scale = (0, _linear.linearish)(transformer()(_continuous.identity));

  scale.copy = function () {
    return (0, _sequential.copy)(scale, diverging());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingLog() {
  var scale = (0, _log.loggish)(transformer()).domain([0.1, 1, 10]);

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingLog()).base(scale.base());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingSymlog() {
  var scale = (0, _symlog.symlogish)(transformer());

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingSymlog()).constant(scale.constant());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingPow() {
  var scale = (0, _pow.powish)(transformer());

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingPow()).exponent(scale.exponent());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingSqrt() {
  return divergingPow.apply(null, arguments).exponent(0.5);
}
},{"./continuous":"../node_modules/d3-scale/src/continuous.js","./init":"../node_modules/d3-scale/src/init.js","./linear":"../node_modules/d3-scale/src/linear.js","./log":"../node_modules/d3-scale/src/log.js","./sequential":"../node_modules/d3-scale/src/sequential.js","./symlog":"../node_modules/d3-scale/src/symlog.js","./pow":"../node_modules/d3-scale/src/pow.js"}],"../node_modules/d3-scale/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "scaleBand", {
  enumerable: true,
  get: function () {
    return _band.default;
  }
});
Object.defineProperty(exports, "scalePoint", {
  enumerable: true,
  get: function () {
    return _band.point;
  }
});
Object.defineProperty(exports, "scaleIdentity", {
  enumerable: true,
  get: function () {
    return _identity.default;
  }
});
Object.defineProperty(exports, "scaleLinear", {
  enumerable: true,
  get: function () {
    return _linear.default;
  }
});
Object.defineProperty(exports, "scaleLog", {
  enumerable: true,
  get: function () {
    return _log.default;
  }
});
Object.defineProperty(exports, "scaleSymlog", {
  enumerable: true,
  get: function () {
    return _symlog.default;
  }
});
Object.defineProperty(exports, "scaleOrdinal", {
  enumerable: true,
  get: function () {
    return _ordinal.default;
  }
});
Object.defineProperty(exports, "scaleImplicit", {
  enumerable: true,
  get: function () {
    return _ordinal.implicit;
  }
});
Object.defineProperty(exports, "scalePow", {
  enumerable: true,
  get: function () {
    return _pow.default;
  }
});
Object.defineProperty(exports, "scaleSqrt", {
  enumerable: true,
  get: function () {
    return _pow.sqrt;
  }
});
Object.defineProperty(exports, "scaleQuantile", {
  enumerable: true,
  get: function () {
    return _quantile.default;
  }
});
Object.defineProperty(exports, "scaleQuantize", {
  enumerable: true,
  get: function () {
    return _quantize.default;
  }
});
Object.defineProperty(exports, "scaleThreshold", {
  enumerable: true,
  get: function () {
    return _threshold.default;
  }
});
Object.defineProperty(exports, "scaleTime", {
  enumerable: true,
  get: function () {
    return _time.default;
  }
});
Object.defineProperty(exports, "scaleUtc", {
  enumerable: true,
  get: function () {
    return _utcTime.default;
  }
});
Object.defineProperty(exports, "scaleSequential", {
  enumerable: true,
  get: function () {
    return _sequential.default;
  }
});
Object.defineProperty(exports, "scaleSequentialLog", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialLog;
  }
});
Object.defineProperty(exports, "scaleSequentialPow", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialPow;
  }
});
Object.defineProperty(exports, "scaleSequentialSqrt", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialSqrt;
  }
});
Object.defineProperty(exports, "scaleSequentialSymlog", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialSymlog;
  }
});
Object.defineProperty(exports, "scaleSequentialQuantile", {
  enumerable: true,
  get: function () {
    return _sequentialQuantile.default;
  }
});
Object.defineProperty(exports, "scaleDiverging", {
  enumerable: true,
  get: function () {
    return _diverging.default;
  }
});
Object.defineProperty(exports, "scaleDivergingLog", {
  enumerable: true,
  get: function () {
    return _diverging.divergingLog;
  }
});
Object.defineProperty(exports, "scaleDivergingPow", {
  enumerable: true,
  get: function () {
    return _diverging.divergingPow;
  }
});
Object.defineProperty(exports, "scaleDivergingSqrt", {
  enumerable: true,
  get: function () {
    return _diverging.divergingSqrt;
  }
});
Object.defineProperty(exports, "scaleDivergingSymlog", {
  enumerable: true,
  get: function () {
    return _diverging.divergingSymlog;
  }
});
Object.defineProperty(exports, "tickFormat", {
  enumerable: true,
  get: function () {
    return _tickFormat.default;
  }
});

var _band = _interopRequireWildcard(require("./band"));

var _identity = _interopRequireDefault(require("./identity"));

var _linear = _interopRequireDefault(require("./linear"));

var _log = _interopRequireDefault(require("./log"));

var _symlog = _interopRequireDefault(require("./symlog"));

var _ordinal = _interopRequireWildcard(require("./ordinal"));

var _pow = _interopRequireWildcard(require("./pow"));

var _quantile = _interopRequireDefault(require("./quantile"));

var _quantize = _interopRequireDefault(require("./quantize"));

var _threshold = _interopRequireDefault(require("./threshold"));

var _time = _interopRequireDefault(require("./time"));

var _utcTime = _interopRequireDefault(require("./utcTime"));

var _sequential = _interopRequireWildcard(require("./sequential"));

var _sequentialQuantile = _interopRequireDefault(require("./sequentialQuantile"));

var _diverging = _interopRequireWildcard(require("./diverging"));

var _tickFormat = _interopRequireDefault(require("./tickFormat"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./band":"../node_modules/d3-scale/src/band.js","./identity":"../node_modules/d3-scale/src/identity.js","./linear":"../node_modules/d3-scale/src/linear.js","./log":"../node_modules/d3-scale/src/log.js","./symlog":"../node_modules/d3-scale/src/symlog.js","./ordinal":"../node_modules/d3-scale/src/ordinal.js","./pow":"../node_modules/d3-scale/src/pow.js","./quantile":"../node_modules/d3-scale/src/quantile.js","./quantize":"../node_modules/d3-scale/src/quantize.js","./threshold":"../node_modules/d3-scale/src/threshold.js","./time":"../node_modules/d3-scale/src/time.js","./utcTime":"../node_modules/d3-scale/src/utcTime.js","./sequential":"../node_modules/d3-scale/src/sequential.js","./sequentialQuantile":"../node_modules/d3-scale/src/sequentialQuantile.js","./diverging":"../node_modules/d3-scale/src/diverging.js","./tickFormat":"../node_modules/d3-scale/src/tickFormat.js"}],"../node_modules/d3-scale-chromatic/src/colors.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(specifier) {
  var n = specifier.length / 6 | 0,
      colors = new Array(n),
      i = 0;

  while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);

  return colors;
}
},{}],"../node_modules/d3-scale-chromatic/src/categorical/category10.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js"}],"../node_modules/d3-scale-chromatic/src/categorical/Accent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js"}],"../node_modules/d3-scale-chromatic/src/categorical/Dark2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js"}],"../node_modules/d3-scale-chromatic/src/categorical/Paired.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js"}],"../node_modules/d3-scale-chromatic/src/categorical/Pastel1.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js"}],"../node_modules/d3-scale-chromatic/src/categorical/Pastel2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js"}],"../node_modules/d3-scale-chromatic/src/categorical/Set1.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js"}],"../node_modules/d3-scale-chromatic/src/categorical/Set2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js"}],"../node_modules/d3-scale-chromatic/src/categorical/Set3.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js"}],"../node_modules/d3-scale-chromatic/src/categorical/Tableau10.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js"}],"../node_modules/d3-scale-chromatic/src/ramp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

function _default(scheme) {
  return (0, _d3Interpolate.interpolateRgbBasis)(scheme[scheme.length - 1]);
}
},{"d3-interpolate":"../node_modules/d3-interpolate/src/index.js"}],"../node_modules/d3-scale-chromatic/src/diverging/BrBG.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("d8b365f5f5f55ab4ac", "a6611adfc27d80cdc1018571", "a6611adfc27df5f5f580cdc1018571", "8c510ad8b365f6e8c3c7eae55ab4ac01665e", "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e", "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e", "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e", "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30", "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/diverging/PRGn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("af8dc3f7f7f77fbf7b", "7b3294c2a5cfa6dba0008837", "7b3294c2a5cff7f7f7a6dba0008837", "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837", "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837", "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837", "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837", "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b", "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/diverging/PiYG.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e9a3c9f7f7f7a1d76a", "d01c8bf1b6dab8e1864dac26", "d01c8bf1b6daf7f7f7b8e1864dac26", "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221", "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221", "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221", "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221", "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419", "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/diverging/PuOr.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("998ec3f7f7f7f1a340", "5e3c99b2abd2fdb863e66101", "5e3c99b2abd2f7f7f7fdb863e66101", "542788998ec3d8daebfee0b6f1a340b35806", "542788998ec3d8daebf7f7f7fee0b6f1a340b35806", "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806", "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806", "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08", "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/diverging/RdBu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ef8a62f7f7f767a9cf", "ca0020f4a58292c5de0571b0", "ca0020f4a582f7f7f792c5de0571b0", "b2182bef8a62fddbc7d1e5f067a9cf2166ac", "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac", "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac", "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac", "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061", "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/diverging/RdGy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ef8a62ffffff999999", "ca0020f4a582bababa404040", "ca0020f4a582ffffffbababa404040", "b2182bef8a62fddbc7e0e0e09999994d4d4d", "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d", "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d", "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d", "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a", "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf91bfdb", "d7191cfdae61abd9e92c7bb6", "d7191cfdae61ffffbfabd9e92c7bb6", "d73027fc8d59fee090e0f3f891bfdb4575b4", "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4", "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4", "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4", "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695", "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf91cf60", "d7191cfdae61a6d96a1a9641", "d7191cfdae61ffffbfa6d96a1a9641", "d73027fc8d59fee08bd9ef8b91cf601a9850", "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850", "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850", "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850", "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837", "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/diverging/Spectral.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf99d594", "d7191cfdae61abdda42b83ba", "d7191cfdae61ffffbfabdda42b83ba", "d53e4ffc8d59fee08be6f59899d5943288bd", "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd", "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd", "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd", "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2", "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e5f5f999d8c92ca25f", "edf8fbb2e2e266c2a4238b45", "edf8fbb2e2e266c2a42ca25f006d2c", "edf8fbccece699d8c966c2a42ca25f006d2c", "edf8fbccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e0ecf49ebcda8856a7", "edf8fbb3cde38c96c688419d", "edf8fbb3cde38c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e0f3dba8ddb543a2ca", "f0f9e8bae4bc7bccc42b8cbe", "f0f9e8bae4bc7bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee8c8fdbb84e34a33", "fef0d9fdcc8afc8d59d7301f", "fef0d9fdcc8afc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ece2f0a6bddb1c9099", "f6eff7bdc9e167a9cf02818a", "f6eff7bdc9e167a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ece7f2a6bddb2b8cbe", "f1eef6bdc9e174a9cf0570b0", "f1eef6bdc9e174a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e7e1efc994c7dd1c77", "f1eef6d7b5d8df65b0ce1256", "f1eef6d7b5d8df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fde0ddfa9fb5c51b8a", "feebe2fbb4b9f768a1ae017e", "feebe2fbb4b9f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("edf8b17fcdbb2c7fb8", "ffffcca1dab441b6c4225ea8", "ffffcca1dab441b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("f7fcb9addd8e31a354", "ffffccc2e69978c679238443", "ffffccc2e69978c67931a354006837", "ffffccd9f0a3addd8e78c67931a354006837", "ffffccd9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fff7bcfec44fd95f0e", "ffffd4fed98efe9929cc4c02", "ffffd4fed98efe9929d95f0e993404", "ffffd4fee391fec44ffe9929d95f0e993404", "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ffeda0feb24cf03b20", "ffffb2fecc5cfd8d3ce31a1c", "ffffb2fecc5cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-single/Blues.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("deebf79ecae13182bd", "eff3ffbdd7e76baed62171b5", "eff3ffbdd7e76baed63182bd08519c", "eff3ffc6dbef9ecae16baed63182bd08519c", "eff3ffc6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-single/Greens.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e5f5e0a1d99b31a354", "edf8e9bae4b374c476238b45", "edf8e9bae4b374c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-single/Greys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("f0f0f0bdbdbd636363", "f7f7f7cccccc969696525252", "f7f7f7cccccc969696636363252525", "f7f7f7d9d9d9bdbdbd969696636363252525", "f7f7f7d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-single/Purples.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("efedf5bcbddc756bb1", "f2f0f7cbc9e29e9ac86a51a3", "f2f0f7cbc9e29e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-single/Reds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee0d2fc9272de2d26", "fee5d9fcae91fb6a4acb181d", "fee5d9fcae91fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee6cefdae6be6550d", "feeddefdbe85fd8d3cd94701", "feeddefdbe85fd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../node_modules/d3-scale-chromatic/src/ramp.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb(" + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + ", " + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + ", " + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67))))))) + ")";
}
},{}],"../node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

var _default = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(300, 0.5, 0.0), (0, _d3Color.cubehelix)(-240, 0.5, 1.0));

exports.default = _default;
},{"d3-color":"../node_modules/d3-color/src/index.js","d3-interpolate":"../node_modules/d3-interpolate/src/index.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.cool = exports.warm = void 0;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

var warm = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(-100, 0.75, 0.35), (0, _d3Color.cubehelix)(80, 1.50, 0.8));
exports.warm = warm;
var cool = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(260, 0.75, 0.35), (0, _d3Color.cubehelix)(80, 1.50, 0.8));
exports.cool = cool;
var c = (0, _d3Color.cubehelix)();

function _default(t) {
  if (t < 0 || t > 1) t -= Math.floor(t);
  var ts = Math.abs(t - 0.5);
  c.h = 360 * t - 100;
  c.s = 1.5 - 1.5 * ts;
  c.l = 0.8 - 0.9 * ts;
  return c + "";
}
},{"d3-color":"../node_modules/d3-color/src/index.js","d3-interpolate":"../node_modules/d3-interpolate/src/index.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var c = (0, _d3Color.rgb)(),
    pi_1_3 = Math.PI / 3,
    pi_2_3 = Math.PI * 2 / 3;

function _default(t) {
  var x;
  t = (0.5 - t) * Math.PI;
  c.r = 255 * (x = Math.sin(t)) * x;
  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
  return c + "";
}
},{"d3-color":"../node_modules/d3-color/src/index.js"}],"../node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb(" + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + ", " + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + ", " + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66))))))) + ")";
}
},{}],"../node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.plasma = exports.inferno = exports.magma = exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ramp(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}

var _default = ramp((0, _colors.default)("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));

exports.default = _default;
var magma = ramp((0, _colors.default)("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
exports.magma = magma;
var inferno = ramp((0, _colors.default)("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
exports.inferno = inferno;
var plasma = ramp((0, _colors.default)("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));
exports.plasma = plasma;
},{"../colors.js":"../node_modules/d3-scale-chromatic/src/colors.js"}],"../node_modules/d3-scale-chromatic/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "schemeCategory10", {
  enumerable: true,
  get: function () {
    return _category.default;
  }
});
Object.defineProperty(exports, "schemeAccent", {
  enumerable: true,
  get: function () {
    return _Accent.default;
  }
});
Object.defineProperty(exports, "schemeDark2", {
  enumerable: true,
  get: function () {
    return _Dark.default;
  }
});
Object.defineProperty(exports, "schemePaired", {
  enumerable: true,
  get: function () {
    return _Paired.default;
  }
});
Object.defineProperty(exports, "schemePastel1", {
  enumerable: true,
  get: function () {
    return _Pastel.default;
  }
});
Object.defineProperty(exports, "schemePastel2", {
  enumerable: true,
  get: function () {
    return _Pastel2.default;
  }
});
Object.defineProperty(exports, "schemeSet1", {
  enumerable: true,
  get: function () {
    return _Set.default;
  }
});
Object.defineProperty(exports, "schemeSet2", {
  enumerable: true,
  get: function () {
    return _Set2.default;
  }
});
Object.defineProperty(exports, "schemeSet3", {
  enumerable: true,
  get: function () {
    return _Set3.default;
  }
});
Object.defineProperty(exports, "schemeTableau10", {
  enumerable: true,
  get: function () {
    return _Tableau.default;
  }
});
Object.defineProperty(exports, "interpolateBrBG", {
  enumerable: true,
  get: function () {
    return _BrBG.default;
  }
});
Object.defineProperty(exports, "schemeBrBG", {
  enumerable: true,
  get: function () {
    return _BrBG.scheme;
  }
});
Object.defineProperty(exports, "interpolatePRGn", {
  enumerable: true,
  get: function () {
    return _PRGn.default;
  }
});
Object.defineProperty(exports, "schemePRGn", {
  enumerable: true,
  get: function () {
    return _PRGn.scheme;
  }
});
Object.defineProperty(exports, "interpolatePiYG", {
  enumerable: true,
  get: function () {
    return _PiYG.default;
  }
});
Object.defineProperty(exports, "schemePiYG", {
  enumerable: true,
  get: function () {
    return _PiYG.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuOr", {
  enumerable: true,
  get: function () {
    return _PuOr.default;
  }
});
Object.defineProperty(exports, "schemePuOr", {
  enumerable: true,
  get: function () {
    return _PuOr.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdBu", {
  enumerable: true,
  get: function () {
    return _RdBu.default;
  }
});
Object.defineProperty(exports, "schemeRdBu", {
  enumerable: true,
  get: function () {
    return _RdBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdGy", {
  enumerable: true,
  get: function () {
    return _RdGy.default;
  }
});
Object.defineProperty(exports, "schemeRdGy", {
  enumerable: true,
  get: function () {
    return _RdGy.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdYlBu", {
  enumerable: true,
  get: function () {
    return _RdYlBu.default;
  }
});
Object.defineProperty(exports, "schemeRdYlBu", {
  enumerable: true,
  get: function () {
    return _RdYlBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdYlGn", {
  enumerable: true,
  get: function () {
    return _RdYlGn.default;
  }
});
Object.defineProperty(exports, "schemeRdYlGn", {
  enumerable: true,
  get: function () {
    return _RdYlGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateSpectral", {
  enumerable: true,
  get: function () {
    return _Spectral.default;
  }
});
Object.defineProperty(exports, "schemeSpectral", {
  enumerable: true,
  get: function () {
    return _Spectral.scheme;
  }
});
Object.defineProperty(exports, "interpolateBuGn", {
  enumerable: true,
  get: function () {
    return _BuGn.default;
  }
});
Object.defineProperty(exports, "schemeBuGn", {
  enumerable: true,
  get: function () {
    return _BuGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateBuPu", {
  enumerable: true,
  get: function () {
    return _BuPu.default;
  }
});
Object.defineProperty(exports, "schemeBuPu", {
  enumerable: true,
  get: function () {
    return _BuPu.scheme;
  }
});
Object.defineProperty(exports, "interpolateGnBu", {
  enumerable: true,
  get: function () {
    return _GnBu.default;
  }
});
Object.defineProperty(exports, "schemeGnBu", {
  enumerable: true,
  get: function () {
    return _GnBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateOrRd", {
  enumerable: true,
  get: function () {
    return _OrRd.default;
  }
});
Object.defineProperty(exports, "schemeOrRd", {
  enumerable: true,
  get: function () {
    return _OrRd.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuBuGn", {
  enumerable: true,
  get: function () {
    return _PuBuGn.default;
  }
});
Object.defineProperty(exports, "schemePuBuGn", {
  enumerable: true,
  get: function () {
    return _PuBuGn.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuBu", {
  enumerable: true,
  get: function () {
    return _PuBu.default;
  }
});
Object.defineProperty(exports, "schemePuBu", {
  enumerable: true,
  get: function () {
    return _PuBu.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuRd", {
  enumerable: true,
  get: function () {
    return _PuRd.default;
  }
});
Object.defineProperty(exports, "schemePuRd", {
  enumerable: true,
  get: function () {
    return _PuRd.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdPu", {
  enumerable: true,
  get: function () {
    return _RdPu.default;
  }
});
Object.defineProperty(exports, "schemeRdPu", {
  enumerable: true,
  get: function () {
    return _RdPu.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlGnBu", {
  enumerable: true,
  get: function () {
    return _YlGnBu.default;
  }
});
Object.defineProperty(exports, "schemeYlGnBu", {
  enumerable: true,
  get: function () {
    return _YlGnBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlGn", {
  enumerable: true,
  get: function () {
    return _YlGn.default;
  }
});
Object.defineProperty(exports, "schemeYlGn", {
  enumerable: true,
  get: function () {
    return _YlGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlOrBr", {
  enumerable: true,
  get: function () {
    return _YlOrBr.default;
  }
});
Object.defineProperty(exports, "schemeYlOrBr", {
  enumerable: true,
  get: function () {
    return _YlOrBr.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlOrRd", {
  enumerable: true,
  get: function () {
    return _YlOrRd.default;
  }
});
Object.defineProperty(exports, "schemeYlOrRd", {
  enumerable: true,
  get: function () {
    return _YlOrRd.scheme;
  }
});
Object.defineProperty(exports, "interpolateBlues", {
  enumerable: true,
  get: function () {
    return _Blues.default;
  }
});
Object.defineProperty(exports, "schemeBlues", {
  enumerable: true,
  get: function () {
    return _Blues.scheme;
  }
});
Object.defineProperty(exports, "interpolateGreens", {
  enumerable: true,
  get: function () {
    return _Greens.default;
  }
});
Object.defineProperty(exports, "schemeGreens", {
  enumerable: true,
  get: function () {
    return _Greens.scheme;
  }
});
Object.defineProperty(exports, "interpolateGreys", {
  enumerable: true,
  get: function () {
    return _Greys.default;
  }
});
Object.defineProperty(exports, "schemeGreys", {
  enumerable: true,
  get: function () {
    return _Greys.scheme;
  }
});
Object.defineProperty(exports, "interpolatePurples", {
  enumerable: true,
  get: function () {
    return _Purples.default;
  }
});
Object.defineProperty(exports, "schemePurples", {
  enumerable: true,
  get: function () {
    return _Purples.scheme;
  }
});
Object.defineProperty(exports, "interpolateReds", {
  enumerable: true,
  get: function () {
    return _Reds.default;
  }
});
Object.defineProperty(exports, "schemeReds", {
  enumerable: true,
  get: function () {
    return _Reds.scheme;
  }
});
Object.defineProperty(exports, "interpolateOranges", {
  enumerable: true,
  get: function () {
    return _Oranges.default;
  }
});
Object.defineProperty(exports, "schemeOranges", {
  enumerable: true,
  get: function () {
    return _Oranges.scheme;
  }
});
Object.defineProperty(exports, "interpolateCividis", {
  enumerable: true,
  get: function () {
    return _cividis.default;
  }
});
Object.defineProperty(exports, "interpolateCubehelixDefault", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});
Object.defineProperty(exports, "interpolateRainbow", {
  enumerable: true,
  get: function () {
    return _rainbow.default;
  }
});
Object.defineProperty(exports, "interpolateWarm", {
  enumerable: true,
  get: function () {
    return _rainbow.warm;
  }
});
Object.defineProperty(exports, "interpolateCool", {
  enumerable: true,
  get: function () {
    return _rainbow.cool;
  }
});
Object.defineProperty(exports, "interpolateSinebow", {
  enumerable: true,
  get: function () {
    return _sinebow.default;
  }
});
Object.defineProperty(exports, "interpolateTurbo", {
  enumerable: true,
  get: function () {
    return _turbo.default;
  }
});
Object.defineProperty(exports, "interpolateViridis", {
  enumerable: true,
  get: function () {
    return _viridis.default;
  }
});
Object.defineProperty(exports, "interpolateMagma", {
  enumerable: true,
  get: function () {
    return _viridis.magma;
  }
});
Object.defineProperty(exports, "interpolateInferno", {
  enumerable: true,
  get: function () {
    return _viridis.inferno;
  }
});
Object.defineProperty(exports, "interpolatePlasma", {
  enumerable: true,
  get: function () {
    return _viridis.plasma;
  }
});

var _category = _interopRequireDefault(require("./categorical/category10.js"));

var _Accent = _interopRequireDefault(require("./categorical/Accent.js"));

var _Dark = _interopRequireDefault(require("./categorical/Dark2.js"));

var _Paired = _interopRequireDefault(require("./categorical/Paired.js"));

var _Pastel = _interopRequireDefault(require("./categorical/Pastel1.js"));

var _Pastel2 = _interopRequireDefault(require("./categorical/Pastel2.js"));

var _Set = _interopRequireDefault(require("./categorical/Set1.js"));

var _Set2 = _interopRequireDefault(require("./categorical/Set2.js"));

var _Set3 = _interopRequireDefault(require("./categorical/Set3.js"));

var _Tableau = _interopRequireDefault(require("./categorical/Tableau10.js"));

var _BrBG = _interopRequireWildcard(require("./diverging/BrBG.js"));

var _PRGn = _interopRequireWildcard(require("./diverging/PRGn.js"));

var _PiYG = _interopRequireWildcard(require("./diverging/PiYG.js"));

var _PuOr = _interopRequireWildcard(require("./diverging/PuOr.js"));

var _RdBu = _interopRequireWildcard(require("./diverging/RdBu.js"));

var _RdGy = _interopRequireWildcard(require("./diverging/RdGy.js"));

var _RdYlBu = _interopRequireWildcard(require("./diverging/RdYlBu.js"));

var _RdYlGn = _interopRequireWildcard(require("./diverging/RdYlGn.js"));

var _Spectral = _interopRequireWildcard(require("./diverging/Spectral.js"));

var _BuGn = _interopRequireWildcard(require("./sequential-multi/BuGn.js"));

var _BuPu = _interopRequireWildcard(require("./sequential-multi/BuPu.js"));

var _GnBu = _interopRequireWildcard(require("./sequential-multi/GnBu.js"));

var _OrRd = _interopRequireWildcard(require("./sequential-multi/OrRd.js"));

var _PuBuGn = _interopRequireWildcard(require("./sequential-multi/PuBuGn.js"));

var _PuBu = _interopRequireWildcard(require("./sequential-multi/PuBu.js"));

var _PuRd = _interopRequireWildcard(require("./sequential-multi/PuRd.js"));

var _RdPu = _interopRequireWildcard(require("./sequential-multi/RdPu.js"));

var _YlGnBu = _interopRequireWildcard(require("./sequential-multi/YlGnBu.js"));

var _YlGn = _interopRequireWildcard(require("./sequential-multi/YlGn.js"));

var _YlOrBr = _interopRequireWildcard(require("./sequential-multi/YlOrBr.js"));

var _YlOrRd = _interopRequireWildcard(require("./sequential-multi/YlOrRd.js"));

var _Blues = _interopRequireWildcard(require("./sequential-single/Blues.js"));

var _Greens = _interopRequireWildcard(require("./sequential-single/Greens.js"));

var _Greys = _interopRequireWildcard(require("./sequential-single/Greys.js"));

var _Purples = _interopRequireWildcard(require("./sequential-single/Purples.js"));

var _Reds = _interopRequireWildcard(require("./sequential-single/Reds.js"));

var _Oranges = _interopRequireWildcard(require("./sequential-single/Oranges.js"));

var _cividis = _interopRequireDefault(require("./sequential-multi/cividis.js"));

var _cubehelix = _interopRequireDefault(require("./sequential-multi/cubehelix.js"));

var _rainbow = _interopRequireWildcard(require("./sequential-multi/rainbow.js"));

var _sinebow = _interopRequireDefault(require("./sequential-multi/sinebow.js"));

var _turbo = _interopRequireDefault(require("./sequential-multi/turbo.js"));

var _viridis = _interopRequireWildcard(require("./sequential-multi/viridis.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./categorical/category10.js":"../node_modules/d3-scale-chromatic/src/categorical/category10.js","./categorical/Accent.js":"../node_modules/d3-scale-chromatic/src/categorical/Accent.js","./categorical/Dark2.js":"../node_modules/d3-scale-chromatic/src/categorical/Dark2.js","./categorical/Paired.js":"../node_modules/d3-scale-chromatic/src/categorical/Paired.js","./categorical/Pastel1.js":"../node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","./categorical/Pastel2.js":"../node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","./categorical/Set1.js":"../node_modules/d3-scale-chromatic/src/categorical/Set1.js","./categorical/Set2.js":"../node_modules/d3-scale-chromatic/src/categorical/Set2.js","./categorical/Set3.js":"../node_modules/d3-scale-chromatic/src/categorical/Set3.js","./categorical/Tableau10.js":"../node_modules/d3-scale-chromatic/src/categorical/Tableau10.js","./diverging/BrBG.js":"../node_modules/d3-scale-chromatic/src/diverging/BrBG.js","./diverging/PRGn.js":"../node_modules/d3-scale-chromatic/src/diverging/PRGn.js","./diverging/PiYG.js":"../node_modules/d3-scale-chromatic/src/diverging/PiYG.js","./diverging/PuOr.js":"../node_modules/d3-scale-chromatic/src/diverging/PuOr.js","./diverging/RdBu.js":"../node_modules/d3-scale-chromatic/src/diverging/RdBu.js","./diverging/RdGy.js":"../node_modules/d3-scale-chromatic/src/diverging/RdGy.js","./diverging/RdYlBu.js":"../node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","./diverging/RdYlGn.js":"../node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","./diverging/Spectral.js":"../node_modules/d3-scale-chromatic/src/diverging/Spectral.js","./sequential-multi/BuGn.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","./sequential-multi/BuPu.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","./sequential-multi/GnBu.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","./sequential-multi/OrRd.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","./sequential-multi/PuBuGn.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","./sequential-multi/PuBu.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","./sequential-multi/PuRd.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","./sequential-multi/RdPu.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","./sequential-multi/YlGnBu.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","./sequential-multi/YlGn.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","./sequential-multi/YlOrBr.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","./sequential-multi/YlOrRd.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","./sequential-single/Blues.js":"../node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","./sequential-single/Greens.js":"../node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","./sequential-single/Greys.js":"../node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","./sequential-single/Purples.js":"../node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","./sequential-single/Reds.js":"../node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","./sequential-single/Oranges.js":"../node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","./sequential-multi/cividis.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js","./sequential-multi/cubehelix.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","./sequential-multi/rainbow.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","./sequential-multi/sinebow.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","./sequential-multi/turbo.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js","./sequential-multi/viridis.js":"../node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js"}],"../node_modules/d3-shape/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function constant() {
    return x;
  };
}
},{}],"../node_modules/d3-shape/src/math.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acos = acos;
exports.asin = asin;
exports.tau = exports.halfPi = exports.pi = exports.epsilon = exports.sqrt = exports.sin = exports.min = exports.max = exports.cos = exports.atan2 = exports.abs = void 0;
var abs = Math.abs;
exports.abs = abs;
var atan2 = Math.atan2;
exports.atan2 = atan2;
var cos = Math.cos;
exports.cos = cos;
var max = Math.max;
exports.max = max;
var min = Math.min;
exports.min = min;
var sin = Math.sin;
exports.sin = sin;
var sqrt = Math.sqrt;
exports.sqrt = sqrt;
var epsilon = 1e-12;
exports.epsilon = epsilon;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var tau = 2 * pi;
exports.tau = tau;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
}
},{}],"../node_modules/d3-shape/src/arc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function arcInnerRadius(d) {
  return d.innerRadius;
}

function arcOuterRadius(d) {
  return d.outerRadius;
}

function arcStartAngle(d) {
  return d.startAngle;
}

function arcEndAngle(d) {
  return d.endAngle;
}

function arcPadAngle(d) {
  return d && d.padAngle; // Note: optional!
}

function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0,
      y10 = y1 - y0,
      x32 = x3 - x2,
      y32 = y3 - y2,
      t = y32 * x10 - x32 * y10;
  if (t * t < _math.epsilon) return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
} // Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html


function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1,
      y01 = y0 - y1,
      lo = (cw ? rc : -rc) / (0, _math.sqrt)(x01 * x01 + y01 * y01),
      ox = lo * y01,
      oy = -lo * x01,
      x11 = x0 + ox,
      y11 = y0 + oy,
      x10 = x1 + ox,
      y10 = y1 + oy,
      x00 = (x11 + x10) / 2,
      y00 = (y11 + y10) / 2,
      dx = x10 - x11,
      dy = y10 - y11,
      d2 = dx * dx + dy * dy,
      r = r1 - rc,
      D = x11 * y10 - x10 * y11,
      d = (dy < 0 ? -1 : 1) * (0, _math.sqrt)((0, _math.max)(0, r * r * d2 - D * D)),
      cx0 = (D * dy - dx * d) / d2,
      cy0 = (-D * dx - dy * d) / d2,
      cx1 = (D * dy + dx * d) / d2,
      cy1 = (-D * dx + dy * d) / d2,
      dx0 = cx0 - x00,
      dy0 = cy0 - y00,
      dx1 = cx1 - x00,
      dy1 = cy1 - y00; // Pick the closer of the two intersection points.
  // TODO Is there a faster way to determine which intersection to use?

  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}

function _default() {
  var innerRadius = arcInnerRadius,
      outerRadius = arcOuterRadius,
      cornerRadius = (0, _constant.default)(0),
      padRadius = null,
      startAngle = arcStartAngle,
      endAngle = arcEndAngle,
      padAngle = arcPadAngle,
      context = null;

  function arc() {
    var buffer,
        r,
        r0 = +innerRadius.apply(this, arguments),
        r1 = +outerRadius.apply(this, arguments),
        a0 = startAngle.apply(this, arguments) - _math.halfPi,
        a1 = endAngle.apply(this, arguments) - _math.halfPi,
        da = (0, _math.abs)(a1 - a0),
        cw = a1 > a0;

    if (!context) context = buffer = (0, _d3Path.path)(); // Ensure that the outer radius is always larger than the inner radius.

    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?

    if (!(r1 > _math.epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?
    else if (da > _math.tau - _math.epsilon) {
        context.moveTo(r1 * (0, _math.cos)(a0), r1 * (0, _math.sin)(a0));
        context.arc(0, 0, r1, a0, a1, !cw);

        if (r0 > _math.epsilon) {
          context.moveTo(r0 * (0, _math.cos)(a1), r0 * (0, _math.sin)(a1));
          context.arc(0, 0, r0, a1, a0, cw);
        }
      } // Or is it a circular or annular sector?
      else {
          var a01 = a0,
              a11 = a1,
              a00 = a0,
              a10 = a1,
              da0 = da,
              da1 = da,
              ap = padAngle.apply(this, arguments) / 2,
              rp = ap > _math.epsilon && (padRadius ? +padRadius.apply(this, arguments) : (0, _math.sqrt)(r0 * r0 + r1 * r1)),
              rc = (0, _math.min)((0, _math.abs)(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
              rc0 = rc,
              rc1 = rc,
              t0,
              t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.

          if (rp > _math.epsilon) {
            var p0 = (0, _math.asin)(rp / r0 * (0, _math.sin)(ap)),
                p1 = (0, _math.asin)(rp / r1 * (0, _math.sin)(ap));
            if ((da0 -= p0 * 2) > _math.epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;
            if ((da1 -= p1 * 2) > _math.epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;
          }

          var x01 = r1 * (0, _math.cos)(a01),
              y01 = r1 * (0, _math.sin)(a01),
              x10 = r0 * (0, _math.cos)(a10),
              y10 = r0 * (0, _math.sin)(a10); // Apply rounded corners?

          if (rc > _math.epsilon) {
            var x11 = r1 * (0, _math.cos)(a11),
                y11 = r1 * (0, _math.sin)(a11),
                x00 = r0 * (0, _math.cos)(a00),
                y00 = r0 * (0, _math.sin)(a00),
                oc; // Restrict the corner radius according to the sector angle.

            if (da < _math.pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
              var ax = x01 - oc[0],
                  ay = y01 - oc[1],
                  bx = x11 - oc[0],
                  by = y11 - oc[1],
                  kc = 1 / (0, _math.sin)((0, _math.acos)((ax * bx + ay * by) / ((0, _math.sqrt)(ax * ax + ay * ay) * (0, _math.sqrt)(bx * bx + by * by))) / 2),
                  lc = (0, _math.sqrt)(oc[0] * oc[0] + oc[1] * oc[1]);
              rc0 = (0, _math.min)(rc, (r0 - lc) / (kc - 1));
              rc1 = (0, _math.min)(rc, (r1 - lc) / (kc + 1));
            }
          } // Is the sector collapsed to a line?


          if (!(da1 > _math.epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?
          else if (rc1 > _math.epsilon) {
              t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
              t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
              context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r1, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
                  context.arc(t1.cx, t1.cy, rc1, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } // Or is the outer ring just a circular arc?
            else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?
          // Or perhaps it’s an annular sector collapsed due to padding?

          if (!(r0 > _math.epsilon) || !(da0 > _math.epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?
          else if (rc0 > _math.epsilon) {
              t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
              t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
              context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r0, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), cw);
                  context.arc(t1.cx, t1.cy, rc0, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } // Or is the inner ring just a circular arc?
            else context.arc(0, 0, r0, a10, a00, cw);
        }
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  arc.centroid = function () {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - _math.pi / 2;
    return [(0, _math.cos)(a) * r, (0, _math.sin)(a) * r];
  };

  arc.innerRadius = function (_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : innerRadius;
  };

  arc.outerRadius = function (_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : outerRadius;
  };

  arc.cornerRadius = function (_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : cornerRadius;
  };

  arc.padRadius = function (_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padRadius;
  };

  arc.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : startAngle;
  };

  arc.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : endAngle;
  };

  arc.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padAngle;
  };

  arc.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, arc) : context;
  };

  return arc;
}
},{"d3-path":"../node_modules/d3-path/src/index.js","./constant.js":"../node_modules/d3-shape/src/constant.js","./math.js":"../node_modules/d3-shape/src/math.js"}],"../node_modules/d3-shape/src/curve/linear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function Linear(context) {
  this._context = context;
}

Linear.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        this._context.lineTo(x, y);

        break;
    }
  }
};

function _default(context) {
  return new Linear(context);
}
},{}],"../node_modules/d3-shape/src/point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;

function x(p) {
  return p[0];
}

function y(p) {
  return p[1];
}
},{}],"../node_modules/d3-shape/src/line.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _point = require("./point.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x = _point.x,
      y = _point.y,
      defined = (0, _constant.default)(true),
      context = null,
      curve = _linear.default,
      output = null;

  function line(data) {
    var i,
        n = data.length,
        d,
        defined0 = false,
        buffer;
    if (context == null) output = curve(buffer = (0, _d3Path.path)());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) output.lineStart();else output.lineEnd();
      }

      if (defined0) output.point(+x(d, i, data), +y(d, i, data));
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  line.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : x;
  };

  line.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : y;
  };

  line.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), line) : defined;
  };

  line.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };

  line.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };

  return line;
}
},{"d3-path":"../node_modules/d3-path/src/index.js","./constant.js":"../node_modules/d3-shape/src/constant.js","./curve/linear.js":"../node_modules/d3-shape/src/curve/linear.js","./point.js":"../node_modules/d3-shape/src/point.js"}],"../node_modules/d3-shape/src/area.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _point = require("./point.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x0 = _point.x,
      x1 = null,
      y0 = (0, _constant.default)(0),
      y1 = _point.y,
      defined = (0, _constant.default)(true),
      context = null,
      curve = _linear.default,
      output = null;

  function area(data) {
    var i,
        j,
        k,
        n = data.length,
        d,
        defined0 = false,
        buffer,
        x0z = new Array(n),
        y0z = new Array(n);
    if (context == null) output = curve(buffer = (0, _d3Path.path)());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();

          for (k = i - 1; k >= j; --k) {
            output.point(x0z[k], y0z[k]);
          }

          output.lineEnd();
          output.areaEnd();
        }
      }

      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  function arealine() {
    return (0, _line.default)().defined(defined).curve(curve).context(context);
  }

  area.x = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), x1 = null, area) : x0;
  };

  area.x0 = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x0;
  };

  area.x1 = function (_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x1;
  };

  area.y = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), y1 = null, area) : y0;
  };

  area.y0 = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y0;
  };

  area.y1 = function (_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y1;
  };

  area.lineX0 = area.lineY0 = function () {
    return arealine().x(x0).y(y0);
  };

  area.lineY1 = function () {
    return arealine().x(x0).y(y1);
  };

  area.lineX1 = function () {
    return arealine().x(x1).y(y0);
  };

  area.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), area) : defined;
  };

  area.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };

  area.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };

  return area;
}
},{"d3-path":"../node_modules/d3-path/src/index.js","./constant.js":"../node_modules/d3-shape/src/constant.js","./curve/linear.js":"../node_modules/d3-shape/src/curve/linear.js","./line.js":"../node_modules/d3-shape/src/line.js","./point.js":"../node_modules/d3-shape/src/point.js"}],"../node_modules/d3-shape/src/descending.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}
},{}],"../node_modules/d3-shape/src/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(d) {
  return d;
}
},{}],"../node_modules/d3-shape/src/pie.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant.js"));

var _descending = _interopRequireDefault(require("./descending.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var value = _identity.default,
      sortValues = _descending.default,
      sort = null,
      startAngle = (0, _constant.default)(0),
      endAngle = (0, _constant.default)(_math.tau),
      padAngle = (0, _constant.default)(0);

  function pie(data) {
    var i,
        n = data.length,
        j,
        k,
        sum = 0,
        index = new Array(n),
        arcs = new Array(n),
        a0 = +startAngle.apply(this, arguments),
        da = Math.min(_math.tau, Math.max(-_math.tau, endAngle.apply(this, arguments) - a0)),
        a1,
        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
        pa = p * (da < 0 ? -1 : 1),
        v;

    for (i = 0; i < n; ++i) {
      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
        sum += v;
      }
    } // Optionally sort the arcs by previously-computed values or by data.


    if (sortValues != null) index.sort(function (i, j) {
      return sortValues(arcs[i], arcs[j]);
    });else if (sort != null) index.sort(function (i, j) {
      return sort(data[i], data[j]);
    }); // Compute the arcs! They are stored in the original data's order.

    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }

    return arcs;
  }

  pie.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : value;
  };

  pie.sortValues = function (_) {
    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
  };

  pie.sort = function (_) {
    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
  };

  pie.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : startAngle;
  };

  pie.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : endAngle;
  };

  pie.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : padAngle;
  };

  return pie;
}
},{"./constant.js":"../node_modules/d3-shape/src/constant.js","./descending.js":"../node_modules/d3-shape/src/descending.js","./identity.js":"../node_modules/d3-shape/src/identity.js","./math.js":"../node_modules/d3-shape/src/math.js"}],"../node_modules/d3-shape/src/curve/radial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = curveRadial;
exports.curveRadialLinear = void 0;

var _linear = _interopRequireDefault(require("./linear.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var curveRadialLinear = curveRadial(_linear.default);
exports.curveRadialLinear = curveRadialLinear;

function Radial(curve) {
  this._curve = curve;
}

Radial.prototype = {
  areaStart: function () {
    this._curve.areaStart();
  },
  areaEnd: function () {
    this._curve.areaEnd();
  },
  lineStart: function () {
    this._curve.lineStart();
  },
  lineEnd: function () {
    this._curve.lineEnd();
  },
  point: function (a, r) {
    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
  }
};

function curveRadial(curve) {
  function radial(context) {
    return new Radial(curve(context));
  }

  radial._curve = curve;
  return radial;
}
},{"./linear.js":"../node_modules/d3-shape/src/curve/linear.js"}],"../node_modules/d3-shape/src/lineRadial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lineRadial = lineRadial;
exports.default = _default;

var _radial = _interopRequireWildcard(require("./curve/radial.js"));

var _line = _interopRequireDefault(require("./line.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function lineRadial(l) {
  var c = l.curve;
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;

  l.curve = function (_) {
    return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
  };

  return l;
}

function _default() {
  return lineRadial((0, _line.default)().curve(_radial.curveRadialLinear));
}
},{"./curve/radial.js":"../node_modules/d3-shape/src/curve/radial.js","./line.js":"../node_modules/d3-shape/src/line.js"}],"../node_modules/d3-shape/src/areaRadial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _radial = _interopRequireWildcard(require("./curve/radial.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _lineRadial = require("./lineRadial.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default() {
  var a = (0, _area.default)().curve(_radial.curveRadialLinear),
      c = a.curve,
      x0 = a.lineX0,
      x1 = a.lineX1,
      y0 = a.lineY0,
      y1 = a.lineY1;
  a.angle = a.x, delete a.x;
  a.startAngle = a.x0, delete a.x0;
  a.endAngle = a.x1, delete a.x1;
  a.radius = a.y, delete a.y;
  a.innerRadius = a.y0, delete a.y0;
  a.outerRadius = a.y1, delete a.y1;
  a.lineStartAngle = function () {
    return (0, _lineRadial.lineRadial)(x0());
  }, delete a.lineX0;
  a.lineEndAngle = function () {
    return (0, _lineRadial.lineRadial)(x1());
  }, delete a.lineX1;
  a.lineInnerRadius = function () {
    return (0, _lineRadial.lineRadial)(y0());
  }, delete a.lineY0;
  a.lineOuterRadius = function () {
    return (0, _lineRadial.lineRadial)(y1());
  }, delete a.lineY1;

  a.curve = function (_) {
    return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
  };

  return a;
}
},{"./curve/radial.js":"../node_modules/d3-shape/src/curve/radial.js","./area.js":"../node_modules/d3-shape/src/area.js","./lineRadial.js":"../node_modules/d3-shape/src/lineRadial.js"}],"../node_modules/d3-shape/src/pointRadial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
}
},{}],"../node_modules/d3-shape/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;
},{}],"../node_modules/d3-shape/src/link/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linkHorizontal = linkHorizontal;
exports.linkVertical = linkVertical;
exports.linkRadial = linkRadial;

var _d3Path = require("d3-path");

var _array = require("../array.js");

var _constant = _interopRequireDefault(require("../constant.js"));

var _point = require("../point.js");

var _pointRadial = _interopRequireDefault(require("../pointRadial.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function linkSource(d) {
  return d.source;
}

function linkTarget(d) {
  return d.target;
}

function link(curve) {
  var source = linkSource,
      target = linkTarget,
      x = _point.x,
      y = _point.y,
      context = null;

  function link() {
    var buffer,
        argv = _array.slice.call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv);

    if (!context) context = buffer = (0, _d3Path.path)();
    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));
    if (buffer) return context = null, buffer + "" || null;
  }

  link.source = function (_) {
    return arguments.length ? (source = _, link) : source;
  };

  link.target = function (_) {
    return arguments.length ? (target = _, link) : target;
  };

  link.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : x;
  };

  link.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : y;
  };

  link.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, link) : context;
  };

  return link;
}

function curveHorizontal(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
}

function curveVertical(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
}

function curveRadial(context, x0, y0, x1, y1) {
  var p0 = (0, _pointRadial.default)(x0, y0),
      p1 = (0, _pointRadial.default)(x0, y0 = (y0 + y1) / 2),
      p2 = (0, _pointRadial.default)(x1, y0),
      p3 = (0, _pointRadial.default)(x1, y1);
  context.moveTo(p0[0], p0[1]);
  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
}

function linkHorizontal() {
  return link(curveHorizontal);
}

function linkVertical() {
  return link(curveVertical);
}

function linkRadial() {
  var l = link(curveRadial);
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;
  return l;
}
},{"d3-path":"../node_modules/d3-path/src/index.js","../array.js":"../node_modules/d3-shape/src/array.js","../constant.js":"../node_modules/d3-shape/src/constant.js","../point.js":"../node_modules/d3-shape/src/point.js","../pointRadial.js":"../node_modules/d3-shape/src/pointRadial.js"}],"../node_modules/d3-shape/src/symbol/circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / _math.pi);
    context.moveTo(r, 0);
    context.arc(0, 0, r, 0, _math.tau);
  }
};
exports.default = _default;
},{"../math.js":"../node_modules/d3-shape/src/math.js"}],"../node_modules/d3-shape/src/symbol/cross.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / 5) / 2;
    context.moveTo(-3 * r, -r);
    context.lineTo(-r, -r);
    context.lineTo(-r, -3 * r);
    context.lineTo(r, -3 * r);
    context.lineTo(r, -r);
    context.lineTo(3 * r, -r);
    context.lineTo(3 * r, r);
    context.lineTo(r, r);
    context.lineTo(r, 3 * r);
    context.lineTo(-r, 3 * r);
    context.lineTo(-r, r);
    context.lineTo(-3 * r, r);
    context.closePath();
  }
};
exports.default = _default;
},{}],"../node_modules/d3-shape/src/symbol/diamond.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var tan30 = Math.sqrt(1 / 3),
    tan30_2 = tan30 * 2;
var _default = {
  draw: function (context, size) {
    var y = Math.sqrt(size / tan30_2),
        x = y * tan30;
    context.moveTo(0, -y);
    context.lineTo(x, 0);
    context.lineTo(0, y);
    context.lineTo(-x, 0);
    context.closePath();
  }
};
exports.default = _default;
},{}],"../node_modules/d3-shape/src/symbol/star.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

var ka = 0.89081309152928522810,
    kr = Math.sin(_math.pi / 10) / Math.sin(7 * _math.pi / 10),
    kx = Math.sin(_math.tau / 10) * kr,
    ky = -Math.cos(_math.tau / 10) * kr;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size * ka),
        x = kx * r,
        y = ky * r;
    context.moveTo(0, -r);
    context.lineTo(x, y);

    for (var i = 1; i < 5; ++i) {
      var a = _math.tau * i / 5,
          c = Math.cos(a),
          s = Math.sin(a);
      context.lineTo(s * r, -c * r);
      context.lineTo(c * x - s * y, s * x + c * y);
    }

    context.closePath();
  }
};
exports.default = _default;
},{"../math.js":"../node_modules/d3-shape/src/math.js"}],"../node_modules/d3-shape/src/symbol/square.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  draw: function (context, size) {
    var w = Math.sqrt(size),
        x = -w / 2;
    context.rect(x, x, w, w);
  }
};
exports.default = _default;
},{}],"../node_modules/d3-shape/src/symbol/triangle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var sqrt3 = Math.sqrt(3);
var _default = {
  draw: function (context, size) {
    var y = -Math.sqrt(size / (sqrt3 * 3));
    context.moveTo(0, y * 2);
    context.lineTo(-sqrt3 * y, -y);
    context.lineTo(sqrt3 * y, -y);
    context.closePath();
  }
};
exports.default = _default;
},{}],"../node_modules/d3-shape/src/symbol/wye.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var c = -0.5,
    s = Math.sqrt(3) / 2,
    k = 1 / Math.sqrt(12),
    a = (k / 2 + 1) * 3;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / a),
        x0 = r / 2,
        y0 = r * k,
        x1 = x0,
        y1 = r * k + r,
        x2 = -x1,
        y2 = y1;
    context.moveTo(x0, y0);
    context.lineTo(x1, y1);
    context.lineTo(x2, y2);
    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
    context.closePath();
  }
};
exports.default = _default;
},{}],"../node_modules/d3-shape/src/symbol.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.symbols = void 0;

var _d3Path = require("d3-path");

var _circle = _interopRequireDefault(require("./symbol/circle.js"));

var _cross = _interopRequireDefault(require("./symbol/cross.js"));

var _diamond = _interopRequireDefault(require("./symbol/diamond.js"));

var _star = _interopRequireDefault(require("./symbol/star.js"));

var _square = _interopRequireDefault(require("./symbol/square.js"));

var _triangle = _interopRequireDefault(require("./symbol/triangle.js"));

var _wye = _interopRequireDefault(require("./symbol/wye.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var symbols = [_circle.default, _cross.default, _diamond.default, _square.default, _star.default, _triangle.default, _wye.default];
exports.symbols = symbols;

function _default() {
  var type = (0, _constant.default)(_circle.default),
      size = (0, _constant.default)(64),
      context = null;

  function symbol() {
    var buffer;
    if (!context) context = buffer = (0, _d3Path.path)();
    type.apply(this, arguments).draw(context, +size.apply(this, arguments));
    if (buffer) return context = null, buffer + "" || null;
  }

  symbol.type = function (_) {
    return arguments.length ? (type = typeof _ === "function" ? _ : (0, _constant.default)(_), symbol) : type;
  };

  symbol.size = function (_) {
    return arguments.length ? (size = typeof _ === "function" ? _ : (0, _constant.default)(+_), symbol) : size;
  };

  symbol.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, symbol) : context;
  };

  return symbol;
}
},{"d3-path":"../node_modules/d3-path/src/index.js","./symbol/circle.js":"../node_modules/d3-shape/src/symbol/circle.js","./symbol/cross.js":"../node_modules/d3-shape/src/symbol/cross.js","./symbol/diamond.js":"../node_modules/d3-shape/src/symbol/diamond.js","./symbol/star.js":"../node_modules/d3-shape/src/symbol/star.js","./symbol/square.js":"../node_modules/d3-shape/src/symbol/square.js","./symbol/triangle.js":"../node_modules/d3-shape/src/symbol/triangle.js","./symbol/wye.js":"../node_modules/d3-shape/src/symbol/wye.js","./constant.js":"../node_modules/d3-shape/src/constant.js"}],"../node_modules/d3-shape/src/noop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {}
},{}],"../node_modules/d3-shape/src/curve/basis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.Basis = Basis;
exports.default = _default;

function point(that, x, y) {
  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);
}

function Basis(context) {
  this._context = context;
}

Basis.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 3:
        point(this, this._x1, this._y1);
      // proceed

      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;

        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);

      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new Basis(context);
}
},{}],"../node_modules/d3-shape/src/curve/basisClosed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

var _basis = require("./basis.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BasisClosed(context) {
  this._context = context;
}

BasisClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x2, this._y2);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);

          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x2, this._y2);
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x, this._y2 = y;
        break;

      case 1:
        this._point = 2;
        this._x3 = x, this._y3 = y;
        break;

      case 2:
        this._point = 3;
        this._x4 = x, this._y4 = y;

        this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);

        break;

      default:
        (0, _basis.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new BasisClosed(context);
}
},{"../noop.js":"../node_modules/d3-shape/src/noop.js","./basis.js":"../node_modules/d3-shape/src/curve/basis.js"}],"../node_modules/d3-shape/src/curve/basisOpen.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _basis = require("./basis.js");

function BasisOpen(context) {
  this._context = context;
}

BasisOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        var x0 = (this._x0 + 4 * this._x1 + x) / 6,
            y0 = (this._y0 + 4 * this._y1 + y) / 6;
        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _basis.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new BasisOpen(context);
}
},{"./basis.js":"../node_modules/d3-shape/src/curve/basis.js"}],"../node_modules/d3-shape/src/curve/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _basis = require("./basis.js");

function Bundle(context, beta) {
  this._basis = new _basis.Basis(context);
  this._beta = beta;
}

Bundle.prototype = {
  lineStart: function () {
    this._x = [];
    this._y = [];

    this._basis.lineStart();
  },
  lineEnd: function () {
    var x = this._x,
        y = this._y,
        j = x.length - 1;

    if (j > 0) {
      var x0 = x[0],
          y0 = y[0],
          dx = x[j] - x0,
          dy = y[j] - y0,
          i = -1,
          t;

      while (++i <= j) {
        t = i / j;

        this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));
      }
    }

    this._x = this._y = null;

    this._basis.lineEnd();
  },
  point: function (x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
};

var _default = function custom(beta) {
  function bundle(context) {
    return beta === 1 ? new _basis.Basis(context) : new Bundle(context, beta);
  }

  bundle.beta = function (beta) {
    return custom(+beta);
  };

  return bundle;
}(0.85);

exports.default = _default;
},{"./basis.js":"../node_modules/d3-shape/src/curve/basis.js"}],"../node_modules/d3-shape/src/curve/cardinal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.Cardinal = Cardinal;
exports.default = void 0;

function point(that, x, y) {
  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);
}

function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

Cardinal.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        point(this, this._x1, this._y1);
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        this._x1 = x, this._y1 = y;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new Cardinal(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{}],"../node_modules/d3-shape/src/curve/cardinalClosed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardinalClosed = CardinalClosed;
exports.default = void 0;

var _noop = _interopRequireDefault(require("../noop.js"));

var _cardinal = require("./cardinal.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        (0, _cardinal.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{"../noop.js":"../node_modules/d3-shape/src/noop.js","./cardinal.js":"../node_modules/d3-shape/src/curve/cardinal.js"}],"../node_modules/d3-shape/src/curve/cardinalOpen.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardinalOpen = CardinalOpen;
exports.default = void 0;

var _cardinal = require("./cardinal.js");

function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _cardinal.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{"./cardinal.js":"../node_modules/d3-shape/src/curve/cardinal.js"}],"../node_modules/d3-shape/src/curve/catmullRom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.default = void 0;

var _math = require("../math.js");

var _cardinal = require("./cardinal.js");

function point(that, x, y) {
  var x1 = that._x1,
      y1 = that._y1,
      x2 = that._x2,
      y2 = that._y2;

  if (that._l01_a > _math.epsilon) {
    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }

  if (that._l23_a > _math.epsilon) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
  }

  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}

function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRom.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        this.point(this._x2, this._y2);
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new _cardinal.Cardinal(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"../math.js":"../node_modules/d3-shape/src/math.js","./cardinal.js":"../node_modules/d3-shape/src/curve/cardinal.js"}],"../node_modules/d3-shape/src/curve/catmullRomClosed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cardinalClosed = require("./cardinalClosed.js");

var _noop = _interopRequireDefault(require("../noop.js"));

var _catmullRom = require("./catmullRom.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        (0, _catmullRom.point)(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new _cardinalClosed.CardinalClosed(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"./cardinalClosed.js":"../node_modules/d3-shape/src/curve/cardinalClosed.js","../noop.js":"../node_modules/d3-shape/src/noop.js","./catmullRom.js":"../node_modules/d3-shape/src/curve/catmullRom.js"}],"../node_modules/d3-shape/src/curve/catmullRomOpen.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cardinalOpen = require("./cardinalOpen.js");

var _catmullRom = require("./catmullRom.js");

function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _catmullRom.point)(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new _cardinalOpen.CardinalOpen(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"./cardinalOpen.js":"../node_modules/d3-shape/src/curve/cardinalOpen.js","./catmullRom.js":"../node_modules/d3-shape/src/curve/catmullRom.js"}],"../node_modules/d3-shape/src/curve/linearClosed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function LinearClosed(context) {
  this._context = context;
}

LinearClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._point) this._context.closePath();
  },
  point: function (x, y) {
    x = +x, y = +y;
    if (this._point) this._context.lineTo(x, y);else this._point = 1, this._context.moveTo(x, y);
  }
};

function _default(context) {
  return new LinearClosed(context);
}
},{"../noop.js":"../node_modules/d3-shape/src/noop.js"}],"../node_modules/d3-shape/src/curve/monotone.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.monotoneX = monotoneX;
exports.monotoneY = monotoneY;

function sign(x) {
  return x < 0 ? -1 : 1;
} // Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.


function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0,
      h1 = x2 - that._x1,
      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
      p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
} // Calculate a one-sided slope.


function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
} // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".


function point(that, t0, t1) {
  var x0 = that._x0,
      y0 = that._y0,
      x1 = that._x1,
      y1 = that._y1,
      dx = (x1 - x0) / 3;

  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}

function MonotoneX(context) {
  this._context = context;
}

MonotoneX.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;

      case 3:
        point(this, this._t0, slope2(this, this._t0));
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    var t1 = NaN;
    x = +x, y = +y;
    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        point(this, slope2(this, t1 = slope3(this, x, y)), t1);
        break;

      default:
        point(this, this._t0, t1 = slope3(this, x, y));
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
    this._t0 = t1;
  }
};

function MonotoneY(context) {
  this._context = new ReflectContext(context);
}

(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {
  MonotoneX.prototype.point.call(this, y, x);
};

function ReflectContext(context) {
  this._context = context;
}

ReflectContext.prototype = {
  moveTo: function (x, y) {
    this._context.moveTo(y, x);
  },
  closePath: function () {
    this._context.closePath();
  },
  lineTo: function (x, y) {
    this._context.lineTo(y, x);
  },
  bezierCurveTo: function (x1, y1, x2, y2, x, y) {
    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);
  }
};

function monotoneX(context) {
  return new MonotoneX(context);
}

function monotoneY(context) {
  return new MonotoneY(context);
}
},{}],"../node_modules/d3-shape/src/curve/natural.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function Natural(context) {
  this._context = context;
}

Natural.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x = [];
    this._y = [];
  },
  lineEnd: function () {
    var x = this._x,
        y = this._y,
        n = x.length;

    if (n) {
      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);

      if (n === 2) {
        this._context.lineTo(x[1], y[1]);
      } else {
        var px = controlPoints(x),
            py = controlPoints(y);

        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
        }
      }
    }

    if (this._line || this._line !== 0 && n === 1) this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function (x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
}; // See https://www.particleincell.com/2012/bezier-splines/ for derivation.

function controlPoints(x) {
  var i,
      n = x.length - 1,
      m,
      a = new Array(n),
      b = new Array(n),
      r = new Array(n);
  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];

  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];

  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];

  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];

  a[n - 1] = r[n - 1] / b[n - 1];

  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];

  b[n - 1] = (x[n] + a[n - 1]) / 2;

  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];

  return [a, b];
}

function _default(context) {
  return new Natural(context);
}
},{}],"../node_modules/d3-shape/src/curve/step.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.stepBefore = stepBefore;
exports.stepAfter = stepAfter;

function Step(context, t) {
  this._context = context;
  this._t = t;
}

Step.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        {
          if (this._t <= 0) {
            this._context.lineTo(this._x, y);

            this._context.lineTo(x, y);
          } else {
            var x1 = this._x * (1 - this._t) + x * this._t;

            this._context.lineTo(x1, this._y);

            this._context.lineTo(x1, y);
          }

          break;
        }
    }

    this._x = x, this._y = y;
  }
};

function _default(context) {
  return new Step(context, 0.5);
}

function stepBefore(context) {
  return new Step(context, 0);
}

function stepAfter(context) {
  return new Step(context, 1);
}
},{}],"../node_modules/d3-shape/src/offset/none.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series, order) {
  if (!((n = series.length) > 1)) return;

  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series[order[i]];

    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
}
},{}],"../node_modules/d3-shape/src/order/none.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series) {
  var n = series.length,
      o = new Array(n);

  while (--n >= 0) o[n] = n;

  return o;
}
},{}],"../node_modules/d3-shape/src/stack.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array.js");

var _constant = _interopRequireDefault(require("./constant.js"));

var _none = _interopRequireDefault(require("./offset/none.js"));

var _none2 = _interopRequireDefault(require("./order/none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stackValue(d, key) {
  return d[key];
}

function _default() {
  var keys = (0, _constant.default)([]),
      order = _none2.default,
      offset = _none.default,
      value = stackValue;

  function stack(data) {
    var kz = keys.apply(this, arguments),
        i,
        m = data.length,
        n = kz.length,
        sz = new Array(n),
        oz;

    for (i = 0; i < n; ++i) {
      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
        si[j] = sij = [0, +value(data[j], ki, j, data)];
        sij.data = data[j];
      }

      si.key = ki;
    }

    for (i = 0, oz = order(sz); i < n; ++i) {
      sz[oz[i]].index = i;
    }

    offset(sz, oz);
    return sz;
  }

  stack.keys = function (_) {
    return arguments.length ? (keys = typeof _ === "function" ? _ : (0, _constant.default)(_array.slice.call(_)), stack) : keys;
  };

  stack.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), stack) : value;
  };

  stack.order = function (_) {
    return arguments.length ? (order = _ == null ? _none2.default : typeof _ === "function" ? _ : (0, _constant.default)(_array.slice.call(_)), stack) : order;
  };

  stack.offset = function (_) {
    return arguments.length ? (offset = _ == null ? _none.default : _, stack) : offset;
  };

  return stack;
}
},{"./array.js":"../node_modules/d3-shape/src/array.js","./constant.js":"../node_modules/d3-shape/src/constant.js","./offset/none.js":"../node_modules/d3-shape/src/offset/none.js","./order/none.js":"../node_modules/d3-shape/src/order/none.js"}],"../node_modules/d3-shape/src/offset/expand.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;

    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
  }

  (0, _none.default)(series, order);
}
},{"./none.js":"../node_modules/d3-shape/src/offset/none.js"}],"../node_modules/d3-shape/src/offset/diverging.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = 0, d[1] = dy;
      }
    }
  }
}
},{}],"../node_modules/d3-shape/src/offset/silhouette.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;

    s0[j][1] += s0[j][0] = -y / 2;
  }

  (0, _none.default)(series, order);
}
},{"./none.js":"../node_modules/d3-shape/src/offset/none.js"}],"../node_modules/d3-shape/src/offset/wiggle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;

  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
      var si = series[order[i]],
          sij0 = si[j][1] || 0,
          sij1 = si[j - 1][1] || 0,
          s3 = (sij0 - sij1) / 2;

      for (var k = 0; k < i; ++k) {
        var sk = series[order[k]],
            skj0 = sk[j][1] || 0,
            skj1 = sk[j - 1][1] || 0;
        s3 += skj0 - skj1;
      }

      s1 += sij0, s2 += s3 * sij0;
    }

    s0[j - 1][1] += s0[j - 1][0] = y;
    if (s1) y -= s2 / s1;
  }

  s0[j - 1][1] += s0[j - 1][0] = y;
  (0, _none.default)(series, order);
}
},{"./none.js":"../node_modules/d3-shape/src/offset/none.js"}],"../node_modules/d3-shape/src/order/appearance.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var peaks = series.map(peak);
  return (0, _none.default)(series).sort(function (a, b) {
    return peaks[a] - peaks[b];
  });
}

function peak(series) {
  var i = -1,
      j = 0,
      n = series.length,
      vi,
      vj = -Infinity;

  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;

  return j;
}
},{"./none.js":"../node_modules/d3-shape/src/order/none.js"}],"../node_modules/d3-shape/src/order/ascending.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.sum = sum;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var sums = series.map(sum);
  return (0, _none.default)(series).sort(function (a, b) {
    return sums[a] - sums[b];
  });
}

function sum(series) {
  var s = 0,
      i = -1,
      n = series.length,
      v;

  while (++i < n) if (v = +series[i][1]) s += v;

  return s;
}
},{"./none.js":"../node_modules/d3-shape/src/order/none.js"}],"../node_modules/d3-shape/src/order/descending.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  return (0, _ascending.default)(series).reverse();
}
},{"./ascending.js":"../node_modules/d3-shape/src/order/ascending.js"}],"../node_modules/d3-shape/src/order/insideOut.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _appearance = _interopRequireDefault(require("./appearance.js"));

var _ascending = require("./ascending.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var n = series.length,
      i,
      j,
      sums = series.map(_ascending.sum),
      order = (0, _appearance.default)(series),
      top = 0,
      bottom = 0,
      tops = [],
      bottoms = [];

  for (i = 0; i < n; ++i) {
    j = order[i];

    if (top < bottom) {
      top += sums[j];
      tops.push(j);
    } else {
      bottom += sums[j];
      bottoms.push(j);
    }
  }

  return bottoms.reverse().concat(tops);
}
},{"./appearance.js":"../node_modules/d3-shape/src/order/appearance.js","./ascending.js":"../node_modules/d3-shape/src/order/ascending.js"}],"../node_modules/d3-shape/src/order/reverse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  return (0, _none.default)(series).reverse();
}
},{"./none.js":"../node_modules/d3-shape/src/order/none.js"}],"../node_modules/d3-shape/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "arc", {
  enumerable: true,
  get: function () {
    return _arc.default;
  }
});
Object.defineProperty(exports, "area", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "line", {
  enumerable: true,
  get: function () {
    return _line.default;
  }
});
Object.defineProperty(exports, "pie", {
  enumerable: true,
  get: function () {
    return _pie.default;
  }
});
Object.defineProperty(exports, "areaRadial", {
  enumerable: true,
  get: function () {
    return _areaRadial.default;
  }
});
Object.defineProperty(exports, "radialArea", {
  enumerable: true,
  get: function () {
    return _areaRadial.default;
  }
});
Object.defineProperty(exports, "lineRadial", {
  enumerable: true,
  get: function () {
    return _lineRadial.default;
  }
});
Object.defineProperty(exports, "radialLine", {
  enumerable: true,
  get: function () {
    return _lineRadial.default;
  }
});
Object.defineProperty(exports, "pointRadial", {
  enumerable: true,
  get: function () {
    return _pointRadial.default;
  }
});
Object.defineProperty(exports, "linkHorizontal", {
  enumerable: true,
  get: function () {
    return _index.linkHorizontal;
  }
});
Object.defineProperty(exports, "linkVertical", {
  enumerable: true,
  get: function () {
    return _index.linkVertical;
  }
});
Object.defineProperty(exports, "linkRadial", {
  enumerable: true,
  get: function () {
    return _index.linkRadial;
  }
});
Object.defineProperty(exports, "symbol", {
  enumerable: true,
  get: function () {
    return _symbol.default;
  }
});
Object.defineProperty(exports, "symbols", {
  enumerable: true,
  get: function () {
    return _symbol.symbols;
  }
});
Object.defineProperty(exports, "symbolCircle", {
  enumerable: true,
  get: function () {
    return _circle.default;
  }
});
Object.defineProperty(exports, "symbolCross", {
  enumerable: true,
  get: function () {
    return _cross.default;
  }
});
Object.defineProperty(exports, "symbolDiamond", {
  enumerable: true,
  get: function () {
    return _diamond.default;
  }
});
Object.defineProperty(exports, "symbolSquare", {
  enumerable: true,
  get: function () {
    return _square.default;
  }
});
Object.defineProperty(exports, "symbolStar", {
  enumerable: true,
  get: function () {
    return _star.default;
  }
});
Object.defineProperty(exports, "symbolTriangle", {
  enumerable: true,
  get: function () {
    return _triangle.default;
  }
});
Object.defineProperty(exports, "symbolWye", {
  enumerable: true,
  get: function () {
    return _wye.default;
  }
});
Object.defineProperty(exports, "curveBasisClosed", {
  enumerable: true,
  get: function () {
    return _basisClosed.default;
  }
});
Object.defineProperty(exports, "curveBasisOpen", {
  enumerable: true,
  get: function () {
    return _basisOpen.default;
  }
});
Object.defineProperty(exports, "curveBasis", {
  enumerable: true,
  get: function () {
    return _basis.default;
  }
});
Object.defineProperty(exports, "curveBundle", {
  enumerable: true,
  get: function () {
    return _bundle.default;
  }
});
Object.defineProperty(exports, "curveCardinalClosed", {
  enumerable: true,
  get: function () {
    return _cardinalClosed.default;
  }
});
Object.defineProperty(exports, "curveCardinalOpen", {
  enumerable: true,
  get: function () {
    return _cardinalOpen.default;
  }
});
Object.defineProperty(exports, "curveCardinal", {
  enumerable: true,
  get: function () {
    return _cardinal.default;
  }
});
Object.defineProperty(exports, "curveCatmullRomClosed", {
  enumerable: true,
  get: function () {
    return _catmullRomClosed.default;
  }
});
Object.defineProperty(exports, "curveCatmullRomOpen", {
  enumerable: true,
  get: function () {
    return _catmullRomOpen.default;
  }
});
Object.defineProperty(exports, "curveCatmullRom", {
  enumerable: true,
  get: function () {
    return _catmullRom.default;
  }
});
Object.defineProperty(exports, "curveLinearClosed", {
  enumerable: true,
  get: function () {
    return _linearClosed.default;
  }
});
Object.defineProperty(exports, "curveLinear", {
  enumerable: true,
  get: function () {
    return _linear.default;
  }
});
Object.defineProperty(exports, "curveMonotoneX", {
  enumerable: true,
  get: function () {
    return _monotone.monotoneX;
  }
});
Object.defineProperty(exports, "curveMonotoneY", {
  enumerable: true,
  get: function () {
    return _monotone.monotoneY;
  }
});
Object.defineProperty(exports, "curveNatural", {
  enumerable: true,
  get: function () {
    return _natural.default;
  }
});
Object.defineProperty(exports, "curveStep", {
  enumerable: true,
  get: function () {
    return _step.default;
  }
});
Object.defineProperty(exports, "curveStepAfter", {
  enumerable: true,
  get: function () {
    return _step.stepAfter;
  }
});
Object.defineProperty(exports, "curveStepBefore", {
  enumerable: true,
  get: function () {
    return _step.stepBefore;
  }
});
Object.defineProperty(exports, "stack", {
  enumerable: true,
  get: function () {
    return _stack.default;
  }
});
Object.defineProperty(exports, "stackOffsetExpand", {
  enumerable: true,
  get: function () {
    return _expand.default;
  }
});
Object.defineProperty(exports, "stackOffsetDiverging", {
  enumerable: true,
  get: function () {
    return _diverging.default;
  }
});
Object.defineProperty(exports, "stackOffsetNone", {
  enumerable: true,
  get: function () {
    return _none.default;
  }
});
Object.defineProperty(exports, "stackOffsetSilhouette", {
  enumerable: true,
  get: function () {
    return _silhouette.default;
  }
});
Object.defineProperty(exports, "stackOffsetWiggle", {
  enumerable: true,
  get: function () {
    return _wiggle.default;
  }
});
Object.defineProperty(exports, "stackOrderAppearance", {
  enumerable: true,
  get: function () {
    return _appearance.default;
  }
});
Object.defineProperty(exports, "stackOrderAscending", {
  enumerable: true,
  get: function () {
    return _ascending.default;
  }
});
Object.defineProperty(exports, "stackOrderDescending", {
  enumerable: true,
  get: function () {
    return _descending.default;
  }
});
Object.defineProperty(exports, "stackOrderInsideOut", {
  enumerable: true,
  get: function () {
    return _insideOut.default;
  }
});
Object.defineProperty(exports, "stackOrderNone", {
  enumerable: true,
  get: function () {
    return _none2.default;
  }
});
Object.defineProperty(exports, "stackOrderReverse", {
  enumerable: true,
  get: function () {
    return _reverse.default;
  }
});

var _arc = _interopRequireDefault(require("./arc.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _pie = _interopRequireDefault(require("./pie.js"));

var _areaRadial = _interopRequireDefault(require("./areaRadial.js"));

var _lineRadial = _interopRequireDefault(require("./lineRadial.js"));

var _pointRadial = _interopRequireDefault(require("./pointRadial.js"));

var _index = require("./link/index.js");

var _symbol = _interopRequireWildcard(require("./symbol.js"));

var _circle = _interopRequireDefault(require("./symbol/circle.js"));

var _cross = _interopRequireDefault(require("./symbol/cross.js"));

var _diamond = _interopRequireDefault(require("./symbol/diamond.js"));

var _square = _interopRequireDefault(require("./symbol/square.js"));

var _star = _interopRequireDefault(require("./symbol/star.js"));

var _triangle = _interopRequireDefault(require("./symbol/triangle.js"));

var _wye = _interopRequireDefault(require("./symbol/wye.js"));

var _basisClosed = _interopRequireDefault(require("./curve/basisClosed.js"));

var _basisOpen = _interopRequireDefault(require("./curve/basisOpen.js"));

var _basis = _interopRequireDefault(require("./curve/basis.js"));

var _bundle = _interopRequireDefault(require("./curve/bundle.js"));

var _cardinalClosed = _interopRequireDefault(require("./curve/cardinalClosed.js"));

var _cardinalOpen = _interopRequireDefault(require("./curve/cardinalOpen.js"));

var _cardinal = _interopRequireDefault(require("./curve/cardinal.js"));

var _catmullRomClosed = _interopRequireDefault(require("./curve/catmullRomClosed.js"));

var _catmullRomOpen = _interopRequireDefault(require("./curve/catmullRomOpen.js"));

var _catmullRom = _interopRequireDefault(require("./curve/catmullRom.js"));

var _linearClosed = _interopRequireDefault(require("./curve/linearClosed.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _monotone = require("./curve/monotone.js");

var _natural = _interopRequireDefault(require("./curve/natural.js"));

var _step = _interopRequireWildcard(require("./curve/step.js"));

var _stack = _interopRequireDefault(require("./stack.js"));

var _expand = _interopRequireDefault(require("./offset/expand.js"));

var _diverging = _interopRequireDefault(require("./offset/diverging.js"));

var _none = _interopRequireDefault(require("./offset/none.js"));

var _silhouette = _interopRequireDefault(require("./offset/silhouette.js"));

var _wiggle = _interopRequireDefault(require("./offset/wiggle.js"));

var _appearance = _interopRequireDefault(require("./order/appearance.js"));

var _ascending = _interopRequireDefault(require("./order/ascending.js"));

var _descending = _interopRequireDefault(require("./order/descending.js"));

var _insideOut = _interopRequireDefault(require("./order/insideOut.js"));

var _none2 = _interopRequireDefault(require("./order/none.js"));

var _reverse = _interopRequireDefault(require("./order/reverse.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./arc.js":"../node_modules/d3-shape/src/arc.js","./area.js":"../node_modules/d3-shape/src/area.js","./line.js":"../node_modules/d3-shape/src/line.js","./pie.js":"../node_modules/d3-shape/src/pie.js","./areaRadial.js":"../node_modules/d3-shape/src/areaRadial.js","./lineRadial.js":"../node_modules/d3-shape/src/lineRadial.js","./pointRadial.js":"../node_modules/d3-shape/src/pointRadial.js","./link/index.js":"../node_modules/d3-shape/src/link/index.js","./symbol.js":"../node_modules/d3-shape/src/symbol.js","./symbol/circle.js":"../node_modules/d3-shape/src/symbol/circle.js","./symbol/cross.js":"../node_modules/d3-shape/src/symbol/cross.js","./symbol/diamond.js":"../node_modules/d3-shape/src/symbol/diamond.js","./symbol/square.js":"../node_modules/d3-shape/src/symbol/square.js","./symbol/star.js":"../node_modules/d3-shape/src/symbol/star.js","./symbol/triangle.js":"../node_modules/d3-shape/src/symbol/triangle.js","./symbol/wye.js":"../node_modules/d3-shape/src/symbol/wye.js","./curve/basisClosed.js":"../node_modules/d3-shape/src/curve/basisClosed.js","./curve/basisOpen.js":"../node_modules/d3-shape/src/curve/basisOpen.js","./curve/basis.js":"../node_modules/d3-shape/src/curve/basis.js","./curve/bundle.js":"../node_modules/d3-shape/src/curve/bundle.js","./curve/cardinalClosed.js":"../node_modules/d3-shape/src/curve/cardinalClosed.js","./curve/cardinalOpen.js":"../node_modules/d3-shape/src/curve/cardinalOpen.js","./curve/cardinal.js":"../node_modules/d3-shape/src/curve/cardinal.js","./curve/catmullRomClosed.js":"../node_modules/d3-shape/src/curve/catmullRomClosed.js","./curve/catmullRomOpen.js":"../node_modules/d3-shape/src/curve/catmullRomOpen.js","./curve/catmullRom.js":"../node_modules/d3-shape/src/curve/catmullRom.js","./curve/linearClosed.js":"../node_modules/d3-shape/src/curve/linearClosed.js","./curve/linear.js":"../node_modules/d3-shape/src/curve/linear.js","./curve/monotone.js":"../node_modules/d3-shape/src/curve/monotone.js","./curve/natural.js":"../node_modules/d3-shape/src/curve/natural.js","./curve/step.js":"../node_modules/d3-shape/src/curve/step.js","./stack.js":"../node_modules/d3-shape/src/stack.js","./offset/expand.js":"../node_modules/d3-shape/src/offset/expand.js","./offset/diverging.js":"../node_modules/d3-shape/src/offset/diverging.js","./offset/none.js":"../node_modules/d3-shape/src/offset/none.js","./offset/silhouette.js":"../node_modules/d3-shape/src/offset/silhouette.js","./offset/wiggle.js":"../node_modules/d3-shape/src/offset/wiggle.js","./order/appearance.js":"../node_modules/d3-shape/src/order/appearance.js","./order/ascending.js":"../node_modules/d3-shape/src/order/ascending.js","./order/descending.js":"../node_modules/d3-shape/src/order/descending.js","./order/insideOut.js":"../node_modules/d3-shape/src/order/insideOut.js","./order/none.js":"../node_modules/d3-shape/src/order/none.js","./order/reverse.js":"../node_modules/d3-shape/src/order/reverse.js"}],"../node_modules/d3-voronoi/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../node_modules/d3-voronoi/src/point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;

function x(d) {
  return d[0];
}

function y(d) {
  return d[1];
}
},{}],"../node_modules/d3-voronoi/src/RedBlackTree.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RedBlackNode = RedBlackNode;
exports.default = void 0;

function RedBlackTree() {
  this._ = null; // root node
}

function RedBlackNode(node) {
  node.U = // parent node
  node.C = // color - true for red, false for black
  node.L = // left node
  node.R = // right node
  node.P = // previous node
  node.N = null; // next node
}

RedBlackTree.prototype = {
  constructor: RedBlackTree,
  insert: function (after, node) {
    var parent, grandpa, uncle;

    if (after) {
      node.P = after;
      node.N = after.N;
      if (after.N) after.N.P = node;
      after.N = node;

      if (after.R) {
        after = after.R;

        while (after.L) after = after.L;

        after.L = node;
      } else {
        after.R = node;
      }

      parent = after;
    } else if (this._) {
      after = RedBlackFirst(this._);
      node.P = null;
      node.N = after;
      after.P = after.L = node;
      parent = after;
    } else {
      node.P = node.N = null;
      this._ = node;
      parent = null;
    }

    node.L = node.R = null;
    node.U = parent;
    node.C = true;
    after = node;

    while (parent && parent.C) {
      grandpa = parent.U;

      if (parent === grandpa.L) {
        uncle = grandpa.R;

        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.R) {
            RedBlackRotateLeft(this, parent);
            after = parent;
            parent = after.U;
          }

          parent.C = false;
          grandpa.C = true;
          RedBlackRotateRight(this, grandpa);
        }
      } else {
        uncle = grandpa.L;

        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.L) {
            RedBlackRotateRight(this, parent);
            after = parent;
            parent = after.U;
          }

          parent.C = false;
          grandpa.C = true;
          RedBlackRotateLeft(this, grandpa);
        }
      }

      parent = after.U;
    }

    this._.C = false;
  },
  remove: function (node) {
    if (node.N) node.N.P = node.P;
    if (node.P) node.P.N = node.N;
    node.N = node.P = null;
    var parent = node.U,
        sibling,
        left = node.L,
        right = node.R,
        next,
        red;
    if (!left) next = right;else if (!right) next = left;else next = RedBlackFirst(right);

    if (parent) {
      if (parent.L === node) parent.L = next;else parent.R = next;
    } else {
      this._ = next;
    }

    if (left && right) {
      red = next.C;
      next.C = node.C;
      next.L = left;
      left.U = next;

      if (next !== right) {
        parent = next.U;
        next.U = node.U;
        node = next.R;
        parent.L = node;
        next.R = right;
        right.U = next;
      } else {
        next.U = parent;
        parent = next;
        node = next.R;
      }
    } else {
      red = node.C;
      node = next;
    }

    if (node) node.U = parent;
    if (red) return;

    if (node && node.C) {
      node.C = false;
      return;
    }

    do {
      if (node === this._) break;

      if (node === parent.L) {
        sibling = parent.R;

        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateLeft(this, parent);
          sibling = parent.R;
        }

        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.R || !sibling.R.C) {
            sibling.L.C = false;
            sibling.C = true;
            RedBlackRotateRight(this, sibling);
            sibling = parent.R;
          }

          sibling.C = parent.C;
          parent.C = sibling.R.C = false;
          RedBlackRotateLeft(this, parent);
          node = this._;
          break;
        }
      } else {
        sibling = parent.L;

        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateRight(this, parent);
          sibling = parent.L;
        }

        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.L || !sibling.L.C) {
            sibling.R.C = false;
            sibling.C = true;
            RedBlackRotateLeft(this, sibling);
            sibling = parent.L;
          }

          sibling.C = parent.C;
          parent.C = sibling.L.C = false;
          RedBlackRotateRight(this, parent);
          node = this._;
          break;
        }
      }

      sibling.C = true;
      node = parent;
      parent = parent.U;
    } while (!node.C);

    if (node) node.C = false;
  }
};

function RedBlackRotateLeft(tree, node) {
  var p = node,
      q = node.R,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.R = q.L;
  if (p.R) p.R.U = p;
  q.L = p;
}

function RedBlackRotateRight(tree, node) {
  var p = node,
      q = node.L,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.L = q.R;
  if (p.L) p.L.U = p;
  q.R = p;
}

function RedBlackFirst(node) {
  while (node.L) node = node.L;

  return node;
}

var _default = RedBlackTree;
exports.default = _default;
},{}],"../node_modules/d3-voronoi/src/Edge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createEdge = createEdge;
exports.createBorderEdge = createBorderEdge;
exports.setEdgeEnd = setEdgeEnd;
exports.clipEdges = clipEdges;

var _Diagram = require("./Diagram");

function createEdge(left, right, v0, v1) {
  var edge = [null, null],
      index = _Diagram.edges.push(edge) - 1;
  edge.left = left;
  edge.right = right;
  if (v0) setEdgeEnd(edge, left, right, v0);
  if (v1) setEdgeEnd(edge, right, left, v1);

  _Diagram.cells[left.index].halfedges.push(index);

  _Diagram.cells[right.index].halfedges.push(index);

  return edge;
}

function createBorderEdge(left, v0, v1) {
  var edge = [v0, v1];
  edge.left = left;
  return edge;
}

function setEdgeEnd(edge, left, right, vertex) {
  if (!edge[0] && !edge[1]) {
    edge[0] = vertex;
    edge.left = left;
    edge.right = right;
  } else if (edge.left === right) {
    edge[1] = vertex;
  } else {
    edge[0] = vertex;
  }
} // Liang–Barsky line clipping.


function clipEdge(edge, x0, y0, x1, y1) {
  var a = edge[0],
      b = edge[1],
      ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?

  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];
  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];
  return true;
}

function connectEdge(edge, x0, y0, x1, y1) {
  var v1 = edge[1];
  if (v1) return true;
  var v0 = edge[0],
      left = edge.left,
      right = edge.right,
      lx = left[0],
      ly = left[1],
      rx = right[0],
      ry = right[1],
      fx = (lx + rx) / 2,
      fy = (ly + ry) / 2,
      fm,
      fb;

  if (ry === ly) {
    if (fx < x0 || fx >= x1) return;

    if (lx > rx) {
      if (!v0) v0 = [fx, y0];else if (v0[1] >= y1) return;
      v1 = [fx, y1];
    } else {
      if (!v0) v0 = [fx, y1];else if (v0[1] < y0) return;
      v1 = [fx, y0];
    }
  } else {
    fm = (lx - rx) / (ry - ly);
    fb = fy - fm * fx;

    if (fm < -1 || fm > 1) {
      if (lx > rx) {
        if (!v0) v0 = [(y0 - fb) / fm, y0];else if (v0[1] >= y1) return;
        v1 = [(y1 - fb) / fm, y1];
      } else {
        if (!v0) v0 = [(y1 - fb) / fm, y1];else if (v0[1] < y0) return;
        v1 = [(y0 - fb) / fm, y0];
      }
    } else {
      if (ly < ry) {
        if (!v0) v0 = [x0, fm * x0 + fb];else if (v0[0] >= x1) return;
        v1 = [x1, fm * x1 + fb];
      } else {
        if (!v0) v0 = [x1, fm * x1 + fb];else if (v0[0] < x0) return;
        v1 = [x0, fm * x0 + fb];
      }
    }
  }

  edge[0] = v0;
  edge[1] = v1;
  return true;
}

function clipEdges(x0, y0, x1, y1) {
  var i = _Diagram.edges.length,
      edge;

  while (i--) {
    if (!connectEdge(edge = _Diagram.edges[i], x0, y0, x1, y1) || !clipEdge(edge, x0, y0, x1, y1) || !(Math.abs(edge[0][0] - edge[1][0]) > _Diagram.epsilon || Math.abs(edge[0][1] - edge[1][1]) > _Diagram.epsilon)) {
      delete _Diagram.edges[i];
    }
  }
}
},{"./Diagram":"../node_modules/d3-voronoi/src/Diagram.js"}],"../node_modules/d3-voronoi/src/Cell.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createCell = createCell;
exports.cellHalfedgeStart = cellHalfedgeStart;
exports.cellHalfedgeEnd = cellHalfedgeEnd;
exports.sortCellHalfedges = sortCellHalfedges;
exports.clipCells = clipCells;

var _Edge = require("./Edge");

var _Diagram = require("./Diagram");

function createCell(site) {
  return _Diagram.cells[site.index] = {
    site: site,
    halfedges: []
  };
}

function cellHalfedgeAngle(cell, edge) {
  var site = cell.site,
      va = edge.left,
      vb = edge.right;
  if (site === vb) vb = va, va = site;
  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);
  if (site === va) va = edge[1], vb = edge[0];else va = edge[0], vb = edge[1];
  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);
}

function cellHalfedgeStart(cell, edge) {
  return edge[+(edge.left !== cell.site)];
}

function cellHalfedgeEnd(cell, edge) {
  return edge[+(edge.left === cell.site)];
}

function sortCellHalfedges() {
  for (var i = 0, n = _Diagram.cells.length, cell, halfedges, j, m; i < n; ++i) {
    if ((cell = _Diagram.cells[i]) && (m = (halfedges = cell.halfedges).length)) {
      var index = new Array(m),
          array = new Array(m);

      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, _Diagram.edges[halfedges[j]]);

      index.sort(function (i, j) {
        return array[j] - array[i];
      });

      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];

      for (j = 0; j < m; ++j) halfedges[j] = array[j];
    }
  }
}

function clipCells(x0, y0, x1, y1) {
  var nCells = _Diagram.cells.length,
      iCell,
      cell,
      site,
      iHalfedge,
      halfedges,
      nHalfedges,
      start,
      startX,
      startY,
      end,
      endX,
      endY,
      cover = true;

  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram.cells[iCell]) {
      site = cell.site;
      halfedges = cell.halfedges;
      iHalfedge = halfedges.length; // Remove any dangling clipped edges.

      while (iHalfedge--) {
        if (!_Diagram.edges[halfedges[iHalfedge]]) {
          halfedges.splice(iHalfedge, 1);
        }
      } // Insert any border edges as necessary.


      iHalfedge = 0, nHalfedges = halfedges.length;

      while (iHalfedge < nHalfedges) {
        end = cellHalfedgeEnd(cell, _Diagram.edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];
        start = cellHalfedgeStart(cell, _Diagram.edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];

        if (Math.abs(endX - startX) > _Diagram.epsilon || Math.abs(endY - startY) > _Diagram.epsilon) {
          halfedges.splice(iHalfedge, 0, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, end, Math.abs(endX - x0) < _Diagram.epsilon && y1 - endY > _Diagram.epsilon ? [x0, Math.abs(startX - x0) < _Diagram.epsilon ? startY : y1] : Math.abs(endY - y1) < _Diagram.epsilon && x1 - endX > _Diagram.epsilon ? [Math.abs(startY - y1) < _Diagram.epsilon ? startX : x1, y1] : Math.abs(endX - x1) < _Diagram.epsilon && endY - y0 > _Diagram.epsilon ? [x1, Math.abs(startX - x1) < _Diagram.epsilon ? startY : y0] : Math.abs(endY - y0) < _Diagram.epsilon && endX - x0 > _Diagram.epsilon ? [Math.abs(startY - y0) < _Diagram.epsilon ? startX : x0, y0] : null)) - 1);
          ++nHalfedges;
        }
      }

      if (nHalfedges) cover = false;
    }
  } // If there weren’t any edges, have the closest site cover the extent.
  // It doesn’t matter which corner of the extent we measure!


  if (cover) {
    var dx,
        dy,
        d2,
        dc = Infinity;

    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {
      if (cell = _Diagram.cells[iCell]) {
        site = cell.site;
        dx = site[0] - x0;
        dy = site[1] - y0;
        d2 = dx * dx + dy * dy;
        if (d2 < dc) dc = d2, cover = cell;
      }
    }

    if (cover) {
      var v00 = [x0, y0],
          v01 = [x0, y1],
          v11 = [x1, y1],
          v10 = [x1, y0];
      cover.halfedges.push(_Diagram.edges.push((0, _Edge.createBorderEdge)(site = cover.site, v00, v01)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v01, v11)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v11, v10)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v10, v00)) - 1);
    }
  } // Lastly delete any cells with no edges; these were entirely clipped.


  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram.cells[iCell]) {
      if (!cell.halfedges.length) {
        delete _Diagram.cells[iCell];
      }
    }
  }
}
},{"./Edge":"../node_modules/d3-voronoi/src/Edge.js","./Diagram":"../node_modules/d3-voronoi/src/Diagram.js"}],"../node_modules/d3-voronoi/src/Circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.attachCircle = attachCircle;
exports.detachCircle = detachCircle;
exports.firstCircle = void 0;

var _RedBlackTree = require("./RedBlackTree");

var _Diagram = require("./Diagram");

var circlePool = [];
var firstCircle;
exports.firstCircle = firstCircle;

function Circle() {
  (0, _RedBlackTree.RedBlackNode)(this);
  this.x = this.y = this.arc = this.site = this.cy = null;
}

function attachCircle(arc) {
  var lArc = arc.P,
      rArc = arc.N;
  if (!lArc || !rArc) return;
  var lSite = lArc.site,
      cSite = arc.site,
      rSite = rArc.site;
  if (lSite === rSite) return;
  var bx = cSite[0],
      by = cSite[1],
      ax = lSite[0] - bx,
      ay = lSite[1] - by,
      cx = rSite[0] - bx,
      cy = rSite[1] - by;
  var d = 2 * (ax * cy - ay * cx);
  if (d >= -_Diagram.epsilon2) return;
  var ha = ax * ax + ay * ay,
      hc = cx * cx + cy * cy,
      x = (cy * ha - ay * hc) / d,
      y = (ax * hc - cx * ha) / d;
  var circle = circlePool.pop() || new Circle();
  circle.arc = arc;
  circle.site = cSite;
  circle.x = x + bx;
  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom

  arc.circle = circle;
  var before = null,
      node = _Diagram.circles._;

  while (node) {
    if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
      if (node.L) node = node.L;else {
        before = node.P;
        break;
      }
    } else {
      if (node.R) node = node.R;else {
        before = node;
        break;
      }
    }
  }

  _Diagram.circles.insert(before, circle);

  if (!before) exports.firstCircle = firstCircle = circle;
}

function detachCircle(arc) {
  var circle = arc.circle;

  if (circle) {
    if (!circle.P) exports.firstCircle = firstCircle = circle.N;

    _Diagram.circles.remove(circle);

    circlePool.push(circle);
    (0, _RedBlackTree.RedBlackNode)(circle);
    arc.circle = null;
  }
}
},{"./RedBlackTree":"../node_modules/d3-voronoi/src/RedBlackTree.js","./Diagram":"../node_modules/d3-voronoi/src/Diagram.js"}],"../node_modules/d3-voronoi/src/Beach.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeBeach = removeBeach;
exports.addBeach = addBeach;

var _RedBlackTree = require("./RedBlackTree");

var _Cell = require("./Cell");

var _Circle = require("./Circle");

var _Edge = require("./Edge");

var _Diagram = require("./Diagram");

var beachPool = [];

function Beach() {
  (0, _RedBlackTree.RedBlackNode)(this);
  this.edge = this.site = this.circle = null;
}

function createBeach(site) {
  var beach = beachPool.pop() || new Beach();
  beach.site = site;
  return beach;
}

function detachBeach(beach) {
  (0, _Circle.detachCircle)(beach);

  _Diagram.beaches.remove(beach);

  beachPool.push(beach);
  (0, _RedBlackTree.RedBlackNode)(beach);
}

function removeBeach(beach) {
  var circle = beach.circle,
      x = circle.x,
      y = circle.cy,
      vertex = [x, y],
      previous = beach.P,
      next = beach.N,
      disappearing = [beach];
  detachBeach(beach);
  var lArc = previous;

  while (lArc.circle && Math.abs(x - lArc.circle.x) < _Diagram.epsilon && Math.abs(y - lArc.circle.cy) < _Diagram.epsilon) {
    previous = lArc.P;
    disappearing.unshift(lArc);
    detachBeach(lArc);
    lArc = previous;
  }

  disappearing.unshift(lArc);
  (0, _Circle.detachCircle)(lArc);
  var rArc = next;

  while (rArc.circle && Math.abs(x - rArc.circle.x) < _Diagram.epsilon && Math.abs(y - rArc.circle.cy) < _Diagram.epsilon) {
    next = rArc.N;
    disappearing.push(rArc);
    detachBeach(rArc);
    rArc = next;
  }

  disappearing.push(rArc);
  (0, _Circle.detachCircle)(rArc);
  var nArcs = disappearing.length,
      iArc;

  for (iArc = 1; iArc < nArcs; ++iArc) {
    rArc = disappearing[iArc];
    lArc = disappearing[iArc - 1];
    (0, _Edge.setEdgeEnd)(rArc.edge, lArc.site, rArc.site, vertex);
  }

  lArc = disappearing[0];
  rArc = disappearing[nArcs - 1];
  rArc.edge = (0, _Edge.createEdge)(lArc.site, rArc.site, null, vertex);
  (0, _Circle.attachCircle)(lArc);
  (0, _Circle.attachCircle)(rArc);
}

function addBeach(site) {
  var x = site[0],
      directrix = site[1],
      lArc,
      rArc,
      dxl,
      dxr,
      node = _Diagram.beaches._;

  while (node) {
    dxl = leftBreakPoint(node, directrix) - x;
    if (dxl > _Diagram.epsilon) node = node.L;else {
      dxr = x - rightBreakPoint(node, directrix);

      if (dxr > _Diagram.epsilon) {
        if (!node.R) {
          lArc = node;
          break;
        }

        node = node.R;
      } else {
        if (dxl > -_Diagram.epsilon) {
          lArc = node.P;
          rArc = node;
        } else if (dxr > -_Diagram.epsilon) {
          lArc = node;
          rArc = node.N;
        } else {
          lArc = rArc = node;
        }

        break;
      }
    }
  }

  (0, _Cell.createCell)(site);
  var newArc = createBeach(site);

  _Diagram.beaches.insert(lArc, newArc);

  if (!lArc && !rArc) return;

  if (lArc === rArc) {
    (0, _Circle.detachCircle)(lArc);
    rArc = createBeach(lArc.site);

    _Diagram.beaches.insert(newArc, rArc);

    newArc.edge = rArc.edge = (0, _Edge.createEdge)(lArc.site, newArc.site);
    (0, _Circle.attachCircle)(lArc);
    (0, _Circle.attachCircle)(rArc);
    return;
  }

  if (!rArc) {
    // && lArc
    newArc.edge = (0, _Edge.createEdge)(lArc.site, newArc.site);
    return;
  } // else lArc !== rArc


  (0, _Circle.detachCircle)(lArc);
  (0, _Circle.detachCircle)(rArc);
  var lSite = lArc.site,
      ax = lSite[0],
      ay = lSite[1],
      bx = site[0] - ax,
      by = site[1] - ay,
      rSite = rArc.site,
      cx = rSite[0] - ax,
      cy = rSite[1] - ay,
      d = 2 * (bx * cy - by * cx),
      hb = bx * bx + by * by,
      hc = cx * cx + cy * cy,
      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];
  (0, _Edge.setEdgeEnd)(rArc.edge, lSite, rSite, vertex);
  newArc.edge = (0, _Edge.createEdge)(lSite, site, null, vertex);
  rArc.edge = (0, _Edge.createEdge)(site, rSite, null, vertex);
  (0, _Circle.attachCircle)(lArc);
  (0, _Circle.attachCircle)(rArc);
}

function leftBreakPoint(arc, directrix) {
  var site = arc.site,
      rfocx = site[0],
      rfocy = site[1],
      pby2 = rfocy - directrix;
  if (!pby2) return rfocx;
  var lArc = arc.P;
  if (!lArc) return -Infinity;
  site = lArc.site;
  var lfocx = site[0],
      lfocy = site[1],
      plby2 = lfocy - directrix;
  if (!plby2) return lfocx;
  var hl = lfocx - rfocx,
      aby2 = 1 / pby2 - 1 / plby2,
      b = hl / plby2;
  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
  return (rfocx + lfocx) / 2;
}

function rightBreakPoint(arc, directrix) {
  var rArc = arc.N;
  if (rArc) return leftBreakPoint(rArc, directrix);
  var site = arc.site;
  return site[1] === directrix ? site[0] : Infinity;
}
},{"./RedBlackTree":"../node_modules/d3-voronoi/src/RedBlackTree.js","./Cell":"../node_modules/d3-voronoi/src/Cell.js","./Circle":"../node_modules/d3-voronoi/src/Circle.js","./Edge":"../node_modules/d3-voronoi/src/Edge.js","./Diagram":"../node_modules/d3-voronoi/src/Diagram.js"}],"../node_modules/d3-voronoi/src/Diagram.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Diagram;
exports.edges = exports.circles = exports.cells = exports.beaches = exports.epsilon2 = exports.epsilon = void 0;

var _Beach = require("./Beach");

var _Cell = require("./Cell");

var _Circle = require("./Circle");

var _Edge = require("./Edge");

var _RedBlackTree = _interopRequireDefault(require("./RedBlackTree"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var epsilon = 1e-6;
exports.epsilon = epsilon;
var epsilon2 = 1e-12;
exports.epsilon2 = epsilon2;
var beaches;
exports.beaches = beaches;
var cells;
exports.cells = cells;
var circles;
exports.circles = circles;
var edges;
exports.edges = edges;

function triangleArea(a, b, c) {
  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);
}

function lexicographic(a, b) {
  return b[1] - a[1] || b[0] - a[0];
}

function Diagram(sites, extent) {
  var site = sites.sort(lexicographic).pop(),
      x,
      y,
      circle;
  exports.edges = edges = [];
  exports.cells = cells = new Array(sites.length);
  exports.beaches = beaches = new _RedBlackTree.default();
  exports.circles = circles = new _RedBlackTree.default();

  while (true) {
    circle = _Circle.firstCircle;

    if (site && (!circle || site[1] < circle.y || site[1] === circle.y && site[0] < circle.x)) {
      if (site[0] !== x || site[1] !== y) {
        (0, _Beach.addBeach)(site);
        x = site[0], y = site[1];
      }

      site = sites.pop();
    } else if (circle) {
      (0, _Beach.removeBeach)(circle.arc);
    } else {
      break;
    }
  }

  (0, _Cell.sortCellHalfedges)();

  if (extent) {
    var x0 = +extent[0][0],
        y0 = +extent[0][1],
        x1 = +extent[1][0],
        y1 = +extent[1][1];
    (0, _Edge.clipEdges)(x0, y0, x1, y1);
    (0, _Cell.clipCells)(x0, y0, x1, y1);
  }

  this.edges = edges;
  this.cells = cells;
  exports.beaches = beaches = exports.circles = circles = exports.edges = edges = exports.cells = cells = null;
}

Diagram.prototype = {
  constructor: Diagram,
  polygons: function () {
    var edges = this.edges;
    return this.cells.map(function (cell) {
      var polygon = cell.halfedges.map(function (i) {
        return (0, _Cell.cellHalfedgeStart)(cell, edges[i]);
      });
      polygon.data = cell.site.data;
      return polygon;
    });
  },
  triangles: function () {
    var triangles = [],
        edges = this.edges;
    this.cells.forEach(function (cell, i) {
      if (!(m = (halfedges = cell.halfedges).length)) return;
      var site = cell.site,
          halfedges,
          j = -1,
          m,
          s0,
          e1 = edges[halfedges[m - 1]],
          s1 = e1.left === site ? e1.right : e1.left;

      while (++j < m) {
        s0 = s1;
        e1 = edges[halfedges[j]];
        s1 = e1.left === site ? e1.right : e1.left;

        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {
          triangles.push([site.data, s0.data, s1.data]);
        }
      }
    });
    return triangles;
  },
  links: function () {
    return this.edges.filter(function (edge) {
      return edge.right;
    }).map(function (edge) {
      return {
        source: edge.left.data,
        target: edge.right.data
      };
    });
  },
  find: function (x, y, radius) {
    var that = this,
        i0,
        i1 = that._found || 0,
        n = that.cells.length,
        cell; // Use the previously-found cell, or start with an arbitrary one.

    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;

    var dx = x - cell.site[0],
        dy = y - cell.site[1],
        d2 = dx * dx + dy * dy; // Traverse the half-edges to find a closer cell, if any.

    do {
      cell = that.cells[i0 = i1], i1 = null;
      cell.halfedges.forEach(function (e) {
        var edge = that.edges[e],
            v = edge.left;
        if ((v === cell.site || !v) && !(v = edge.right)) return;
        var vx = x - v[0],
            vy = y - v[1],
            v2 = vx * vx + vy * vy;
        if (v2 < d2) d2 = v2, i1 = v.index;
      });
    } while (i1 !== null);

    that._found = i0;
    return radius == null || d2 <= radius * radius ? cell.site : null;
  }
};
},{"./Beach":"../node_modules/d3-voronoi/src/Beach.js","./Cell":"../node_modules/d3-voronoi/src/Cell.js","./Circle":"../node_modules/d3-voronoi/src/Circle.js","./Edge":"../node_modules/d3-voronoi/src/Edge.js","./RedBlackTree":"../node_modules/d3-voronoi/src/RedBlackTree.js"}],"../node_modules/d3-voronoi/src/voronoi.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _point = require("./point");

var _Diagram = _interopRequireWildcard(require("./Diagram"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x = _point.x,
      y = _point.y,
      extent = null;

  function voronoi(data) {
    return new _Diagram.default(data.map(function (d, i) {
      var s = [Math.round(x(d, i, data) / _Diagram.epsilon) * _Diagram.epsilon, Math.round(y(d, i, data) / _Diagram.epsilon) * _Diagram.epsilon];
      s.index = i;
      s.data = d;
      return s;
    }), extent);
  }

  voronoi.polygons = function (data) {
    return voronoi(data).polygons();
  };

  voronoi.links = function (data) {
    return voronoi(data).links();
  };

  voronoi.triangles = function (data) {
    return voronoi(data).triangles();
  };

  voronoi.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), voronoi) : x;
  };

  voronoi.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), voronoi) : y;
  };

  voronoi.extent = function (_) {
    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];
  };

  voronoi.size = function (_) {
    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];
  };

  return voronoi;
}
},{"./constant":"../node_modules/d3-voronoi/src/constant.js","./point":"../node_modules/d3-voronoi/src/point.js","./Diagram":"../node_modules/d3-voronoi/src/Diagram.js"}],"../node_modules/d3-voronoi/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "voronoi", {
  enumerable: true,
  get: function () {
    return _voronoi.default;
  }
});

var _voronoi = _interopRequireDefault(require("./voronoi"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./voronoi":"../node_modules/d3-voronoi/src/voronoi.js"}],"../node_modules/d3-zoom/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../node_modules/d3-zoom/src/event.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ZoomEvent;

function ZoomEvent(target, type, transform) {
  this.target = target;
  this.type = type;
  this.transform = transform;
}
},{}],"../node_modules/d3-zoom/src/transform.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Transform = Transform;
exports.default = transform;
exports.identity = void 0;

function Transform(k, x, y) {
  this.k = k;
  this.x = x;
  this.y = y;
}

Transform.prototype = {
  constructor: Transform,
  scale: function (k) {
    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
  },
  translate: function (x, y) {
    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
  },
  apply: function (point) {
    return [point[0] * this.k + this.x, point[1] * this.k + this.y];
  },
  applyX: function (x) {
    return x * this.k + this.x;
  },
  applyY: function (y) {
    return y * this.k + this.y;
  },
  invert: function (location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  },
  invertX: function (x) {
    return (x - this.x) / this.k;
  },
  invertY: function (y) {
    return (y - this.y) / this.k;
  },
  rescaleX: function (x) {
    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
  },
  rescaleY: function (y) {
    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
  },
  toString: function () {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var identity = new Transform(1, 0, 0);
exports.identity = identity;
transform.prototype = Transform.prototype;

function transform(node) {
  while (!node.__zoom) if (!(node = node.parentNode)) return identity;

  return node.__zoom;
}
},{}],"../node_modules/d3-zoom/src/noevent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nopropagation = nopropagation;
exports.default = _default;

var _d3Selection = require("d3-selection");

function nopropagation() {
  _d3Selection.event.stopImmediatePropagation();
}

function _default() {
  _d3Selection.event.preventDefault();

  _d3Selection.event.stopImmediatePropagation();
}
},{"d3-selection":"../node_modules/d3-selection/src/index.js"}],"../node_modules/d3-zoom/src/zoom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Drag = require("d3-drag");

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _d3Transition = require("d3-transition");

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

var _transform = require("./transform.js");

var _noevent = _interopRequireWildcard(require("./noevent.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Ignore right-click, since that should open the context menu.
function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultExtent() {
  var e = this;

  if (e instanceof SVGElement) {
    e = e.ownerSVGElement || e;

    if (e.hasAttribute("viewBox")) {
      e = e.viewBox.baseVal;
      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
    }

    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
  }

  return [[0, 0], [e.clientWidth, e.clientHeight]];
}

function defaultTransform() {
  return this.__zoom || _transform.identity;
}

function defaultWheelDelta() {
  return -_d3Selection.event.deltaY * (_d3Selection.event.deltaMode === 1 ? 0.05 : _d3Selection.event.deltaMode ? 1 : 0.002);
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}

function defaultConstrain(transform, extent, translateExtent) {
  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],
      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],
      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],
      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
  return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));
}

function _default() {
  var filter = defaultFilter,
      extent = defaultExtent,
      constrain = defaultConstrain,
      wheelDelta = defaultWheelDelta,
      touchable = defaultTouchable,
      scaleExtent = [0, Infinity],
      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],
      duration = 250,
      interpolate = _d3Interpolate.interpolateZoom,
      listeners = (0, _d3Dispatch.dispatch)("start", "zoom", "end"),
      touchstarting,
      touchending,
      touchDelay = 500,
      wheelDelay = 150,
      clickDistance2 = 0;

  function zoom(selection) {
    selection.property("__zoom", defaultTransform).on("wheel.zoom", wheeled).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  zoom.transform = function (collection, transform, point) {
    var selection = collection.selection ? collection.selection() : collection;
    selection.property("__zoom", defaultTransform);

    if (collection !== selection) {
      schedule(collection, transform, point);
    } else {
      selection.interrupt().each(function () {
        gesture(this, arguments).start().zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform).end();
      });
    }
  };

  zoom.scaleBy = function (selection, k, p) {
    zoom.scaleTo(selection, function () {
      var k0 = this.__zoom.k,
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return k0 * k1;
    }, p);
  };

  zoom.scaleTo = function (selection, k, p) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t0 = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p,
          p1 = t0.invert(p0),
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
    }, p);
  };

  zoom.translateBy = function (selection, x, y) {
    zoom.transform(selection, function () {
      return constrain(this.__zoom.translate(typeof x === "function" ? x.apply(this, arguments) : x, typeof y === "function" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);
    });
  };

  zoom.translateTo = function (selection, x, y, p) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
      return constrain(_transform.identity.translate(p0[0], p0[1]).scale(t.k).translate(typeof x === "function" ? -x.apply(this, arguments) : -x, typeof y === "function" ? -y.apply(this, arguments) : -y), e, translateExtent);
    }, p);
  };

  function scale(transform, k) {
    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
    return k === transform.k ? transform : new _transform.Transform(k, transform.x, transform.y);
  }

  function translate(transform, p0, p1) {
    var x = p0[0] - p1[0] * transform.k,
        y = p0[1] - p1[1] * transform.k;
    return x === transform.x && y === transform.y ? transform : new _transform.Transform(transform.k, x, y);
  }

  function centroid(extent) {
    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
  }

  function schedule(transition, transform, point) {
    transition.on("start.zoom", function () {
      gesture(this, arguments).start();
    }).on("interrupt.zoom end.zoom", function () {
      gesture(this, arguments).end();
    }).tween("zoom", function () {
      var that = this,
          args = arguments,
          g = gesture(that, args),
          e = extent.apply(that, args),
          p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point,
          w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
          a = that.__zoom,
          b = typeof transform === "function" ? transform.apply(that, args) : transform,
          i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
      return function (t) {
        if (t === 1) t = b; // Avoid rounding error on end.
        else {
            var l = i(t),
                k = w / l[2];
            t = new _transform.Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);
          }
        g.zoom(null, t);
      };
    });
  }

  function gesture(that, args, clean) {
    return !clean && that.__zooming || new Gesture(that, args);
  }

  function Gesture(that, args) {
    this.that = that;
    this.args = args;
    this.active = 0;
    this.extent = extent.apply(that, args);
    this.taps = 0;
  }

  Gesture.prototype = {
    start: function () {
      if (++this.active === 1) {
        this.that.__zooming = this;
        this.emit("start");
      }

      return this;
    },
    zoom: function (key, transform) {
      if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
      if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
      if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
      this.that.__zoom = transform;
      this.emit("zoom");
      return this;
    },
    end: function () {
      if (--this.active === 0) {
        delete this.that.__zooming;
        this.emit("end");
      }

      return this;
    },
    emit: function (type) {
      (0, _d3Selection.customEvent)(new _event.default(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);
    }
  };

  function wheeled() {
    if (!filter.apply(this, arguments)) return;
    var g = gesture(this, arguments),
        t = this.__zoom,
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),
        p = (0, _d3Selection.mouse)(this); // If the mouse is in the same location as before, reuse it.
    // If there were recent wheel events, reset the wheel idle timeout.

    if (g.wheel) {
      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
        g.mouse[1] = t.invert(g.mouse[0] = p);
      }

      clearTimeout(g.wheel);
    } // If this wheel event won’t trigger a transform change, ignore it.
    else if (t.k === k) return; // Otherwise, capture the mouse point and location at the start.
      else {
          g.mouse = [p, t.invert(p)];
          (0, _d3Transition.interrupt)(this);
          g.start();
        }

    (0, _noevent.default)();
    g.wheel = setTimeout(wheelidled, wheelDelay);
    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));

    function wheelidled() {
      g.wheel = null;
      g.end();
    }
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var g = gesture(this, arguments, true),
        v = (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
        p = (0, _d3Selection.mouse)(this),
        x0 = _d3Selection.event.clientX,
        y0 = _d3Selection.event.clientY;
    (0, _d3Drag.dragDisable)(_d3Selection.event.view);
    (0, _noevent.nopropagation)();
    g.mouse = [p, this.__zoom.invert(p)];
    (0, _d3Transition.interrupt)(this);
    g.start();

    function mousemoved() {
      (0, _noevent.default)();

      if (!g.moved) {
        var dx = _d3Selection.event.clientX - x0,
            dy = _d3Selection.event.clientY - y0;
        g.moved = dx * dx + dy * dy > clickDistance2;
      }

      g.zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = (0, _d3Selection.mouse)(g.that), g.mouse[1]), g.extent, translateExtent));
    }

    function mouseupped() {
      v.on("mousemove.zoom mouseup.zoom", null);
      (0, _d3Drag.dragEnable)(_d3Selection.event.view, g.moved);
      (0, _noevent.default)();
      g.end();
    }
  }

  function dblclicked() {
    if (!filter.apply(this, arguments)) return;
    var t0 = this.__zoom,
        p0 = (0, _d3Selection.mouse)(this),
        p1 = t0.invert(p0),
        k1 = t0.k * (_d3Selection.event.shiftKey ? 0.5 : 2),
        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);
    (0, _noevent.default)();
    if (duration > 0) (0, _d3Selection.select)(this).transition().duration(duration).call(schedule, t1, p0);else (0, _d3Selection.select)(this).call(zoom.transform, t1);
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var touches = _d3Selection.event.touches,
        n = touches.length,
        g = gesture(this, arguments, _d3Selection.event.changedTouches.length === n),
        started,
        i,
        t,
        p;
    (0, _noevent.nopropagation)();

    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0, _d3Selection.touch)(this, touches, t.identifier);
      p = [p, this.__zoom.invert(p), t.identifier];
      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;
    }

    if (touchstarting) touchstarting = clearTimeout(touchstarting);

    if (started) {
      if (g.taps < 2) touchstarting = setTimeout(function () {
        touchstarting = null;
      }, touchDelay);
      (0, _d3Transition.interrupt)(this);
      g.start();
    }
  }

  function touchmoved() {
    if (!this.__zooming) return;
    var g = gesture(this, arguments),
        touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        t,
        p,
        l;
    (0, _noevent.default)();
    if (touchstarting) touchstarting = clearTimeout(touchstarting);
    g.taps = 0;

    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0, _d3Selection.touch)(this, touches, t.identifier);
      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
    }

    t = g.that.__zoom;

    if (g.touch1) {
      var p0 = g.touch0[0],
          l0 = g.touch0[1],
          p1 = g.touch1[0],
          l1 = g.touch1[1],
          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
      t = scale(t, Math.sqrt(dp / dl));
      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
    } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];else return;

    g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
  }

  function touchended() {
    if (!this.__zooming) return;
    var g = gesture(this, arguments),
        touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        t;
    (0, _noevent.nopropagation)();
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, touchDelay);

    for (i = 0; i < n; ++i) {
      t = touches[i];
      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
    }

    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);else {
      g.end(); // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.

      if (g.taps === 2) {
        var p = (0, _d3Selection.select)(this).on("dblclick.zoom");
        if (p) p.apply(this, arguments);
      }
    }
  }

  zoom.wheelDelta = function (_) {
    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : (0, _constant.default)(+_), zoom) : wheelDelta;
  };

  zoom.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), zoom) : filter;
  };

  zoom.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), zoom) : touchable;
  };

  zoom.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0, _constant.default)([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
  };

  zoom.scaleExtent = function (_) {
    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
  };

  zoom.translateExtent = function (_) {
    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
  };

  zoom.constrain = function (_) {
    return arguments.length ? (constrain = _, zoom) : constrain;
  };

  zoom.duration = function (_) {
    return arguments.length ? (duration = +_, zoom) : duration;
  };

  zoom.interpolate = function (_) {
    return arguments.length ? (interpolate = _, zoom) : interpolate;
  };

  zoom.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? zoom : value;
  };

  zoom.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
  };

  return zoom;
}
},{"d3-dispatch":"../node_modules/d3-dispatch/src/index.js","d3-drag":"../node_modules/d3-drag/src/index.js","d3-interpolate":"../node_modules/d3-interpolate/src/index.js","d3-selection":"../node_modules/d3-selection/src/index.js","d3-transition":"../node_modules/d3-transition/src/index.js","./constant.js":"../node_modules/d3-zoom/src/constant.js","./event.js":"../node_modules/d3-zoom/src/event.js","./transform.js":"../node_modules/d3-zoom/src/transform.js","./noevent.js":"../node_modules/d3-zoom/src/noevent.js"}],"../node_modules/d3-zoom/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "zoom", {
  enumerable: true,
  get: function () {
    return _zoom.default;
  }
});
Object.defineProperty(exports, "zoomTransform", {
  enumerable: true,
  get: function () {
    return _transform.default;
  }
});
Object.defineProperty(exports, "zoomIdentity", {
  enumerable: true,
  get: function () {
    return _transform.identity;
  }
});

var _zoom = _interopRequireDefault(require("./zoom.js"));

var _transform = _interopRequireWildcard(require("./transform.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./zoom.js":"../node_modules/d3-zoom/src/zoom.js","./transform.js":"../node_modules/d3-zoom/src/transform.js"}],"../node_modules/d3/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  version: true
};
Object.defineProperty(exports, "version", {
  enumerable: true,
  get: function () {
    return _package.version;
  }
});

var _package = require("./dist/package.js");

var _d3Array = require("d3-array");

Object.keys(_d3Array).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Array[key];
    }
  });
});

var _d3Axis = require("d3-axis");

Object.keys(_d3Axis).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Axis[key];
    }
  });
});

var _d3Brush = require("d3-brush");

Object.keys(_d3Brush).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Brush[key];
    }
  });
});

var _d3Chord = require("d3-chord");

Object.keys(_d3Chord).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Chord[key];
    }
  });
});

var _d3Collection = require("d3-collection");

Object.keys(_d3Collection).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Collection[key];
    }
  });
});

var _d3Color = require("d3-color");

Object.keys(_d3Color).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Color[key];
    }
  });
});

var _d3Contour = require("d3-contour");

Object.keys(_d3Contour).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Contour[key];
    }
  });
});

var _d3Dispatch = require("d3-dispatch");

Object.keys(_d3Dispatch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Dispatch[key];
    }
  });
});

var _d3Drag = require("d3-drag");

Object.keys(_d3Drag).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Drag[key];
    }
  });
});

var _d3Dsv = require("d3-dsv");

Object.keys(_d3Dsv).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Dsv[key];
    }
  });
});

var _d3Ease = require("d3-ease");

Object.keys(_d3Ease).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Ease[key];
    }
  });
});

var _d3Fetch = require("d3-fetch");

Object.keys(_d3Fetch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Fetch[key];
    }
  });
});

var _d3Force = require("d3-force");

Object.keys(_d3Force).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Force[key];
    }
  });
});

var _d3Format = require("d3-format");

Object.keys(_d3Format).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Format[key];
    }
  });
});

var _d3Geo = require("d3-geo");

Object.keys(_d3Geo).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Geo[key];
    }
  });
});

var _d3Hierarchy = require("d3-hierarchy");

Object.keys(_d3Hierarchy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Hierarchy[key];
    }
  });
});

var _d3Interpolate = require("d3-interpolate");

Object.keys(_d3Interpolate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Interpolate[key];
    }
  });
});

var _d3Path = require("d3-path");

Object.keys(_d3Path).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Path[key];
    }
  });
});

var _d3Polygon = require("d3-polygon");

Object.keys(_d3Polygon).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Polygon[key];
    }
  });
});

var _d3Quadtree = require("d3-quadtree");

Object.keys(_d3Quadtree).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Quadtree[key];
    }
  });
});

var _d3Random = require("d3-random");

Object.keys(_d3Random).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Random[key];
    }
  });
});

var _d3Scale = require("d3-scale");

Object.keys(_d3Scale).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Scale[key];
    }
  });
});

var _d3ScaleChromatic = require("d3-scale-chromatic");

Object.keys(_d3ScaleChromatic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3ScaleChromatic[key];
    }
  });
});

var _d3Selection = require("d3-selection");

Object.keys(_d3Selection).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Selection[key];
    }
  });
});

var _d3Shape = require("d3-shape");

Object.keys(_d3Shape).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Shape[key];
    }
  });
});

var _d3Time = require("d3-time");

Object.keys(_d3Time).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Time[key];
    }
  });
});

var _d3TimeFormat = require("d3-time-format");

Object.keys(_d3TimeFormat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3TimeFormat[key];
    }
  });
});

var _d3Timer = require("d3-timer");

Object.keys(_d3Timer).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Timer[key];
    }
  });
});

var _d3Transition = require("d3-transition");

Object.keys(_d3Transition).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Transition[key];
    }
  });
});

var _d3Voronoi = require("d3-voronoi");

Object.keys(_d3Voronoi).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Voronoi[key];
    }
  });
});

var _d3Zoom = require("d3-zoom");

Object.keys(_d3Zoom).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Zoom[key];
    }
  });
});
},{"./dist/package.js":"../node_modules/d3/dist/package.js","d3-array":"../node_modules/d3-array/src/index.js","d3-axis":"../node_modules/d3-axis/src/index.js","d3-brush":"../node_modules/d3-brush/src/index.js","d3-chord":"../node_modules/d3-chord/src/index.js","d3-collection":"../node_modules/d3-collection/src/index.js","d3-color":"../node_modules/d3-color/src/index.js","d3-contour":"../node_modules/d3-contour/src/index.js","d3-dispatch":"../node_modules/d3-dispatch/src/index.js","d3-drag":"../node_modules/d3-drag/src/index.js","d3-dsv":"../node_modules/d3-dsv/src/index.js","d3-ease":"../node_modules/d3-ease/src/index.js","d3-fetch":"../node_modules/d3-fetch/src/index.js","d3-force":"../node_modules/d3-force/src/index.js","d3-format":"../node_modules/d3-format/src/index.js","d3-geo":"../node_modules/d3-geo/src/index.js","d3-hierarchy":"../node_modules/d3-hierarchy/src/index.js","d3-interpolate":"../node_modules/d3-interpolate/src/index.js","d3-path":"../node_modules/d3-path/src/index.js","d3-polygon":"../node_modules/d3-polygon/src/index.js","d3-quadtree":"../node_modules/d3-quadtree/src/index.js","d3-random":"../node_modules/d3-random/src/index.js","d3-scale":"../node_modules/d3-scale/src/index.js","d3-scale-chromatic":"../node_modules/d3-scale-chromatic/src/index.js","d3-selection":"../node_modules/d3-selection/src/index.js","d3-shape":"../node_modules/d3-shape/src/index.js","d3-time":"../node_modules/d3-time/src/index.js","d3-time-format":"../node_modules/d3-time-format/src/index.js","d3-timer":"../node_modules/d3-timer/src/index.js","d3-transition":"../node_modules/d3-transition/src/index.js","d3-voronoi":"../node_modules/d3-voronoi/src/index.js","d3-zoom":"../node_modules/d3-zoom/src/index.js"}],"pays.json":[function(require,module,exports) {
module.exports = {
  "type": "FeatureCollection",
  "crs": {
    "type": "name",
    "properties": {
      "name": "urn:ogc:def:crs:OGC:1.3:CRS84"
    }
  },
  "features": [{
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Afghanistan",
      "sov_a3": "AFG",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Afghanistan",
      "adm0_a3": "AFG",
      "geou_dif": 0.000000,
      "geounit": "Afghanistan",
      "gu_a3": "AFG",
      "su_dif": 0.000000,
      "subunit": "Afghanistan",
      "su_a3": "AFG",
      "brk_diff": 0.000000,
      "name": "Afghanistan",
      "name_long": "Afghanistan",
      "brk_a3": "AFG",
      "brk_name": "Afghanistan",
      "brk_group": null,
      "abbrev": "Afg.",
      "postal": "AF",
      "formal_en": "Islamic State of Afghanistan",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Afghanistan",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 8.000000,
      "mapcolor13": 7.000000,
      "pop_est": 28400000.000000,
      "gdp_md_est": 22270.000000,
      "pop_year": -99.000000,
      "lastcensus": 1979.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "AF",
      "iso_a3": "AFG",
      "iso_n3": "004",
      "un_a3": "004",
      "wb_a2": "AF",
      "wb_a3": "AFG",
      "woe_id": -99.000000,
      "adm0_a3_is": "AFG",
      "adm0_a3_us": "AFG",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Southern Asia",
      "region_wb": "South Asia",
      "name_len": 11.000000,
      "long_len": 11.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[61.210817091725744, 35.650072333309225], [62.230651483005886, 35.270663967422294], [62.98466230657661, 35.404040839167621], [63.193538445900352, 35.857165635718914], [63.98289594915871, 36.007957465146603], [64.546479119733903, 36.312073269184268], [64.746105177677407, 37.111817735333304], [65.588947788357842, 37.305216783185642], [65.745630731066825, 37.661164048812068], [66.217384881459338, 37.39379018813392], [66.51860680528867, 37.362784328758792], [67.075782098259623, 37.356143907209287], [67.829999627559516, 37.144994004864685], [68.135562371701383, 37.023115139304309], [68.859445835245936, 37.344335842430596], [69.196272820924378, 37.151143500307427], [69.518785434857961, 37.60899669041342], [70.116578403610333, 37.588222764632093], [70.270574171840138, 37.735164699854025], [70.376304152309302, 38.138395901027522], [70.806820509732887, 38.486281643216415], [71.348131137990265, 38.258905341132163], [71.239403924448169, 37.953265082341886], [71.541917759084782, 37.905774441065645], [71.448693475230243, 37.06564484308052], [71.844638299450594, 36.738171291646921], [72.193040805962397, 36.948287665345674], [72.636889682917285, 37.047558091778356], [73.260055779925011, 37.495256862939002], [73.9486959166465, 37.4215662704908], [74.980002475895418, 37.419990139305895], [75.158027785140916, 37.133030910789117], [74.575892775372978, 37.020841376283457], [74.067551710917826, 36.836175645488453], [72.920024855444467, 36.720007025696319], [71.846291945283923, 36.509942328429858], [71.26234826038575, 36.074387518857804], [71.498767938121091, 35.650563259416003], [71.613076206350712, 35.153203436822864], [71.115018751921639, 34.733125718722235], [71.156773309213463, 34.348911444632151], [70.881803012988399, 33.98885590263852], [69.930543247359594, 34.02012014417511], [70.323594191371598, 33.358532619758392], [69.687147251264861, 33.105498969041236], [69.262522007122556, 32.5019440780883], [69.317764113242561, 31.901412258424443], [68.926676873657669, 31.620189113892067], [68.556932000609322, 31.713310044882018], [67.792689243444784, 31.582930406209631], [67.683393589147471, 31.303154201781421], [66.938891229118468, 31.304911200479353], [66.381457553986024, 30.738899237586452], [66.346472609324422, 29.887943427036177], [65.046862013616106, 29.472180691031905], [64.350418735618518, 29.560030625928093], [64.148002150331251, 29.340819200145972], [63.550260858011171, 29.468330796826166], [62.549856805272782, 29.318572496044311], [60.874248488208792, 29.829238999952608], [61.781221551363444, 30.735850328081238], [61.699314406180832, 31.379506130492672], [60.941944614511129, 31.548074652628753], [60.863654819588966, 32.182919623334428], [60.536077915290775, 32.981268825811568], [60.963700392506006, 33.528832302376259], [60.528429803311582, 33.676446031218006], [60.803193393807447, 34.404101874319863], [61.210817091725744, 35.650072333309225]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Angola",
      "sov_a3": "AGO",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Angola",
      "adm0_a3": "AGO",
      "geou_dif": 0.000000,
      "geounit": "Angola",
      "gu_a3": "AGO",
      "su_dif": 0.000000,
      "subunit": "Angola",
      "su_a3": "AGO",
      "brk_diff": 0.000000,
      "name": "Angola",
      "name_long": "Angola",
      "brk_a3": "AGO",
      "brk_name": "Angola",
      "brk_group": null,
      "abbrev": "Ang.",
      "postal": "AO",
      "formal_en": "People's Republic of Angola",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Angola",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 1.000000,
      "pop_est": 12799293.000000,
      "gdp_md_est": 110300.000000,
      "pop_year": -99.000000,
      "lastcensus": 1970.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "AO",
      "iso_a3": "AGO",
      "iso_n3": "024",
      "un_a3": "024",
      "wb_a2": "AO",
      "wb_a3": "AGO",
      "woe_id": -99.000000,
      "adm0_a3_is": "AGO",
      "adm0_a3_us": "AGO",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Middle Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[16.326528354567046, -5.877470391466218], [16.573179965896145, -6.622644545115094], [16.86019087084523, -7.222297865429979], [17.089995965247169, -7.545688978712477], [17.472970004962292, -8.068551120641658], [18.134221632569052, -7.987677504104866], [18.464175652752687, -7.847014255406478], [19.016751743249671, -7.98824594486014], [19.166613396896082, -7.738183688999726], [19.417502475673217, -7.155428562044278], [20.037723016040218, -7.11636117923166], [20.09162153492062, -6.943090101756951], [20.601822950938327, -6.939317722199689], [20.51474816252653, -7.299605808138665], [21.728110792739756, -7.290872491081316], [21.746455926203367, -7.920084730667114], [21.94913089365204, -8.305900974158305], [21.801801385187957, -8.908706556842986], [21.875181919042404, -9.523707777548566], [22.208753289486424, -9.89479623783653], [22.155268182064333, -11.084801120653779], [22.402798292742432, -10.993075453335692], [22.837345411884769, -11.017621758674338], [23.456790805767469, -10.867863457892483], [23.912215203555746, -10.926826267137542], [24.017893507592618, -11.237298272347118], [23.904153680118242, -11.722281589406336], [24.079905226342902, -12.191296888887308], [23.930922072045377, -12.565847670138822], [24.016136508894704, -12.911046237848552], [21.933886346125945, -12.898437188369357], [21.887842644953878, -16.080310153876894], [22.56247846852429, -16.898451429921835], [23.215048455506093, -17.523116143465955], [21.377176141045595, -17.93063648851971], [18.956186964603631, -17.789094740472237], [18.263309360434221, -17.309950860262006], [14.209706658595053, -17.353100681225712], [14.058501417709039, -17.423380629142656], [13.462362094789967, -16.971211846588744], [12.814081251688407, -16.941342868724078], [12.215461460019384, -17.111668389558062], [11.73419884608515, -17.301889336824502], [11.640096062881611, -16.673142185129208], [11.778537224991567, -15.793816013250691], [12.123580763404448, -14.878316338767931], [12.175618930722266, -14.449143568583892], [12.500095249083017, -13.547699883684402], [12.738478631245442, -13.137905775609937], [13.312913852601838, -12.483630466362513], [13.633721144269828, -12.038644707897191], [13.738727654686926, -11.297863050993143], [13.686379428775297, -10.731075941615842], [13.387327915102162, -10.373578383020728], [13.120987583069876, -9.766897067914115], [12.875369500386569, -9.166933689005489], [12.929061313537801, -8.959091078327575], [13.236432732809874, -8.562629489784342], [12.933040398824318, -7.596538588087753], [12.72829837408392, -6.927122084178805], [12.227347039446443, -6.294447523629373], [12.322431674863566, -6.100092461779653], [12.735171339578699, -5.965682061388478], [13.02486941900699, -5.984388929878108], [13.375597364971895, -5.864241224799557], [16.326528354567046, -5.877470391466218]]], [[[12.436688266660923, -5.684303887559224], [12.182336866920281, -5.789930515163803], [11.914963006242118, -5.037986748884734], [12.318607618873926, -4.606230157086159], [12.62075971848455, -4.438023369976122], [12.995517205465205, -4.781103203961919], [12.631611769265845, -4.991271254092936], [12.468004184629763, -5.248361504744992], [12.436688266660923, -5.684303887559224]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Albania",
      "sov_a3": "ALB",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Albania",
      "adm0_a3": "ALB",
      "geou_dif": 0.000000,
      "geounit": "Albania",
      "gu_a3": "ALB",
      "su_dif": 0.000000,
      "subunit": "Albania",
      "su_a3": "ALB",
      "brk_diff": 0.000000,
      "name": "Albania",
      "name_long": "Albania",
      "brk_a3": "ALB",
      "brk_name": "Albania",
      "brk_group": null,
      "abbrev": "Alb.",
      "postal": "AL",
      "formal_en": "Republic of Albania",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Albania",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 6.000000,
      "pop_est": 3639453.000000,
      "gdp_md_est": 21810.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "AL",
      "iso_a3": "ALB",
      "iso_n3": "008",
      "un_a3": "008",
      "wb_a2": "AL",
      "wb_a3": "ALB",
      "woe_id": -99.000000,
      "adm0_a3_is": "ALB",
      "adm0_a3_us": "ALB",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Southern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[20.59024743010491, 41.855404161133606], [20.463175083099202, 41.51508901627534], [20.605181919037364, 41.086226304685226], [21.020040317476401, 40.84272695572588], [20.999989861747224, 40.580003973953978], [20.674996779063633, 40.434999904943027], [20.615000441172754, 40.110006822259379], [20.15001590341052, 39.624997666983973], [19.980000441170148, 39.694993394523408], [19.960001661873207, 39.915005805006047], [19.406081984136733, 40.250773423822466], [19.319058872157143, 40.727230129553561], [19.403549838954291, 41.409565741535459], [19.540027296637106, 41.719986070312757], [19.371768833094961, 41.877547512370654], [19.304486118250793, 42.19574514420782], [19.738051385179631, 42.688247382165571], [19.801613396898688, 42.500093492190842], [20.0707, 42.58863], [20.283754510181893, 42.320259507815081], [20.52295, 42.21787], [20.59024743010491, 41.855404161133606]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "United Arab Emirates",
      "sov_a3": "ARE",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "United Arab Emirates",
      "adm0_a3": "ARE",
      "geou_dif": 0.000000,
      "geounit": "United Arab Emirates",
      "gu_a3": "ARE",
      "su_dif": 0.000000,
      "subunit": "United Arab Emirates",
      "su_a3": "ARE",
      "brk_diff": 0.000000,
      "name": "United Arab Emirates",
      "name_long": "United Arab Emirates",
      "brk_a3": "ARE",
      "brk_name": "United Arab Emirates",
      "brk_group": null,
      "abbrev": "U.A.E.",
      "postal": "AE",
      "formal_en": "United Arab Emirates",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "United Arab Emirates",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 3.000000,
      "pop_est": 4798491.000000,
      "gdp_md_est": 184300.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "AE",
      "iso_a3": "ARE",
      "iso_n3": "784",
      "un_a3": "784",
      "wb_a2": "AE",
      "wb_a3": "ARE",
      "woe_id": -99.000000,
      "adm0_a3_is": "ARE",
      "adm0_a3_us": "ARE",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Middle East & North Africa",
      "name_len": 20.000000,
      "long_len": 20.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[51.579518670463273, 24.245497137951105], [51.757440626844186, 24.294072984305469], [51.794389275932872, 24.019826158132506], [52.577080519425607, 24.177439276622707], [53.404006788960146, 24.15131684009917], [54.008000929587581, 24.121757920828216], [54.693023716048629, 24.797892360935091], [55.43902469261414, 25.439145209244941], [56.070820753814559, 26.055464178973981], [56.261041701080956, 25.714606431576769], [56.396847365144005, 24.924732163995486], [55.886232537668008, 24.920830593357447], [55.804118686756226, 24.269604193615265], [55.981213820220461, 24.130542914317829], [55.528631626208238, 23.933604030853502], [55.525841098864475, 23.524869289640932], [55.234489373602884, 23.110992743415324], [55.208341098863194, 22.708329982997046], [55.006803012924905, 22.496947536707136], [52.000733270074335, 23.00115448657894], [51.617707553926977, 24.014219265228832], [51.579518670463273, 24.245497137951105]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Argentina",
      "sov_a3": "ARG",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Argentina",
      "adm0_a3": "ARG",
      "geou_dif": 0.000000,
      "geounit": "Argentina",
      "gu_a3": "ARG",
      "su_dif": 0.000000,
      "subunit": "Argentina",
      "su_a3": "ARG",
      "brk_diff": 0.000000,
      "name": "Argentina",
      "name_long": "Argentina",
      "brk_a3": "ARG",
      "brk_name": "Argentina",
      "brk_group": null,
      "abbrev": "Arg.",
      "postal": "AR",
      "formal_en": "Argentine Republic",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Argentina",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 13.000000,
      "pop_est": 40913584.000000,
      "gdp_md_est": 573900.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "AR",
      "iso_a3": "ARG",
      "iso_n3": "032",
      "un_a3": "032",
      "wb_a2": "AR",
      "wb_a3": "ARG",
      "woe_id": -99.000000,
      "adm0_a3_is": "ARG",
      "adm0_a3_us": "ARG",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "South America",
      "region_un": "Americas",
      "subregion": "South America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 9.000000,
      "long_len": 9.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-65.5, -55.2], [-66.45, -55.25], [-66.95992, -54.89681], [-67.56244, -54.87001], [-68.63335, -54.8695], [-68.634010227583161, -52.63637045887446], [-68.25, -53.1], [-67.75, -53.85], [-66.45, -54.45], [-65.05, -54.7], [-65.5, -55.2]]], [[[-64.964892137294584, -22.075861504812352], [-64.377021043542271, -22.798091322523547], [-63.986838141522469, -21.993644301035957], [-62.846468471921554, -22.034985446869456], [-62.6850571356579, -22.249029229422405], [-60.84656470400995, -23.880712579038303], [-60.028966030503994, -24.032796319273245], [-58.807128465394953, -24.771459242453275], [-57.777217169817959, -25.16233977630904], [-57.633660040911138, -25.60365650808167], [-58.618173590719721, -27.123718763947124], [-57.609759690976148, -27.395898532828426], [-56.486701626192996, -27.54849903738625], [-55.6958455063982, -27.387837009390822], [-54.788794928595053, -26.621785577096091], [-54.625290696823555, -25.739255466415486], [-54.130049607954419, -25.54763925547725], [-53.62834896504873, -26.124865004177437], [-53.648735317587892, -26.923472588816111], [-54.490725267135531, -27.47475676850577], [-55.162286342984601, -27.881915378533421], [-56.290899624239103, -28.852760512000856], [-57.625133429582917, -30.216294854454247], [-57.874937303281911, -31.016556084926165], [-58.142440355040748, -32.044503676076189], [-58.132647671121418, -33.040566908502015], [-58.349611172098832, -33.263188978815435], [-58.427074144104381, -33.909454441057548], [-58.495442064026548, -34.431489760070107], [-57.225829637263644, -35.288026625307893], [-57.362358771378751, -35.977390232081504], [-56.737487352105461, -36.413125909166581], [-56.788285285048346, -36.901571547189334], [-57.749156867083428, -38.183870538079915], [-59.231857062401872, -38.720220228837206], [-61.237445237865614, -38.928424574541154], [-62.335956997310149, -38.827707208004369], [-62.125763108962929, -39.424104913084875], [-62.330530971919444, -40.172586358400324], [-62.145994432205242, -40.676896661136738], [-62.745802781816991, -41.028761488612091], [-63.770494757732536, -41.166789239263665], [-64.732089809819712, -40.802677097335135], [-65.118035244391592, -41.064314874028881], [-64.978560553635845, -42.058000990569326], [-64.30340796574248, -42.359016208669502], [-63.75594784204236, -42.043686618824509], [-63.45805904809589, -42.563138116222362], [-64.378803880456303, -42.873558444999645], [-65.181803961839705, -43.495380954767796], [-65.328823411710147, -44.501366062193696], [-65.565268927661606, -45.036785577169795], [-66.509965786389358, -45.03962778094585], [-67.293793911392441, -45.551896254255198], [-67.580546434180093, -46.301772963242541], [-66.597066413017274, -47.033924655953811], [-65.641026577401448, -47.236134535511894], [-65.985088263600744, -48.133289076531142], [-67.166178961847663, -48.697337334996945], [-67.816087612566463, -49.869668877970419], [-68.728745083273168, -50.264218438518867], [-69.138539191347803, -50.732510267947802], [-68.815561489523532, -51.771104011594105], [-68.149994879820412, -52.349983406127706], [-68.571545376241346, -52.299443855346262], [-69.49836218939609, -52.14276091263725], [-71.914803839796349, -52.009022305865926], [-72.329403856074038, -51.425956312872408], [-72.30997351753237, -50.677009779666356], [-72.975746832964631, -50.741450290734313], [-73.328050910114484, -50.378785088909872], [-73.415435757120036, -49.318436374712959], [-72.648247443314943, -48.878618259476788], [-72.331160854771952, -48.244238376661826], [-72.447355312780275, -47.738532810253531], [-71.917258470330211, -46.8848381487918], [-71.552009446891248, -45.560732924177131], [-71.65931555854533, -44.973688653341441], [-71.222778896759735, -44.784242852559416], [-71.329800788036209, -44.407521661151691], [-71.793622606071949, -44.207172133156106], [-71.464056159130507, -43.787611179378331], [-71.915423956983915, -43.408564548517418], [-72.148898078078531, -42.254888197601389], [-71.746803758415467, -42.051386407235995], [-71.915734015577556, -40.832339369470731], [-71.680761277946459, -39.808164157878068], [-71.413516608349056, -38.916022230791114], [-70.814664272734717, -38.552995293940739], [-71.118625047475433, -37.576827487947199], [-71.121880662709799, -36.658123874662337], [-70.364769253201672, -36.005088799789945], [-70.388049485949097, -35.169687595359449], [-69.817309129501467, -34.193571465798286], [-69.814776984319224, -33.273886000299854], [-70.074399380153636, -33.091209812148037], [-70.535068935819453, -31.365010267870289], [-69.919008348251936, -30.336339206668313], [-70.013550381129875, -29.367922865518551], [-69.656130337183157, -28.459141127233693], [-69.001234910748281, -27.521213881136134], [-68.295541551370405, -26.89933969493579], [-68.594799770772681, -26.506908868111267], [-68.386001146097357, -26.185016371365236], [-68.417652960876126, -24.518554782816878], [-67.328442959244143, -24.025303236590915], [-66.985233934177643, -22.986348565362832], [-67.106673550063618, -22.7359245744764], [-66.273339402924847, -21.832310479420684], [-64.964892137294584, -22.075861504812352]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Armenia",
      "sov_a3": "ARM",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Armenia",
      "adm0_a3": "ARM",
      "geou_dif": 0.000000,
      "geounit": "Armenia",
      "gu_a3": "ARM",
      "su_dif": 0.000000,
      "subunit": "Armenia",
      "su_a3": "ARM",
      "brk_diff": 0.000000,
      "name": "Armenia",
      "name_long": "Armenia",
      "brk_a3": "ARM",
      "brk_name": "Armenia",
      "brk_group": null,
      "abbrev": "Arm.",
      "postal": "ARM",
      "formal_en": "Republic of Armenia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Armenia",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 10.000000,
      "pop_est": 2967004.000000,
      "gdp_md_est": 18770.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "AM",
      "iso_a3": "ARM",
      "iso_n3": "051",
      "un_a3": "051",
      "wb_a2": "AM",
      "wb_a3": "ARM",
      "woe_id": -99.000000,
      "adm0_a3_is": "ARM",
      "adm0_a3_us": "ARM",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[43.582745802592733, 41.092143256182567], [44.972480096218078, 41.248128567055595], [45.179495883979342, 40.985353908851408], [45.560351189970447, 40.812289537105926], [45.35917483905817, 40.561503811193461], [45.891907179555091, 40.218475653639999], [45.610012241402927, 39.899993801425182], [46.034534132680676, 39.628020738273065], [46.483498976432458, 39.464154771475535], [46.505719842317973, 38.770605373686294], [46.143623081248819, 38.741201483712217], [45.735379266143013, 39.319719143219743], [45.739978468616982, 39.473999131827128], [45.298144972521463, 39.471751207022436], [45.001987339056747, 39.740003567049555], [44.793989699081948, 39.713002631177048], [44.400008579288702, 40.005000311842281], [43.656436395040942, 40.253563951166186], [43.752657911968413, 40.740200914058761], [43.582745802592733, 41.092143256182567]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Antarctica",
      "sov_a3": "ATA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Indeterminate",
      "admin": "Antarctica",
      "adm0_a3": "ATA",
      "geou_dif": 0.000000,
      "geounit": "Antarctica",
      "gu_a3": "ATA",
      "su_dif": 0.000000,
      "subunit": "Antarctica",
      "su_a3": "ATA",
      "brk_diff": 0.000000,
      "name": "Antarctica",
      "name_long": "Antarctica",
      "brk_a3": "ATA",
      "brk_name": "Antarctica",
      "brk_group": null,
      "abbrev": "Ant.",
      "postal": "AQ",
      "formal_en": null,
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": "Multiple claims held in abeyance",
      "name_sort": "Antarctica",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": -99.000000,
      "pop_est": 3802.000000,
      "gdp_md_est": 760.400000,
      "pop_year": -99.000000,
      "lastcensus": -99.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "AQ",
      "iso_a3": "ATA",
      "iso_n3": "010",
      "un_a3": "-099",
      "wb_a2": "-99",
      "wb_a3": "-99",
      "woe_id": -99.000000,
      "adm0_a3_is": "ATA",
      "adm0_a3_us": "ATA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Antarctica",
      "region_un": "Antarctica",
      "subregion": "Antarctica",
      "region_wb": "Antarctica",
      "name_len": 10.000000,
      "long_len": 10.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-59.572094692611529, -80.040178725096297], [-59.865849371974718, -80.549656671061854], [-60.1596557277702, -81.000326837079314], [-62.255393439367083, -80.863177585776654], [-64.488125372969762, -80.921933689292558], [-65.741666429289836, -80.588827406739142], [-65.741666429289836, -80.549656671061854], [-66.29003089055513, -80.25577280061799], [-64.037687750897646, -80.294943536295179], [-61.883245612217138, -80.392870375488286], [-61.138975796133451, -79.9813709451481], [-60.610119188058405, -79.628679294756125], [-59.572094692611529, -80.040178725096297]]], [[[-159.208183560197654, -79.497059421708727], [-161.127601284814659, -79.634208673011301], [-162.439846768218388, -79.281465346187019], [-163.027407803376974, -78.928773695794959], [-163.066604377270323, -78.869965915846763], [-163.712895677728739, -78.595667413241529], [-163.712895677728739, -78.595666605797277], [-163.105800951163815, -78.223337911134294], [-161.245113491846382, -78.380175883140168], [-160.246208055644502, -78.693645121422662], [-159.482404548154477, -79.046337579258989], [-159.208183560197654, -79.497059421708727]]], [[[-45.154757656421026, -78.047069600586738], [-43.920827806155756, -78.478102722333261], [-43.489949713706096, -79.085559991368456], [-43.372437506674373, -79.516644789547271], [-43.333266770997085, -80.026122735512928], [-44.880536668464288, -80.339643650227714], [-46.506173875502014, -80.594356784994318], [-48.386420864441789, -80.829484551922349], [-50.482106899606464, -81.025441583173119], [-52.851988084511788, -80.966685479657301], [-54.164259406131606, -80.633527520671578], [-53.98799109558405, -80.222028090331406], [-51.8531343247422, -79.947729587726087], [-50.991326463410587, -79.614623305172657], [-50.364594692574741, -79.183486830561634], [-49.914131232286508, -78.811209004886692], [-49.306958991073117, -78.458569030926924], [-48.660616014182523, -78.047017924154446], [-48.660616014182523, -78.047018731598683], [-48.1513964503784, -78.047069600586738], [-46.662856818211026, -77.831475525065031], [-45.154757656421026, -78.047069600586738]]], [[[-121.211511393857123, -73.500990499006036], [-119.918851278292053, -73.65772511814734], [-118.724143032691913, -73.481353454735199], [-119.292118700011955, -73.834096781559481], [-120.232217163709976, -74.088809916326156], [-121.622829956684257, -74.010468444971607], [-122.621734585441899, -73.657777602023884], [-122.621735392886137, -73.657776794579632], [-122.406244670229029, -73.32461883559391], [-121.211511393857123, -73.500990499006036]]], [[[-125.559566406895314, -73.481353454735199], [-124.031881877266855, -73.873267517236741], [-124.619468750641531, -73.834096781559481], [-125.912180542638907, -73.736118265934095], [-127.28312964568191, -73.461768894340821], [-127.283130453126162, -73.461768086896569], [-126.558471843097209, -73.246225687807168], [-125.559566406895314, -73.481353454735199]]], [[[-98.981549648823901, -71.933334248999785], [-97.884743211645031, -72.070535176734737], [-96.787936774466232, -71.952971293270707], [-96.200349901091442, -72.521205342752182], [-96.983764614636215, -72.442863871397634], [-98.19808325884685, -72.482034607074922], [-99.432013109112205, -72.442863871397634], [-100.783455166409212, -72.501619974913552], [-101.80186845580134, -72.305662943662782], [-102.330725063876386, -71.894164320766848], [-102.330725063876386, -71.89416351332261], [-101.703967454824436, -71.717791849910384], [-100.4309185453141, -71.854992777645322], [-98.981549648823901, -71.933334248999785]]], [[[-68.451345994730417, -70.955822855766741], [-68.333833787698694, -71.406493021784186], [-68.510127936462425, -71.798407084285728], [-68.784297247986984, -72.170735778948625], [-69.959470994736421, -72.307885030251299], [-71.075888637970138, -72.50384206150207], [-72.388134121373781, -72.484256693663426], [-71.898499925408288, -72.092342631161884], [-73.073621995725432, -72.229491882464544], [-74.190039638959064, -72.366692810199496], [-74.953894822881381, -72.07275726332324], [-75.01262508818121, -71.661257832983068], [-73.915818651002326, -71.269344577925779], [-73.915818651002326, -71.269343770481527], [-73.230330776650561, -71.151779887017511], [-72.074716559523551, -71.190950622694771], [-71.780961880160362, -70.681472676729129], [-71.72217993842844, -70.30919565849851], [-71.741791144483187, -69.505782165656797], [-71.173815477163146, -69.035474955368414], [-70.253251512315728, -68.878740336227196], [-69.72444658067306, -69.251017354457815], [-69.489422166609586, -69.623346049120727], [-69.058518235943808, -70.074016215138187], [-68.725541144471066, -70.505152689749281], [-68.451345994730417, -70.955822855766741]]], [[[-58.614142829000912, -64.152467130133147], [-59.045072597882864, -64.368009529222633], [-59.789342413966551, -64.211223233649051], [-60.611927863188697, -64.309201749274436], [-61.297415737540376, -64.544329516202566], [-62.022100185785433, -64.799094327401363], [-62.511760219966902, -65.093029874277519], [-62.648857794837369, -65.484942321890657], [-62.590127529537739, -65.857219340121361], [-62.120078701410705, -66.190325622674706], [-62.805566575762384, -66.425505066034958], [-63.745690070232371, -66.503846537389592], [-64.294106207929957, -66.837004496375215], [-64.881693081304633, -67.150473734657723], [-65.508424852140564, -67.581610209268916], [-65.665081956633287, -67.95388722749945], [-65.31254533553809, -68.365334981407415], [-64.783714565679333, -68.678907572554493], [-63.961103278241097, -68.913983663050175], [-63.197299770751044, -69.227556254197253], [-62.78595536970775, -69.619418640266503], [-62.570516323482906, -69.991747334929499], [-62.276735805903542, -70.383661397431041], [-61.806661139560589, -70.716767679984471], [-61.512906460197399, -71.089044698215076], [-61.375808885327132, -72.010073750953126], [-61.081976691315532, -72.38235076918383], [-61.003661058177187, -72.774264831685372], [-60.69026933454316, -73.166178894187084], [-60.827366909413428, -73.695242207991186], [-61.375808885327132, -74.106741638331371], [-61.96336992048569, -74.439847920884887], [-63.295200771727963, -74.576997172187376], [-63.745690070232371, -74.929740499011729], [-64.352836473229587, -75.262846781565159], [-65.860987311451765, -75.635123799795778], [-67.192818162694124, -75.791910095369445], [-68.446281704365759, -76.007452494458761], [-69.797723761662837, -76.222994893548176], [-70.600723843046239, -76.634494323888447], [-72.206775682245365, -76.673665059565721], [-73.969536302369676, -76.634494323888447], [-75.555976935514025, -76.712887471675202], [-77.240370246067613, -76.712887471675202], [-76.926978522433586, -77.104801534176744], [-75.399293992804928, -77.281069844724385], [-74.28287634957141, -77.555420023761812], [-73.656118740519446, -77.908111674153957], [-74.772536383753078, -78.221632588868673], [-76.496100429984011, -78.123654073243287], [-77.925858120419264, -78.378418884442254], [-77.984665900367474, -78.789918314782341], [-78.02378495961247, -79.18183318472822], [-76.848637051079123, -79.51493946728165], [-76.633223843070397, -79.887216485512269], [-75.360097418911749, -80.259545180175252], [-73.244851854124619, -80.416331475748763], [-71.442946336539222, -80.690629978353982], [-70.013162807887767, -81.004150893068783], [-68.191646084247537, -81.317671807783569], [-65.704278530526665, -81.47445810335725], [-63.256030036050703, -81.748756605962484], [-61.55202551944231, -82.042692152838541], [-59.691415574773458, -82.375850111824349], [-58.712121344626212, -82.846105645680353], [-58.222487148660917, -83.21843434034335], [-57.008116828017819, -82.865691013519083], [-55.362894253141548, -82.571755466642827], [-53.619770677288244, -82.258234551928041], [-51.543644171746024, -82.003521417161352], [-49.761349860215461, -81.729171238123755], [-47.27393063006221, -81.709585870285295], [-44.825707973802508, -81.84673512158777], [-42.808363409992381, -82.081914564948107], [-42.162020433101787, -81.650829766769291], [-40.771433478343596, -81.356894219893221], [-38.244817674297053, -81.337308852054591], [-36.266669684380219, -81.121714776532983], [-34.386396857224355, -80.906172377443482], [-32.31029618989831, -80.769023126140738], [-30.097097947701997, -80.592651462728696], [-28.549802212018704, -80.337938327962007], [-29.254901292425131, -79.985195001137654], [-29.685805223090966, -79.632503350745679], [-29.685805223090966, -79.260226332514975], [-31.62480831554663, -79.299397068192235], [-33.681323615033961, -79.456131687333453], [-35.639912075328255, -79.456131687333453], [-35.914107225069017, -79.083854669102919], [-35.777009650198721, -78.33924814876498], [-35.326546189910431, -78.123654073243287], [-33.896762661258862, -77.888526306315242], [-32.212369350705302, -77.653450215819575], [-30.99805070649461, -77.359514668943319], [-29.783732062284059, -77.065579122067263], [-28.882779303491361, -76.673665059565721], [-27.511751878355653, -76.497345072585787], [-26.16033565927475, -76.36014414485075], [-25.474821946706868, -76.281802673496287], [-23.927552049239779, -76.242580261386735], [-22.45859778491095, -76.105431010084246], [-21.22469377286177, -75.909473978833475], [-20.010375128651077, -75.67434621190543], [-18.91354285325616, -75.439218444977286], [-17.522981736714172, -75.125697530262499], [-16.641588507544014, -74.792539571276876], [-15.701490851290259, -74.498604024400635], [-15.407710333710867, -74.106741638331371], [-16.465320196996373, -73.871613871403412], [-16.112783575901261, -73.460114441063155], [-15.446855231171952, -73.146541849916076], [-14.408804897508986, -72.950584818665305], [-13.311972622113984, -72.715457051737332], [-12.293507656289563, -72.401936137022545], [-11.510067104528588, -72.010073750953126], [-11.020432908563038, -71.539766540664829], [-10.295774298534155, -71.265416361627302], [-9.101015183946089, -71.324224141575513], [-8.611380987980596, -71.657330424128844], [-7.416621873392415, -71.696501159806033], [-7.377451137715241, -71.324224141575513], [-6.868231573911117, -70.932310079073972], [-5.790984666354774, -71.030288594699272], [-5.53637488445267, -71.402617289362254], [-4.341667446296867, -71.461373392878073], [-3.048981492515594, -71.28505340589814], [-1.795492112627784, -71.167437846001832], [-0.659489101555522, -71.226245625950042], [-0.228636847322065, -71.637745056290299], [0.868195428072937, -71.304638773736784], [1.886686232113533, -71.128267110324742], [3.022637566753417, -70.991117859022069], [4.139055209987049, -70.853916931287046], [5.157546014027673, -70.618789164359086], [6.273911980828927, -70.462054545217796], [7.135719842160626, -70.246512146128381], [7.742866245157842, -69.893768819304029], [8.487110223025326, -70.148533630502996], [9.525134718472202, -70.011332702768215], [10.249845004933434, -70.481639913056512], [10.81782067225339, -70.834331563448501], [11.953823683325652, -70.63837453219773], [12.404287143613942, -70.246512146128381], [13.422777947654396, -69.972161967090955], [14.734997592842006, -70.030918070606774], [15.126756626046586, -70.403246765269756], [15.949342075268646, -70.030918070606774], [17.02658898282516, -69.913354187142744], [18.201711053142333, -69.874183451465484], [19.259372592860046, -69.893768819304029], [20.375738559661471, -70.011332702768215], [21.452985467217815, -70.070140482716255], [21.923034295344735, -70.403246765269756], [22.569403110451447, -70.697182312145827], [23.666183709414213, -70.520810648733701], [24.841357456163593, -70.481639913056512], [25.977308790803647, -70.481639913056512], [27.093726434037279, -70.462054545217796], [28.092580193806867, -70.32485361748293], [29.150241733524581, -70.207289734018985], [30.031583286262531, -69.932939554981289], [30.971732618948607, -69.756619568001454], [31.990171746556854, -69.658641052376069], [32.754052768695288, -69.384290873338458], [33.302443068176757, -68.835642191695712], [33.8704187354966, -68.50258758557456], [34.908494907375854, -68.659270528283486], [35.300202264148226, -69.012013855107938], [36.162010125479782, -69.247141622035969], [37.200034620926573, -69.168748474249043], [37.905107863116797, -69.521440124641202], [38.649403517416914, -69.776204935840184], [39.667894321457339, -69.541077168912039], [40.020430942552565, -69.109940694300946], [40.921357863129089, -68.933620707321182], [41.959434035008229, -68.600514424767667], [42.938702426939102, -68.463313497032715], [44.113876173688624, -68.267408142214236], [44.897290887233424, -68.051865743124921], [45.719928012887834, -67.816737976196777], [46.503342726432635, -67.601195577107461], [47.443440382686305, -67.718759460571476], [48.344418979695121, -67.366067810179416], [48.990736118369597, -67.091717631141904], [49.930885451055673, -67.111302998980449], [50.753470900277733, -66.876175232052404], [50.949324578663919, -66.523483581660429], [51.791547072157044, -66.249133402622903], [52.614132521378934, -66.053176371372132], [53.613037957580815, -65.89639007579855], [54.533550245996054, -65.818048604444002], [55.414943475166211, -65.876804707959906], [56.355041131419881, -65.974783223585376], [57.158092889235689, -66.249133402622903], [57.255968051996462, -66.680218200801633], [58.137361281166619, -67.013324483355149], [58.744507684163949, -67.287674662392675], [59.939318475184251, -67.40523854585669], [60.605220981697443, -67.679588724894217], [61.427806430919333, -67.95388722749945], [62.387489455011661, -68.012695007447547], [63.190489536395233, -67.816737976196777], [64.052349074159025, -67.40523854585669], [64.992446730412922, -67.620729268513713], [65.971715122343966, -67.738344828410035], [66.911864455029757, -67.85590871187415], [67.891132846960915, -67.934301859660806], [68.890038283162909, -67.934301859660806], [69.712623732384742, -68.972791442998371], [69.673452996707482, -69.227556254197253], [69.555940789675816, -69.678226420214713], [68.596257765583488, -69.932939554981289], [67.812739699174159, -70.305268249644286], [67.949888950476662, -70.697182312145827], [69.066306593710266, -70.67754526787499], [68.929157342407763, -71.069459330376532], [68.41998945503596, -71.441788025039529], [67.949888950476662, -71.853287455379615], [68.713769972615154, -72.166808370094415], [69.869306675093952, -72.264786885719801], [71.024895054004588, -72.088415222307759], [71.573285353486057, -71.696501159806033], [71.906288283174916, -71.324224141575513], [72.454626906224036, -71.010703226860628], [73.081410353492089, -70.716767679984471], [73.336020135394193, -70.364024353160204], [73.864876743469239, -69.874183451465484], [74.491556837872707, -69.776204935840184], [75.627559848944969, -69.73703420016281], [76.62646528514685, -69.619418640266503], [77.644904412755267, -69.462684021125298], [78.13453860872059, -69.070769958623757], [78.428370802732246, -68.698441263960675], [79.113858677083925, -68.326215922162433], [80.093127069014855, -68.071502787395758], [80.935349562507753, -67.875545756144987], [81.483791538421457, -67.542387797159265], [82.05176720574147, -67.366067810179416], [82.776425815770409, -67.209281514605919], [83.775331251972403, -67.30726003023122], [84.676206496116635, -67.209281514605919], [85.65552656447997, -67.091717631141904], [86.752358839874859, -67.150473734657723], [87.477017449903798, -66.876175232052404], [87.986288690140242, -66.20991099051335], [88.358410679073955, -66.484261169550862], [88.828407830768555, -66.95456837983923], [89.670630324261566, -67.150473734657723], [90.6303650247863, -67.228866882444464], [91.590099725310807, -67.111302998980449], [92.608538852919054, -67.189696146767204], [93.548636509172951, -67.209281514605919], [94.175419956441004, -67.111302998980449], [95.017590773501666, -67.170110778928645], [95.781471795640272, -67.385653178017975], [96.682398716216795, -67.248503926715486], [97.759645623773139, -67.248503926715486], [98.680209588620556, -67.111302998980449], [99.718182407635055, -67.248503926715486], [100.384188267012775, -66.915345967729678], [100.893356154384691, -66.582239685176248], [101.578895705168549, -66.307889506138636], [102.832410923272647, -65.56328379324512], [103.478676385514774, -65.700484720979972], [104.242557407653095, -65.974783223585376], [104.90845991416623, -66.327526550409658], [106.181560500108759, -66.934931335568393], [107.160880568472095, -66.95456837983923], [108.081392856887163, -66.95456837983923], [109.158639764443677, -66.837004496375215], [110.235834995567842, -66.699803568640363], [111.058472121222081, -66.425505066034958], [111.743959995573931, -66.131569519158887], [112.860377638807478, -66.092347107049321], [113.604673293107368, -65.876804707959906], [114.388088006652055, -66.072761739210677], [114.897307570456263, -66.386282653925477], [115.602380812646544, -66.699803568640363], [116.699161411609424, -66.660632832962989], [117.384700962393225, -66.915345967729678], [118.579460076981292, -67.170110778928645], [119.832923618653098, -67.268089294553945], [120.870999790532181, -67.189696146767204], [121.654414504077096, -66.876175232052404], [122.320368687022352, -66.562654317337689], [123.221295607598933, -66.484261169550862], [124.122274204607635, -66.6214620972859], [125.160247023622247, -66.719388936478907], [126.10039635630838, -66.562654317337689], [127.001426629749318, -66.562654317337689], [127.88276818248724, -66.660632832962989], [128.803280470902422, -66.75861134858846], [129.704259067911181, -66.582239685176248], [130.78145429903546, -66.425505066034958], [131.799945103075885, -66.386282653925477], [132.935896437716139, -66.386282653925477], [133.856460402563386, -66.288304138300091], [134.757387323139909, -66.209962666945628], [135.031582472880729, -65.720070088818616], [135.070753208557818, -65.30857065847843], [135.697484979393579, -65.582869161083664], [135.873804966373513, -66.033591003533417], [136.206704543197787, -66.445090433873673], [136.61804894424111, -66.778196716427018], [137.460271437733951, -66.95456837983923], [138.596222772374148, -66.895760599891133], [139.908442417561474, -66.876175232052404], [140.80942101457029, -66.817367452104378], [142.121692336190193, -66.817367452104378], [143.061841668876156, -66.797782084265663], [144.374061314063709, -66.837004496375215], [145.490427280865021, -66.915345967729678], [146.195552199487821, -67.228866882444464], [145.999698521101521, -67.601195577107461], [146.646067336208233, -67.895131123983703], [147.723262567332341, -68.130258890911662], [148.839628534133709, -68.385023702110544], [150.132314487914897, -68.561292012658186], [151.483704868779597, -68.718129984663975], [152.502247349252485, -68.874812927372986], [153.638198683892568, -68.894501648076101], [154.28456749899928, -68.561292012658186], [155.165857375304853, -68.835642191695712], [155.929790073875466, -69.14921478284279], [156.811131626613388, -69.384290873338458], [158.025527785472406, -69.482269388963942], [159.181012811518741, -69.599833272427958], [159.670698683916527, -69.991747334929499], [160.806650018556496, -70.226875101857544], [161.570479364262809, -70.579618428681812], [162.686897007496356, -70.736353047823201], [163.842433709974927, -70.716767679984471], [164.919680617531213, -70.77552378350029], [166.11443973211945, -70.755938415661745], [167.309095493842989, -70.834331563448501], [168.425616489941177, -70.971480814751061], [169.46358930895596, -71.206660258111398], [170.501665480835044, -71.402617289362254], [171.206790399457617, -71.696501159806033], [171.089226515993772, -72.088415222307759], [170.560421584350735, -72.441158549132112], [170.109958124062388, -72.891828715149387], [169.757369826535154, -73.244520365541547], [169.287320998408319, -73.656019795881633], [167.975101353220765, -73.81280609145513], [167.387488641629744, -74.16549774184719], [166.094802687848443, -74.381040140936605], [165.644390903992445, -74.772954203438147], [164.958851353208587, -75.145282898101229], [164.234192743179705, -75.45880381281593], [163.822796665703919, -75.870303243156201], [163.568238560234278, -76.242580261386735], [163.470260044608978, -76.693302103836558], [163.489897088879758, -77.065579122067263], [164.057872756199771, -77.457441508136426], [164.273363478856965, -77.829770202799324], [164.743463983416149, -78.182513529623776], [166.60412560451735, -78.319611104494058], [166.995781284857429, -78.750747579105251], [165.193875767272033, -78.907483005690693], [163.666217075859578, -79.123025404780023], [161.766384719081117, -79.162247816889675], [160.924162225588333, -79.73048186637098], [160.747893915040748, -80.200737400227155], [160.31696414615871, -80.573066094889967], [159.78821089094842, -80.945394789553049], [161.120015903974405, -81.278501072106479], [161.629287144210906, -81.690000502446566], [162.490991652678048, -82.06227752067727], [163.705336135104773, -82.395435479662893], [165.095948928078855, -82.708956394377779], [166.60412560451735, -83.022477309092579], [168.895665318067955, -83.335998223807366], [169.404781529007579, -83.825890801934378], [172.283933954149376, -84.041433201023708], [172.477048781624177, -84.117914320815672], [173.224083286835395, -84.413710219254412], [175.985671828513119, -84.158997084487638], [178.277211542064066, -84.472517999202438], [180.000000000000142, -84.71338], [180.000000000000142, -90.0], [-180.0, -90.0], [-180.0, -84.71338], [-179.942499356178928, -84.721443373552489], [-179.058677334691197, -84.139411716649093], [-177.256771817105744, -84.452932631363879], [-177.140806673265786, -84.417941227148319], [-176.084672818077593, -84.099259128758419], [-175.947234613627757, -84.110448710216616], [-175.829882168662522, -84.117914320815672], [-174.382502814815695, -84.534323012223567], [-173.116559414745467, -84.117914320815672], [-172.889105598012804, -84.061018568862337], [-169.951222907571434, -83.884646905450126], [-168.999988980158633, -84.117914320815672], [-168.530198534193232, -84.237390232274478], [-167.022099372403318, -84.570496514827909], [-164.182143521155069, -84.825209649594584], [-161.929774543281383, -85.138730564309384], [-158.071379564424944, -85.373910007669707], [-155.192252977499294, -85.09955982863211], [-150.942098965438021, -85.295516859882881], [-148.533072883071497, -85.609037774597667], [-145.888918226332976, -85.31510222772161], [-143.107718478600447, -85.040752048683913], [-142.892279432375631, -84.570496514827909], [-146.829068366463304, -84.531274102718342], [-150.060731574483952, -84.296146335790382], [-150.902928229760732, -83.904232273288841], [-153.586201138300197, -83.688689874199355], [-153.409906989536466, -83.238019708182065], [-153.037759162386408, -82.826520277841809], [-152.665637173452751, -82.454191583178812], [-152.861516690055055, -82.042692152838541], [-154.526298794553895, -81.768393650233321], [-155.290179816692387, -81.415650323409039], [-156.837449714159504, -81.102129408694253], [-154.408786587522229, -81.16093718864245], [-152.097661506132823, -81.004150893068783], [-150.648292609642624, -81.337308852054591], [-148.865998298112061, -81.043373305178335], [-147.220749885019501, -80.671044610515438], [-146.417748996191847, -80.337938327962007], [-146.770286424731182, -79.926438897621921], [-148.062946540296366, -79.652088718584224], [-149.53190080462511, -79.358204848140446], [-151.588416104112412, -79.299397068192235], [-153.390321621697808, -79.162247816889675], [-155.329376390585765, -79.064269301264204], [-155.97566769104418, -78.691939799157041], [-157.268301968393047, -78.378418884442254], [-158.051768358370111, -78.025675557617902], [-158.365134243787963, -76.889207458654951], [-157.875474209606352, -76.987237650712615], [-156.974573127245947, -77.300758565427515], [-155.329376390585765, -77.202728373369752], [-153.742832404576745, -77.065579122067263], [-152.92024695535477, -77.496663920245993], [-151.333780483994303, -77.398737081052801], [-150.001949632751945, -77.183143005531193], [-148.748486091080338, -76.908844502925973], [-147.612483080008076, -76.575738220372529], [-146.104408948989999, -76.477759704747058], [-146.143528008234995, -76.105431010084246], [-146.496091274990476, -75.733153991853541], [-146.202309949967002, -75.380410665029189], [-144.909623996185758, -75.204039001616962], [-144.322037122811082, -75.53719696060277], [-142.794352593182623, -75.341239929352], [-141.638764214271617, -75.086475118152947], [-140.209006523836166, -75.066889750314388], [-138.857590304755348, -74.968911234688917], [-137.506199923890449, -74.733783467760958], [-136.428901339901927, -74.518241068671642], [-135.214582695691291, -74.302698669582142], [-134.431193820362608, -74.361454773097961], [-133.745654269578552, -74.439847920884887], [-132.257167928732059, -74.302698669582142], [-130.925311239273583, -74.47901865656199], [-129.554283814137762, -74.459433288723432], [-128.24203833073426, -74.322284037420701], [-126.890622111653244, -74.420262553046172], [-125.402082479485784, -74.518241068671642], [-124.011495524727607, -74.47901865656199], [-122.562152466453611, -74.498604024400635], [-121.073612834286237, -74.518241068671642], [-119.702559570934227, -74.47901865656199], [-118.684145474097932, -74.185083109685834], [-117.469800991671207, -74.02834849054463], [-116.216311611783411, -74.243890889633946], [-115.021552497195415, -74.06751922622189], [-113.944331427855076, -73.71482757582983], [-113.297988450964482, -74.02834849054463], [-112.94545182986937, -74.381040140936605], [-112.299083014762587, -74.714198099922413], [-111.261058519315625, -74.420262553046172], [-110.066325242943734, -74.792539571276876], [-108.714909023862731, -74.910103454740891], [-107.559346483168113, -75.184453633778418], [-106.149148322355018, -75.125697530262499], [-104.876073574628663, -74.949325866850458], [-103.367948574622659, -74.988496602527647], [-102.016506517325652, -75.125697530262499], [-100.645530768622308, -75.302017517242433], [-100.116699998763266, -74.870932719063532], [-100.763042975653946, -74.537826436510187], [-101.252703009835528, -74.185083109685834], [-102.545337287184509, -74.106741638331371], [-103.113312954504536, -73.734412943668389], [-103.328752000729281, -73.362084249005562], [-103.681288621824393, -72.617530212544153], [-102.917485114334355, -72.754679463846813], [-101.605239630930726, -72.813435567362632], [-100.312527838933448, -72.754679463846813], [-99.137379930400101, -72.911414082988102], [-98.118889126359477, -73.205349629864173], [-97.688036872126105, -73.558041280256333], [-96.336594814828914, -73.616849060204359], [-95.043960537479848, -73.47969980890187], [-93.672907274128107, -73.283742777650929], [-92.439003262078955, -73.166178894187084], [-91.420564134470709, -73.401306661115129], [-90.088733283228436, -73.322913513328203], [-89.226951260112941, -72.558722432595957], [-88.42395117872951, -73.009392598613402], [-87.268336961602614, -73.185764262025629], [-86.01482174349843, -73.087785746400158], [-85.192236294276569, -73.47969980890187], [-83.879990810872755, -73.518870544578974], [-82.66564632844603, -73.636434428043088], [-81.470913052074138, -73.851976827132404], [-80.687446662096988, -73.47969980890187], [-80.295790981756994, -73.126956482077432], [-79.296885545555, -73.518870544578974], [-77.925858120419264, -73.420892028953588], [-76.907367316378753, -73.636434428043088], [-76.221879442027074, -73.969540710596419], [-74.890048590784801, -73.871613871403412], [-73.852024095337924, -73.656019795881633], [-72.833533291297414, -73.401306661115129], [-71.619214647086864, -73.264157409812384], [-70.209042324489957, -73.146541849916076], [-68.935915900331224, -73.009392598613402], [-67.956621670184091, -72.793850199524087], [-67.36906063502559, -72.480329284809301], [-67.134036220962031, -72.049244486630386], [-67.251548427993669, -71.637745056290299], [-67.564940151627894, -71.245830993788758], [-67.917476772723006, -70.853916931287046], [-68.230842658140915, -70.462054545217796], [-68.485452440043019, -70.109311218393515], [-68.544208543558938, -69.717397155891973], [-68.446281704365759, -69.325534769822724], [-67.976232876238896, -68.953206075159727], [-67.584499681250321, -68.54170664481947], [-67.427842576757513, -68.149844258750221], [-67.623670416927695, -67.718759460571476], [-67.741182623959332, -67.326845398069935], [-67.251548427993669, -66.876175232052404], [-66.703183966728574, -66.582239685176248], [-66.056815151621862, -66.209962666945628], [-65.371327277270098, -65.89639007579855], [-64.568275519454403, -65.602506205354672], [-64.176542324465828, -65.171423022064445], [-63.62815202498453, -64.897072843026749], [-63.001394415932566, -64.642308031827866], [-62.041685553623978, -64.583551928311948], [-61.414927944572014, -64.270031013597162], [-60.709854702381705, -64.074073982346391], [-59.887269253159559, -63.956510098882369], [-59.16258480491453, -63.701745287683572], [-58.594557461162282, -63.388224372968601], [-57.811142747617509, -63.270660489504579], [-57.223581712458838, -63.525425300703638], [-57.595729539608868, -63.858531583257069], [-58.614142829000912, -64.152467130133147]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 3,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "France",
      "sov_a3": "FR1",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Dependency",
      "admin": "French Southern and Antarctic Lands",
      "adm0_a3": "ATF",
      "geou_dif": 0.000000,
      "geounit": "French Southern and Antarctic Lands",
      "gu_a3": "ATF",
      "su_dif": 0.000000,
      "subunit": "French Southern and Antarctic Lands",
      "su_a3": "ATF",
      "brk_diff": 0.000000,
      "name": "Fr. S. Antarctic Lands",
      "name_long": "French Southern and Antarctic Lands",
      "brk_a3": "ATF",
      "brk_name": "Fr. S. and Antarctic Lands",
      "brk_group": null,
      "abbrev": "Fr. S.A.L.",
      "postal": "TF",
      "formal_en": "Territory of the French Southern and Antarctic Lands",
      "formal_fr": null,
      "note_adm0": "Fr.",
      "note_brk": null,
      "name_sort": "French Southern and Antarctic Lands",
      "name_alt": null,
      "mapcolor7": 7.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 9.000000,
      "mapcolor13": 11.000000,
      "pop_est": 140.000000,
      "gdp_md_est": 16.000000,
      "pop_year": -99.000000,
      "lastcensus": -99.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "TF",
      "iso_a3": "ATF",
      "iso_n3": "260",
      "un_a3": "-099",
      "wb_a2": "-99",
      "wb_a3": "-99",
      "woe_id": -99.000000,
      "adm0_a3_is": "ATF",
      "adm0_a3_us": "ATF",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Seven seas (open ocean)",
      "region_un": "Seven seas (open ocean)",
      "subregion": "Seven seas (open ocean)",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 22.000000,
      "long_len": 35.000000,
      "abbrev_len": 10.000000,
      "tiny": 2.000000,
      "homepart": -99.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[68.935, -48.625], [69.58, -48.94], [70.525, -49.065], [70.56, -49.255], [70.28, -49.71], [68.745, -49.775], [68.72, -49.2425], [68.8675, -48.83], [68.935, -48.625]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Australia",
      "sov_a3": "AU1",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Country",
      "admin": "Australia",
      "adm0_a3": "AUS",
      "geou_dif": 0.000000,
      "geounit": "Australia",
      "gu_a3": "AUS",
      "su_dif": 0.000000,
      "subunit": "Australia",
      "su_a3": "AUS",
      "brk_diff": 0.000000,
      "name": "Australia",
      "name_long": "Australia",
      "brk_a3": "AUS",
      "brk_name": "Australia",
      "brk_group": null,
      "abbrev": "Auz.",
      "postal": "AU",
      "formal_en": "Commonwealth of Australia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Australia",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 7.000000,
      "pop_est": 21262641.000000,
      "gdp_md_est": 800200.000000,
      "pop_year": -99.000000,
      "lastcensus": 2006.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "AU",
      "iso_a3": "AUS",
      "iso_n3": "036",
      "un_a3": "036",
      "wb_a2": "AU",
      "wb_a3": "AUS",
      "woe_id": -99.000000,
      "adm0_a3_is": "AUS",
      "adm0_a3_us": "AUS",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Oceania",
      "region_un": "Oceania",
      "subregion": "Australia and New Zealand",
      "region_wb": "East Asia & Pacific",
      "name_len": 9.000000,
      "long_len": 9.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[145.397978143494839, -40.792548516605891], [146.364120721623721, -41.137695407883342], [146.908583612250851, -41.000546156580683], [147.689259474884153, -40.808258152022688], [148.289067824496016, -40.87543751400213], [148.359864536735842, -42.062445163746446], [148.017301467073111, -42.407023614268624], [147.914051955353813, -43.211522312188492], [147.564564243764011, -42.937688897473862], [146.870343052354968, -43.634597263362096], [146.663327264593676, -43.580853773778557], [146.048377720320417, -43.549744561538887], [145.431929559510564, -42.693776137056275], [145.295090366801702, -42.033609714527557], [144.718071323830628, -41.162551771815714], [144.743754510679679, -40.703975111657712], [145.397978143494839, -40.792548516605891]]], [[[143.561811151299963, -13.763655694232213], [143.922099237238939, -14.548310642152003], [144.563713820574861, -14.171176039285882], [144.894908075133543, -14.594457696188627], [145.374723748963476, -14.984976495018287], [145.271991001567272, -15.428205254785695], [145.485259637635778, -16.285672295804773], [145.637033319276981, -16.784918308176614], [145.8889042502677, -16.90692636481765], [146.160308872664501, -17.761654554925244], [146.06367394427869, -18.280072523677319], [146.387478469019612, -18.958274021075908], [147.471081577747924, -19.480722751546679], [148.177601760042506, -19.955939222902771], [148.848413527623251, -20.391209812097259], [148.717465448195611, -20.633468926681516], [149.289420200802084, -21.260510756111103], [149.678337030230665, -22.342511895438392], [150.077382440388618, -22.122783705333319], [150.482939081015189, -22.556142266533016], [150.727265252891215, -22.402404880464658], [150.899554478152282, -23.462236830338682], [151.60917524638424, -24.076256198830762], [152.073539666959078, -24.457886651306197], [152.855197381805937, -25.267501316023015], [153.13616214417678, -26.07117319102619], [153.161948683890415, -26.641319268502443], [153.092908970348589, -27.26029957449451], [153.569469028944212, -28.110066827102102], [153.512108189100246, -28.995077406532758], [153.339095493787084, -29.458201592732451], [153.069241164358885, -30.350240166954819], [153.089601678681817, -30.923641859665452], [152.891577590139406, -31.640445651985956], [152.450002476205356, -32.550002536755244], [151.709117466436822, -33.041342054986345], [151.343971795862416, -33.816023451473853], [151.01055545471516, -34.310360202777886], [150.714139439089053, -35.17345997491681], [150.328219842733262, -35.67187916437193], [150.075212030232279, -36.420205580390515], [149.946124302367167, -37.109052422841231], [149.997283970336156, -37.425260512035138], [149.423882277625552, -37.77268116633347], [148.304622430615922, -37.809061374666882], [147.381733026315288, -38.21921721776755], [146.922122837511353, -38.606532077795123], [146.317921991154805, -39.03575652441144], [145.489652134380577, -38.59376799901905], [144.876976353128185, -38.417448012039117], [145.03221235573298, -37.896187839510986], [144.485682407814039, -38.085323581699271], [143.609973586196105, -38.809465427405328], [142.745426873952994, -38.538267510737526], [142.178329705982009, -38.380034275059842], [141.606581659104705, -38.308514092767879], [140.63857872941324, -38.019332777662555], [139.992158237874349, -37.402936293285109], [139.806588169514072, -36.643602797188279], [139.574147577065247, -36.138362318670673], [139.082808058834104, -35.732754001611781], [138.120747918856324, -35.612296237939404], [138.449461704665026, -35.127261244447894], [138.207564325106688, -34.384722588845932], [137.719170363516156, -35.076825046531027], [136.829405552314739, -35.260534763328621], [137.352371047108505, -34.7073385556441], [137.503886346588359, -34.130267836240776], [137.890116001537677, -33.640478610978334], [137.81032759007914, -32.900007012668112], [136.996837192940376, -33.752771498348636], [136.37206912653167, -34.094766127256193], [135.989043410384369, -34.890118096660487], [135.208212518454133, -34.478670342752608], [135.239218377829189, -33.947953383114978], [134.613416782774635, -33.222778008763143], [134.085903761939136, -32.848072198214766], [134.273902622617044, -32.617233575166964], [132.990776808809841, -32.011224053680195], [132.288080682504898, -31.982646986622768], [131.326330601120929, -31.495803318001052], [129.535793898639696, -31.590422865527486], [128.240937534702226, -31.948488864877859], [127.102867466338324, -32.282266941051049], [126.148713820501172, -32.215966078420607], [125.088623488465629, -32.728751316052836], [124.221647983904944, -32.959486586236068], [124.028946567888539, -33.483847344701715], [123.659666782730739, -33.890179131812729], [122.811036411633637, -33.914467054989842], [122.183064406422858, -34.003402194964224], [121.299190708502607, -33.821036065406133], [120.580268182458127, -33.930176690406626], [119.89369510302825, -33.976065362281815], [119.29889936734881, -34.509366143533967], [119.00734093635802, -34.464149265278536], [118.505717808100798, -34.7468193499151], [118.024971958489544, -35.064732761374714], [117.295507440257467, -35.025458672832869], [116.625109084134948, -35.025096937806836], [115.564346958479717, -34.386427911111554], [115.026808709779544, -34.196517022438925], [115.048616164206777, -33.623425388322033], [115.545123325667106, -33.487257989232958], [115.714673700016675, -33.259571628554951], [115.679378696761404, -32.900368747694131], [115.801645135563973, -32.205062351207033], [115.689610630355133, -31.612437025683789], [115.160909051576965, -30.601594333622458], [114.997043084779449, -30.030724786094169], [115.040037876446291, -29.461095472940798], [114.641974318502008, -28.810230808224716], [114.616497837382184, -28.516398614213045], [114.173579136208474, -28.118076674107328], [114.048883905088161, -27.334765313427127], [113.477497593236905, -26.543134047147902], [113.338953078262506, -26.116545098578484], [113.778357782040274, -26.549025160429181], [113.440962355606615, -25.621278171493159], [113.936901076311671, -25.911234633082884], [114.232852004047317, -26.298446140245872], [114.216160516417034, -25.786281019801109], [113.721255324357713, -24.998938897402127], [113.625343866024053, -24.683971042583153], [113.393523390762681, -24.384764499613269], [113.502043898575636, -23.806350192970257], [113.706992629045175, -23.560215345964068], [113.843418410295698, -23.059987481378741], [113.7365515483161, -22.475475355725379], [114.149756300921894, -21.755881036061012], [114.225307244932679, -22.517488295178637], [114.647762078918703, -21.829519952076907], [115.460167270979326, -21.495173435148544], [115.947372674627019, -21.068687839443712], [116.711615431791557, -20.70168181730682], [117.166316359527713, -20.623598728113805], [117.441545037914267, -20.746898695562166], [118.22955895393298, -20.374208265873236], [118.836085239742744, -20.263310642174829], [118.987807244951767, -20.044202569257322], [119.252493931150667, -19.952941989829839], [119.805225050944586, -19.976506442954985], [120.856220330896662, -19.683707777589191], [121.399856398607227, -19.239755547769732], [121.655137974129076, -18.705317885007133], [122.241665480641785, -18.197648614171769], [122.286623976735683, -17.798603204013915], [122.312772251475423, -17.254967136303449], [123.012574497571933, -16.405199883695857], [123.433789097183052, -17.268558037996229], [123.859344517106621, -17.069035332917252], [123.503242222183275, -16.596506036040367], [123.817073195491929, -16.111316013251994], [124.258286574399875, -16.327943617419564], [124.379726190285822, -15.567059828353976], [124.926152785340065, -15.075100192935324], [125.167275018413903, -14.680395603090005], [125.670086704613851, -14.510070082256021], [125.685796340030521, -14.230655612853838], [126.12514936737611, -14.347340996968953], [126.142822707219892, -14.095986830301214], [126.582589146023764, -13.952791436420412], [127.065867140817346, -13.817967624570926], [127.804633416861947, -14.276906019755046], [128.359689976108967, -14.869169610252257], [128.985543247595928, -14.875990899314743], [129.621473423379626, -14.969783623924556], [129.409600050983016, -14.420669854391036], [129.888640578328619, -13.618703301653483], [130.339465773642956, -13.357375583553477], [130.183506300986011, -13.107520033422304], [130.617795037966999, -12.536392103732467], [131.223494500860028, -12.183648776908115], [131.735091180549517, -12.302452894747162], [132.575298293183124, -12.114040622611014], [132.55721154188106, -11.603012383676685], [131.824698114143672, -11.273781833545101], [132.357223748911423, -11.128519382372644], [133.019560581596437, -11.376411228076847], [133.550845981989056, -11.786515394745138], [134.393068475482011, -12.042365411022175], [134.67863244032705, -11.941182956594702], [135.298491245668032, -12.248606052299053], [135.882693312727639, -11.962266940969798], [136.258380975489473, -12.049341729381609], [136.492475213771655, -11.857208754120393], [136.951620314685016, -12.351958916882737], [136.685124953355768, -12.887223402562057], [136.305406528875125, -13.291229750219898], [135.961758254134139, -13.324509372615893], [136.077616815332561, -13.724278252825783], [135.783836297753254, -14.223989353088214], [135.428664178611228, -14.7154322241839], [135.500184360903205, -14.997740573794431], [136.295174595281395, -15.550264987859123], [137.065360142159506, -15.870762220933358], [137.580470819244823, -16.215082289294088], [138.303217401278999, -16.807604261952662], [138.585164015863398, -16.806622409739177], [139.108542922115504, -17.062679131745369], [139.260574985918225, -17.371600843986187], [140.215245396078302, -17.710804945550066], [140.87546349503927, -17.369068698803943], [141.071110467696286, -16.832047214426723], [141.274095493738827, -16.388870131091608], [141.398222284103809, -15.840531508042588], [141.702183058844668, -15.044921156476931], [141.563380161708693, -14.56133310308951], [141.635520461188122, -14.270394789286286], [141.519868605718983, -13.698078301653808], [141.650920038011037, -12.944687595270565], [141.842691278246235, -12.74154753993119], [141.686990187750808, -12.407614434461138], [141.928629185147571, -11.877465915578782], [142.118488397388006, -11.328042087451621], [142.143706496346368, -11.042736504768143], [142.515260044524979, -10.668185723516643], [142.797310011974076, -11.157354831591519], [142.866763136974299, -11.784706719614931], [143.115946893485699, -11.905629571177911], [143.158631626558787, -12.325655612846191], [143.522123651299893, -12.834358412327433], [143.597157830987697, -13.400422051652598], [143.561811151299963, -13.763655694232213]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Austria",
      "sov_a3": "AUT",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Austria",
      "adm0_a3": "AUT",
      "geou_dif": 0.000000,
      "geounit": "Austria",
      "gu_a3": "AUT",
      "su_dif": 0.000000,
      "subunit": "Austria",
      "su_a3": "AUT",
      "brk_diff": 0.000000,
      "name": "Austria",
      "name_long": "Austria",
      "brk_a3": "AUT",
      "brk_name": "Austria",
      "brk_group": null,
      "abbrev": "Aust.",
      "postal": "A",
      "formal_en": "Republic of Austria",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Austria",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 4.000000,
      "pop_est": 8210281.000000,
      "gdp_md_est": 329500.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "AT",
      "iso_a3": "AUT",
      "iso_n3": "040",
      "un_a3": "040",
      "wb_a2": "AT",
      "wb_a3": "AUT",
      "woe_id": -99.000000,
      "adm0_a3_is": "AUT",
      "adm0_a3_us": "AUT",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Western Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[16.979666782304037, 48.123497015976305], [16.903754103267261, 47.714865627628328], [16.340584344150415, 47.71290192320123], [16.534267612380376, 47.496170966169117], [16.202298211337364, 46.852385972676963], [16.011663852612656, 46.683610744811702], [15.137091912504985, 46.65870270444703], [14.632471551174829, 46.431817328469549], [13.806475457421527, 46.509306138691215], [12.376485223040817, 46.76755910906985], [12.153088006243054, 47.115393174826451], [11.164827915093269, 46.941579494812729], [11.048555942436536, 46.751358547546339], [10.442701450246631, 46.893546250997431], [9.932448357796659, 46.920728054382963], [9.479969516649021, 47.102809963563374], [9.632931756232978, 47.347601223329988], [9.59422610844635, 47.52505809182027], [9.89606814946319, 47.580196845075704], [10.402083774465211, 47.302487697939164], [10.544504021861627, 47.566399237653769], [11.426414015354737, 47.523766181012974], [12.141357456112788, 47.703083401065776], [12.620759718484493, 47.672387600284409], [12.932626987365948, 47.467645575543997], [13.025851271220491, 47.637583523135831], [12.884102817443903, 48.289145819687917], [13.243357374737, 48.416114813829054], [13.595945672264437, 48.877171942737149], [14.338897739324722, 48.555305284207208], [14.901447381254057, 48.964401760445824], [15.253415561593982, 49.039074205107582], [16.029647251050221, 48.73389903420793], [16.499282667718774, 48.785808010445109], [16.960288120194576, 48.5969823268506], [16.879982944413001, 48.47001333270947], [16.979666782304037, 48.123497015976305]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Azerbaijan",
      "sov_a3": "AZE",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Azerbaijan",
      "adm0_a3": "AZE",
      "geou_dif": 0.000000,
      "geounit": "Azerbaijan",
      "gu_a3": "AZE",
      "su_dif": 0.000000,
      "subunit": "Azerbaijan",
      "su_a3": "AZE",
      "brk_diff": 0.000000,
      "name": "Azerbaijan",
      "name_long": "Azerbaijan",
      "brk_a3": "AZE",
      "brk_name": "Azerbaijan",
      "brk_group": null,
      "abbrev": "Aze.",
      "postal": "AZ",
      "formal_en": "Republic of Azerbaijan",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Azerbaijan",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 8.000000,
      "pop_est": 8238672.000000,
      "gdp_md_est": 77610.000000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "AZ",
      "iso_a3": "AZE",
      "iso_n3": "031",
      "un_a3": "031",
      "wb_a2": "AZ",
      "wb_a3": "AZE",
      "woe_id": -99.000000,
      "adm0_a3_is": "AZE",
      "adm0_a3_us": "AZE",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Europe & Central Asia",
      "name_len": 10.000000,
      "long_len": 10.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[45.001987339056797, 39.740003567049598], [45.298144972521442, 39.471751207022436], [45.739978468617011, 39.473999131827156], [45.735379266143099, 39.3197191432198], [46.143623081248819, 38.741201483712217], [45.457721795438744, 38.874139105783115], [44.952688022650278, 39.335764675446427], [44.793989699082005, 39.713002631177034], [45.001987339056797, 39.740003567049598]]], [[[47.373315464066224, 41.219732367511256], [47.815665724484717, 41.151416124021353], [47.98728315612604, 41.40581920019423], [48.58435265482629, 41.808869533854676], [49.110263706260668, 41.282286688800525], [49.618914829309603, 40.572924302729973], [50.0848295428531, 40.526157131505784], [50.392821079312711, 40.256561184239104], [49.569202101444802, 40.176100979160708], [49.395259230350433, 39.399481716462248], [49.223228387250714, 39.049218858387917], [48.856532423707591, 38.815486355131782], [48.883249139202547, 38.320245266262646], [48.634375441284845, 38.270377509100939], [48.010744256386516, 38.794014797514535], [48.355529412637935, 39.288764960276893], [48.06009524922527, 39.582235419262446], [47.685079380083124, 39.508363959301192], [46.505719842317973, 38.770605373686266], [46.483498976432458, 39.464154771475535], [46.034534132680704, 39.628020738273051], [45.610012241402927, 39.899993801425182], [45.891907179555147, 40.218475653639985], [45.35917483905817, 40.561503811193489], [45.560351189970476, 40.812289537105954], [45.179495883979399, 40.985353908851437], [44.972480096218163, 41.24812856705563], [45.217426385281641, 41.411451931314048], [45.962600538930445, 41.123872585609803], [46.501637404166985, 41.064444688474111], [46.637908156120574, 41.181672675128226], [46.145431756378997, 41.722802435872637], [46.404950799348825, 41.860675157227348], [46.686070591016659, 41.827137152669906], [47.373315464066224, 41.219732367511256]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Burundi",
      "sov_a3": "BDI",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Burundi",
      "adm0_a3": "BDI",
      "geou_dif": 0.000000,
      "geounit": "Burundi",
      "gu_a3": "BDI",
      "su_dif": 0.000000,
      "subunit": "Burundi",
      "su_a3": "BDI",
      "brk_diff": 0.000000,
      "name": "Burundi",
      "name_long": "Burundi",
      "brk_a3": "BDI",
      "brk_name": "Burundi",
      "brk_group": null,
      "abbrev": "Bur.",
      "postal": "BI",
      "formal_en": "Republic of Burundi",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Burundi",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 8.000000,
      "pop_est": 8988091.000000,
      "gdp_md_est": 3102.000000,
      "pop_year": -99.000000,
      "lastcensus": 2008.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BI",
      "iso_a3": "BDI",
      "iso_n3": "108",
      "un_a3": "108",
      "wb_a2": "BI",
      "wb_a3": "BDI",
      "woe_id": -99.000000,
      "adm0_a3_is": "BDI",
      "adm0_a3_us": "BDI",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[29.339997592900346, -4.499983412294092], [29.276383904749053, -3.293907159034063], [29.024926385216787, -2.839257907730158], [29.632176141078588, -2.917857761246097], [29.938359002407939, -2.348486830254238], [30.469696079232989, -2.413857517103459], [30.527677036264464, -2.807631931167535], [30.743012729624699, -3.034284763199686], [30.752262811004954, -3.35932952231557], [30.505559523243566, -3.568567396665365], [30.11633263522117, -4.090137627787243], [29.753512404099922, -4.452389418153281], [29.339997592900346, -4.499983412294092]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Belgium",
      "sov_a3": "BEL",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Belgium",
      "adm0_a3": "BEL",
      "geou_dif": 0.000000,
      "geounit": "Belgium",
      "gu_a3": "BEL",
      "su_dif": 0.000000,
      "subunit": "Belgium",
      "su_a3": "BEL",
      "brk_diff": 0.000000,
      "name": "Belgium",
      "name_long": "Belgium",
      "brk_a3": "BEL",
      "brk_name": "Belgium",
      "brk_group": null,
      "abbrev": "Belg.",
      "postal": "B",
      "formal_en": "Kingdom of Belgium",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Belgium",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 8.000000,
      "pop_est": 10414336.000000,
      "gdp_md_est": 389300.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BE",
      "iso_a3": "BEL",
      "iso_n3": "056",
      "un_a3": "056",
      "wb_a2": "BE",
      "wb_a3": "BEL",
      "woe_id": -99.000000,
      "adm0_a3_is": "BEL",
      "adm0_a3_us": "BEL",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Western Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[3.314971144228537, 51.345780951536085], [4.047071160507528, 51.26725861266857], [4.973991326526914, 51.475023708698131], [5.606975945670001, 51.037298488969782], [6.15665815595878, 50.803721015010581], [6.043073357781111, 50.128051662794235], [5.782417433300907, 50.09032786722122], [5.674051954784829, 49.529483547557504], [4.79922163251581, 49.985373033236385], [4.286022983425084, 49.907496649772554], [3.588184441755686, 50.378992418003577], [3.123251580425801, 50.780363267614575], [2.658422071960274, 50.796848049515745], [2.513573032246143, 51.148506171261829], [3.314971144228537, 51.345780951536085]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Benin",
      "sov_a3": "BEN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Benin",
      "adm0_a3": "BEN",
      "geou_dif": 0.000000,
      "geounit": "Benin",
      "gu_a3": "BEN",
      "su_dif": 0.000000,
      "subunit": "Benin",
      "su_a3": "BEN",
      "brk_diff": 0.000000,
      "name": "Benin",
      "name_long": "Benin",
      "brk_a3": "BEN",
      "brk_name": "Benin",
      "brk_group": null,
      "abbrev": "Benin",
      "postal": "BJ",
      "formal_en": "Republic of Benin",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Benin",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 12.000000,
      "pop_est": 8791832.000000,
      "gdp_md_est": 12830.000000,
      "pop_year": -99.000000,
      "lastcensus": 2002.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BJ",
      "iso_a3": "BEN",
      "iso_n3": "204",
      "un_a3": "204",
      "wb_a2": "BJ",
      "wb_a3": "BEN",
      "woe_id": -99.000000,
      "adm0_a3_is": "BEN",
      "adm0_a3_us": "BEN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.691701694356254, 6.258817246928629], [1.865240512712319, 6.142157701029731], [1.618950636409238, 6.832038072126238], [1.664477573258381, 9.128590399609379], [1.46304284018467, 9.334624335157088], [1.425060662450136, 9.825395412633], [1.077795037448738, 10.175606594275024], [0.772335646171484, 10.470808213742359], [0.899563022474069, 10.99733938236426], [1.243469679376489, 11.110510769083461], [1.447178175471066, 11.547719224488858], [1.935985548519881, 11.641150214072553], [2.154473504249921, 11.940150051313339], [2.49016360841793, 12.233052069543675], [2.848643019226671, 12.235635891158267], [3.611180454125559, 11.660167141155968], [3.572216424177469, 11.32793935795152], [3.797112257511714, 10.734745591673105], [3.600070021182802, 10.332186184119408], [3.705438266625919, 10.063210354040208], [3.220351596702101, 9.444152533399702], [2.912308383810256, 9.137607937044322], [2.723792758809509, 8.506845404489709], [2.74906253420022, 7.870734361192888], [2.691701694356254, 6.258817246928629]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Burkina Faso",
      "sov_a3": "BFA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Burkina Faso",
      "adm0_a3": "BFA",
      "geou_dif": 0.000000,
      "geounit": "Burkina Faso",
      "gu_a3": "BFA",
      "su_dif": 0.000000,
      "subunit": "Burkina Faso",
      "su_a3": "BFA",
      "brk_diff": 0.000000,
      "name": "Burkina Faso",
      "name_long": "Burkina Faso",
      "brk_a3": "BFA",
      "brk_name": "Burkina Faso",
      "brk_group": null,
      "abbrev": "B.F.",
      "postal": "BF",
      "formal_en": "Burkina Faso",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Burkina Faso",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 11.000000,
      "pop_est": 15746232.000000,
      "gdp_md_est": 17820.000000,
      "pop_year": -99.000000,
      "lastcensus": 2006.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BF",
      "iso_a3": "BFA",
      "iso_n3": "854",
      "un_a3": "854",
      "wb_a2": "BF",
      "wb_a3": "BFA",
      "woe_id": -99.000000,
      "adm0_a3_is": "BFA",
      "adm0_a3_us": "BFA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 12.000000,
      "long_len": 12.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-2.827496303712707, 9.642460842319778], [-3.511898972986273, 9.90032623945622], [-3.980449184576685, 9.8623440617217], [-4.330246954760383, 9.610834865757141], [-4.779883592131966, 9.821984768101743], [-4.954653286143099, 10.152713934769736], [-5.404341599946974, 10.370736802609146], [-5.470564947929006, 10.951269842976048], [-5.197842576508648, 11.37514577885014], [-5.220941941743121, 11.713858954307227], [-4.427166103523803, 12.542645575404295], [-4.28040503581488, 13.228443508349741], [-4.006390753587226, 13.472485459848116], [-3.522802700199861, 13.337661647998615], [-3.10370683431276, 13.541266791228594], [-2.967694464520577, 13.79815033615151], [-2.191824510090385, 14.246417548067356], [-2.001035122068771, 14.559008287000893], [-1.066363491205664, 14.973815009007765], [-0.515854458000348, 15.116157741755728], [-0.26625729003058, 14.924308986872148], [0.374892205414682, 14.92890818934613], [0.295646396495101, 14.444234930880654], [0.429927605805517, 13.988733018443924], [0.993045688490071, 13.335749620003824], [1.024103224297477, 12.851825669806574], [2.177107781593776, 12.625017808477535], [2.154473504249921, 11.940150051313339], [1.935985548519881, 11.641150214072553], [1.447178175471066, 11.547719224488858], [1.243469679376489, 11.110510769083461], [0.899563022474069, 10.99733938236426], [0.023802524423701, 11.018681748900804], [-0.438701544588582, 11.098340969278722], [-0.761575893548183, 10.936929633015055], [-1.203357713211432, 11.009819240762738], [-2.940409308270461, 10.962690334512558], [-2.963896246747112, 10.395334784380083], [-2.827496303712707, 9.642460842319778]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Bangladesh",
      "sov_a3": "BGD",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Bangladesh",
      "adm0_a3": "BGD",
      "geou_dif": 0.000000,
      "geounit": "Bangladesh",
      "gu_a3": "BGD",
      "su_dif": 0.000000,
      "subunit": "Bangladesh",
      "su_a3": "BGD",
      "brk_diff": 0.000000,
      "name": "Bangladesh",
      "name_long": "Bangladesh",
      "brk_a3": "BGD",
      "brk_name": "Bangladesh",
      "brk_group": null,
      "abbrev": "Bang.",
      "postal": "BD",
      "formal_en": "People's Republic of Bangladesh",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Bangladesh",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 7.000000,
      "mapcolor13": 7.000000,
      "pop_est": 156050883.000000,
      "gdp_md_est": 224000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BD",
      "iso_a3": "BGD",
      "iso_n3": "050",
      "un_a3": "050",
      "wb_a2": "BD",
      "wb_a3": "BGD",
      "woe_id": -99.000000,
      "adm0_a3_is": "BGD",
      "adm0_a3_us": "BGD",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Southern Asia",
      "region_wb": "South Asia",
      "name_len": 10.000000,
      "long_len": 10.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[92.672720981825563, 22.041238918541254], [92.65225711463799, 21.324047552978485], [92.303234490938678, 21.475485337809818], [92.36855350135562, 20.670883287025347], [92.082886183646139, 21.19219513598577], [92.02521528520839, 21.701569729086767], [91.834890985077436, 22.182935695885565], [91.41708702999766, 22.765019029221222], [90.496006300827275, 22.805016587815128], [90.586956821660976, 22.392793687422866], [90.272970819055558, 21.836367702720111], [89.847467075564282, 22.039146023033425], [89.702049595094934, 21.857115790285306], [89.418862746135488, 21.966178900637299], [89.031961297566227, 22.055708319582976], [88.876311883503092, 22.87914642993783], [88.529769728553788, 23.631141872649167], [88.699940220090923, 24.23371491138856], [88.084422235062419, 24.501657212821925], [88.306372511756024, 24.866079413344206], [88.931553989623083, 25.238692328384776], [88.209789259802506, 25.768065700782714], [88.563049350949768, 26.446525580342723], [89.35509402868729, 26.014407253518073], [89.832480910199621, 25.965082098895479], [89.920692580121852, 25.269749864192178], [90.872210727912119, 25.132600612889547], [91.79959598182208, 25.147431748957317], [92.376201613334814, 24.976692816664965], [91.915092807994426, 24.130413723237112], [91.467729933643682, 24.072639471934792], [91.158963250699728, 23.503526923104388], [91.706475050832111, 22.985263983649187], [91.869927606171316, 23.624346421802784], [92.146034783906813, 23.627498684172593], [92.672720981825563, 22.041238918541254]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Bulgaria",
      "sov_a3": "BGR",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Bulgaria",
      "adm0_a3": "BGR",
      "geou_dif": 0.000000,
      "geounit": "Bulgaria",
      "gu_a3": "BGR",
      "su_dif": 0.000000,
      "subunit": "Bulgaria",
      "su_a3": "BGR",
      "brk_diff": 0.000000,
      "name": "Bulgaria",
      "name_long": "Bulgaria",
      "brk_a3": "BGR",
      "brk_name": "Bulgaria",
      "brk_group": null,
      "abbrev": "Bulg.",
      "postal": "BG",
      "formal_en": "Republic of Bulgaria",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Bulgaria",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 8.000000,
      "pop_est": 7204687.000000,
      "gdp_md_est": 93750.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BG",
      "iso_a3": "BGR",
      "iso_n3": "100",
      "un_a3": "100",
      "wb_a2": "BG",
      "wb_a3": "BGR",
      "woe_id": -99.000000,
      "adm0_a3_is": "BGR",
      "adm0_a3_us": "BGR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Eastern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[22.657149692482989, 44.234923000661283], [22.944832391051847, 43.82378530534713], [23.332302280376325, 43.897010809904714], [24.100679152124172, 43.741051337247853], [25.569271681426926, 43.688444729174719], [26.065158725699746, 43.943493760751267], [27.242399529740908, 44.175986029632405], [27.970107049275075, 43.812468166675217], [28.558081495891997, 43.707461656258133], [28.039095086384719, 43.293171698574184], [27.673897739378049, 42.577892361006221], [27.99672041190539, 42.007358710287789], [27.13573937349048, 42.141484890301342], [26.1170418637208, 41.826904608724561], [26.106138136507212, 41.32889883072778], [25.197201368925448, 41.23448598893053], [24.492644891058035, 41.583896185872035], [23.692073601992348, 41.309080918943856], [22.952377150166452, 41.337993882811148], [22.881373732197432, 41.999297186850256], [22.380525750424592, 42.320259507815088], [22.545011834409621, 42.46136200618804], [22.43659467946128, 42.580321153323936], [22.604801466571331, 42.898518785161144], [22.986018507588483, 43.211161200526966], [22.50015669118028, 43.642814439460992], [22.410446404721597, 44.008063462899955], [22.657149692482989, 44.234923000661283]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "The Bahamas",
      "sov_a3": "BHS",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "The Bahamas",
      "adm0_a3": "BHS",
      "geou_dif": 0.000000,
      "geounit": "The Bahamas",
      "gu_a3": "BHS",
      "su_dif": 0.000000,
      "subunit": "The Bahamas",
      "su_a3": "BHS",
      "brk_diff": 0.000000,
      "name": "Bahamas",
      "name_long": "Bahamas",
      "brk_a3": "BHS",
      "brk_name": "Bahamas",
      "brk_group": null,
      "abbrev": "Bhs.",
      "postal": "BS",
      "formal_en": "Commonwealth of the Bahamas",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Bahamas, The",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 5.000000,
      "pop_est": 309156.000000,
      "gdp_md_est": 9093.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BS",
      "iso_a3": "BHS",
      "iso_n3": "044",
      "un_a3": "044",
      "wb_a2": "BS",
      "wb_a3": "BHS",
      "woe_id": -99.000000,
      "adm0_a3_is": "BHS",
      "adm0_a3_us": "BHS",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Caribbean",
      "region_wb": "Latin America & Caribbean",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-77.53466, 23.75975], [-77.78, 23.71], [-78.03405, 24.28615], [-78.40848, 24.57564], [-78.19087, 25.2103], [-77.89, 25.17], [-77.54, 24.34], [-77.53466, 23.75975]]], [[[-77.82, 26.58], [-78.91, 26.42], [-78.98, 26.79], [-78.51, 26.87], [-77.85, 26.84], [-77.82, 26.58]]], [[[-77.0, 26.59], [-77.17255, 25.87918], [-77.35641, 26.00735], [-77.34, 26.53], [-77.78802, 26.92516], [-77.79, 27.04], [-77.0, 26.59]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Bosnia and Herzegovina",
      "sov_a3": "BIH",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Bosnia and Herzegovina",
      "adm0_a3": "BIH",
      "geou_dif": 0.000000,
      "geounit": "Bosnia and Herzegovina",
      "gu_a3": "BIH",
      "su_dif": 0.000000,
      "subunit": "Bosnia and Herzegovina",
      "su_a3": "BIH",
      "brk_diff": 0.000000,
      "name": "Bosnia and Herz.",
      "name_long": "Bosnia and Herzegovina",
      "brk_a3": "BIH",
      "brk_name": "Bosnia and Herz.",
      "brk_group": null,
      "abbrev": "B.H.",
      "postal": "BiH",
      "formal_en": "Bosnia and Herzegovina",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Bosnia and Herzegovina",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 2.000000,
      "pop_est": 4613414.000000,
      "gdp_md_est": 29700.000000,
      "pop_year": -99.000000,
      "lastcensus": 1991.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BA",
      "iso_a3": "BIH",
      "iso_n3": "070",
      "un_a3": "070",
      "wb_a2": "BA",
      "wb_a3": "BIH",
      "woe_id": -99.000000,
      "adm0_a3_is": "BIH",
      "adm0_a3_us": "BIH",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Southern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 16.000000,
      "long_len": 22.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[19.005486281010121, 44.860233669609158], [19.36803, 44.863], [19.11761, 44.423070000000109], [19.59976, 44.03847], [19.454, 43.568100000000129], [19.21852, 43.52384], [19.03165, 43.43253], [18.70648, 43.20011], [18.56, 42.65], [17.674921502358984, 43.02856252702361], [17.297373488034452, 43.446340643887368], [16.916156447017329, 43.66772247982567], [16.456442905348865, 44.041239732431279], [16.239660271884532, 44.351143296885709], [15.750026075918981, 44.818711656262565], [15.959367303133376, 45.233776760430942], [16.318156772535872, 45.004126695325908], [16.534939406000206, 45.211607570977719], [17.002146030351014, 45.233776760430942], [17.861783481526402, 45.067740383477144], [18.553214145591653, 45.081589667331457], [19.005486281010121, 44.860233669609158]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Belarus",
      "sov_a3": "BLR",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Belarus",
      "adm0_a3": "BLR",
      "geou_dif": 0.000000,
      "geounit": "Belarus",
      "gu_a3": "BLR",
      "su_dif": 0.000000,
      "subunit": "Belarus",
      "su_a3": "BLR",
      "brk_diff": 0.000000,
      "name": "Belarus",
      "name_long": "Belarus",
      "brk_a3": "BLR",
      "brk_name": "Belarus",
      "brk_group": null,
      "abbrev": "Bela.",
      "postal": "BY",
      "formal_en": "Republic of Belarus",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Belarus",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 11.000000,
      "pop_est": 9648533.000000,
      "gdp_md_est": 114100.000000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BY",
      "iso_a3": "BLR",
      "iso_n3": "112",
      "un_a3": "112",
      "wb_a2": "BY",
      "wb_a3": "BLR",
      "woe_id": -99.000000,
      "adm0_a3_is": "BLR",
      "adm0_a3_us": "BLR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Eastern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[23.484127638449849, 53.912497667041137], [24.450683628037037, 53.905702216194754], [25.536353794056993, 54.282423407602529], [25.768432651479799, 54.846962592175089], [26.588279249790389, 55.167175604871673], [26.494331495883756, 55.615106919977634], [27.102459751094528, 55.783313707087686], [28.176709425577997, 56.169129950578814], [29.229513380660308, 55.918344224666363], [29.371571893030673, 55.670090643936184], [29.896294386522356, 55.789463202530413], [30.87390913262001, 55.550976467503411], [30.971835971813135, 55.081547756564042], [30.757533807098721, 54.811770941784317], [31.38447228366374, 54.157056382862436], [31.791424187962239, 53.974638576872124], [31.731272820774507, 53.794029446012019], [32.405598585751164, 53.618045355842042], [32.693643019346041, 53.35142080343212], [32.304519484188233, 53.13272614197291], [31.497643670382931, 53.167426866256903], [31.305200636528014, 53.073995876673209], [31.540018344862261, 52.742052313846358], [31.785998162571587, 52.101677964885454], [30.927549269338982, 52.04235342061439], [30.619454380014844, 51.822806098022376], [30.555117221811457, 51.319503485715657], [30.157363722460897, 51.416138414101468], [29.254938185347925, 51.368234361366895], [28.992835320763533, 51.602044379271476], [28.617612745892249, 51.427713934934843], [28.241615024536571, 51.572227077839067], [27.454066196408434, 51.592303371784467], [26.337958611768556, 51.832288723347929], [25.327787713327009, 51.910656032918553], [24.553106316839518, 51.888461005249184], [24.00507775238421, 51.617443956094462], [23.527070753684374, 51.57845408793024], [23.508002150168693, 52.023646552124731], [23.199493849386187, 52.486977444053672], [23.799198846133379, 52.691099351606567], [23.804934930117781, 53.089731350306074], [23.527535841575002, 53.470121568406555], [23.484127638449849, 53.912497667041137]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Belize",
      "sov_a3": "BLZ",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Belize",
      "adm0_a3": "BLZ",
      "geou_dif": 0.000000,
      "geounit": "Belize",
      "gu_a3": "BLZ",
      "su_dif": 0.000000,
      "subunit": "Belize",
      "su_a3": "BLZ",
      "brk_diff": 0.000000,
      "name": "Belize",
      "name_long": "Belize",
      "brk_a3": "BLZ",
      "brk_name": "Belize",
      "brk_group": null,
      "abbrev": "Belize",
      "postal": "BZ",
      "formal_en": "Belize",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Belize",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 7.000000,
      "pop_est": 307899.000000,
      "gdp_md_est": 2536.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BZ",
      "iso_a3": "BLZ",
      "iso_n3": "084",
      "un_a3": "084",
      "wb_a2": "BZ",
      "wb_a3": "BLZ",
      "woe_id": -99.000000,
      "adm0_a3_is": "BLZ",
      "adm0_a3_us": "BLZ",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Central America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-89.143080410503316, 17.808318996649319], [-89.150909389995533, 17.955467637600421], [-89.029857347351822, 18.001511338772488], [-88.848343878926613, 17.883198147040233], [-88.490122850279349, 18.486830552641607], [-88.300031094093697, 18.499982204659901], [-88.296336229184817, 18.353272813383271], [-88.106812913754382, 18.348673610909287], [-88.123478563168504, 18.07667470954101], [-88.285354987322805, 17.644142971258034], [-88.197866787452654, 17.489475409408456], [-88.302640753924436, 17.131693630435663], [-88.239517991879907, 17.036066392479555], [-88.355428229510565, 16.530774237529627], [-88.55182451043585, 16.265467434143147], [-88.732433641295941, 16.233634751851355], [-88.930612759135272, 15.887273464415076], [-89.229121670269279, 15.886937567605171], [-89.150806037130948, 17.015576687075836], [-89.143080410503316, 17.808318996649319]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Bolivia",
      "sov_a3": "BOL",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Bolivia",
      "adm0_a3": "BOL",
      "geou_dif": 0.000000,
      "geounit": "Bolivia",
      "gu_a3": "BOL",
      "su_dif": 0.000000,
      "subunit": "Bolivia",
      "su_a3": "BOL",
      "brk_diff": 0.000000,
      "name": "Bolivia",
      "name_long": "Bolivia",
      "brk_a3": "BOL",
      "brk_name": "Bolivia",
      "brk_group": null,
      "abbrev": "Bolivia",
      "postal": "BO",
      "formal_en": "Plurinational State of Bolivia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Bolivia",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 3.000000,
      "pop_est": 9775246.000000,
      "gdp_md_est": 43270.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BO",
      "iso_a3": "BOL",
      "iso_n3": "068",
      "un_a3": "068",
      "wb_a2": "BO",
      "wb_a3": "BOL",
      "woe_id": -99.000000,
      "adm0_a3_is": "BOL",
      "adm0_a3_us": "BOL",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "South America",
      "region_un": "Americas",
      "subregion": "South America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 7.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-62.846468471921561, -22.034985446869449], [-63.986838141522476, -21.99364430103595], [-64.377021043542257, -22.79809132252354], [-64.964892137294612, -22.075861504812327], [-66.273339402924847, -21.83231047942072], [-67.106673550063604, -22.735924574476417], [-67.828179897722734, -22.872918796482175], [-68.21991309271128, -21.494346612231865], [-68.757167121033746, -20.372657972904463], [-68.442225104430918, -19.405068454671429], [-68.966818406841867, -18.981683444904107], [-69.100246955019486, -18.260125420812678], [-69.59042375352405, -17.580011895419332], [-68.959635382753305, -16.50069793057127], [-69.389764166934711, -15.660129082911652], [-69.160346645774951, -15.323973890853019], [-69.339534674747014, -14.953195489158832], [-68.948886684836594, -14.453639418193283], [-68.92922380234954, -13.602683607643009], [-68.88007951523997, -12.899729099176653], [-68.665079718689626, -12.561300144097173], [-69.529678107364958, -10.951734307502194], [-68.786157599549483, -11.03638030359628], [-68.271253628193264, -11.014521172736821], [-68.048192308205387, -10.712059014532485], [-67.173801235610739, -10.306812432499612], [-66.646908331962806, -9.931331475466862], [-65.338435228116424, -9.761987806846392], [-65.444837002205389, -10.511451104375432], [-65.321898769783019, -10.895872084194679], [-65.402281460213032, -11.566270440317155], [-64.316352912031604, -12.461978041232193], [-63.196498786050569, -12.627032565972435], [-62.803060268796386, -13.000653171442686], [-62.127080857986385, -13.198780612849724], [-61.713204311760776, -13.489202162330052], [-61.084121263255653, -13.479383640194598], [-60.503304002511136, -13.775954685117659], [-60.459198167550028, -14.354007256734555], [-60.26432634137737, -14.645979099183641], [-60.251148851142936, -15.07721892665932], [-60.542965664295153, -15.093910414289596], [-60.158389655179036, -16.258283786690086], [-58.24121985536668, -16.299573256091293], [-58.388058437724041, -16.877109063385276], [-58.280804002502251, -17.271710300366017], [-57.734558274961003, -17.552468357007768], [-57.498371141170992, -18.174187513911292], [-57.676008877174311, -18.961839694904029], [-57.949997321185826, -19.400004164306822], [-57.853801642474508, -19.969995212486189], [-58.166392381408045, -20.176700941653678], [-58.183471442280506, -19.868399346600363], [-59.115042487206111, -19.356906019775401], [-60.043564622626491, -19.342746677327426], [-61.786326463453769, -19.633736667562964], [-62.265961269770798, -20.513734633061276], [-62.291179368729225, -21.051634616787393], [-62.685057135657885, -22.249029229422387], [-62.846468471921561, -22.034985446869449]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Brazil",
      "sov_a3": "BRA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Brazil",
      "adm0_a3": "BRA",
      "geou_dif": 0.000000,
      "geounit": "Brazil",
      "gu_a3": "BRA",
      "su_dif": 0.000000,
      "subunit": "Brazil",
      "su_a3": "BRA",
      "brk_diff": 0.000000,
      "name": "Brazil",
      "name_long": "Brazil",
      "brk_a3": "BRA",
      "brk_name": "Brazil",
      "brk_group": null,
      "abbrev": "Brazil",
      "postal": "BR",
      "formal_en": "Federative Republic of Brazil",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Brazil",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 7.000000,
      "pop_est": 198739269.000000,
      "gdp_md_est": 1993000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "3. Emerging region: BRIC",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BR",
      "iso_a3": "BRA",
      "iso_n3": "076",
      "un_a3": "076",
      "wb_a2": "BR",
      "wb_a3": "BRA",
      "woe_id": -99.000000,
      "adm0_a3_is": "BRA",
      "adm0_a3_us": "BRA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "South America",
      "region_un": "Americas",
      "subregion": "South America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-57.625133429582959, -30.216294854454262], [-56.290899624239081, -28.852760512000895], [-55.162286342984572, -27.881915378533463], [-54.490725267135524, -27.474756768505792], [-53.648735317587892, -26.92347258881609], [-53.628348965048744, -26.124865004177472], [-54.13004960795439, -25.547639255477254], [-54.625290696823576, -25.739255466415514], [-54.428946092330591, -25.162184747012166], [-54.293476325077449, -24.570799655863965], [-54.292959560754518, -24.021014092710729], [-54.652834235235133, -23.839578138933959], [-55.02790178080955, -24.001273695575229], [-55.400747239795422, -23.956935316668805], [-55.517639329639636, -23.571997572526637], [-55.610682745981144, -22.655619398694846], [-55.797958136606908, -22.356929620047822], [-56.473317430229393, -22.086300144135283], [-56.881509568902899, -22.282153822521479], [-57.937155727761294, -22.090175876557172], [-57.8706739976178, -20.732687676681952], [-58.166392381408045, -20.176700941653678], [-57.853801642474508, -19.969995212486189], [-57.949997321185826, -19.400004164306822], [-57.676008877174311, -18.961839694904029], [-57.498371141170992, -18.174187513911292], [-57.734558274961003, -17.552468357007768], [-58.280804002502251, -17.271710300366017], [-58.388058437724041, -16.877109063385276], [-58.24121985536668, -16.299573256091293], [-60.158389655179036, -16.258283786690086], [-60.542965664295153, -15.093910414289596], [-60.251148851142936, -15.07721892665932], [-60.26432634137737, -14.645979099183641], [-60.459198167550028, -14.354007256734555], [-60.503304002511136, -13.775954685117659], [-61.084121263255653, -13.479383640194598], [-61.713204311760776, -13.489202162330052], [-62.127080857986385, -13.198780612849724], [-62.803060268796386, -13.000653171442686], [-63.196498786050569, -12.627032565972435], [-64.316352912031604, -12.461978041232193], [-65.402281460213032, -11.566270440317155], [-65.321898769783019, -10.895872084194679], [-65.444837002205389, -10.511451104375432], [-65.338435228116424, -9.761987806846392], [-66.646908331962806, -9.931331475466862], [-67.173801235610739, -10.306812432499612], [-68.048192308205387, -10.712059014532485], [-68.271253628193264, -11.014521172736821], [-68.786157599549483, -11.03638030359628], [-69.529678107364958, -10.951734307502194], [-70.093752204046893, -11.123971856331012], [-70.548685675728407, -11.009146823778465], [-70.481893886991173, -9.490118096558845], [-71.302412278921537, -10.079436130415374], [-72.18489071316985, -10.053597914269432], [-72.563033006465645, -9.520193780152717], [-73.226713426390162, -9.462212823121234], [-73.015382656532552, -9.032833347208062], [-73.571059332967067, -8.424446709835834], [-73.987235480429661, -7.523829847853065], [-73.723401455363501, -7.340998630404414], [-73.724486660441642, -6.91859547285064], [-73.120027431923603, -6.629930922068239], [-73.21971126981461, -6.089188734566078], [-72.9645072089412, -5.741251315944893], [-72.891927659787257, -5.274561455916981], [-71.748405727816547, -4.593982842633011], [-70.928843349883579, -4.401591485210368], [-70.794768846302304, -4.251264743673303], [-69.893635219996625, -4.298186944194327], [-69.444101935489613, -1.556287123219818], [-69.420485805932231, -1.122618503426409], [-69.5770653957766, -0.549991957200163], [-70.020655890570055, -0.185156345219539], [-70.015565761989308, 0.541414292804205], [-69.452396002872462, 0.706158758950693], [-69.252434048119056, 0.602650865070075], [-69.21863766140018, 0.985676581217433], [-69.80459672715773, 1.089081122233466], [-69.816973232691623, 1.714805202639624], [-67.868565029558837, 1.692455145673392], [-67.537810024674698, 2.03716278727633], [-67.259997524673594, 1.719998684084956], [-67.065048183852497, 1.130112209473225], [-66.87632585312258, 1.253360500489336], [-66.325765143484958, 0.724452215982012], [-65.548267381437569, 0.78925446207603], [-65.354713304288367, 1.0952822941085], [-64.611011928959869, 1.328730576987042], [-64.199305792890513, 1.49285492594602], [-64.083085496666087, 1.91636912679408], [-63.368788011311665, 2.200899562993129], [-63.422867397705119, 2.411067613124175], [-64.269999152265797, 2.497005520025567], [-64.408827887617917, 3.126786200366624], [-64.368494432214106, 3.797210394705246], [-64.816064012294021, 4.056445217297423], [-64.628659430587547, 4.14848094320925], [-63.888342861574159, 4.020530096854571], [-63.093197597899106, 3.770571193858785], [-62.804533047116706, 4.006965033377952], [-62.085429653559132, 4.162123521334308], [-60.966893276601539, 4.536467596856639], [-60.601179165271944, 4.91809804933213], [-60.733574184803722, 5.200277207861901], [-60.213683437731333, 5.244486395687602], [-59.980958624904886, 5.014061184098139], [-60.11100236676738, 4.574966538914083], [-59.767405768458715, 4.423502915866607], [-59.538039923731233, 3.958802598481938], [-59.815413174057866, 3.606498521332085], [-59.974524909084558, 2.755232652188056], [-59.718545701726747, 2.24963043864436], [-59.646043667221257, 1.786893825686789], [-59.030861579002647, 1.317697658692722], [-58.540012986878295, 1.268088283692521], [-58.429477098205965, 1.463941962078721], [-58.113449876525017, 1.507195135907025], [-57.660971035377372, 1.682584947105639], [-57.335822923396904, 1.948537705895759], [-56.782704230360828, 1.863710842288654], [-56.539385748914555, 1.899522609866921], [-55.995698004771754, 1.817667141116601], [-55.905600145070885, 2.02199575439866], [-56.073341844290297, 2.220794989425499], [-55.973322109589375, 2.510363877773017], [-55.569755011605999, 2.421506252447131], [-55.097587449755139, 2.523748073736613], [-54.524754197799716, 2.311848863123785], [-54.08806250671725, 2.105556545414629], [-53.778520677288917, 2.376702785650082], [-53.554839240113544, 2.334896551925951], [-53.418465135295307, 2.053389187015981], [-52.939657151894956, 2.124857692875636], [-52.556424730018421, 2.504705308437053], [-52.249337531123956, 3.241094468596245], [-51.657797410678889, 4.156232408053029], [-51.317146369010857, 4.203490505383954], [-51.069771287629656, 3.650397650564031], [-50.508875291533656, 1.901563828942457], [-49.974075893745059, 1.736483465986069], [-49.947100796088712, 1.046189683431223], [-50.699251268096916, 0.222984117021682], [-50.388210822132137, -0.078444512536819], [-48.62056677915632, -0.235489190271821], [-48.584496629416591, -1.237805271005001], [-47.824956427590635, -0.5816179337628], [-46.566583624851226, -0.941027520352776], [-44.905703090990414, -1.551739597178134], [-44.417619187993665, -2.137750339367976], [-44.581588507655781, -2.691308282078524], [-43.418791266440195, -2.383110039889793], [-41.472656826328247, -2.912018324397116], [-39.978665330554037, -2.873054294449041], [-38.500383470196567, -3.700652357603396], [-37.2232521225352, -4.820945733258917], [-36.452937384576387, -5.109403578312154], [-35.597795783010469, -5.149504489770649], [-35.23538896334756, -5.464937432480247], [-34.896029832486832, -6.738193047719711], [-34.729993455533034, -7.343220716992967], [-35.128212042774223, -8.996401462442286], [-35.636966518687714, -9.649281508017815], [-37.046518724096998, -11.040721123908803], [-37.683611619607362, -12.171194756725823], [-38.423876512188443, -13.038118584854288], [-38.673887091616521, -13.057652276260619], [-38.953275722802545, -13.793369642800023], [-38.882298143049653, -15.667053724838768], [-39.161092495264313, -17.208406670808472], [-39.267339240056401, -17.867746270420483], [-39.583521491034233, -18.262295830968938], [-39.760823330227637, -19.599113457927409], [-40.774740770010339, -20.904511814052423], [-40.944756232250612, -21.937316989837811], [-41.754164191238225, -22.370675551037458], [-41.98828426773656, -22.970070489190896], [-43.074703742024752, -22.967693373305469], [-44.647811855637812, -23.351959323827842], [-45.352135789559917, -23.796841729428582], [-46.472093268405537, -24.088968601174543], [-47.648972337420659, -24.885199069927722], [-48.495458136577703, -25.877024834905654], [-48.64100480812774, -26.623697605090932], [-48.474735887228654, -27.175911960561891], [-48.661520351747626, -28.18613453543572], [-48.8884574041574, -28.674115085567884], [-49.587329474472675, -29.224469089476337], [-50.696874152211485, -30.98446502047296], [-51.576226162306156, -31.777698256153212], [-52.256081305538046, -32.24536996839467], [-52.712099982297694, -33.196578057591182], [-53.373661668498244, -33.768377780900764], [-53.650543992718099, -33.20200408298183], [-53.209588995971544, -32.727666110974724], [-53.787951626182192, -32.047242526987624], [-54.572451544805119, -31.494511407193748], [-55.601510179249345, -30.853878676071393], [-55.973244594940937, -30.883075860316303], [-56.976025763564735, -30.109686374636127], [-57.625133429582959, -30.216294854454262]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Brunei",
      "sov_a3": "BRN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Brunei",
      "adm0_a3": "BRN",
      "geou_dif": 0.000000,
      "geounit": "Brunei",
      "gu_a3": "BRN",
      "su_dif": 0.000000,
      "subunit": "Brunei",
      "su_a3": "BRN",
      "brk_diff": 0.000000,
      "name": "Brunei",
      "name_long": "Brunei Darussalam",
      "brk_a3": "BRN",
      "brk_name": "Brunei",
      "brk_group": null,
      "abbrev": "Brunei",
      "postal": "BN",
      "formal_en": "Negara Brunei Darussalam",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Brunei",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 12.000000,
      "pop_est": 388190.000000,
      "gdp_md_est": 20250.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BN",
      "iso_a3": "BRN",
      "iso_n3": "096",
      "un_a3": "096",
      "wb_a2": "BN",
      "wb_a3": "BRN",
      "woe_id": -99.000000,
      "adm0_a3_is": "BRN",
      "adm0_a3_us": "BRN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "South-Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 6.000000,
      "long_len": 17.000000,
      "abbrev_len": 6.000000,
      "tiny": 2.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[114.204016554828371, 4.525873928236805], [114.599961379048722, 4.900011298029966], [115.450710483869813, 5.447729803891534], [115.405700311343608, 4.955227565933839], [115.347460972150657, 4.316636053887009], [114.869557326315402, 4.348313706881925], [114.659595981913526, 4.007636826997754], [114.204016554828371, 4.525873928236805]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Bhutan",
      "sov_a3": "BTN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Bhutan",
      "adm0_a3": "BTN",
      "geou_dif": 0.000000,
      "geounit": "Bhutan",
      "gu_a3": "BTN",
      "su_dif": 0.000000,
      "subunit": "Bhutan",
      "su_a3": "BTN",
      "brk_diff": 0.000000,
      "name": "Bhutan",
      "name_long": "Bhutan",
      "brk_a3": "BTN",
      "brk_name": "Bhutan",
      "brk_group": null,
      "abbrev": "Bhutan",
      "postal": "BT",
      "formal_en": "Kingdom of Bhutan",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Bhutan",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 8.000000,
      "pop_est": 691141.000000,
      "gdp_md_est": 3524.000000,
      "pop_year": -99.000000,
      "lastcensus": 2005.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BT",
      "iso_a3": "BTN",
      "iso_n3": "064",
      "un_a3": "064",
      "wb_a2": "BT",
      "wb_a3": "BTN",
      "woe_id": -99.000000,
      "adm0_a3_is": "BTN",
      "adm0_a3_us": "BTN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Southern Asia",
      "region_wb": "South Asia",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[91.696656528696678, 27.771741848251665], [92.103711785859744, 27.452614040633208], [92.033483514375092, 26.838310451763562], [91.217512648486434, 26.808648179628022], [90.373274774134075, 26.875724188742879], [89.744527622438852, 26.719402981059957], [88.83564253128938, 27.098966376243762], [88.814248488320558, 27.299315904239364], [89.475810174521115, 28.042758897406397], [90.015828891971182, 28.296438503527217], [90.730513950567797, 28.064953925075756], [91.258853794319919, 28.040614325466294], [91.696656528696678, 27.771741848251665]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Botswana",
      "sov_a3": "BWA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Botswana",
      "adm0_a3": "BWA",
      "geou_dif": 0.000000,
      "geounit": "Botswana",
      "gu_a3": "BWA",
      "su_dif": 0.000000,
      "subunit": "Botswana",
      "su_a3": "BWA",
      "brk_diff": 0.000000,
      "name": "Botswana",
      "name_long": "Botswana",
      "brk_a3": "BWA",
      "brk_name": "Botswana",
      "brk_group": null,
      "abbrev": "Bwa.",
      "postal": "BW",
      "formal_en": "Republic of Botswana",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Botswana",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 7.000000,
      "mapcolor13": 3.000000,
      "pop_est": 1990876.000000,
      "gdp_md_est": 27060.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "BW",
      "iso_a3": "BWA",
      "iso_n3": "072",
      "un_a3": "072",
      "wb_a2": "BW",
      "wb_a3": "BWA",
      "woe_id": -99.000000,
      "adm0_a3_is": "BWA",
      "adm0_a3_us": "BWA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Southern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[25.649163445750162, -18.536025892818991], [25.850391473094732, -18.714412937090536], [26.164790887158485, -19.293085625894939], [27.296504754350508, -20.391519870690999], [27.724747348753255, -20.499058526290391], [27.727227817503259, -20.851801853114715], [28.021370070108617, -21.485975030200585], [28.794656202924216, -21.639454034107452], [29.43218834810904, -22.091312758067588], [28.017235955525251, -22.827753594659079], [27.119409620886245, -23.574323011979775], [26.786406691197413, -24.240690606383485], [26.485753208123299, -24.616326592713104], [25.941652052522159, -24.696373386333221], [25.76584882986521, -25.174845472923678], [25.664666375437719, -25.486816094669713], [25.025170525825786, -25.719670098576898], [24.211266717228796, -25.670215752873574], [23.73356977712271, -25.390129489851617], [23.312096795350186, -25.26868987396572], [22.824271274514899, -25.500458672794771], [22.579531691180591, -25.979447523708146], [22.105968865657868, -26.280256036079138], [21.605896030369394, -26.726533705351756], [20.889609002371738, -26.828542982695915], [20.66647016773544, -26.477453301704923], [20.758609246511838, -25.86813648855145], [20.165725538827189, -24.917961928000771], [19.895767856534434, -24.767790215760591], [19.895457797940679, -21.849156996347869], [20.88113406747587, -21.814327080983148], [20.910641310314535, -18.252218926672022], [21.655040317478978, -18.219146010005225], [23.196858351339301, -17.869038181227786], [23.579005568137717, -18.281261081620059], [24.217364536239213, -17.889347019118489], [24.520705193792537, -17.887124932529936], [25.084443393664571, -17.661815687737374], [25.264225701608012, -17.736539808831417], [25.649163445750162, -18.536025892818991]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Central African Republic",
      "sov_a3": "CAF",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Central African Republic",
      "adm0_a3": "CAF",
      "geou_dif": 0.000000,
      "geounit": "Central African Republic",
      "gu_a3": "CAF",
      "su_dif": 0.000000,
      "subunit": "Central African Republic",
      "su_a3": "CAF",
      "brk_diff": 0.000000,
      "name": "Central African Rep.",
      "name_long": "Central African Republic",
      "brk_a3": "CAF",
      "brk_name": "Central African Rep.",
      "brk_group": null,
      "abbrev": "C.A.R.",
      "postal": "CF",
      "formal_en": "Central African Republic",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Central African Republic",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 9.000000,
      "pop_est": 4511488.000000,
      "gdp_md_est": 3198.000000,
      "pop_year": -99.000000,
      "lastcensus": 2003.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "CF",
      "iso_a3": "CAF",
      "iso_n3": "140",
      "un_a3": "140",
      "wb_a2": "CF",
      "wb_a3": "CAF",
      "woe_id": -99.000000,
      "adm0_a3_is": "CAF",
      "adm0_a3_us": "CAF",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Middle Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 20.000000,
      "long_len": 24.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[15.279460483469109, 7.421924546737969], [16.10623172370677, 7.497087917506505], [16.290561557691888, 7.754307359239306], [16.456184523187346, 7.734773667832968], [16.705988396886255, 7.508327541529979], [17.964929640380888, 7.890914008002866], [18.389554884523221, 8.281303615751824], [18.911021762780507, 8.630894680206353], [18.812009718509273, 8.982914536978598], [19.094008009526021, 9.07484691002584], [20.059685499764271, 9.012706000194854], [21.000868361096167, 9.475985215691509], [21.723821648859456, 10.567055568885976], [22.231129184668788, 10.97188873946051], [22.864165480244225, 11.142395127807546], [22.97754357269261, 10.71446259199854], [23.554304233502194, 10.089255275915308], [23.55724979014283, 9.681218166538684], [23.394779087017184, 9.265067857292223], [23.459012892355986, 8.954285793488893], [23.805813429466752, 8.666318874542426], [24.567369012152085, 8.229187933785468], [25.114932488716789, 7.825104071479174], [25.124130893664727, 7.500085150579437], [25.796647983511178, 6.979315904158071], [26.213418409945117, 6.546603298362072], [26.465909458123235, 5.94671743410187], [27.21340905122517, 5.550953477394557], [27.37422610851749, 5.233944403500061], [27.04406538260471, 5.127852688004836], [26.402760857862543, 5.150874538590871], [25.650455356557472, 5.256087754737123], [25.278798455514305, 5.170408229997192], [25.128833449003281, 4.92724477784779], [24.805028924262416, 4.89724660890235], [24.410531040146253, 5.10878408448913], [23.297213982850138, 4.609693101414223], [22.841479526468106, 4.710126247573484], [22.704123569436291, 4.633050848810157], [22.405123732195538, 4.029160061047321], [21.659122755630023, 4.22434194581372], [20.927591180106276, 4.322785549329737], [20.290679152108936, 4.691677761245288], [19.467783644293149, 5.03152781821278], [18.932312452884759, 4.709506130385975], [18.542982211997781, 4.201785183118318], [18.453065219809929, 3.504385891123349], [17.809900343505262, 3.56019643799857], [17.133042433346304, 3.728196519379452], [16.537058139724138, 3.198254706226279], [16.012852410555354, 2.267639675298085], [15.907380812247652, 2.557389431158612], [15.862732374747482, 3.013537298998983], [15.405395948964383, 3.33530060466434], [15.036219516671252, 3.851367295747124], [14.950953403389661, 4.210389309094921], [14.478372430080469, 4.732605495620447], [14.558935988023507, 5.03059764243153], [14.459407179429348, 5.4517605656103], [14.536560092841114, 6.22695872642069], [14.776545444404576, 6.408498033062045], [15.279460483469109, 7.421924546737969]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Canada",
      "sov_a3": "CAN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Canada",
      "adm0_a3": "CAN",
      "geou_dif": 0.000000,
      "geounit": "Canada",
      "gu_a3": "CAN",
      "su_dif": 0.000000,
      "subunit": "Canada",
      "su_a3": "CAN",
      "brk_diff": 0.000000,
      "name": "Canada",
      "name_long": "Canada",
      "brk_a3": "CAN",
      "brk_name": "Canada",
      "brk_group": null,
      "abbrev": "Can.",
      "postal": "CA",
      "formal_en": "Canada",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Canada",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 2.000000,
      "pop_est": 33487208.000000,
      "gdp_md_est": 1300000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "1. Developed region: G7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "CA",
      "iso_a3": "CAN",
      "iso_n3": "124",
      "un_a3": "124",
      "wb_a2": "CA",
      "wb_a3": "CAN",
      "woe_id": -99.000000,
      "adm0_a3_is": "CAN",
      "adm0_a3_us": "CAN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Northern America",
      "region_wb": "North America",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-63.6645, 46.55001], [-62.9393, 46.41587], [-62.01208, 46.44314], [-62.50391, 46.03339], [-62.87433, 45.96818], [-64.1428, 46.39265], [-64.39261, 46.72747], [-64.01486, 47.03601], [-63.6645, 46.55001]]], [[[-61.806305, 49.10506], [-62.29318, 49.08717], [-63.58926, 49.40069], [-64.51912, 49.87304], [-64.17322, 49.95718], [-62.85829, 49.70641], [-61.835585, 49.28855], [-61.806305, 49.10506]]], [[[-123.510001587551159, 48.510010891303438], [-124.012890788399503, 48.370846259141416], [-125.655012777338371, 48.825004584338501], [-125.954994466792769, 49.179995835967645], [-126.850004435871881, 49.530000311880428], [-127.029993449544421, 49.81499583597008], [-128.059336304366241, 49.994959011426602], [-128.444584107102173, 50.539137681676124], [-128.358413656255436, 50.770648098343685], [-127.308581096029897, 50.552573554071955], [-126.695000977212317, 50.400903225295394], [-125.755006673823203, 50.295018215529382], [-125.415001587558805, 49.950000515332619], [-124.920768189119343, 49.475274970083404], [-123.922508708321018, 49.062483628935809], [-123.510001587551159, 48.510010891303438]]], [[[-56.134035814017125, 50.687009792679305], [-56.795881720595276, 49.81230866149096], [-56.143105027884303, 50.150117499382844], [-55.471492275602941, 49.935815334668462], [-55.822401089080927, 49.587128607779107], [-54.935142584845664, 49.31301097268684], [-54.473775397343786, 49.556691189159181], [-53.476549445191324, 49.249138902374057], [-53.78601375997124, 48.516780503933632], [-53.086133999226263, 48.687803656603535], [-52.958648240762244, 48.157164211614486], [-52.648098720904187, 47.535548407575504], [-53.069158291218343, 46.65549876564495], [-53.521456264853043, 46.61829173439483], [-54.178935512902541, 46.807065741557011], [-53.961868659060485, 47.625207017601923], [-54.240482143762137, 47.752279364607631], [-55.400773078011497, 46.884993801453135], [-55.997480841685842, 46.919720363953303], [-55.291219041552779, 47.389562486350997], [-56.250798712780522, 47.632545070987391], [-57.325229254777099, 47.572807115258001], [-59.266015184146767, 47.603347886742512], [-59.419494188053704, 47.899453843774864], [-58.796586473207412, 48.251525376979487], [-59.231624518456528, 48.523188381537807], [-58.391804979065228, 49.125580552764177], [-57.358689744686046, 50.718274034215852], [-56.738650071832012, 51.287438259478535], [-55.870976935435294, 51.632094224649194], [-55.406974249886616, 51.588272610065729], [-55.600218268442092, 51.317074693397927], [-56.134035814017125, 50.687009792679305]]], [[[-133.180004041711697, 54.169975490935315], [-132.71000788443132, 54.040009315423532], [-131.749989584003288, 54.120004380909222], [-132.049480347350993, 52.984621487024526], [-131.179042521826602, 52.180432847698285], [-131.577829549822923, 52.182370713909251], [-132.180428426778548, 52.639707139692405], [-132.549992432313871, 53.100014960332146], [-133.054611178755522, 53.411468817755377], [-133.239664482792705, 53.851080227262401], [-133.180004041711697, 54.169975490935315]]], [[[-79.26582, 62.158675], [-79.65752, 61.63308], [-80.09956, 61.7181], [-80.36215, 62.01649], [-80.315395, 62.085565], [-79.92939, 62.3856], [-79.52002, 62.36371], [-79.26582, 62.158675]]], [[[-81.89825, 62.7108], [-83.06857, 62.15922], [-83.77462, 62.18231], [-83.99367, 62.4528], [-83.25048, 62.91409], [-81.87699, 62.90458], [-81.89825, 62.7108]]], [[[-85.161307949549865, 65.657284654392811], [-84.975763719405961, 65.217518215588996], [-84.464012010419509, 65.371772365980178], [-83.882626308919754, 65.10961782496355], [-82.787576870438784, 64.766693020274687], [-81.642013719392537, 64.455135809986956], [-81.553440314444259, 63.979609280037153], [-80.817361212878865, 64.057485663501012], [-80.103451300766608, 63.725981350348604], [-80.991019863595682, 63.411246039474975], [-82.547178107417011, 63.651722317145243], [-83.108797573565056, 64.101875718839722], [-84.100416632813875, 63.569711819098018], [-85.523404710619019, 63.052379055424097], [-85.866768764982368, 63.637252916103563], [-87.221983201836736, 63.541238104905233], [-86.352759772471273, 64.035833238370714], [-86.224886440765147, 64.822916978608276], [-85.883847825854872, 65.738778388117055], [-85.161307949549865, 65.657284654392811]]], [[[-75.86588, 67.14886], [-76.98687, 67.09873], [-77.2364, 67.58809], [-76.81166, 68.14856], [-75.89521, 68.28721], [-75.1145, 68.01036], [-75.10333, 67.58202], [-75.21597, 67.44425], [-75.86588, 67.14886]]], [[[-95.647681203800516, 69.107690358321776], [-96.269521203800593, 68.757040358321746], [-97.617401203800569, 69.060030358321796], [-98.431801203800518, 68.950700358321797], [-99.797401203800533, 69.4000303583218], [-98.917401203800551, 69.710030358321802], [-98.218261203800495, 70.143540358321758], [-97.157401203800561, 69.860030358321808], [-96.557401203800538, 69.680030358321773], [-96.257401203800526, 69.490030358321775], [-95.647681203800516, 69.107690358321776]]], [[[-90.5471, 69.49766], [-90.55151, 68.47499], [-89.21515, 69.25873], [-88.01966, 68.61508], [-88.31749, 67.87338], [-87.35017, 67.19872], [-86.30607, 67.92146], [-85.57664, 68.78456], [-85.52197, 69.88211], [-84.10081, 69.80539], [-82.62258, 69.65826], [-81.28043, 69.16202], [-81.2202, 68.66567], [-81.96436, 68.13253], [-81.25928, 67.59716], [-81.38653, 67.11078], [-83.34456, 66.41154], [-84.73542, 66.2573], [-85.76943, 66.55833], [-86.0676, 66.05625], [-87.03143, 65.21297], [-87.32324, 64.77563], [-88.48296, 64.09897], [-89.91444, 64.03273], [-90.70398, 63.61017], [-90.77004, 62.96021], [-91.93342, 62.83508], [-93.15698, 62.02469], [-94.24153, 60.89865], [-94.62931, 60.11021], [-94.6846, 58.94882], [-93.21502, 58.78212], [-92.76462, 57.84571], [-92.29703, 57.08709], [-90.89769, 57.28468], [-89.03953, 56.85172], [-88.03978, 56.47162], [-87.32421, 55.99914], [-86.07121, 55.72383], [-85.01181, 55.3026], [-83.36055, 55.24489], [-82.27285, 55.14832], [-82.4362, 54.28227], [-82.12502, 53.27703], [-81.40075, 52.15788], [-79.91289, 51.20842], [-79.14301, 51.53393], [-78.60191, 52.56208], [-79.12421, 54.14145], [-79.82958, 54.66772], [-78.22874, 55.13645], [-77.0956, 55.83741], [-76.54137, 56.53423], [-76.62319, 57.20263], [-77.30226, 58.05209], [-78.51688, 58.80458], [-77.33676, 59.85261], [-77.77272, 60.75788], [-78.10687, 62.31964], [-77.41067, 62.55053], [-75.69621, 62.2784], [-74.6682, 62.18111], [-73.83988, 62.4438], [-72.90853, 62.10507], [-71.67708, 61.52535], [-71.37369, 61.13717], [-69.59042, 61.06141], [-69.62033, 60.22125], [-69.2879, 58.95736], [-68.37455, 58.80106], [-67.64976, 58.21206], [-66.20178, 58.76731], [-65.24517, 59.87071], [-64.58352, 60.33558], [-63.80475, 59.4426], [-62.50236, 58.16708], [-61.39655, 56.96745], [-61.79866, 56.33945], [-60.46853, 55.77548], [-59.56962, 55.20407], [-57.97508, 54.94549], [-57.3332, 54.6265], [-56.93689, 53.78032], [-56.15811, 53.64749], [-55.75632, 53.27036], [-55.68338, 52.14664], [-56.40916, 51.7707], [-57.12691, 51.41972], [-58.77482, 51.0643], [-60.03309, 50.24277], [-61.72366, 50.08046], [-63.86251, 50.29099], [-65.36331, 50.2982], [-66.39905, 50.22897], [-67.23631, 49.51156], [-68.51114, 49.06836], [-69.95362, 47.74488], [-71.10458, 46.82171], [-70.25522, 46.98606], [-68.65, 48.3], [-66.55243, 49.1331], [-65.05626, 49.23278], [-64.17099, 48.74248], [-65.11545, 48.07085], [-64.79854, 46.99297], [-64.47219, 46.23849], [-63.17329, 45.73902], [-61.52072, 45.88377], [-60.51815, 47.00793], [-60.4486, 46.28264], [-59.80287, 45.9204], [-61.03988, 45.26525], [-63.25471, 44.67014], [-64.24656, 44.26553], [-65.36406, 43.54523], [-66.1234, 43.61867], [-66.16173, 44.46512], [-64.42549, 45.29204], [-66.02605, 45.25931], [-67.13741, 45.13753], [-67.79134, 45.70281], [-67.79046, 47.06636], [-68.23444, 47.35486], [-68.905, 47.185], [-69.237216, 47.447781], [-69.99997, 46.69307], [-70.305, 45.915], [-70.66, 45.46], [-71.08482, 45.30524], [-71.405, 45.255], [-71.50506, 45.0082], [-73.34783, 45.00738], [-74.867, 45.00048], [-75.31821, 44.81645], [-76.375, 44.09631], [-76.5, 44.018458893758719], [-76.820034145805579, 43.628784288093755], [-77.737885097957701, 43.629055589363304], [-78.720279914042379, 43.625089423184875], [-79.171673550111876, 43.466339423184223], [-79.01, 43.27], [-78.92, 42.965], [-78.939362148743697, 42.863611355148038], [-80.247447679347943, 42.366199856122591], [-81.277746548167158, 42.209025987306859], [-82.439277716791622, 41.675105088867156], [-82.690089280920176, 41.675105088867156], [-83.029810146806938, 41.832795722005841], [-83.141999681312569, 41.975681057292832], [-83.12, 42.08], [-82.9, 42.43], [-82.43, 42.98], [-82.137642381503895, 43.571087551439916], [-82.337763125431081, 44.44], [-82.550924648758183, 45.347516587905375], [-83.592850714843081, 45.81689362241238], [-83.469550747394635, 45.994686387712591], [-83.616130947590591, 46.11692698829907], [-83.890765347005754, 46.11692698829907], [-84.091851264161477, 46.275418606138174], [-84.142119513673379, 46.512225857115737], [-84.3367, 46.40877], [-84.6049, 46.4396], [-84.543748745445868, 46.538684190449146], [-84.779238247399917, 46.637101955749046], [-84.876079881514869, 46.900083319682381], [-85.652363247403429, 47.220218817730512], [-86.461990831228263, 47.553338019392044], [-87.439792623300235, 47.94], [-88.378114183286726, 48.302917588893735], [-89.272917446636683, 48.019808254582671], [-89.6, 48.01], [-90.83, 48.27], [-91.64, 48.14], [-92.61, 48.45], [-93.63087, 48.60926], [-94.32914, 48.67074], [-94.64, 48.84], [-94.81758, 49.38905], [-95.15609, 49.38425], [-95.159069509172042, 49.0], [-97.228720000004813, 49.0007], [-100.65, 49.0], [-104.04826, 48.99986], [-107.05, 49.0], [-110.05, 49.0], [-113.0, 49.0], [-116.04818, 49.0], [-117.03121, 49.0], [-120.0, 49.0], [-122.84, 49.0], [-122.97421, 49.002537777777803], [-124.91024, 49.98456], [-125.62461, 50.41656], [-127.43561, 50.83061], [-127.99276, 51.71583], [-127.85032, 52.32961], [-129.12979, 52.75538], [-129.30523, 53.56159], [-130.51497, 54.28757], [-130.53611, 54.80278], [-129.98, 55.285], [-130.00778, 55.91583], [-131.70781, 56.55212], [-132.73042, 57.69289], [-133.35556, 58.41028], [-134.27111, 58.86111], [-134.945, 59.27056], [-135.47583, 59.78778], [-136.47972, 59.46389], [-137.4525, 58.905], [-138.34089, 59.56211], [-139.039, 60.0], [-140.013, 60.27682], [-140.99778, 60.30639], [-140.9925, 66.00003], [-140.986, 69.712], [-139.12052, 69.47102], [-137.54636, 68.99002], [-136.50358, 68.89804], [-135.62576, 69.31512], [-134.41464, 69.62743], [-132.92925, 69.50534], [-131.43136, 69.94451], [-129.79471, 70.19369], [-129.10773, 69.77927], [-128.36156, 70.01286], [-128.13817, 70.48384], [-127.44712, 70.37721], [-125.75632, 69.48058], [-124.42483, 70.1584], [-124.28968, 69.39969], [-123.06108, 69.56372], [-122.6835, 69.85553], [-121.47226, 69.79778], [-119.94288, 69.37786], [-117.60268, 69.01128], [-116.22643, 68.84151], [-115.2469, 68.90591], [-113.89794, 68.3989], [-115.30489, 67.90261], [-113.49727, 67.68815], [-110.798, 67.80612], [-109.94619, 67.98104], [-108.8802, 67.38144], [-107.79239, 67.88736], [-108.81299, 68.31164], [-108.16721, 68.65392], [-106.95, 68.7], [-106.15, 68.8], [-105.34282, 68.56122], [-104.33791, 68.018], [-103.22115, 68.09775], [-101.45433, 67.64689], [-99.90195, 67.80566], [-98.4432, 67.78165], [-98.5586, 68.40394], [-97.66948, 68.57864], [-96.11991, 68.23939], [-96.12588, 67.29338], [-95.48943, 68.0907], [-94.685, 68.06383], [-94.23282, 69.06903], [-95.30408, 69.68571], [-96.47131, 70.08976], [-96.39115, 71.19482], [-95.2088, 71.92053], [-93.88997, 71.76015], [-92.87818, 71.31869], [-91.51964, 70.19129], [-92.40692, 69.69997], [-90.5471, 69.49766]]], [[[-114.167169999999899, 73.12145], [-114.66634, 72.65277], [-112.441019999999895, 72.955400000000111], [-111.05039, 72.4504], [-109.920349999999885, 72.961130000000111], [-109.00654, 72.63335], [-108.18835, 71.65089], [-107.68599, 72.06548], [-108.39639, 73.08953000000011], [-107.51645, 73.23598], [-106.52259, 73.07601], [-105.40246, 72.67259], [-104.77484, 71.698400000000106], [-104.464759999999842, 70.99297], [-102.78537, 70.49776], [-100.980779999999896, 70.02432], [-101.08929, 69.584470000000124], [-102.73116, 69.50402], [-102.09329, 69.119620000000111], [-102.43024, 68.75282], [-104.24, 68.91], [-105.96, 69.180000000000149], [-107.12254, 69.11922], [-109.0, 68.78], [-111.534148875200145, 68.630059156817936], [-113.3132, 68.53554], [-113.854959999999835, 69.007440000000116], [-115.22, 69.28], [-116.10794, 69.16821], [-117.34, 69.960000000000122], [-116.674729999999897, 70.06655], [-115.13112, 70.2373], [-113.72141, 70.19237], [-112.4161, 70.36638], [-114.35, 70.6], [-116.48684, 70.52045], [-117.9048, 70.540560000000141], [-118.43238, 70.9092], [-116.11311, 71.30918], [-117.65568, 71.2952], [-119.40199, 71.55859], [-118.56267, 72.30785], [-117.86642, 72.70594], [-115.18909, 73.314590000000123], [-114.167169999999899, 73.12145]]], [[[-104.5, 73.42], [-105.38, 72.76], [-106.94, 73.46], [-106.6, 73.6], [-105.26, 73.64], [-104.5, 73.42]]], [[[-76.34, 73.102684989953019], [-76.25140380859375, 72.826385498046875], [-77.314437866210909, 72.855545043945284], [-78.39167022705081, 72.876655578613281], [-79.486251831054659, 72.742202758789091], [-79.775833129882841, 72.802902221679744], [-80.876098632812528, 73.333183288574219], [-80.833885192871065, 73.693183898925781], [-80.353057861328125, 73.759719848632784], [-78.064437866210938, 73.651931762695341], [-76.34, 73.102684989953019]]], [[[-86.562178514334136, 73.157447007938458], [-85.774371304044536, 72.534125881633827], [-84.850112474288238, 73.340278225387124], [-82.315590176100983, 73.750950832810588], [-80.600087653307639, 72.71654368762421], [-80.748941616524405, 72.061906643350767], [-78.770638597310779, 72.352173163534161], [-77.824623989559598, 72.749616604291049], [-75.605844692675731, 72.243678493937409], [-74.228616095664989, 71.767144273557903], [-74.099140794557712, 71.330840155717652], [-72.242225714797655, 71.556924546994509], [-71.200015428335206, 70.920012518997225], [-68.786054246684898, 70.525023708774256], [-67.914970465756937, 70.121947536897608], [-66.969033372654167, 69.186087348091888], [-68.805122850200547, 68.720198472764423], [-66.449866095633865, 68.067163397892017], [-64.862314419195229, 67.847538560651628], [-63.424934454996759, 66.928473212340663], [-61.851981370680591, 66.862120673277843], [-62.163176845942303, 66.160251369889608], [-63.918444383384184, 64.998668524832851], [-65.148860236253626, 65.426032619886684], [-66.721219041598545, 66.388041083432199], [-68.015016038673963, 66.262725735124405], [-68.141287400979166, 65.689789130304376], [-67.089646165623407, 65.108455105236999], [-65.732080451099762, 64.648405666758634], [-65.320167609301279, 64.382737128346065], [-64.669406297449683, 63.392926744227481], [-65.013803880458909, 62.674185085695996], [-66.275044725190469, 62.945098781986076], [-68.783186204692726, 63.745670071051819], [-67.369680752213043, 62.883965562584876], [-66.328297288667216, 62.280074774822054], [-66.165568203380161, 61.930897121825893], [-68.877366502544646, 62.330149237712817], [-71.023437059193839, 62.910708116295837], [-72.235378587518994, 63.397836005295176], [-71.8862784491713, 63.679989325608858], [-73.378306240518384, 64.193963121183828], [-74.834418911422603, 64.679075629323791], [-74.818502570276735, 64.389093329517976], [-77.709979824520047, 64.229542344816792], [-78.555948859354174, 64.572906399180141], [-77.897281053361922, 65.309192206474791], [-76.018274298797195, 65.326968899183157], [-73.959795294882724, 65.454764716240902], [-74.29388342964964, 65.811771348729394], [-73.944912482382648, 66.310578111426736], [-72.651167161739409, 67.284575507263867], [-72.926059943316091, 67.726925767682388], [-73.311617804645749, 68.069437160912912], [-74.843307257776814, 68.554627183701285], [-76.869100918266753, 68.894735622830268], [-76.228649054657353, 69.147769273547425], [-77.287369961237118, 69.769540106883284], [-78.168633999326602, 69.82648753526891], [-78.957242194316734, 70.166880194775416], [-79.492455003563663, 69.871807766388912], [-81.30547095409176, 69.743185126414346], [-84.94470618359847, 69.966634019644403], [-87.060003424817893, 70.26000112576537], [-88.681713223001509, 70.41074127876081], [-89.51341956252304, 70.762037665480989], [-88.467721116880767, 71.218185533321332], [-89.888151211287493, 71.222552191849957], [-90.205160285182018, 72.235074367960806], [-89.436576707704944, 73.129464219852366], [-88.408241543312812, 73.537888902471224], [-85.82615108920092, 73.803815823045227], [-86.562178514334136, 73.157447007938458]]], [[[-100.35642, 73.84389], [-99.16387, 73.63339], [-97.38, 73.76], [-97.12, 73.47], [-98.05359, 72.99052], [-96.54, 72.56], [-96.72, 71.66], [-98.35966, 71.27285], [-99.32286, 71.35639], [-100.01482, 71.73827], [-102.5, 72.51], [-102.48, 72.83], [-100.43836, 72.70588], [-101.54, 73.36], [-100.35642, 73.84389]]], [[[-93.19629553910022, 72.771992499473356], [-94.269046597047264, 72.024596259235977], [-95.409855516322665, 72.061880805134592], [-96.033745083382456, 72.940276801231818], [-96.018267991910989, 73.437429918095802], [-95.495793423224029, 73.862416897264183], [-94.503657599652342, 74.13490672473921], [-92.420012173211774, 74.100025132942193], [-90.509792853542592, 73.856732489712044], [-92.003965216829897, 72.966244208458505], [-93.19629553910022, 72.771992499473356]]], [[[-120.46, 71.383601793087593], [-123.09219, 70.90164], [-123.62, 71.34], [-125.928948737473334, 71.868688463011409], [-125.5, 72.292260811795018], [-124.80729, 73.02256], [-123.939999999999898, 73.680000000000149], [-124.91775, 74.292750000000126], [-121.53788, 74.44893], [-120.10978, 74.24135], [-117.555639999999869, 74.18577], [-116.58442, 73.89607], [-115.51081, 73.47519], [-116.767939999999896, 73.22292], [-119.22, 72.52], [-120.46, 71.82], [-120.46, 71.383601793087593]]], [[[-93.612755906940492, 74.979997260224451], [-94.15690873897384, 74.592346503386864], [-95.608680589565608, 74.666863918751773], [-96.820932176484575, 74.92762319609659], [-96.28858740922982, 75.377828274223361], [-94.850819871789128, 75.6472175157609], [-93.977746548217937, 75.296489569795966], [-93.612755906940492, 74.979997260224451]]], [[[-98.5, 76.72], [-97.735585, 76.25656], [-97.704415, 75.74344], [-98.16, 75.0], [-99.80874, 74.89744], [-100.88366, 75.05736], [-100.86292, 75.64075], [-102.50209, 75.5638], [-102.56552, 76.3366], [-101.48973, 76.30537], [-99.98349, 76.64634], [-98.57699, 76.58859], [-98.5, 76.72]]], [[[-108.21141, 76.20168], [-107.81943, 75.84552], [-106.92893, 76.01282], [-105.881, 75.9694], [-105.70498, 75.47951], [-106.31347, 75.00527], [-109.7, 74.85], [-112.22307, 74.41696], [-113.74381, 74.39427], [-113.87135, 74.72029], [-111.79421, 75.1625], [-116.31221, 75.04343], [-117.7104, 75.2222], [-116.34602, 76.19903], [-115.40487, 76.47887], [-112.59056, 76.14134], [-110.81422, 75.54919], [-109.0671, 75.47321], [-110.49726, 76.42982], [-109.5811, 76.79417], [-108.54859, 76.67832], [-108.21141, 76.20168]]], [[[-94.684085862999467, 77.097878323058382], [-93.573921068073133, 76.776295884906091], [-91.605023159536614, 76.778517971494608], [-90.741845872749224, 76.449597479956822], [-90.96966142450799, 76.074013170059459], [-89.822237921899273, 75.84777374948564], [-89.18708289259979, 75.61016551380763], [-87.838276333349626, 75.566188869927231], [-86.379192267588678, 75.482421373182177], [-84.789625210290609, 75.699204006646511], [-82.753444586910064, 75.784315090631253], [-81.128530849924374, 75.713983466282031], [-80.057510952459154, 75.336848863415895], [-79.833932868148338, 74.923127346487206], [-80.457770758775837, 74.657303778777788], [-81.948842536125539, 74.442459011524335], [-83.228893602211429, 74.564027818490956], [-86.097452358733307, 74.410032050261151], [-88.150350307960224, 74.392307033984991], [-89.764722052758373, 74.515555325001145], [-92.422440965529432, 74.837757880341002], [-92.768285488642817, 75.386819973442158], [-92.889905972041731, 75.882655341282657], [-93.893824022176005, 76.319243679500545], [-95.962457445035824, 76.441380927222468], [-97.121378953829492, 76.751077785947615], [-96.745122850312356, 77.161388658345146], [-94.684085862999467, 77.097878323058382]]], [[[-116.198586595507351, 77.645286770326209], [-116.335813361458392, 76.876961575010569], [-117.106050584768795, 76.530031846819128], [-118.040412157038148, 76.481171780087095], [-119.899317586885701, 76.053213406061985], [-121.499995077126499, 75.900018622532798], [-122.854924486158978, 76.116542873835698], [-122.854925293603216, 76.116542873835698], [-121.157535360328254, 76.86450755482835], [-119.103938971821051, 77.512219957174636], [-117.570130784965968, 77.498318996888116], [-116.198586595507351, 77.645286770326209]]], [[[-93.840003017943985, 77.519997260234504], [-94.295608283245258, 77.491342678528696], [-96.169654100310083, 77.555111395976894], [-96.436304490936124, 77.834629218243634], [-94.422577277386381, 77.820004787904992], [-93.720656297565881, 77.634331366680328], [-93.840003017943985, 77.519997260234504]]], [[[-110.186938035912974, 77.6970148790503], [-112.051191169058484, 77.409228827616857], [-113.534278937619064, 77.732206529441157], [-112.724586758253849, 78.051050116681949], [-111.26444332563085, 78.152956041161559], [-109.854451870547095, 77.99632477488484], [-110.186938035912974, 77.6970148790503]]], [[[-109.663145718202585, 78.60197256134569], [-110.881314256618865, 78.406919867660008], [-112.54209143761517, 78.407901719873507], [-112.525890876091594, 78.550554511215239], [-111.500010342233395, 78.849993598130567], [-110.963660651476019, 78.804440823065221], [-109.663145718202585, 78.60197256134569]]], [[[-95.830294969449341, 78.056941229963257], [-97.309842902398003, 77.850597235821795], [-98.124289313533978, 78.082856960757596], [-98.552867804746654, 78.458105373845115], [-98.631984422585532, 78.871930243638388], [-97.337231411512619, 78.831984361476771], [-96.754398769908789, 78.765812689927003], [-95.559277920294591, 78.418314520980289], [-95.830294969449341, 78.056941229963257]]], [[[-100.06019182005214, 78.324754340315906], [-99.670939093813615, 77.907544664207421], [-101.303940192453013, 78.018984890444813], [-102.949808722733053, 78.34322866486022], [-105.176132778731542, 78.380332343245755], [-104.210429450277161, 78.677420152491806], [-105.41958045125854, 78.918335679836446], [-105.492289191493157, 79.301593939929205], [-103.529282396237932, 79.165349026191649], [-100.825158047268815, 78.800461737778704], [-100.06019182005214, 78.324754340315906]]], [[[-87.02, 79.66], [-85.81435, 79.3369], [-87.18756, 79.0393], [-89.03535, 78.28723], [-90.80436, 78.21533], [-92.87669, 78.34333], [-93.95116, 78.75099], [-93.93574, 79.11373], [-93.14524, 79.3801], [-94.974, 79.37248], [-96.07614, 79.70502], [-96.70972, 80.15777], [-96.01644, 80.60233], [-95.32345, 80.90729], [-94.29843, 80.97727], [-94.73542, 81.20646], [-92.40984, 81.25739], [-91.13289, 80.72345], [-89.45, 80.509322033898286], [-87.81, 80.32], [-87.02, 79.66]]], [[[-68.5, 83.106321516765746], [-65.82735, 83.02801], [-63.68, 82.9], [-61.85, 82.6286], [-61.89388, 82.36165], [-64.334, 81.92775], [-66.75342, 81.72527], [-67.65755, 81.50141], [-65.48031, 81.50657], [-67.84, 80.9], [-69.4697, 80.61683], [-71.18, 79.8], [-73.2428, 79.63415], [-73.88, 79.430162204802087], [-76.90773, 79.32309], [-75.52924, 79.19766], [-76.22046, 79.01907], [-75.39345, 78.52581], [-76.34354, 78.18296], [-77.88851, 77.89991], [-78.36269, 77.50859], [-79.75951, 77.20968], [-79.61965, 76.98336], [-77.91089, 77.022045], [-77.88911, 76.777955], [-80.56125, 76.17812], [-83.17439, 76.45403], [-86.11184, 76.29901], [-87.6, 76.42], [-89.49068, 76.47239], [-89.6161, 76.95213], [-87.76739, 77.17833], [-88.26, 77.9], [-87.65, 77.970222222222219], [-84.97634, 77.53873], [-86.34, 78.18], [-87.96192, 78.37181], [-87.15198, 78.75867], [-85.37868, 78.9969], [-85.09495, 79.34543], [-86.50734, 79.73624], [-86.93179, 80.25145], [-84.19844, 80.20836], [-83.408695652173833, 80.1], [-81.84823, 80.46442], [-84.1, 80.58], [-87.59895, 80.51627], [-89.36663, 80.85569], [-90.2, 81.26], [-91.36786, 81.5531], [-91.58702, 81.89429], [-90.1, 82.085], [-88.93227, 82.11751], [-86.97024, 82.27961], [-85.5, 82.652273458057039], [-84.260005, 82.6], [-83.18, 82.32], [-82.42, 82.86], [-81.1, 83.02], [-79.30664, 83.13056], [-76.25, 83.172058823529397], [-75.71878, 83.06404], [-72.83153, 83.23324], [-70.665765, 83.169780758382842], [-68.5, 83.106321516765746]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Switzerland",
      "sov_a3": "CHE",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Switzerland",
      "adm0_a3": "CHE",
      "geou_dif": 0.000000,
      "geounit": "Switzerland",
      "gu_a3": "CHE",
      "su_dif": 0.000000,
      "subunit": "Switzerland",
      "su_a3": "CHE",
      "brk_diff": 0.000000,
      "name": "Switzerland",
      "name_long": "Switzerland",
      "brk_a3": "CHE",
      "brk_name": "Switzerland",
      "brk_group": null,
      "abbrev": "Switz.",
      "postal": "CH",
      "formal_en": "Swiss Confederation",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Switzerland",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 7.000000,
      "mapcolor13": 3.000000,
      "pop_est": 7604467.000000,
      "gdp_md_est": 316700.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "CH",
      "iso_a3": "CHE",
      "iso_n3": "756",
      "un_a3": "756",
      "wb_a2": "CH",
      "wb_a3": "CHE",
      "woe_id": -99.000000,
      "adm0_a3_is": "CHE",
      "adm0_a3_us": "CHE",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Western Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 11.000000,
      "long_len": 11.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[9.59422610844635, 47.52505809182027], [9.632931756232978, 47.347601223329988], [9.479969516649021, 47.102809963563374], [9.932448357796659, 46.920728054382963], [10.442701450246631, 46.893546250997431], [10.363378126678612, 46.483571275409858], [9.922836541390382, 46.314899400409189], [9.182881707403055, 46.440214748716983], [8.966305779667806, 46.036931871111193], [8.489952426801324, 46.005150865251686], [8.316629672894379, 46.163642483090861], [7.755992058959833, 45.824490057959309], [7.273850945676656, 45.776947740250776], [6.843592970414505, 45.991146552100609], [6.500099724970426, 46.429672756529442], [6.022609490593538, 46.272989813820473], [6.037388950229001, 46.725778713561866], [6.768713820023606, 47.287708238303701], [6.736571079138059, 47.541801255882845], [7.192202182655507, 47.449765529971017], [7.466759067422231, 47.620581976911808], [8.317301466514152, 47.613579820336263], [8.522611932009767, 47.830827541691292], [9.59422610844635, 47.52505809182027]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Chile",
      "sov_a3": "CHL",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Chile",
      "adm0_a3": "CHL",
      "geou_dif": 0.000000,
      "geounit": "Chile",
      "gu_a3": "CHL",
      "su_dif": 0.000000,
      "subunit": "Chile",
      "su_a3": "CHL",
      "brk_diff": 0.000000,
      "name": "Chile",
      "name_long": "Chile",
      "brk_a3": "CHL",
      "brk_name": "Chile",
      "brk_group": null,
      "abbrev": "Chile",
      "postal": "CL",
      "formal_en": "Republic of Chile",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Chile",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 9.000000,
      "pop_est": 16601707.000000,
      "gdp_md_est": 244500.000000,
      "pop_year": -99.000000,
      "lastcensus": 2002.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "CL",
      "iso_a3": "CHL",
      "iso_n3": "152",
      "un_a3": "152",
      "wb_a2": "CL",
      "wb_a3": "CHL",
      "woe_id": -99.000000,
      "adm0_a3_is": "CHL",
      "adm0_a3_us": "CHL",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "South America",
      "region_un": "Americas",
      "subregion": "South America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-68.634010227583161, -52.636370458874367], [-68.633349999999893, -54.8695], [-67.56244, -54.87001], [-66.95992, -54.89681], [-67.291029999999893, -55.30124], [-68.148629999999855, -55.61183], [-68.63999081081181, -55.580017999086891], [-69.2321, -55.49906], [-69.95809, -55.19843], [-71.00568, -55.05383], [-72.2639, -54.49514], [-73.2852, -53.957519999999889], [-74.66253, -52.83749], [-73.8381, -53.04743], [-72.43418, -53.7154], [-71.10773, -54.07433], [-70.591779999999801, -53.61583], [-70.26748, -52.93123], [-69.345649999999893, -52.5183], [-68.634010227583161, -52.636370458874367]]], [[[-68.219913092711238, -21.494346612231837], [-67.828179897722663, -22.872918796482182], [-67.106673550063618, -22.7359245744764], [-66.985233934177643, -22.986348565362832], [-67.328442959244143, -24.025303236590915], [-68.417652960876126, -24.518554782816878], [-68.386001146097357, -26.185016371365236], [-68.594799770772681, -26.506908868111267], [-68.295541551370405, -26.89933969493579], [-69.001234910748281, -27.521213881136134], [-69.656130337183157, -28.459141127233693], [-70.013550381129875, -29.367922865518551], [-69.919008348251936, -30.336339206668313], [-70.535068935819453, -31.365010267870289], [-70.074399380153636, -33.091209812148037], [-69.814776984319224, -33.273886000299854], [-69.817309129501467, -34.193571465798286], [-70.388049485949097, -35.169687595359449], [-70.364769253201672, -36.005088799789945], [-71.121880662709799, -36.658123874662337], [-71.118625047475433, -37.576827487947199], [-70.814664272734717, -38.552995293940739], [-71.413516608349056, -38.916022230791114], [-71.680761277946459, -39.808164157878068], [-71.915734015577556, -40.832339369470731], [-71.746803758415467, -42.051386407235995], [-72.148898078078531, -42.254888197601389], [-71.915423956983915, -43.408564548517418], [-71.464056159130507, -43.787611179378331], [-71.793622606071949, -44.207172133156106], [-71.329800788036209, -44.407521661151691], [-71.222778896759735, -44.784242852559416], [-71.65931555854533, -44.973688653341441], [-71.552009446891248, -45.560732924177131], [-71.917258470330211, -46.8848381487918], [-72.447355312780275, -47.738532810253531], [-72.331160854771952, -48.244238376661826], [-72.648247443314943, -48.878618259476788], [-73.415435757120036, -49.318436374712959], [-73.328050910114484, -50.378785088909872], [-72.975746832964631, -50.741450290734313], [-72.30997351753237, -50.677009779666356], [-72.329403856074038, -51.425956312872408], [-71.914803839796349, -52.009022305865926], [-69.49836218939609, -52.14276091263725], [-68.571545376241346, -52.299443855346262], [-69.461284349226645, -52.291950772663931], [-69.942779507106138, -52.537930590373257], [-70.845101691354529, -52.899200528525725], [-71.006332160105245, -53.833252042201352], [-71.429794684520942, -53.856454760300387], [-72.557942877884869, -53.531410001184462], [-73.702756720662876, -52.835069268607256], [-73.702756720662876, -52.835070076051501], [-74.946763475225168, -52.262753588419031], [-75.260026007778521, -51.629354750373224], [-74.97663245308982, -51.043395684615689], [-75.479754197883494, -50.378371677451561], [-75.608015102831956, -48.673772881871798], [-75.182769741502142, -47.71191944762316], [-74.126580980104706, -46.939253431995098], [-75.644395311165454, -46.64764332457203], [-74.692153693323064, -45.763976332380977], [-74.351709357384266, -44.103044122087894], [-73.240356004515206, -44.454960625995625], [-72.71780392117978, -42.383355808278992], [-73.388899909138246, -42.117532240569574], [-73.701335618774863, -43.365776462579745], [-74.331943122032584, -43.224958184584409], [-74.017957119427166, -41.794812920906836], [-73.677099372029971, -39.942212823243125], [-73.217592536090677, -39.258688653318515], [-73.505559455037059, -38.282882582351078], [-73.58806087919109, -37.156284681956024], [-73.166717088499297, -37.123780206044358], [-72.553136969681731, -35.508840020491036], [-71.861732143832569, -33.909092706031529], [-71.438450486929923, -32.418899428030826], [-71.668720669222438, -30.920644626592519], [-71.370082567007728, -30.095682061485007], [-71.489894375276464, -28.861442152625912], [-70.905123867461583, -27.640379734001201], [-70.724953986275978, -25.705924167587213], [-70.40396582709505, -23.628996677344546], [-70.091245897080682, -21.393319187101227], [-70.164419725205988, -19.756468194256186], [-70.372572394477743, -18.347975355708883], [-69.858443569605811, -18.092693780187034], [-69.590423753523993, -17.58001189541929], [-69.100246955019429, -18.260125420812656], [-68.966818406841838, -18.981683444904093], [-68.442225104430946, -19.405068454671422], [-68.757167121033717, -20.372657972904477], [-68.219913092711238, -21.494346612231837]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "China",
      "sov_a3": "CH1",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Country",
      "admin": "China",
      "adm0_a3": "CHN",
      "geou_dif": 0.000000,
      "geounit": "China",
      "gu_a3": "CHN",
      "su_dif": 0.000000,
      "subunit": "China",
      "su_a3": "CHN",
      "brk_diff": 0.000000,
      "name": "China",
      "name_long": "China",
      "brk_a3": "CHN",
      "brk_name": "China",
      "brk_group": null,
      "abbrev": "China",
      "postal": "CN",
      "formal_en": "People's Republic of China",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "China",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 3.000000,
      "pop_est": 1338612970.000000,
      "gdp_md_est": 7973000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "3. Emerging region: BRIC",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "CN",
      "iso_a3": "CHN",
      "iso_n3": "156",
      "un_a3": "156",
      "wb_a2": "CN",
      "wb_a3": "CHN",
      "woe_id": -99.000000,
      "adm0_a3_is": "CHN",
      "adm0_a3_us": "CHN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[110.339187860151554, 18.678395087147607], [109.475209588663716, 18.197700913968617], [108.655207961056163, 18.507681993071401], [108.626217482540454, 19.367887885001977], [109.119055617308021, 19.821038519769388], [110.211598748822865, 20.101253973872076], [110.786550734502242, 20.077534491450081], [111.010051304164648, 19.695929877190736], [110.570646600386823, 19.255879218009312], [110.339187860151554, 18.678395087147607]]], [[[127.657407261262421, 49.760270494172943], [129.397817824420457, 49.440600084015443], [130.582293328982388, 48.729687404976119], [130.987281528853856, 47.790132351261406], [132.506671991099523, 47.788969631534883], [133.373595819228029, 48.183441677434928], [135.026311476786731, 48.478229885443909], [134.500813836810636, 47.578439846377847], [134.11236209527263, 47.212467352886733], [133.769643996312908, 46.11692698829907], [133.097126906466457, 45.144066473972174], [131.88345421765959, 45.321161607436437], [131.025212030156098, 44.967953192721581], [131.288555129115565, 44.111519680348266], [131.144687941614876, 42.929989732426947], [130.63386640840983, 42.903014634770557], [130.640015903852458, 42.395009467125277], [129.994267205933255, 42.9853868678438], [129.59666873587949, 42.424981797854599], [128.052215203972338, 41.994284572917991], [128.208433058790746, 41.466771552082548], [127.34378299368305, 41.50315176041596], [126.869083286649897, 41.816569322266162], [126.182045119329445, 41.107336127276369], [125.079941847840615, 40.569823716792456], [124.265624627785343, 39.928493353834142], [122.867570428561038, 39.637787583976262], [122.131387974130945, 39.170451768544638], [121.054554478032884, 38.897471014962917], [121.585994907722494, 39.360853583324143], [121.376757033372684, 39.750261338859531], [122.168595005381036, 40.422442531896053], [121.640358514493556, 40.946389878903318], [120.768628778161968, 40.593388169917603], [119.63960208544907, 39.898055935214217], [119.023463983233029, 39.252333075511103], [118.042748651197911, 39.204273993479688], [117.532702264477081, 38.737635809884097], [118.059698520989713, 38.061475531561058], [118.878149855628379, 37.897325344385905], [118.911636183753529, 37.448463853498737], [119.70280236214208, 37.15638865818508], [120.823457472823662, 37.870427761377982], [121.711258579597967, 37.48112335870718], [122.35793745329849, 37.454484157860691], [122.519994744965828, 36.930614325501836], [121.104163853033043, 36.65132904718044], [120.637008905114584, 36.111439520811132], [119.664561802246084, 35.609790554337735], [119.151208123858595, 34.909859117160465], [120.227524855633732, 34.36033193616862], [120.620369093916594, 33.376722723925127], [121.229014113450233, 32.460318711877193], [121.908145786630058, 31.69217438407469], [121.891919386890351, 30.949351508095106], [121.264257440273326, 30.676267401648715], [121.503519321784751, 30.142914943964257], [122.0921138855891, 29.832520453403163], [121.938428175953078, 29.01802236583481], [121.684438511238483, 28.225512600206685], [121.125661248866464, 28.135673122667185], [120.395473260582349, 27.053206895449392], [119.585496860839584, 25.740780544532612], [118.656871372554548, 24.547390855400238], [117.281606479970861, 23.624501451099718], [115.890735304835147, 22.782873236578098], [114.763827345846238, 22.66807404224167], [114.152546828265685, 22.223760077396207], [113.806779819800767, 22.54833974862143], [113.24107791550162, 22.051367499270469], [111.843592157032475, 21.550493679281516], [110.785465529424158, 21.397143866455338], [110.44403934127169, 20.341032619706397], [109.889861281373584, 20.282457383703445], [109.627655063924664, 21.008227037026728], [109.864488153118344, 21.395050970947523], [108.52281294152445, 21.715212307211829], [108.050180291782993, 21.552379869060104], [107.043420037872664, 21.811898912029903], [106.56727339073538, 22.218204860924743], [106.725403273548494, 22.794267889898379], [105.811247186305224, 22.976892401617903], [105.32920942588666, 23.352063300056983], [104.476858351664504, 22.819150092046925], [103.504514601660532, 22.70375661873922], [102.706992222100183, 22.708795070887703], [102.170435825613566, 22.464753119389343], [101.65201785686159, 22.318198757409561], [101.803119744882935, 21.174366766845054], [101.270025669360024, 21.20165192309517], [101.180005324307587, 21.43657298429406], [101.150032993578264, 21.849984442629022], [100.416537713627378, 21.558839423096657], [99.983489211021578, 21.742936713136459], [99.240898878987224, 22.118314317304566], [99.531992222087439, 22.949038804612599], [98.898749220782832, 23.142722072842588], [98.660262485755794, 24.063286037690006], [97.604719679762042, 23.897404690033056], [97.724609002679159, 25.083637193293043], [98.67183800658924, 25.918702500913497], [98.712093947344584, 26.74353587494025], [98.682690057370536, 27.508812160750665], [98.246230910233379, 27.747221381129179], [97.911987746169444, 28.335945136014374], [97.327113885490036, 28.261582749946342], [96.248833449287844, 28.411030992134471], [96.58659061074755, 28.830979519154369], [96.117678664131034, 29.45280202892252], [95.404802280664654, 29.03171662039216], [94.565990431702943, 29.277438055939967], [93.413347609432691, 28.640629380807241], [92.503118931043645, 27.896876329046449], [91.696656528696707, 27.771741848251622], [91.25885379431989, 28.04061432546635], [90.730513950567826, 28.064953925075741], [90.015828891971211, 28.296438503527185], [89.475810174521172, 28.042758897406372], [88.814248488320601, 27.299315904239393], [88.730325962278556, 28.086864732367559], [88.120440708369955, 27.876541652939579], [86.954517043000664, 27.974261786403531], [85.82331994013154, 28.203575954698749], [85.011638218123068, 28.642773952747376], [84.234579705750178, 28.839893703724698], [83.898992954446754, 29.32022614187764], [83.33711510613719, 29.463731594352197], [82.327512648450892, 30.115268052688208], [81.5258044778748, 30.422716986608663], [81.11125613802929, 30.183480943313413], [79.721366815107132, 30.882714748654735], [78.738894484374015, 31.515906073527049], [78.458446486326039, 32.618164374312727], [79.176128777995558, 32.483779812137755], [79.208891636068557, 32.994394639613745], [78.811086460285736, 33.506198025032404], [78.912268914713223, 34.321936346975775], [77.837450799474624, 35.494009507787808], [76.192848341785719, 35.898403428687857], [75.896897414050187, 36.666806138651879], [75.158027785141002, 37.133030910789159], [74.980002475895418, 37.419990139305895], [74.829985792952158, 37.990007025701459], [74.864815708316797, 38.378846340481601], [74.257514276022704, 38.60650686294349], [73.928852166646408, 38.505815334622724], [73.675379266254851, 39.431236884105573], [73.960013055318456, 39.660008449861721], [73.82224368682833, 39.893973497063143], [74.776862420556057, 40.366425279291633], [75.467827996730733, 40.562072251948678], [76.526368035797447, 40.427946071935139], [76.904484490877138, 41.066485907549662], [78.187196893226059, 41.185315863604814], [78.543660923175281, 41.58224254003872], [80.119430373051415, 42.123940741538235], [80.259990268885332, 42.349999294599087], [80.180150180994389, 42.920067857426858], [80.866206496101228, 43.180362046881015], [79.96610639844144, 44.917516994804629], [81.947070753918098, 45.317027492853157], [82.458925815769049, 45.539649563166506], [83.180483839860557, 47.330031236350749], [85.164290399113241, 47.000955715516113], [85.720483839870695, 47.452969468773091], [85.768232863308384, 48.455750637396903], [86.598776483103364, 48.549181626980612], [87.359970330762707, 49.214980780629162], [87.751264276076682, 49.297197984405472], [88.013832228551706, 48.599462795600601], [88.854297723346775, 48.069081732773014], [90.280825636763922, 47.693549099307916], [90.970809360724985, 46.888146063822944], [90.585768263718336, 45.719716091487498], [90.94553958533433, 45.28607330991025], [92.13389082231825, 45.115075995456436], [93.48073367714133, 44.975472113620015], [94.68892866412537, 44.352331854828464], [95.306875441471533, 44.241330878265472], [95.762454868556716, 43.319449164394626], [96.349395786527822, 42.725635280928657], [97.451757440178, 42.748889675460077], [99.515817498780024, 42.524691473961695], [100.845865513108293, 42.663804429691425], [101.833040399179964, 42.514872951826277], [103.312278273534815, 41.907468166667627], [104.522281935649033, 41.908346666016627], [104.96499393109346, 41.597409572916348], [106.129315627061686, 42.134327704428898], [107.744772576938004, 42.481515814781915], [109.243595819131457, 42.519446316084156], [110.412103306115313, 42.871233628911028], [111.129682244920247, 43.406834011400178], [111.829587843881399, 43.743118394539493], [111.66773725794323, 44.073175767587713], [111.348376906379457, 44.457441718110061], [111.873306105600278, 45.102079372735119], [112.43606245325887, 45.011645616224257], [113.463906691544224, 44.808893134127118], [114.460331658996068, 45.339816799493889], [115.985096470200148, 45.727235012386018], [116.717868280098884, 46.388202419615254], [117.42170128791426, 46.672732855814218], [118.87432579963874, 46.805412095723653], [119.663269891438773, 46.692679958678951], [119.772823927897576, 47.048058783550147], [118.86657433479499, 47.74706004494621], [118.064142694166748, 48.066730455103738], [117.295507440257467, 47.697709052107399], [116.308952671373248, 47.853410142602826], [115.742837355615762, 47.726544501326288], [115.485282017073047, 48.135382595403456], [116.191802199367629, 49.134598090199063], [116.678800897286209, 49.888531399121405], [117.879244419426385, 49.510983384796958], [119.288460728025854, 50.142882798862047], [119.279365675942387, 50.582907619827296], [120.182049595216967, 51.643566392618027], [120.738191359542014, 51.964115302124554], [120.725789015792003, 52.516226304730822], [120.177088657716894, 52.753886216841209], [121.003084751470254, 53.251401068731241], [122.245747918792887, 53.431725979213695], [123.571506789240885, 53.458804429734641], [125.068211297710462, 53.161044826868846], [125.946348911646197, 52.79279857035695], [126.564399041857001, 51.784255479532703], [126.939156528837685, 51.35389415140591], [127.287455682484932, 50.739797268265448], [127.657407261262421, 49.760270494172943]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Ivory Coast",
      "sov_a3": "CIV",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Ivory Coast",
      "adm0_a3": "CIV",
      "geou_dif": 0.000000,
      "geounit": "Ivory Coast",
      "gu_a3": "CIV",
      "su_dif": 0.000000,
      "subunit": "Ivory Coast",
      "su_a3": "CIV",
      "brk_diff": 0.000000,
      "name": "Cte d'Ivoire",
      "name_long": "Cte d'Ivoire",
      "brk_a3": "CIV",
      "brk_name": "Cte d'Ivoire",
      "brk_group": null,
      "abbrev": "I.C.",
      "postal": "CI",
      "formal_en": "Republic of Ivory Coast",
      "formal_fr": "Republic of Cote D'Ivoire",
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Cte d'Ivoire",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 3.000000,
      "pop_est": 20617068.000000,
      "gdp_md_est": 33850.000000,
      "pop_year": -99.000000,
      "lastcensus": 1998.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "CI",
      "iso_a3": "CIV",
      "iso_n3": "384",
      "un_a3": "384",
      "wb_a2": "CI",
      "wb_a3": "CIV",
      "woe_id": -99.000000,
      "adm0_a3_is": "CIV",
      "adm0_a3_us": "CIV",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 13.000000,
      "long_len": 13.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-2.856125047202397, 4.994475816259509], [-3.311084357100071, 4.984295559098015], [-4.008819545904942, 5.179813340674315], [-4.649917364917911, 5.168263658057086], [-5.834496222344526, 4.993700669775137], [-6.528769090185847, 4.705087795425015], [-7.518941209330436, 4.338288479017308], [-7.71215938966975, 4.364565944837722], [-7.635368211284031, 5.188159084489456], [-7.539715135111763, 5.313345241716519], [-7.570152553731688, 5.707352199725904], [-7.993692592795881, 6.126189683451543], [-8.311347622094019, 6.193033148621083], [-8.60288021486862, 6.46756419517166], [-8.385451626000574, 6.911800645368743], [-8.48544552248535, 7.39520783124307], [-8.439298468448698, 7.686042792181738], [-8.280703497744938, 7.687179673692157], [-8.221792364932199, 8.123328762235573], [-8.299048631208564, 8.316443589710303], [-8.20349890790088, 8.455453192575447], [-7.832100389019188, 8.575704250518626], [-8.079113735374349, 9.376223863152035], [-8.309616461612251, 9.789531968622441], [-8.229337124046822, 10.129020290563901], [-8.029943610048619, 10.206534939001713], [-7.899589809592372, 10.297382106970828], [-7.622759161804809, 10.147236232946796], [-6.850506557635057, 10.138993841996239], [-6.666460944027548, 10.430810655148449], [-6.493965013037268, 10.411302801958271], [-6.205222947606431, 10.524060777219134], [-6.050452032892267, 10.096360785355444], [-5.816926235365287, 10.222554633012194], [-5.404341599946974, 10.370736802609146], [-4.954653286143099, 10.152713934769736], [-4.779883592131966, 9.821984768101743], [-4.330246954760383, 9.610834865757141], [-3.980449184576685, 9.8623440617217], [-3.511898972986273, 9.90032623945622], [-2.827496303712707, 9.642460842319778], [-2.562189500326241, 8.219627793811483], [-2.983584967450327, 7.379704901555513], [-3.244370083011262, 6.250471503113502], [-2.81070146321784, 5.38905121502411], [-2.856125047202397, 4.994475816259509]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Cameroon",
      "sov_a3": "CMR",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Cameroon",
      "adm0_a3": "CMR",
      "geou_dif": 0.000000,
      "geounit": "Cameroon",
      "gu_a3": "CMR",
      "su_dif": 0.000000,
      "subunit": "Cameroon",
      "su_a3": "CMR",
      "brk_diff": 0.000000,
      "name": "Cameroon",
      "name_long": "Cameroon",
      "brk_a3": "CMR",
      "brk_name": "Cameroon",
      "brk_group": null,
      "abbrev": "Cam.",
      "postal": "CM",
      "formal_en": "Republic of Cameroon",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Cameroon",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 3.000000,
      "pop_est": 18879301.000000,
      "gdp_md_est": 42750.000000,
      "pop_year": -99.000000,
      "lastcensus": 2005.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "CM",
      "iso_a3": "CMR",
      "iso_n3": "120",
      "un_a3": "120",
      "wb_a2": "CM",
      "wb_a3": "CMR",
      "woe_id": -99.000000,
      "adm0_a3_is": "CMR",
      "adm0_a3_us": "CMR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Middle Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[13.075822381246752, 2.267097072759015], [12.951333855855609, 2.32161570882694], [12.359380323952221, 2.19281220133945], [11.75166548019979, 2.326757513839993], [11.276449008843713, 2.261050930180872], [9.649158155972628, 2.283866075037736], [9.795195753629457, 3.073404445809117], [9.404366896206, 3.734526882335203], [8.948115675501072, 3.904128933117136], [8.744923943729418, 4.35221527751996], [8.48881554529089, 4.495617377129918], [8.500287713259695, 4.771982937026849], [8.757532993208628, 5.479665839047911], [9.233162876023044, 6.444490668153335], [9.522705926154401, 6.453482367372117], [10.118276808318257, 7.03876963950988], [10.497375115611419, 7.055357774275564], [11.058787876030351, 6.644426784690594], [11.745774366918511, 6.981382961449754], [11.839308709366803, 7.397042344589437], [12.063946160539558, 7.799808457872302], [12.218872104550599, 8.305824082874324], [12.753671502339216, 8.717762762888995], [12.955467970438974, 9.417771714714704], [13.167599724997103, 9.640626328973411], [13.308676385153918, 10.160362046748928], [13.572949659894562, 10.798565985553566], [14.415378859116684, 11.572368882692075], [14.468192172918975, 11.904751695193411], [14.577177768622533, 12.085360826053503], [14.181336297266794, 12.483656927943116], [14.213530714584635, 12.802035427293347], [14.495787387762846, 12.859396267137329], [14.893385857816526, 12.219047756392584], [14.960151808337599, 11.555574042197224], [14.923564894274961, 10.891325181517473], [15.467872755605271, 9.982336737503431], [14.909353875394716, 9.992129421422732], [14.62720055508106, 9.920919297724538], [14.171466098699028, 10.021378282099931], [13.954218377344006, 9.549494940626687], [14.54446658698177, 8.965861314322268], [14.97999555833769, 8.796104234243472], [15.120865512765334, 8.382150173369425], [15.436091749745771, 7.692812404811973], [15.279460483469109, 7.421924546737969], [14.776545444404576, 6.408498033062045], [14.536560092841114, 6.22695872642069], [14.459407179429348, 5.4517605656103], [14.558935988023507, 5.03059764243153], [14.478372430080469, 4.732605495620447], [14.950953403389661, 4.210389309094921], [15.036219516671252, 3.851367295747124], [15.405395948964383, 3.33530060466434], [15.862732374747482, 3.013537298998983], [15.907380812247652, 2.557389431158612], [16.012852410555354, 2.267639675298085], [15.940918816805066, 1.727672634280296], [15.146341993885244, 1.964014797367184], [14.337812534246581, 2.227874660649491], [13.075822381246752, 2.267097072759015]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Democratic Republic of the Congo",
      "sov_a3": "COD",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Democratic Republic of the Congo",
      "adm0_a3": "COD",
      "geou_dif": 0.000000,
      "geounit": "Democratic Republic of the Congo",
      "gu_a3": "COD",
      "su_dif": 0.000000,
      "subunit": "Democratic Republic of the Congo",
      "su_a3": "COD",
      "brk_diff": 0.000000,
      "name": "Dem. Rep. Congo",
      "name_long": "Democratic Republic of the Congo",
      "brk_a3": "COD",
      "brk_name": "Democratic Republic of the Congo",
      "brk_group": null,
      "abbrev": "D.R.C.",
      "postal": "DRC",
      "formal_en": "Democratic Republic of the Congo",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Congo, Dem. Rep.",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 7.000000,
      "pop_est": 68692542.000000,
      "gdp_md_est": 20640.000000,
      "pop_year": -99.000000,
      "lastcensus": 1984.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "CD",
      "iso_a3": "COD",
      "iso_n3": "180",
      "un_a3": "180",
      "wb_a2": "ZR",
      "wb_a3": "ZAR",
      "woe_id": -99.000000,
      "adm0_a3_is": "COD",
      "adm0_a3_us": "COD",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Middle Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 15.000000,
      "long_len": 32.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[30.833859897593811, 3.509165961110341], [30.773346795380039, 2.339883327642127], [31.174149204235817, 2.204465236821264], [30.852670118948058, 1.849396470543809], [30.468507521290295, 1.583805446779721], [30.086153598762706, 1.062312730306289], [29.875778842902491, 0.597379868976304], [29.819503208136638, -0.205310153813372], [29.587837762172171, -0.587405694179481], [29.579466180140884, -1.341313164885626], [29.291886834436614, -1.620055840667987], [29.254834832483343, -2.215109958508911], [29.117478875451553, -2.292211195488385], [29.024926385216787, -2.839257907730158], [29.276383904749053, -3.293907159034063], [29.339997592900346, -4.499983412294092], [29.519986606572928, -5.419978936386315], [29.419992710088167, -5.939998874539434], [29.620032179490014, -6.520015150583426], [30.199996779101696, -7.079980970898163], [30.740015496551791, -8.340007419470915], [30.346086053190817, -8.238256524288218], [29.00291222506047, -8.407031752153472], [28.734866570762502, -8.526559340044578], [28.449871046672826, -9.164918308146085], [28.673681674928929, -9.605924981324932], [28.49606977714177, -10.789883721564046], [28.372253045370428, -11.793646742401393], [28.642417433392353, -11.971568698782315], [29.34154788586909, -12.360743910372413], [29.61600141777123, -12.178894545137311], [29.699613885219492, -13.257226657771831], [28.934285922976837, -13.248958428605135], [28.523561639121027, -12.698604424696683], [28.155108676879987, -12.272480564017897], [27.388798862423783, -12.132747491100666], [27.164419793412463, -11.608748467661075], [26.553087599399618, -11.924439792532127], [25.752309604604733, -11.784965101776358], [25.418118116973204, -11.330935967659961], [24.783169793402951, -11.238693536018964], [24.314516228947952, -11.26282642989927], [24.257155389103989, -10.951992689663657], [23.912215203555718, -10.926826267137514], [23.45679080576744, -10.867863457892483], [22.837345411884741, -11.017621758674331], [22.402798292742375, -10.993075453335692], [22.155268182064308, -11.084801120653772], [22.208753289486395, -9.894796237836509], [21.875181919042348, -9.523707777548566], [21.8018013851879, -8.908706556842979], [21.949130893652043, -8.305900974158277], [21.746455926203311, -7.920084730667149], [21.728110792739699, -7.290872491081302], [20.514748162526502, -7.299605808138629], [20.601822950938299, -6.939317722199682], [20.091621534920648, -6.943090101756994], [20.037723016040218, -7.116361179231646], [19.41750247567316, -7.155428562044299], [19.166613396896111, -7.738183688999754], [19.016751743249671, -7.988245944860132], [18.464175652752687, -7.847014255406443], [18.134221632569052, -7.987677504104923], [17.472970004962235, -8.0685511206417], [17.089995965247169, -7.545688978712526], [16.860190870845202, -7.222297865429987], [16.573179965896145, -6.622644545115087], [16.326528354567046, -5.877470391466268], [13.375597364971895, -5.864241224799549], [13.024869419006961, -5.984388929878158], [12.735171339578699, -5.965682061388499], [12.322431674863511, -6.10009246177966], [12.182336866920252, -5.789930515163839], [12.436688266660868, -5.684303887559246], [12.468004184629736, -5.248361504745005], [12.63161176926579, -4.991271254092936], [12.995517205465177, -4.781103203961884], [13.258240187237048, -4.882957452009165], [13.600234816144678, -4.50013844159097], [14.144956088933299, -4.510008640158716], [14.209034864975223, -4.793092136253598], [14.582603794013181, -4.97023894615014], [15.170991652088444, -4.343507175314301], [15.753540073314753, -3.855164890156097], [16.006289503654301, -3.535132744972529], [15.972803175529151, -2.712392266453612], [16.407091912510054, -1.740927015798682], [16.865306837642123, -1.225816338713287], [17.523716261472856, -0.743830254726987], [17.638644646889986, -0.424831638189247], [17.663552687254679, -0.058083998213817], [17.826540154703252, 0.288923244626105], [17.774191928791566, 0.855658677571085], [17.898835483479587, 1.741831976728278], [18.094275750407434, 2.365721543788055], [18.393792351971143, 2.90044342692822], [18.453065219809929, 3.504385891123349], [18.542982211997781, 4.201785183118318], [18.932312452884759, 4.709506130385975], [19.467783644293149, 5.03152781821278], [20.290679152108936, 4.691677761245288], [20.927591180106276, 4.322785549329737], [21.659122755630023, 4.22434194581372], [22.405123732195538, 4.029160061047321], [22.704123569436291, 4.633050848810157], [22.841479526468106, 4.710126247573484], [23.297213982850138, 4.609693101414223], [24.410531040146253, 5.10878408448913], [24.805028924262416, 4.89724660890235], [25.128833449003281, 4.92724477784779], [25.278798455514305, 5.170408229997192], [25.650455356557472, 5.256087754737123], [26.402760857862543, 5.150874538590871], [27.04406538260471, 5.127852688004836], [27.37422610851749, 5.233944403500061], [27.979977247842811, 4.408413397637375], [28.428993768026913, 4.287154649264494], [28.696677687298802, 4.455077215996937], [29.1590784034465, 4.389267279473231], [29.71599531425602, 4.600804755060025], [29.953500197069474, 4.173699042167684], [30.833859897593811, 3.509165961110341]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Republic of Congo",
      "sov_a3": "COG",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Republic of Congo",
      "adm0_a3": "COG",
      "geou_dif": 0.000000,
      "geounit": "Republic of Congo",
      "gu_a3": "COG",
      "su_dif": 0.000000,
      "subunit": "Republic of Congo",
      "su_a3": "COG",
      "brk_diff": 0.000000,
      "name": "Congo",
      "name_long": "Republic of Congo",
      "brk_a3": "COG",
      "brk_name": "Republic of Congo",
      "brk_group": null,
      "abbrev": "Rep. Congo",
      "postal": "CG",
      "formal_en": "Republic of Congo",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Congo, Rep.",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 10.000000,
      "pop_est": 4012809.000000,
      "gdp_md_est": 15350.000000,
      "pop_year": -99.000000,
      "lastcensus": 2007.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "CG",
      "iso_a3": "COG",
      "iso_n3": "178",
      "un_a3": "178",
      "wb_a2": "CG",
      "wb_a3": "COG",
      "woe_id": -99.000000,
      "adm0_a3_is": "COG",
      "adm0_a3_us": "COG",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Middle Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 5.000000,
      "long_len": 17.000000,
      "abbrev_len": 10.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[12.995517205465177, -4.781103203961884], [12.620759718484493, -4.438023369976136], [12.318607618873926, -4.606230157086188], [11.91496300624209, -5.037986748884791], [11.093772820691925, -3.978826592630547], [11.855121697648116, -3.426870619321051], [11.478038771214303, -2.765618991714241], [11.820963575903193, -2.514161472181982], [12.495702752338161, -2.391688327650243], [12.575284458067642, -1.948511244315135], [13.109618767965628, -2.428740329603514], [13.99240726080771, -2.4708049454891], [14.299210239324566, -1.998275648612214], [14.425455763413595, -1.333406670744971], [14.316418491277744, -0.552627455247048], [13.843320753645656, 0.038757635901149], [14.276265903386957, 1.196929836426619], [14.026668735417218, 1.395677395021153], [13.282631463278818, 1.31418366129688], [13.003113641012078, 1.83089630778332], [13.075822381246752, 2.267097072759015], [14.337812534246581, 2.227874660649491], [15.146341993885244, 1.964014797367184], [15.940918816805066, 1.727672634280296], [16.012852410555354, 2.267639675298085], [16.537058139724138, 3.198254706226279], [17.133042433346304, 3.728196519379452], [17.809900343505262, 3.56019643799857], [18.453065219809929, 3.504385891123349], [18.393792351971143, 2.90044342692822], [18.094275750407434, 2.365721543788055], [17.898835483479587, 1.741831976728278], [17.774191928791566, 0.855658677571085], [17.826540154703252, 0.288923244626105], [17.663552687254679, -0.058083998213817], [17.638644646889986, -0.424831638189247], [17.523716261472856, -0.743830254726987], [16.865306837642123, -1.225816338713287], [16.407091912510054, -1.740927015798682], [15.972803175529151, -2.712392266453612], [16.006289503654301, -3.535132744972529], [15.753540073314753, -3.855164890156097], [15.170991652088444, -4.343507175314301], [14.582603794013181, -4.97023894615014], [14.209034864975223, -4.793092136253598], [14.144956088933299, -4.510008640158716], [13.600234816144678, -4.50013844159097], [13.258240187237048, -4.882957452009165], [12.995517205465177, -4.781103203961884]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Colombia",
      "sov_a3": "COL",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Colombia",
      "adm0_a3": "COL",
      "geou_dif": 0.000000,
      "geounit": "Colombia",
      "gu_a3": "COL",
      "su_dif": 0.000000,
      "subunit": "Colombia",
      "su_a3": "COL",
      "brk_diff": 0.000000,
      "name": "Colombia",
      "name_long": "Colombia",
      "brk_a3": "COL",
      "brk_name": "Colombia",
      "brk_group": null,
      "abbrev": "Col.",
      "postal": "CO",
      "formal_en": "Republic of Colombia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Colombia",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 1.000000,
      "pop_est": 45644023.000000,
      "gdp_md_est": 395400.000000,
      "pop_year": -99.000000,
      "lastcensus": 2006.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "CO",
      "iso_a3": "COL",
      "iso_n3": "170",
      "un_a3": "170",
      "wb_a2": "CO",
      "wb_a3": "COL",
      "woe_id": -99.000000,
      "adm0_a3_is": "COL",
      "adm0_a3_us": "COL",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "South America",
      "region_un": "Americas",
      "subregion": "South America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-75.373223232713855, -0.15203175212045], [-75.801465827116601, 0.084801337073202], [-76.292314419240967, 0.416047268064119], [-76.576379767549398, 0.256935533037435], [-77.424984300430395, 0.395686753741117], [-77.668612840470445, 0.825893052570962], [-77.855061408179523, 0.809925034992773], [-78.855258755188714, 1.380923773601822], [-78.99093522817104, 1.691369940595251], [-78.617831387023713, 1.766404120283056], [-78.662118089497852, 2.267355454920477], [-78.427610439757331, 2.629555568854215], [-77.931542527971487, 2.696605739752926], [-77.51043128122501, 3.325016994638247], [-77.12768978545526, 3.849636135265357], [-77.496271938777028, 4.087606105969428], [-77.307601284479404, 4.667984117039452], [-77.533220587865728, 5.582811997902497], [-77.318815070286746, 5.84535411216136], [-77.47666073272228, 6.691116441266303], [-77.881571417945253, 7.223771267114785], [-77.753413865861404, 7.709839789252143], [-77.431107957656991, 7.638061224798734], [-77.242566494440084, 7.935278225125444], [-77.474722866511328, 8.524286200388218], [-77.353360765273862, 8.67050466555807], [-76.836673957003569, 8.638749497914716], [-76.086383836557857, 9.336820583529487], [-75.674600185840063, 9.443248195834599], [-75.664704149056178, 9.774003200718738], [-75.480425991503353, 10.618990383339309], [-74.906895107711989, 11.083044745320322], [-74.276752692344886, 11.102035834187587], [-74.197222663047697, 11.310472723836867], [-73.414763963500292, 11.22701528568548], [-72.627835252559635, 11.731971543825523], [-72.238194953078917, 11.955549628136326], [-71.754090135368642, 12.437303168177309], [-71.399822353791706, 12.376040757695293], [-71.13746110704588, 12.112981879113505], [-71.331583624950298, 11.776284084515808], [-71.973921678338286, 11.60867157637712], [-72.227575446242938, 11.108702093953241], [-72.614657762325209, 10.821975409381778], [-72.905286017534706, 10.450344346554772], [-73.027604132769568, 9.736770331252444], [-73.304951544880055, 9.151999823437606], [-72.788729824500393, 9.085027167187334], [-72.660494757768106, 8.625287787302682], [-72.439862230097958, 8.405275376820029], [-72.360900641555972, 8.002638454617895], [-72.479678921178845, 7.632506008327354], [-72.444487270788073, 7.423784898300482], [-72.198352423781884, 7.340430813013683], [-71.960175747348643, 6.991614895043539], [-70.674233567981517, 7.087784735538719], [-70.093312954372422, 6.96037649172311], [-69.389479946557117, 6.099860541198836], [-68.985318569602356, 6.206804917826858], [-68.26505245631823, 6.153268133972475], [-67.695087246355016, 6.267318020040647], [-67.341439581965574, 6.095468044454023], [-67.521531948502755, 5.556870428891969], [-67.744696621355217, 5.221128648291668], [-67.823012254493548, 4.503937282728899], [-67.621835903581285, 3.839481716319995], [-67.337563849543685, 3.542342230641722], [-67.303173183853445, 3.31845408773718], [-67.809938117123707, 2.820655015469569], [-67.447092047786313, 2.600280869960869], [-67.18129431829307, 2.250638129074062], [-66.87632585312258, 1.253360500489336], [-67.065048183852497, 1.130112209473225], [-67.259997524673594, 1.719998684084956], [-67.537810024674698, 2.03716278727633], [-67.868565029558837, 1.692455145673392], [-69.816973232691623, 1.714805202639624], [-69.80459672715773, 1.089081122233466], [-69.21863766140018, 0.985676581217433], [-69.252434048119056, 0.602650865070075], [-69.452396002872462, 0.706158758950693], [-70.015565761989308, 0.541414292804205], [-70.020655890570055, -0.185156345219539], [-69.5770653957766, -0.549991957200163], [-69.420485805932231, -1.122618503426409], [-69.444101935489613, -1.556287123219818], [-69.893635219996625, -4.298186944194327], [-70.394043952094989, -3.766591485207825], [-70.692682054309714, -3.742872002785859], [-70.047708502874855, -2.725156345229699], [-70.813475714791963, -2.256864515800743], [-71.413645799429787, -2.342802422702128], [-71.774760708285399, -2.169789727388938], [-72.325786505813653, -2.434218031426454], [-73.070392218707241, -2.308954359550953], [-73.6595035468346, -1.260491224781134], [-74.122395189089062, -1.002832533373848], [-74.441600511355972, -0.530820000819887], [-75.106624518520078, -0.05720549886486], [-75.373223232713855, -0.15203175212045]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Costa Rica",
      "sov_a3": "CRI",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Costa Rica",
      "adm0_a3": "CRI",
      "geou_dif": 0.000000,
      "geounit": "Costa Rica",
      "gu_a3": "CRI",
      "su_dif": 0.000000,
      "subunit": "Costa Rica",
      "su_a3": "CRI",
      "brk_diff": 0.000000,
      "name": "Costa Rica",
      "name_long": "Costa Rica",
      "brk_a3": "CRI",
      "brk_name": "Costa Rica",
      "brk_group": null,
      "abbrev": "C.R.",
      "postal": "CR",
      "formal_en": "Republic of Costa Rica",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Costa Rica",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 2.000000,
      "pop_est": 4253877.000000,
      "gdp_md_est": 48320.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "CR",
      "iso_a3": "CRI",
      "iso_n3": "188",
      "un_a3": "188",
      "wb_a2": "CR",
      "wb_a3": "CRI",
      "woe_id": -99.000000,
      "adm0_a3_is": "CRI",
      "adm0_a3_us": "CRI",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Central America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 10.000000,
      "long_len": 10.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-82.965783047197363, 8.225027980985985], [-83.508437262694315, 8.446926581247283], [-83.711473965169077, 8.656836249216866], [-83.596313035806645, 8.830443223501419], [-83.632641567707836, 9.051385809765321], [-83.909885626953738, 9.290802720573581], [-84.303401658856359, 9.487354030795714], [-84.647644212568665, 9.615537421095709], [-84.713350796227772, 9.908051866083852], [-84.975660366541334, 10.086723130733006], [-84.91137488477024, 9.795991522658923], [-85.11092342806532, 9.55703969974131], [-85.339488288092269, 9.83454214114866], [-85.66078650586698, 9.933347479690724], [-85.797444831062847, 10.134885565629034], [-85.791708747078431, 10.439337266476613], [-85.659313727546674, 10.754330959511719], [-85.941725430021762, 10.895278428587801], [-85.712540452807303, 11.088444932494824], [-85.561851976244199, 11.217119248901597], [-84.903003302738952, 10.952303371621896], [-84.673069017256267, 11.082657172078143], [-84.35593075228104, 10.999225572142905], [-84.19017859570485, 10.793450018756674], [-83.895054490885954, 10.726839097532446], [-83.655611741861577, 10.938764146361422], [-83.402319708982958, 10.395438137244653], [-83.015676642575173, 9.992982082555557], [-82.546196255203483, 9.566134751824677], [-82.932890998043575, 9.476812038608173], [-82.927154914059159, 9.074330145702916], [-82.719183112300527, 8.925708726431495], [-82.868657192704774, 8.807266343618522], [-82.829770677405165, 8.62629547773237], [-82.913176439124214, 8.42351715741907], [-82.965783047197363, 8.225027980985985]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Cuba",
      "sov_a3": "CUB",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Cuba",
      "adm0_a3": "CUB",
      "geou_dif": 0.000000,
      "geounit": "Cuba",
      "gu_a3": "CUB",
      "su_dif": 0.000000,
      "subunit": "Cuba",
      "su_a3": "CUB",
      "brk_diff": 0.000000,
      "name": "Cuba",
      "name_long": "Cuba",
      "brk_a3": "CUB",
      "brk_name": "Cuba",
      "brk_group": null,
      "abbrev": "Cuba",
      "postal": "CU",
      "formal_en": "Republic of Cuba",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Cuba",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 4.000000,
      "pop_est": 11451652.000000,
      "gdp_md_est": 108200.000000,
      "pop_year": -99.000000,
      "lastcensus": 2002.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "CU",
      "iso_a3": "CUB",
      "iso_n3": "192",
      "un_a3": "192",
      "wb_a2": "CU",
      "wb_a3": "CUB",
      "woe_id": -99.000000,
      "adm0_a3_is": "CUB",
      "adm0_a3_us": "CUB",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Caribbean",
      "region_wb": "Latin America & Caribbean",
      "name_len": 4.000000,
      "long_len": 4.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-82.268151211257063, 23.188610744717707], [-81.404457160146833, 23.117271429938782], [-80.618768683581195, 23.105980129483001], [-79.67952368846025, 22.76530324959883], [-79.281485968732085, 22.399201565027056], [-78.347434455056487, 22.512166246017088], [-77.993295864560281, 22.277193508385935], [-77.146422492161051, 21.657851467367834], [-76.523824835908556, 21.206819566324373], [-76.19462012399319, 21.220565497314013], [-75.59822241891267, 21.016624457274133], [-75.671060350228061, 20.735091254148003], [-74.933896043584497, 20.693905137611385], [-74.17802486845126, 20.284627793859741], [-74.296648118777256, 20.050378526280682], [-74.961594611292938, 19.923435370355691], [-75.634680141894592, 19.873774318923196], [-76.323656175425995, 19.95289093676206], [-77.755480923153073, 19.855480861891877], [-77.085108405246743, 20.413353786698792], [-77.492654588516615, 20.673105373613893], [-78.137292243141587, 20.739948838783434], [-78.482826707661189, 21.028613389565852], [-78.719866502584011, 21.598113511638434], [-79.284999966127941, 21.559175319906501], [-80.217475348618649, 21.827324327069036], [-80.517534552721415, 22.03707896574176], [-81.820943366203181, 22.192056586185071], [-82.16999182811864, 22.387109279870753], [-81.795001797192668, 22.636964830001958], [-82.775897996740852, 22.688150336187064], [-83.494458787759356, 22.168517971276131], [-83.908800421875625, 22.154565334557333], [-84.052150845053262, 21.910575059491254], [-84.54703019889638, 21.801227728761646], [-84.974911058273108, 21.89602814380109], [-84.447062140627764, 22.204949856041907], [-84.230357021811784, 22.565754706303764], [-83.778239915690193, 22.788118394455694], [-83.26754757356575, 22.983041897060644], [-82.510436164057509, 23.078746649665188], [-82.268151211257063, 23.188610744717707]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Northern Cyprus",
      "sov_a3": "CYN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Northern Cyprus",
      "adm0_a3": "CYN",
      "geou_dif": 0.000000,
      "geounit": "Northern Cyprus",
      "gu_a3": "CYN",
      "su_dif": 0.000000,
      "subunit": "Northern Cyprus",
      "su_a3": "CYN",
      "brk_diff": 1.000000,
      "name": "N. Cyprus",
      "name_long": "Northern Cyprus",
      "brk_a3": "B20",
      "brk_name": "N. Cyprus",
      "brk_group": null,
      "abbrev": "N. Cy.",
      "postal": "CN",
      "formal_en": "Turkish Republic of Northern Cyprus",
      "formal_fr": null,
      "note_adm0": "Self admin.",
      "note_brk": "Self admin.; Claimed by Cyprus",
      "name_sort": "Cyprus, Northern",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 8.000000,
      "pop_est": 265100.000000,
      "gdp_md_est": 3600.000000,
      "pop_year": -99.000000,
      "lastcensus": -99.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "-99",
      "iso_a3": "-99",
      "iso_n3": "-99",
      "un_a3": "-099",
      "wb_a2": "-99",
      "wb_a3": "-99",
      "woe_id": -99.000000,
      "adm0_a3_is": "CYP",
      "adm0_a3_us": "CYP",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Europe & Central Asia",
      "name_len": 9.000000,
      "long_len": 15.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[32.731780226377452, 35.140025946588437], [32.80247358575275, 35.145503648411378], [32.946960890440806, 35.386703396133697], [33.667227003724946, 35.373215847305516], [34.576473829900465, 35.671595567358793], [33.900804477684204, 35.245755927057616], [33.973616570783463, 35.058506374648005], [33.866439650210111, 35.093594672174191], [33.675391880027064, 35.017862860650453], [33.525685255677502, 35.038688462864073], [33.475817498515852, 35.000344550103506], [33.455922072083467, 35.101423651666408], [33.383833449036302, 35.16271190036457], [33.190977003723049, 35.17312470147138], [32.919572381326134, 35.087832749973643], [32.731780226377452, 35.140025946588437]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Cyprus",
      "sov_a3": "CYP",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Cyprus",
      "adm0_a3": "CYP",
      "geou_dif": 0.000000,
      "geounit": "Cyprus",
      "gu_a3": "CYP",
      "su_dif": 0.000000,
      "subunit": "Cyprus",
      "su_a3": "CYP",
      "brk_diff": 0.000000,
      "name": "Cyprus",
      "name_long": "Cyprus",
      "brk_a3": "CYP",
      "brk_name": "Cyprus",
      "brk_group": null,
      "abbrev": "Cyp.",
      "postal": "CY",
      "formal_en": "Republic of Cyprus",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Cyprus",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 7.000000,
      "pop_est": 531640.000000,
      "gdp_md_est": 22700.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "CY",
      "iso_a3": "CYP",
      "iso_n3": "196",
      "un_a3": "196",
      "wb_a2": "CY",
      "wb_a3": "CYP",
      "woe_id": -99.000000,
      "adm0_a3_is": "CYP",
      "adm0_a3_us": "CYP",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Europe & Central Asia",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[33.973616570783463, 35.058506374648005], [34.004880812320039, 34.978097846001859], [32.979827101378447, 34.571869411755443], [32.490296258277539, 34.701654771456475], [32.25666710788596, 35.103232326796629], [32.731780226377452, 35.140025946588437], [32.919572381326134, 35.087832749973643], [33.190977003723049, 35.17312470147138], [33.383833449036302, 35.16271190036457], [33.455922072083467, 35.101423651666408], [33.475817498515852, 35.000344550103506], [33.525685255677502, 35.038688462864073], [33.675391880027064, 35.017862860650453], [33.866439650210111, 35.093594672174191], [33.973616570783463, 35.058506374648005]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Czech Republic",
      "sov_a3": "CZE",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Czech Republic",
      "adm0_a3": "CZE",
      "geou_dif": 0.000000,
      "geounit": "Czech Republic",
      "gu_a3": "CZE",
      "su_dif": 0.000000,
      "subunit": "Czech Republic",
      "su_a3": "CZE",
      "brk_diff": 0.000000,
      "name": "Czech Rep.",
      "name_long": "Czech Republic",
      "brk_a3": "CZE",
      "brk_name": "Czech Rep.",
      "brk_group": null,
      "abbrev": "Cz. Rep.",
      "postal": "CZ",
      "formal_en": "Czech Republic",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Czech Republic",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 6.000000,
      "pop_est": 10211904.000000,
      "gdp_md_est": 265200.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "CZ",
      "iso_a3": "CZE",
      "iso_n3": "203",
      "un_a3": "203",
      "wb_a2": "CZ",
      "wb_a3": "CZE",
      "woe_id": -99.000000,
      "adm0_a3_is": "CZE",
      "adm0_a3_us": "CZE",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Eastern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 10.000000,
      "long_len": 14.000000,
      "abbrev_len": 8.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[16.960288120194576, 48.5969823268506], [16.499282667718774, 48.785808010445109], [16.029647251050221, 48.73389903420793], [15.253415561593982, 49.039074205107582], [14.901447381254057, 48.964401760445824], [14.338897739324722, 48.555305284207208], [13.595945672264437, 48.877171942737149], [13.031328973043431, 49.307068182973239], [12.521024204161193, 49.547415269562734], [12.415190870827445, 49.969120795280567], [12.240111118222558, 50.266337795607285], [12.966836785543194, 50.484076443069085], [13.338131951560285, 50.733234361364353], [14.056227654688172, 50.9269176295943], [14.307013380600637, 51.117267767941414], [14.570718214586066, 51.002339382524276], [15.016995883858669, 51.10667409932158], [15.490972120839729, 50.784729926143207], [16.238626743238569, 50.697732652379841], [16.176253289462267, 50.422607326857907], [16.719475945714436, 50.215746568393541], [16.868769158605659, 50.47397370055603], [17.554567091551121, 50.362145901076417], [17.649445021238989, 50.049038397819956], [18.392913852622172, 49.988628648470751], [18.853144158613617, 49.496229763377642], [18.554971144289482, 49.495015367218784], [18.399993523846177, 49.315000515330041], [18.170498488037964, 49.271514797556435], [18.104972771891852, 49.043983466175312], [17.913511590250465, 48.996492824899086], [17.886484816161811, 48.903475246773709], [17.545006951577108, 48.80001902932537], [17.101984897538898, 48.816968899117114], [16.960288120194576, 48.5969823268506]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Germany",
      "sov_a3": "DEU",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Germany",
      "adm0_a3": "DEU",
      "geou_dif": 0.000000,
      "geounit": "Germany",
      "gu_a3": "DEU",
      "su_dif": 0.000000,
      "subunit": "Germany",
      "su_a3": "DEU",
      "brk_diff": 0.000000,
      "name": "Germany",
      "name_long": "Germany",
      "brk_a3": "DEU",
      "brk_name": "Germany",
      "brk_group": null,
      "abbrev": "Ger.",
      "postal": "D",
      "formal_en": "Federal Republic of Germany",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Germany",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 1.000000,
      "pop_est": 82329758.000000,
      "gdp_md_est": 2918000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "1. Developed region: G7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "DE",
      "iso_a3": "DEU",
      "iso_n3": "276",
      "un_a3": "276",
      "wb_a2": "DE",
      "wb_a3": "DEU",
      "woe_id": -99.000000,
      "adm0_a3_is": "DEU",
      "adm0_a3_us": "DEU",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Western Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[9.921906365609232, 54.983104153048032], [9.9395797054529, 54.596641954153256], [10.950112338920519, 54.363607082733154], [10.93946699386845, 54.00869334575259], [11.956252475643282, 54.196485500701158], [12.518440382546714, 54.470370591847995], [13.647467075259499, 54.075510972705899], [14.119686313542559, 53.75702912049104], [14.353315463934166, 53.248171291713106], [14.074521111719434, 52.981262518925348], [14.437599725002201, 52.624850165408304], [14.685026482815715, 52.089947414755216], [14.607098422919648, 51.745188096719971], [15.016995883858783, 51.106674099321708], [14.570718214586122, 51.002339382524383], [14.307013380600665, 51.117267767941371], [14.056227654688314, 50.926917629594357], [13.338131951560399, 50.733234361364282], [12.966836785543251, 50.484076443069171], [12.240111118222671, 50.266337795607228], [12.415190870827473, 49.969120795280617], [12.521024204161336, 49.547415269562748], [13.031328973043514, 49.307068182973239], [13.595945672264577, 48.877171942737164], [13.243357374737116, 48.41611481382904], [12.884102817443875, 48.28914581968786], [13.025851271220517, 47.637583523135959], [12.932626987366064, 47.467645575543997], [12.620759718484521, 47.672387600284424], [12.141357456112871, 47.703083401065783], [11.426414015354851, 47.523766181013059], [10.544504021861599, 47.566399237653798], [10.402083774465325, 47.302487697939171], [9.89606814946319, 47.580196845075704], [9.594226108446378, 47.525058091820199], [8.522611932009795, 47.830827541691349], [8.317301466514095, 47.61357982033627], [7.466759067422288, 47.620581976911922], [7.593676385131062, 48.333019110703731], [8.099278598674857, 49.01778351500343], [6.65822960778371, 49.201958319691641], [6.186320428094177, 49.463802802114515], [6.242751092156993, 49.902225653678727], [6.043073357781111, 50.128051662794235], [6.15665815595878, 50.803721015010581], [5.988658074577813, 51.851615709025054], [6.589396599970826, 51.852029120483394], [6.842869500362383, 52.228440253297549], [7.092053256873896, 53.144043280644894], [6.905139601274129, 53.482162177130647], [7.100424838905269, 53.693932196662672], [7.936239454793963, 53.748295803433791], [8.121706170289485, 53.527792466844289], [8.800734490604668, 54.020785630908904], [8.572117954145369, 54.395646470754059], [8.526229282270208, 54.962743638725158], [9.282048780971138, 54.830865383516311], [9.921906365609232, 54.983104153048032]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Djibouti",
      "sov_a3": "DJI",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Djibouti",
      "adm0_a3": "DJI",
      "geou_dif": 0.000000,
      "geounit": "Djibouti",
      "gu_a3": "DJI",
      "su_dif": 0.000000,
      "subunit": "Djibouti",
      "su_a3": "DJI",
      "brk_diff": 0.000000,
      "name": "Djibouti",
      "name_long": "Djibouti",
      "brk_a3": "DJI",
      "brk_name": "Djibouti",
      "brk_group": null,
      "abbrev": "Dji.",
      "postal": "DJ",
      "formal_en": "Republic of Djibouti",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Djibouti",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 8.000000,
      "pop_est": 516055.000000,
      "gdp_md_est": 1885.000000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "DJ",
      "iso_a3": "DJI",
      "iso_n3": "262",
      "un_a3": "262",
      "wb_a2": "DJ",
      "wb_a3": "DJI",
      "woe_id": -99.000000,
      "adm0_a3_is": "DJI",
      "adm0_a3_us": "DJI",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Middle East & North Africa",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[43.081226027200159, 12.699638576707116], [43.317852410664671, 12.390148423711025], [43.286381463398925, 11.974928290245884], [42.715873650896526, 11.735640570518342], [43.145304803242141, 11.462039699748857], [42.776851841000962, 10.92687856693442], [42.554930000000127, 11.105110000000195], [42.314140000000123, 11.0342], [41.755570000000205, 11.050910000000101], [41.739590000000192, 11.355110000000138], [41.661760000000129, 11.6312], [42.000000000000114, 12.100000000000136], [42.35156000000012, 12.542230000000131], [42.779642368344753, 12.455415757695675], [43.081226027200159, 12.699638576707116]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Denmark",
      "sov_a3": "DN1",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Country",
      "admin": "Denmark",
      "adm0_a3": "DNK",
      "geou_dif": 0.000000,
      "geounit": "Denmark",
      "gu_a3": "DNK",
      "su_dif": 0.000000,
      "subunit": "Denmark",
      "su_a3": "DNK",
      "brk_diff": 0.000000,
      "name": "Denmark",
      "name_long": "Denmark",
      "brk_a3": "DNK",
      "brk_name": "Denmark",
      "brk_group": null,
      "abbrev": "Den.",
      "postal": "DK",
      "formal_en": "Kingdom of Denmark",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Denmark",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 12.000000,
      "pop_est": 5500510.000000,
      "gdp_md_est": 203600.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "DK",
      "iso_a3": "DNK",
      "iso_n3": "208",
      "un_a3": "208",
      "wb_a2": "DK",
      "wb_a3": "DNK",
      "woe_id": -99.000000,
      "adm0_a3_is": "DNK",
      "adm0_a3_us": "DNK",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Northern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[12.690006137755631, 55.609990953180784], [12.089991082414741, 54.800014553437933], [11.043543328504228, 55.364863796604254], [10.903913608451631, 55.779954738988749], [12.370904168353292, 56.111407375708836], [12.690006137755631, 55.609990953180784]]], [[[10.912181837618363, 56.458621324277914], [10.667803989309988, 56.081383368547222], [10.369992710011985, 56.190007229224733], [9.649984978889307, 55.469999498102055], [9.921906365609175, 54.98310415304806], [9.282048780971138, 54.830865383516169], [8.526229282270236, 54.962743638724987], [8.12031090661759, 55.517722683323626], [8.089976840862249, 56.540011705137601], [8.256581658571264, 56.8099693874303], [8.543437534223386, 57.110002753316905], [9.424469028367611, 57.172066148499482], [9.775558709358563, 57.447940782289663], [10.580005730846153, 57.73001658795485], [10.546105991262692, 57.215732733786155], [10.250000034230226, 56.89001618105047], [10.369992710011985, 56.609981594460834], [10.912181837618363, 56.458621324277914]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Dominican Republic",
      "sov_a3": "DOM",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Dominican Republic",
      "adm0_a3": "DOM",
      "geou_dif": 0.000000,
      "geounit": "Dominican Republic",
      "gu_a3": "DOM",
      "su_dif": 0.000000,
      "subunit": "Dominican Republic",
      "su_a3": "DOM",
      "brk_diff": 0.000000,
      "name": "Dominican Rep.",
      "name_long": "Dominican Republic",
      "brk_a3": "DOM",
      "brk_name": "Dominican Rep.",
      "brk_group": null,
      "abbrev": "Dom. Rep.",
      "postal": "DO",
      "formal_en": "Dominican Republic",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Dominican Republic",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 7.000000,
      "pop_est": 9650054.000000,
      "gdp_md_est": 78000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "DO",
      "iso_a3": "DOM",
      "iso_n3": "214",
      "un_a3": "214",
      "wb_a2": "DO",
      "wb_a3": "DOM",
      "woe_id": -99.000000,
      "adm0_a3_is": "DOM",
      "adm0_a3_us": "DOM",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Caribbean",
      "region_wb": "Latin America & Caribbean",
      "name_len": 14.000000,
      "long_len": 18.000000,
      "abbrev_len": 9.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-71.712361416292964, 19.714455878167357], [-71.587304450146632, 19.8849105900821], [-70.806706102161741, 19.880285549391985], [-70.214364997016133, 19.622885240146161], [-69.950815192327582, 19.647999986240009], [-69.769250047470081, 19.293267116772441], [-69.222125820579876, 19.313214219637103], [-69.254346076113848, 19.015196234609874], [-68.809411994080833, 18.979074408437853], [-68.317943284768972, 18.612197577381693], [-68.689315965434517, 18.205142320218613], [-69.164945848248919, 18.422648423735112], [-69.623987596297638, 18.38071299893025], [-69.952933926051543, 18.428306993071061], [-70.133232998317894, 18.245915025296895], [-70.517137213814223, 18.184290879788833], [-70.669298468697633, 18.426885891183034], [-70.999950120717187, 18.283328762276213], [-71.400209927033899, 17.598564357976599], [-71.657661912712015, 17.757572740138698], [-71.708304816358051, 18.044997056546094], [-71.68773759630588, 18.316660061104471], [-71.945112067335558, 18.616900132720261], [-71.701302659782499, 18.785416978424053], [-71.624873216422827, 19.169837958243306], [-71.712361416292964, 19.714455878167357]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Algeria",
      "sov_a3": "DZA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Algeria",
      "adm0_a3": "DZA",
      "geou_dif": 0.000000,
      "geounit": "Algeria",
      "gu_a3": "DZA",
      "su_dif": 0.000000,
      "subunit": "Algeria",
      "su_a3": "DZA",
      "brk_diff": 0.000000,
      "name": "Algeria",
      "name_long": "Algeria",
      "brk_a3": "DZA",
      "brk_name": "Algeria",
      "brk_group": null,
      "abbrev": "Alg.",
      "postal": "DZ",
      "formal_en": "People's Democratic Republic of Algeria",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Algeria",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 3.000000,
      "pop_est": 34178188.000000,
      "gdp_md_est": 232900.000000,
      "pop_year": -99.000000,
      "lastcensus": 2008.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "DZ",
      "iso_a3": "DZA",
      "iso_n3": "012",
      "un_a3": "012",
      "wb_a2": "DZ",
      "wb_a3": "DZA",
      "woe_id": -99.000000,
      "adm0_a3_is": "DZA",
      "adm0_a3_us": "DZA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Northern Africa",
      "region_wb": "Middle East & North Africa",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[11.999505649471613, 23.47166840259645], [8.572893100629784, 21.565660712159143], [5.677565952180686, 19.601206976799716], [4.267419467800039, 19.155265204336999], [3.158133172222705, 19.057364203360038], [3.1466610042539, 19.693578599521445], [2.683588494486429, 19.856230170160117], [2.06099083823392, 20.142233384679486], [1.823227573259032, 20.610809434486043], [-1.550054897457613, 22.792665920497384], [-4.923337368174231, 24.974574082941], [-8.684399786809053, 27.395744126896005], [-8.665124477564191, 27.589479071558227], [-8.665589565454809, 27.656425889592356], [-8.674116176782974, 28.841288967396579], [-7.059227667661929, 29.579228420524529], [-6.060632290053774, 29.731699734001694], [-5.242129278982787, 30.000443020135592], [-4.859646165374471, 30.501187649043846], [-3.690441046554696, 30.896951605751156], [-3.647497931320146, 31.637294012980675], [-3.068980271812648, 31.724497992473218], [-2.616604783529567, 32.09434621838615], [-1.30789913573787, 32.262888902306102], [-1.124551153966308, 32.651521511357132], [-1.388049282222568, 32.864015000941308], [-1.733454555661467, 33.919712836231994], [-1.792985805661687, 34.527918606091205], [-2.169913702798624, 35.16839630791668], [-1.208602871089056, 35.714848741187097], [-0.127454392894606, 35.888662421200806], [0.503876580415209, 36.301272894835279], [1.466918572606545, 36.605647081034405], [3.161698846050825, 36.78390493422522], [4.81575809084913, 36.865036932923459], [5.320120070017794, 36.716518866516623], [6.261819695672613, 37.110655015606739], [7.330384962603971, 37.118380642234371], [7.737078484741005, 36.885707505840216], [8.420964389691676, 36.946427313783161], [8.217824334352315, 36.433176988260286], [8.376367628623768, 35.479876003555944], [8.140981479534304, 34.65514598239379], [7.524481642292244, 34.09737641045146], [7.612641635782182, 33.344114895148962], [8.430472853233368, 32.748337307255952], [8.439102817426118, 32.506284898400821], [9.055602654668149, 32.102691962201291], [9.482139926805274, 30.307556057246188], [9.805634392952413, 29.42463837332339], [9.859997999723447, 28.959989732371014], [9.683884718472768, 28.1441738957792], [9.756128370816782, 27.688258571884148], [9.629056023811074, 27.14095347748092], [9.716285841519749, 26.512206325785698], [9.319410841518163, 26.094324856057455], [9.910692579801776, 25.36545461679674], [9.94826134607797, 24.936953640232517], [10.303846876678362, 24.379313259370917], [10.771363559622927, 24.562532050061751], [11.560669386449005, 24.097909247325518], [11.999505649471613, 23.47166840259645]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Ecuador",
      "sov_a3": "ECU",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Ecuador",
      "adm0_a3": "ECU",
      "geou_dif": 0.000000,
      "geounit": "Ecuador",
      "gu_a3": "ECU",
      "su_dif": 0.000000,
      "subunit": "Ecuador",
      "su_a3": "ECU",
      "brk_diff": 0.000000,
      "name": "Ecuador",
      "name_long": "Ecuador",
      "brk_a3": "ECU",
      "brk_name": "Ecuador",
      "brk_group": null,
      "abbrev": "Ecu.",
      "postal": "EC",
      "formal_en": "Republic of Ecuador",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Ecuador",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 12.000000,
      "pop_est": 14573101.000000,
      "gdp_md_est": 107700.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "EC",
      "iso_a3": "ECU",
      "iso_n3": "218",
      "un_a3": "218",
      "wb_a2": "EC",
      "wb_a3": "ECU",
      "woe_id": -99.000000,
      "adm0_a3_is": "ECU",
      "adm0_a3_us": "ECU",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "South America",
      "region_un": "Americas",
      "subregion": "South America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-80.302560594387216, -3.404856459164713], [-79.770293341780928, -2.65751189535964], [-79.986559210922422, -2.220794366061014], [-80.368783942369248, -2.685158786635788], [-80.967765469064361, -2.246942640800704], [-80.764806281238037, -1.965047702648533], [-80.933659023751716, -1.057454522306358], [-80.583370327461267, -0.906662692878683], [-80.399324713853758, -0.283703301600141], [-80.020898200180369, 0.360340074053468], [-80.090609707342111, 0.768428859862397], [-79.542762010399798, 0.982937730305963], [-78.855258755188714, 1.380923773601822], [-77.855061408179523, 0.809925034992773], [-77.668612840470445, 0.825893052570962], [-77.424984300430395, 0.395686753741117], [-76.576379767549398, 0.256935533037435], [-76.292314419240967, 0.416047268064119], [-75.801465827116601, 0.084801337073202], [-75.373223232713855, -0.15203175212045], [-75.233722703741947, -0.911416924649529], [-75.544995693652041, -1.56160979574588], [-76.635394253226721, -2.608677666843818], [-77.837904832658609, -3.003020521663103], [-78.450683966775642, -3.873096612161376], [-78.639897223612337, -4.547784112164074], [-79.205289069317729, -4.959128513207389], [-79.624979214176179, -4.454198093283495], [-80.02890804718561, -4.346090996928893], [-80.442241990872162, -4.425724379090674], [-80.469294603176948, -4.059286797708999], [-80.184014858709673, -3.821161797708044], [-80.302560594387216, -3.404856459164713]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Egypt",
      "sov_a3": "EGY",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Egypt",
      "adm0_a3": "EGY",
      "geou_dif": 0.000000,
      "geounit": "Egypt",
      "gu_a3": "EGY",
      "su_dif": 0.000000,
      "subunit": "Egypt",
      "su_a3": "EGY",
      "brk_diff": 0.000000,
      "name": "Egypt",
      "name_long": "Egypt",
      "brk_a3": "EGY",
      "brk_name": "Egypt",
      "brk_group": null,
      "abbrev": "Egypt",
      "postal": "EG",
      "formal_en": "Arab Republic of Egypt",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Egypt, Arab Rep.",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 7.000000,
      "mapcolor13": 2.000000,
      "pop_est": 83082869.000000,
      "gdp_md_est": 443700.000000,
      "pop_year": -99.000000,
      "lastcensus": 2006.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "EG",
      "iso_a3": "EGY",
      "iso_n3": "818",
      "un_a3": "818",
      "wb_a2": "EG",
      "wb_a3": "EGY",
      "woe_id": -99.000000,
      "adm0_a3_is": "EGY",
      "adm0_a3_us": "EGY",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Northern Africa",
      "region_wb": "Middle East & North Africa",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[34.9226, 29.50133], [34.64174, 29.09942], [34.42655, 28.34399], [34.15451, 27.8233], [33.92136, 27.6487], [33.58811, 27.97136], [33.13676, 28.41765], [32.42323, 29.85108], [32.32046, 29.76043], [32.73482, 28.70523], [33.34876, 27.69989], [34.10455, 26.14227], [34.47387, 25.59856], [34.79507, 25.03375], [35.69241, 23.92671], [35.49372, 23.75237], [35.52598, 23.10244], [36.69069, 22.20485], [36.86623, 22.0], [32.9, 22.0], [29.02, 22.0], [25.0, 22.0], [25.0, 25.682499996360999], [25.0, 29.238654529533459], [24.70007, 30.04419], [24.95762, 30.6616], [24.80287, 31.08929], [25.16482, 31.56915], [26.49533, 31.58568], [27.45762, 31.32126], [28.45048, 31.02577], [28.91353, 30.87005], [29.68342, 31.18686], [30.09503, 31.4734], [30.97693, 31.55586], [31.68796, 31.4296], [31.96041, 30.9336], [32.19247, 31.26034], [32.99392, 31.02407], [33.7734, 30.96746], [34.26544, 31.21936], [34.9226, 29.50133]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Eritrea",
      "sov_a3": "ERI",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Eritrea",
      "adm0_a3": "ERI",
      "geou_dif": 0.000000,
      "geounit": "Eritrea",
      "gu_a3": "ERI",
      "su_dif": 0.000000,
      "subunit": "Eritrea",
      "su_a3": "ERI",
      "brk_diff": 0.000000,
      "name": "Eritrea",
      "name_long": "Eritrea",
      "brk_a3": "ERI",
      "brk_name": "Eritrea",
      "brk_group": null,
      "abbrev": "Erit.",
      "postal": "ER",
      "formal_en": "State of Eritrea",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Eritrea",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 12.000000,
      "pop_est": 5647168.000000,
      "gdp_md_est": 3945.000000,
      "pop_year": -99.000000,
      "lastcensus": 1984.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "ER",
      "iso_a3": "ERI",
      "iso_n3": "232",
      "un_a3": "232",
      "wb_a2": "ER",
      "wb_a3": "ERI",
      "woe_id": -99.000000,
      "adm0_a3_is": "ERI",
      "adm0_a3_us": "ERI",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[42.35156000000012, 12.542230000000131], [42.00975, 12.86582], [41.59856, 13.452090000000112], [41.155193719249837, 13.773319810435225], [40.8966, 14.118640000000141], [40.026218702969175, 14.519579169162284], [39.34061, 14.53155], [39.0994, 14.74064], [38.51295, 14.50547], [37.906070000000113, 14.959430000000168], [37.59377, 14.2131], [36.42951, 14.42211], [36.32318891779812, 14.822480577041063], [36.753860304518582, 16.291874091044292], [36.852530000000115, 16.95655], [37.16747, 17.263140000000135], [37.90400000000011, 17.42754], [38.410089959473225, 17.998307399970315], [38.990622999840014, 16.840626125551694], [39.26611006038803, 15.922723496967251], [39.814293654140215, 15.435647284400318], [41.179274936697652, 14.491079616753211], [41.734951613132353, 13.921036892141558], [42.276830682144862, 13.343992010954423], [42.589576450375262, 13.000421250861905], [43.081226027200159, 12.699638576707116], [42.779642368344753, 12.455415757695675], [42.35156000000012, 12.542230000000131]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Spain",
      "sov_a3": "ESP",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Spain",
      "adm0_a3": "ESP",
      "geou_dif": 0.000000,
      "geounit": "Spain",
      "gu_a3": "ESP",
      "su_dif": 0.000000,
      "subunit": "Spain",
      "su_a3": "ESP",
      "brk_diff": 0.000000,
      "name": "Spain",
      "name_long": "Spain",
      "brk_a3": "ESP",
      "brk_name": "Spain",
      "brk_group": null,
      "abbrev": "Sp.",
      "postal": "E",
      "formal_en": "Kingdom of Spain",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Spain",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 5.000000,
      "pop_est": 40525002.000000,
      "gdp_md_est": 1403000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "ES",
      "iso_a3": "ESP",
      "iso_n3": "724",
      "un_a3": "724",
      "wb_a2": "ES",
      "wb_a3": "ESP",
      "woe_id": -99.000000,
      "adm0_a3_is": "ESP",
      "adm0_a3_us": "ESP",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Southern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 3.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-9.034817674180246, 41.880570583659676], [-8.984433152695672, 42.592775173506269], [-9.392883673530648, 43.026624660812701], [-7.97818966310831, 43.748337714200993], [-6.754491746436756, 43.567909450853925], [-5.411886359061597, 43.574239813809683], [-4.347842779955783, 43.403449205085039], [-3.517531704106091, 43.455900783861303], [-1.901351284177764, 43.422802028978339], [-1.502770961910528, 43.034014390630432], [0.338046909190581, 42.57954600683955], [0.701590610363894, 42.795734361332606], [1.826793247087153, 42.343384711265692], [2.985998976258458, 42.473015041669861], [3.039484083680549, 41.892120266276905], [2.091841668312185, 41.226088568683096], [0.810524529635188, 41.014731960609339], [0.721331007499401, 40.678318386389236], [0.106691521819869, 40.123933620762017], [-0.278711310212941, 39.30997813573272], [0.111290724293838, 38.73851430923304], [-0.467123582349103, 38.292365831041153], [-0.683389451490598, 37.642353827457825], [-1.438382127274849, 37.443063666324221], [-2.146452602538119, 36.674144192037289], [-3.415780808923387, 36.65889964451118], [-4.368900926114719, 36.677839056946155], [-4.995219285492212, 36.324708156879637], [-5.377159796561457, 35.946850083961465], [-5.866432257500904, 36.029816596006057], [-6.236693894872175, 36.367677110330334], [-6.520190802425404, 36.942913316387319], [-7.453725551778092, 37.097787583966067], [-7.537105475281024, 37.428904323876239], [-7.166507941099865, 37.803894354802225], [-7.029281175148796, 38.075764065089771], [-7.374092169616318, 38.373058580064921], [-7.098036668313128, 39.030072740223787], [-7.498632371439726, 39.629571031241809], [-7.066591559263529, 39.711891587882775], [-7.026413133156595, 40.184524237624245], [-6.864019944679385, 40.330871893874829], [-6.851126674822552, 41.111082668617527], [-6.389087693700915, 41.381815497394655], [-6.668605515967656, 41.883386949219584], [-7.251308966490824, 41.918346055665047], [-7.422512986673795, 41.792074693359837], [-8.013174607769912, 41.790886135417125], [-8.263856980817792, 42.28046865495034], [-8.67194576662672, 42.134689439454959], [-9.034817674180246, 41.880570583659676]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Estonia",
      "sov_a3": "EST",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Estonia",
      "adm0_a3": "EST",
      "geou_dif": 0.000000,
      "geounit": "Estonia",
      "gu_a3": "EST",
      "su_dif": 0.000000,
      "subunit": "Estonia",
      "su_a3": "EST",
      "brk_diff": 0.000000,
      "name": "Estonia",
      "name_long": "Estonia",
      "brk_a3": "EST",
      "brk_name": "Estonia",
      "brk_group": null,
      "abbrev": "Est.",
      "postal": "EST",
      "formal_en": "Republic of Estonia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Estonia",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 10.000000,
      "pop_est": 1299371.000000,
      "gdp_md_est": 27410.000000,
      "pop_year": -99.000000,
      "lastcensus": 2000.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "EE",
      "iso_a3": "EST",
      "iso_n3": "233",
      "un_a3": "233",
      "wb_a2": "EE",
      "wb_a3": "EST",
      "woe_id": -99.000000,
      "adm0_a3_is": "EST",
      "adm0_a3_us": "EST",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Northern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[24.312862583114622, 57.793423570376973], [24.428927850042161, 58.383413397853289], [24.061198357853186, 58.257374579493408], [23.426560092876684, 58.612753404364625], [23.339795363058645, 59.187240302153384], [24.604214308376186, 59.465853786855021], [25.864189080516638, 59.611090399811332], [26.949135776484525, 59.445803331125774], [27.981114129353244, 59.475388088612874], [28.13169925305175, 59.300825100330925], [27.420166456824944, 58.724581203844238], [27.716685825315722, 57.791899115624361], [27.288184848751513, 57.474528306703832], [26.463532342237787, 57.47638865826633], [25.602809685984369, 57.847528794986573], [25.164593540149269, 57.970156968815189], [24.312862583114622, 57.793423570376973]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Ethiopia",
      "sov_a3": "ETH",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Ethiopia",
      "adm0_a3": "ETH",
      "geou_dif": 0.000000,
      "geounit": "Ethiopia",
      "gu_a3": "ETH",
      "su_dif": 0.000000,
      "subunit": "Ethiopia",
      "su_a3": "ETH",
      "brk_diff": 0.000000,
      "name": "Ethiopia",
      "name_long": "Ethiopia",
      "brk_a3": "ETH",
      "brk_name": "Ethiopia",
      "brk_group": null,
      "abbrev": "Eth.",
      "postal": "ET",
      "formal_en": "Federal Democratic Republic of Ethiopia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Ethiopia",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 13.000000,
      "pop_est": 85237338.000000,
      "gdp_md_est": 68770.000000,
      "pop_year": -99.000000,
      "lastcensus": 2007.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "ET",
      "iso_a3": "ETH",
      "iso_n3": "231",
      "un_a3": "231",
      "wb_a2": "ET",
      "wb_a3": "ETH",
      "woe_id": -99.000000,
      "adm0_a3_is": "ETH",
      "adm0_a3_us": "ETH",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[37.906070000000113, 14.959430000000168], [38.51295, 14.50547], [39.0994, 14.74064], [39.34061, 14.53155], [40.026250000000118, 14.51959], [40.8966, 14.118640000000141], [41.1552, 13.77333], [41.59856, 13.452090000000112], [42.00975, 12.86582], [42.35156000000012, 12.542230000000131], [42.000000000000114, 12.100000000000136], [41.661760000000129, 11.6312], [41.739590000000192, 11.355110000000138], [41.755570000000205, 11.050910000000101], [42.314140000000123, 11.0342], [42.554930000000127, 11.105110000000195], [42.776851841000962, 10.92687856693442], [42.55876, 10.57258000000013], [42.92812, 10.021940000000143], [43.296990000000108, 9.540480000000173], [43.67875, 9.18358000000012], [46.94834, 7.99688], [47.78942, 8.003], [44.9636, 5.001620000000116], [43.66087, 4.95755], [42.769670000000133, 4.252590000000225], [42.12861, 4.234130000000164], [41.855083092644122, 3.918911920483765], [41.171800000000133, 3.91909], [40.768480000000125, 4.257020000000125], [39.854940000000113, 3.838790000000131], [39.559384258765931, 3.422060000000215], [38.89251, 3.50074], [38.67114, 3.61607], [38.436970000000144, 3.58851], [38.120915000000139, 3.598605], [36.855093238008237, 4.447864127672858], [36.159078632855653, 4.447864127672858], [35.817447662353629, 4.776965663462022], [35.817447662353629, 5.338232082790853], [35.298007118233102, 5.506], [34.70702, 6.594220000000121], [34.25032, 6.82607], [34.075100000000191, 7.22595], [33.568290000000104, 7.71334], [32.954180000000235, 7.784970000000101], [33.294800000000123, 8.35458], [33.825500000000147, 8.37916], [33.97498, 8.684560000000147], [33.96162, 9.58358], [34.25745, 10.63009], [34.731150000000127, 10.910170000000107], [34.831630000000132, 11.318960000000118], [35.26049, 12.08286], [35.863630000000171, 12.57828], [36.27022, 13.563330000000121], [36.42951, 14.42211], [37.59377, 14.2131], [37.906070000000113, 14.959430000000168]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Finland",
      "sov_a3": "FI1",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Country",
      "admin": "Finland",
      "adm0_a3": "FIN",
      "geou_dif": 0.000000,
      "geounit": "Finland",
      "gu_a3": "FIN",
      "su_dif": 0.000000,
      "subunit": "Finland",
      "su_a3": "FIN",
      "brk_diff": 0.000000,
      "name": "Finland",
      "name_long": "Finland",
      "brk_a3": "FIN",
      "brk_name": "Finland",
      "brk_group": null,
      "abbrev": "Fin.",
      "postal": "FIN",
      "formal_en": "Republic of Finland",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Finland",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 6.000000,
      "pop_est": 5250275.000000,
      "gdp_md_est": 193500.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "FI",
      "iso_a3": "FIN",
      "iso_n3": "246",
      "un_a3": "246",
      "wb_a2": "FI",
      "wb_a3": "FIN",
      "woe_id": -99.000000,
      "adm0_a3_is": "FIN",
      "adm0_a3_us": "FIN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Northern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[28.591929559043194, 69.064776923286658], [28.445943637818658, 68.364612942164044], [29.97742638522061, 67.698297024192655], [29.054588657352326, 66.944286200621931], [30.21765, 65.80598], [29.544429559046989, 64.948671576590485], [30.444684686003711, 64.20445343693909], [30.035872430142717, 63.552813625738551], [31.516092156711125, 62.867687486412891], [31.139991082490894, 62.357692776124409], [30.21110721204445, 61.780027777749694], [28.069997592895277, 60.503516547275837], [26.255172967236973, 60.423960679762502], [24.496623976344523, 60.057316392651657], [22.869694858499457, 59.846373196036225], [22.290763787533592, 60.391921291741539], [21.322244093519316, 60.720169989659524], [21.544866163832694, 61.705329494871791], [21.059211053153689, 62.60739329695874], [21.536029493910803, 63.18973501245587], [22.442744174903993, 63.817810370531291], [24.730511508897536, 64.902343655040838], [25.398067661243942, 65.111426500093742], [25.294043003040404, 65.534346421970454], [23.903378533633802, 66.006927395279618], [23.565879754335583, 66.396050930437426], [23.539473097434438, 67.93600861273525], [21.978534783626117, 68.616845608180697], [20.645592889089528, 69.106247260200874], [21.244936150810673, 69.370443020293081], [22.356237827247412, 68.841741441514912], [23.662049594830759, 68.891247463650544], [24.735679152126725, 68.64955678982146], [25.689212680776365, 69.092113755969038], [26.179622023226244, 69.825298977326142], [27.732292107867863, 70.164193020296253], [29.015572950971972, 69.766491197377988], [28.591929559043194, 69.064776923286658]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Fiji",
      "sov_a3": "FJI",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Fiji",
      "adm0_a3": "FJI",
      "geou_dif": 0.000000,
      "geounit": "Fiji",
      "gu_a3": "FJI",
      "su_dif": 0.000000,
      "subunit": "Fiji",
      "su_a3": "FJI",
      "brk_diff": 0.000000,
      "name": "Fiji",
      "name_long": "Fiji",
      "brk_a3": "FJI",
      "brk_name": "Fiji",
      "brk_group": null,
      "abbrev": "Fiji",
      "postal": "FJ",
      "formal_en": "Republic of Fiji",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Fiji",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 2.000000,
      "pop_est": 944720.000000,
      "gdp_md_est": 3579.000000,
      "pop_year": -99.000000,
      "lastcensus": 2007.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "FJ",
      "iso_a3": "FJI",
      "iso_n3": "242",
      "un_a3": "242",
      "wb_a2": "FJ",
      "wb_a3": "FJI",
      "woe_id": -99.000000,
      "adm0_a3_is": "FJI",
      "adm0_a3_us": "FJI",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Oceania",
      "region_un": "Oceania",
      "subregion": "Melanesia",
      "region_wb": "East Asia & Pacific",
      "name_len": 4.000000,
      "long_len": 4.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[178.3736, -17.33992], [178.71806, -17.62846], [178.55271, -18.15059], [177.93266, -18.28799], [177.38146, -18.16432], [177.28504, -17.72465], [177.670870000000122, -17.38114], [178.12557, -17.50481], [178.3736, -17.33992]]], [[[179.36414266196428, -16.801354076946851], [178.725059362997087, -17.012041674368021], [178.596838595117077, -16.63915], [179.096609362997157, -16.433984277547424], [179.413509362997132, -16.379054277547397], [180.000000000000142, -16.06713266364244], [180.000000000000142, -16.55521656663916], [179.36414266196428, -16.801354076946851]]], [[[-179.917369384765266, -16.501783135649362], [-180.0, -16.55521656663916], [-180.0, -16.06713266364244], [-179.793320109048608, -16.020882256741231], [-179.917369384765266, -16.501783135649362]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "United Kingdom",
      "sov_a3": "GB1",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Dependency",
      "admin": "Falkland Islands",
      "adm0_a3": "FLK",
      "geou_dif": 0.000000,
      "geounit": "Falkland Islands",
      "gu_a3": "FLK",
      "su_dif": 0.000000,
      "subunit": "Falkland Islands",
      "su_a3": "FLK",
      "brk_diff": 1.000000,
      "name": "Falkland Is.",
      "name_long": "Falkland Islands",
      "brk_a3": "B12",
      "brk_name": "Falkland Is.",
      "brk_group": null,
      "abbrev": "Flk. Is.",
      "postal": "FK",
      "formal_en": "Falkland Islands",
      "formal_fr": null,
      "note_adm0": "U.K.",
      "note_brk": "Admin. by U.K.; Claimed by Argentina",
      "name_sort": "Falkland Islands",
      "name_alt": "Islas Malvinas",
      "mapcolor7": 6.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 3.000000,
      "pop_est": 3140.000000,
      "gdp_md_est": 105.100000,
      "pop_year": -99.000000,
      "lastcensus": -99.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "FK",
      "iso_a3": "FLK",
      "iso_n3": "238",
      "un_a3": "238",
      "wb_a2": "-99",
      "wb_a3": "-99",
      "woe_id": -99.000000,
      "adm0_a3_is": "FLK",
      "adm0_a3_us": "FLK",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "South America",
      "region_un": "Americas",
      "subregion": "South America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 12.000000,
      "long_len": 16.000000,
      "abbrev_len": 8.000000,
      "tiny": -99.000000,
      "homepart": -99.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-61.2, -51.85], [-60.0, -51.25], [-59.15, -51.5], [-58.55, -51.1], [-57.75, -51.55], [-58.05, -51.9], [-59.4, -52.2], [-59.85, -51.85], [-60.7, -52.3], [-61.2, -51.85]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "France",
      "sov_a3": "FR1",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Country",
      "admin": "France",
      "adm0_a3": "FRA",
      "geou_dif": 0.000000,
      "geounit": "France",
      "gu_a3": "FRA",
      "su_dif": 0.000000,
      "subunit": "France",
      "su_a3": "FRA",
      "brk_diff": 0.000000,
      "name": "France",
      "name_long": "France",
      "brk_a3": "FRA",
      "brk_name": "France",
      "brk_group": null,
      "abbrev": "Fr.",
      "postal": "F",
      "formal_en": "French Republic",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "France",
      "name_alt": null,
      "mapcolor7": 7.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 9.000000,
      "mapcolor13": 11.000000,
      "pop_est": 64057792.000000,
      "gdp_md_est": 2128000.000000,
      "pop_year": -99.000000,
      "lastcensus": -99.000000,
      "gdp_year": -99.000000,
      "economy": "1. Developed region: G7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "FR",
      "iso_a3": "FRA",
      "iso_n3": "250",
      "un_a3": "250",
      "wb_a2": "FR",
      "wb_a3": "FRA",
      "woe_id": -99.000000,
      "adm0_a3_is": "FRA",
      "adm0_a3_us": "FRA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Western Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 3.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-52.556424730018392, 2.504705308437053], [-52.939657151894977, 2.124857692875622], [-53.418465135295264, 2.053389187016037], [-53.554839240113495, 2.334896551925965], [-53.778520677288896, 2.376702785650053], [-54.088062506717279, 2.105556545414629], [-54.524754197799751, 2.311848863123785], [-54.271229620975788, 2.738747870286943], [-54.18428402364475, 3.194172268075235], [-54.011503872276819, 3.622569891774859], [-54.399542202356514, 4.212611395683481], [-54.478632981979217, 4.896755682795643], [-53.958044603070931, 5.756548163267809], [-53.618452928264844, 5.646529038918402], [-52.882141282754077, 5.409850979021599], [-51.82334286152593, 4.565768133966145], [-51.657797410678882, 4.156232408053029], [-52.249337531123984, 3.241094468596287], [-52.556424730018392, 2.504705308437053]]], [[[9.560016310269134, 42.152491970379572], [9.229752231491773, 41.380006822264448], [8.775723097375362, 41.583611965494441], [8.54421268070783, 42.256516628583086], [8.746009148807588, 42.62812185319396], [9.390000848028905, 43.009984849614739], [9.560016310269134, 42.152491970379572]]], [[[3.588184441755715, 50.378992418003577], [4.286022983425141, 49.907496649772554], [4.799221632515753, 49.985373033236328], [5.674051954784886, 49.529483547557447], [5.897759230176376, 49.442667141307169], [6.186320428094206, 49.463802802114458], [6.658229607783539, 49.201958319691556], [8.099278598674772, 49.017783515003373], [7.593676385131062, 48.333019110703731], [7.466759067422231, 47.620581976911865], [7.192202182655535, 47.449765529970989], [6.736571079138088, 47.541801255882888], [6.768713820023635, 47.287708238303679], [6.037388950228973, 46.725778713561908], [6.022609490593567, 46.272989813820516], [6.500099724970454, 46.429672756529442], [6.843592970414562, 45.991146552100673], [6.802355177445662, 45.70857982032868], [7.096652459347837, 45.333098863295874], [6.749955275101712, 45.028517971367592], [7.007562290076663, 44.254766750661389], [7.549596388386163, 44.127901109384823], [7.435184767291844, 43.693844916349178], [6.529245232783069, 43.128892320318357], [4.556962517931396, 43.399650987311588], [3.10041059735272, 43.075200507167125], [2.985998976258486, 42.473015041669896], [1.826793247087181, 42.343384711265657], [0.701590610363922, 42.795734361332649], [0.338046909190581, 42.579546006839564], [-1.502770961910471, 43.034014390630489], [-1.901351284177736, 43.422802028978339], [-1.384225226232957, 44.022610378590173], [-1.193797573237362, 46.014917710954876], [-2.225724249673789, 47.064362697938208], [-2.963276129559574, 47.570326646507965], [-4.491554938159481, 47.954954332056417], [-4.592349819344747, 48.684160468126947], [-3.295813971357745, 48.901692409859635], [-1.616510789384932, 48.644421291694584], [-1.933494025063254, 49.776341864615773], [-0.98946895995536, 49.347375800160876], [1.338761020522753, 50.127173163445264], [1.6390010921385, 50.946606350297515], [2.513573032246171, 51.148506171261857], [2.658422071960331, 50.79684804951566], [3.123251580425716, 50.780363267614518], [3.588184441755715, 50.378992418003577]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Gabon",
      "sov_a3": "GAB",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Gabon",
      "adm0_a3": "GAB",
      "geou_dif": 0.000000,
      "geounit": "Gabon",
      "gu_a3": "GAB",
      "su_dif": 0.000000,
      "subunit": "Gabon",
      "su_a3": "GAB",
      "brk_diff": 0.000000,
      "name": "Gabon",
      "name_long": "Gabon",
      "brk_a3": "GAB",
      "brk_name": "Gabon",
      "brk_group": null,
      "abbrev": "Gabon",
      "postal": "GA",
      "formal_en": "Gabonese Republic",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Gabon",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 5.000000,
      "pop_est": 1514993.000000,
      "gdp_md_est": 21110.000000,
      "pop_year": -99.000000,
      "lastcensus": 2003.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "GA",
      "iso_a3": "GAB",
      "iso_n3": "266",
      "un_a3": "266",
      "wb_a2": "GA",
      "wb_a3": "GAB",
      "woe_id": -99.000000,
      "adm0_a3_is": "GAB",
      "adm0_a3_us": "GAB",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Middle Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": 3.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[11.093772820691925, -3.978826592630547], [10.06613528813574, -2.969482517105682], [9.405245395554971, -2.144313246269043], [8.79799563969317, -1.111301364754496], [8.830086704146424, -0.779073581550037], [9.048419630579588, -0.459351494960217], [9.291350538783689, 0.268666083167687], [9.492888624721985, 1.010119533691494], [9.830284051155644, 1.067893784993799], [11.285078973036462, 1.057661851400013], [11.276449008843713, 2.261050930180872], [11.75166548019979, 2.326757513839993], [12.359380323952221, 2.19281220133945], [12.951333855855609, 2.32161570882694], [13.075822381246752, 2.267097072759015], [13.003113641012078, 1.83089630778332], [13.282631463278818, 1.31418366129688], [14.026668735417218, 1.395677395021153], [14.276265903386957, 1.196929836426619], [13.843320753645656, 0.038757635901149], [14.316418491277744, -0.552627455247048], [14.425455763413595, -1.333406670744971], [14.299210239324566, -1.998275648612214], [13.99240726080771, -2.4708049454891], [13.109618767965628, -2.428740329603514], [12.575284458067642, -1.948511244315135], [12.495702752338161, -2.391688327650243], [11.820963575903193, -2.514161472181982], [11.478038771214303, -2.765618991714241], [11.855121697648116, -3.426870619321051], [11.093772820691925, -3.978826592630547]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "United Kingdom",
      "sov_a3": "GB1",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Country",
      "admin": "United Kingdom",
      "adm0_a3": "GBR",
      "geou_dif": 0.000000,
      "geounit": "United Kingdom",
      "gu_a3": "GBR",
      "su_dif": 0.000000,
      "subunit": "United Kingdom",
      "su_a3": "GBR",
      "brk_diff": 0.000000,
      "name": "United Kingdom",
      "name_long": "United Kingdom",
      "brk_a3": "GBR",
      "brk_name": "United Kingdom",
      "brk_group": null,
      "abbrev": "U.K.",
      "postal": "GB",
      "formal_en": "United Kingdom of Great Britain and Northern Ireland",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "United Kingdom",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 3.000000,
      "pop_est": 62262000.000000,
      "gdp_md_est": 1977704.000000,
      "pop_year": 0.000000,
      "lastcensus": 2011.000000,
      "gdp_year": 2009.000000,
      "economy": "1. Developed region: G7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "GB",
      "iso_a3": "GBR",
      "iso_n3": "826",
      "un_a3": "826",
      "wb_a2": "GB",
      "wb_a3": "GBR",
      "woe_id": -99.000000,
      "adm0_a3_is": "GBR",
      "adm0_a3_us": "GBR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Northern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 14.000000,
      "long_len": 14.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-5.661948614921897, 54.554603176483852], [-6.197884894220977, 53.867565009163343], [-6.953730231137996, 54.073702297575636], [-7.572167934591079, 54.059956366585993], [-7.366030646178785, 54.595840969452695], [-7.572167934591079, 55.131622219454897], [-6.733847011736145, 55.172860012423797], [-5.661948614921897, 54.554603176483852]]], [[[-3.005004848635281, 58.635000108466329], [-4.073828497728016, 57.553024807355257], [-3.055001796877661, 57.69001902936094], [-1.959280564776918, 57.684799709699519], [-2.219988165689301, 56.870017401753529], [-3.119003058271119, 55.973793036515474], [-2.085009324543023, 55.909998480851272], [-2.005675679673857, 55.804902850350231], [-1.11499101399221, 54.624986477265395], [-0.4304849918542, 54.464376125702159], [0.184981316742039, 53.325014146531032], [0.469976840831777, 52.929999498091973], [1.681530795914739, 52.739520168664001], [1.559987827164377, 52.099998480836007], [1.050561557630914, 51.806760565795685], [1.449865349950301, 51.289427802121963], [0.550333693045502, 50.765738837275876], [-0.78751746255864, 50.77498891865622], [-2.489997524414377, 50.500018622431242], [-2.956273972984036, 50.696879991247016], [-3.617448085942328, 50.228355617872722], [-4.542507900399244, 50.341837063185665], [-5.245023159191135, 49.959999904981089], [-5.776566941745301, 50.159677639356829], [-4.309989793301838, 51.210001125689161], [-3.414850633142123, 51.42600861266925], [-3.422719467108323, 51.426848167406092], [-4.984367234710874, 51.593466091510976], [-5.267295701508885, 51.991400458374585], [-4.222346564134853, 52.301355699261364], [-4.770013393564113, 52.840004991255626], [-4.579999152026915, 53.495003770555172], [-3.093830673788659, 53.404547400669685], [-3.092079637047107, 53.404440822963551], [-2.945008510744344, 53.984999701546684], [-3.614700825433033, 54.600936773292574], [-3.630005458989331, 54.615012925833014], [-4.844169073903004, 54.790971177786844], [-5.082526617849226, 55.061600653699372], [-4.719112107756644, 55.508472601943481], [-5.047980922862109, 55.78398550070753], [-5.58639767091114, 55.311146145236819], [-5.644998745130181, 56.275014960344805], [-6.149980841486354, 56.785009670633542], [-5.786824713555291, 57.818848375064647], [-5.009998745127575, 58.630013332750053], [-4.211494513353557, 58.550845038479167], [-3.005004848635281, 58.635000108466329]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Georgia",
      "sov_a3": "GEO",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Georgia",
      "adm0_a3": "GEO",
      "geou_dif": 0.000000,
      "geounit": "Georgia",
      "gu_a3": "GEO",
      "su_dif": 0.000000,
      "subunit": "Georgia",
      "su_a3": "GEO",
      "brk_diff": 0.000000,
      "name": "Georgia",
      "name_long": "Georgia",
      "brk_a3": "GEO",
      "brk_name": "Georgia",
      "brk_group": null,
      "abbrev": "Geo.",
      "postal": "GE",
      "formal_en": "Georgia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Georgia",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 2.000000,
      "pop_est": 4615807.000000,
      "gdp_md_est": 21510.000000,
      "pop_year": -99.000000,
      "lastcensus": 2002.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "GE",
      "iso_a3": "GEO",
      "iso_n3": "268",
      "un_a3": "268",
      "wb_a2": "GE",
      "wb_a3": "GEO",
      "woe_id": -99.000000,
      "adm0_a3_is": "GEO",
      "adm0_a3_us": "GEO",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[41.554084100110657, 41.535656236327569], [41.70317060727271, 41.962942816732919], [41.453470086438386, 42.64512339941794], [40.875469191253792, 43.013628038091284], [40.32139448422032, 43.128633938156845], [39.955008579270924, 43.434997666999223], [40.076964959479767, 43.553104153002316], [40.922184686045625, 43.382158514980787], [42.39439456560882, 43.220307929042633], [43.756016880067392, 42.740828152022488], [43.931199985536836, 42.554973863284772], [44.537622918481986, 42.711992702803627], [45.470279168485717, 42.502780666669977], [45.776410353382772, 42.092443956056357], [46.404950799348825, 41.860675157227305], [46.145431756379018, 41.72280243587258], [46.637908156120581, 41.181672675128226], [46.501637404166928, 41.064444688474111], [45.962600538930388, 41.123872585609774], [45.217426385281584, 41.411451931314048], [44.972480096218078, 41.248128567055595], [43.582745802592733, 41.092143256182567], [42.619548781104491, 41.583172715819941], [41.554084100110657, 41.535656236327569]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Ghana",
      "sov_a3": "GHA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Ghana",
      "adm0_a3": "GHA",
      "geou_dif": 0.000000,
      "geounit": "Ghana",
      "gu_a3": "GHA",
      "su_dif": 0.000000,
      "subunit": "Ghana",
      "su_a3": "GHA",
      "brk_diff": 0.000000,
      "name": "Ghana",
      "name_long": "Ghana",
      "brk_a3": "GHA",
      "brk_name": "Ghana",
      "brk_group": null,
      "abbrev": "Ghana",
      "postal": "GH",
      "formal_en": "Republic of Ghana",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Ghana",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 4.000000,
      "pop_est": 23832495.000000,
      "gdp_md_est": 34200.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "GH",
      "iso_a3": "GHA",
      "iso_n3": "288",
      "un_a3": "288",
      "wb_a2": "GH",
      "wb_a3": "GHA",
      "woe_id": -99.000000,
      "adm0_a3_is": "GHA",
      "adm0_a3_us": "GHA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[1.060121697604927, 5.928837388528876], [-0.507637905265938, 5.343472601742675], [-1.063624640294194, 5.000547797053812], [-1.964706590167594, 4.710462144383371], [-2.856125047202397, 4.994475816259509], [-2.81070146321784, 5.38905121502411], [-3.244370083011262, 6.250471503113502], [-2.983584967450327, 7.379704901555513], [-2.562189500326241, 8.219627793811483], [-2.827496303712707, 9.642460842319778], [-2.963896246747112, 10.395334784380083], [-2.940409308270461, 10.962690334512558], [-1.203357713211432, 11.009819240762738], [-0.761575893548183, 10.936929633015055], [-0.438701544588582, 11.098340969278722], [0.023802524423701, 11.018681748900804], [-0.049784715159944, 10.706917832883931], [0.367579990245389, 10.19121287682718], [0.365900506195885, 9.465003973829482], [0.461191847342121, 8.677222601756014], [0.712029249686879, 8.312464504423829], [0.490957472342245, 7.411744289576475], [0.570384148774849, 6.914358628767189], [0.836931186536333, 6.279978745952149], [1.060121697604927, 5.928837388528876]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Guinea",
      "sov_a3": "GIN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Guinea",
      "adm0_a3": "GIN",
      "geou_dif": 0.000000,
      "geounit": "Guinea",
      "gu_a3": "GIN",
      "su_dif": 0.000000,
      "subunit": "Guinea",
      "su_a3": "GIN",
      "brk_diff": 0.000000,
      "name": "Guinea",
      "name_long": "Guinea",
      "brk_a3": "GIN",
      "brk_name": "Guinea",
      "brk_group": null,
      "abbrev": "Gin.",
      "postal": "GN",
      "formal_en": "Republic of Guinea",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Guinea",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 7.000000,
      "mapcolor13": 2.000000,
      "pop_est": 10057975.000000,
      "gdp_md_est": 10600.000000,
      "pop_year": -99.000000,
      "lastcensus": 1996.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "GN",
      "iso_a3": "GIN",
      "iso_n3": "324",
      "un_a3": "324",
      "wb_a2": "GN",
      "wb_a3": "GIN",
      "woe_id": -99.000000,
      "adm0_a3_is": "GIN",
      "adm0_a3_us": "GIN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-8.439298468448698, 7.686042792181738], [-8.722123582382125, 7.71167430259851], [-8.926064622422004, 7.309037380396376], [-9.208786383490846, 7.313920803247953], [-9.40334815106975, 7.526905218938907], [-9.337279832384581, 7.928534450711354], [-9.755342169625834, 8.541055202666925], [-10.016566534861255, 8.428503933135232], [-10.23009355309128, 8.406205552601293], [-10.505477260774668, 8.348896389189605], [-10.494315151399633, 8.715540676300435], [-10.654770473665891, 8.977178452994195], [-10.622395188835041, 9.267910061068278], [-10.839151984083301, 9.688246161330369], [-11.11748124840733, 10.045872911006285], [-11.917277390988659, 10.046983954300558], [-12.150338100625005, 9.858571682164381], [-12.425928514037565, 9.835834051955956], [-12.59671912276221, 9.620188300001971], [-12.71195756677308, 9.342711696810767], [-13.246550258832515, 8.903048610871508], [-13.685153977909792, 9.49474376061346], [-14.074044969122282, 9.886166897008252], [-14.330075852912371, 10.015719712763968], [-14.579698859098258, 10.214467271358515], [-14.693231980843505, 10.656300767454042], [-14.839553798877944, 10.876571560098141], [-15.130311245168173, 11.040411688679526], [-14.685687221728898, 11.527823798056488], [-14.382191534878729, 11.509271958863692], [-14.121406419317779, 11.677117010947697], [-13.900799729863776, 11.678718980348748], [-13.743160773157413, 11.811269029177412], [-13.828271857142125, 12.142644151249044], [-13.718743658899513, 12.247185573775511], [-13.700476040084325, 12.586182969610194], [-13.217818162478238, 12.575873521367967], [-12.499050665730564, 12.332089952031057], [-12.27859900557344, 12.354440008997287], [-12.203564825885634, 12.465647691289405], [-11.658300950557932, 12.386582749882836], [-11.513942836950591, 12.442987575729418], [-11.456168585648271, 12.076834214725338], [-11.297573614944511, 12.077971096235771], [-11.03655595543826, 12.211244615116515], [-10.870829637078215, 12.17788747807211], [-10.593223842806282, 11.92397532800598], [-10.165213792348837, 11.844083563682744], [-9.890992804392013, 12.060478623904972], [-9.567911749703214, 12.194243068892476], [-9.327616339546012, 12.334286200403454], [-9.127473517279583, 12.308060411015333], [-8.90526485842453, 12.088358059126437], [-8.786099005559464, 11.812560939984706], [-8.376304897484914, 11.393645941610629], [-8.581305304386774, 11.136245632364805], [-8.620321010767128, 10.810890814655183], [-8.407310756860028, 10.909256903522762], [-8.282357143578281, 10.792597357623846], [-8.33537716310974, 10.494811916541934], [-8.029943610048619, 10.206534939001713], [-8.229337124046822, 10.129020290563901], [-8.309616461612251, 9.789531968622441], [-8.079113735374349, 9.376223863152035], [-7.832100389019188, 8.575704250518626], [-8.20349890790088, 8.455453192575447], [-8.299048631208564, 8.316443589710303], [-8.221792364932199, 8.123328762235573], [-8.280703497744938, 7.687179673692157], [-8.439298468448698, 7.686042792181738]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Gambia",
      "sov_a3": "GMB",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Gambia",
      "adm0_a3": "GMB",
      "geou_dif": 0.000000,
      "geounit": "Gambia",
      "gu_a3": "GMB",
      "su_dif": 0.000000,
      "subunit": "Gambia",
      "su_a3": "GMB",
      "brk_diff": 0.000000,
      "name": "Gambia",
      "name_long": "The Gambia",
      "brk_a3": "GMB",
      "brk_name": "Gambia",
      "brk_group": null,
      "abbrev": "Gambia",
      "postal": "GM",
      "formal_en": "Republic of the Gambia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Gambia, The",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 8.000000,
      "pop_est": 1782893.000000,
      "gdp_md_est": 2272.000000,
      "pop_year": -99.000000,
      "lastcensus": 2003.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "GM",
      "iso_a3": "GMB",
      "iso_n3": "270",
      "un_a3": "270",
      "wb_a2": "GM",
      "wb_a3": "GMB",
      "woe_id": -99.000000,
      "adm0_a3_is": "GMB",
      "adm0_a3_us": "GMB",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 6.000000,
      "long_len": 10.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-16.841524624081273, 13.151393947802561], [-16.713728807023472, 13.594958604379855], [-15.624596320039942, 13.623587347869559], [-15.39877031092446, 13.860368760630919], [-15.081735398813819, 13.876491807505985], [-14.687030808968487, 13.630356960499784], [-14.376713833055788, 13.625680243377374], [-14.046992356817482, 13.794067898000449], [-13.844963344772408, 13.505041612192002], [-14.277701788784555, 13.280585028532244], [-14.712197231494628, 13.298206691943777], [-15.141163295949468, 13.509511623585238], [-15.511812506562933, 13.278569647672867], [-15.691000535534995, 13.270353094938457], [-15.931295945692211, 13.130284125211332], [-16.841524624081273, 13.151393947802561]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Guinea Bissau",
      "sov_a3": "GNB",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Guinea Bissau",
      "adm0_a3": "GNB",
      "geou_dif": 0.000000,
      "geounit": "Guinea Bissau",
      "gu_a3": "GNB",
      "su_dif": 0.000000,
      "subunit": "Guinea Bissau",
      "su_a3": "GNB",
      "brk_diff": 0.000000,
      "name": "Guinea-Bissau",
      "name_long": "Guinea-Bissau",
      "brk_a3": "GNB",
      "brk_name": "Guinea-Bissau",
      "brk_group": null,
      "abbrev": "GnB.",
      "postal": "GW",
      "formal_en": "Republic of Guinea-Bissau",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Guinea-Bissau",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 4.000000,
      "pop_est": 1533964.000000,
      "gdp_md_est": 904.200000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "GW",
      "iso_a3": "GNB",
      "iso_n3": "624",
      "un_a3": "624",
      "wb_a2": "GW",
      "wb_a3": "GNB",
      "woe_id": -99.000000,
      "adm0_a3_is": "GNB",
      "adm0_a3_us": "GNB",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 13.000000,
      "long_len": 13.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-15.130311245168173, 11.040411688679526], [-15.664180467175527, 11.458474025920795], [-16.085214199273565, 11.52459402103824], [-16.314786749730203, 11.80651479740655], [-16.30894731288123, 11.95870189050612], [-16.613838263403281, 12.170911159712702], [-16.677451951554573, 12.384851589401052], [-16.147716844130585, 12.547761542201187], [-15.816574266004254, 12.515567124883347], [-15.54847693527401, 12.628170070847347], [-13.700476040084325, 12.586182969610194], [-13.718743658899513, 12.247185573775511], [-13.828271857142125, 12.142644151249044], [-13.743160773157413, 11.811269029177412], [-13.900799729863776, 11.678718980348748], [-14.121406419317779, 11.677117010947697], [-14.382191534878729, 11.509271958863692], [-14.685687221728898, 11.527823798056488], [-15.130311245168173, 11.040411688679526]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Equatorial Guinea",
      "sov_a3": "GNQ",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Equatorial Guinea",
      "adm0_a3": "GNQ",
      "geou_dif": 0.000000,
      "geounit": "Equatorial Guinea",
      "gu_a3": "GNQ",
      "su_dif": 0.000000,
      "subunit": "Equatorial Guinea",
      "su_a3": "GNQ",
      "brk_diff": 0.000000,
      "name": "Eq. Guinea",
      "name_long": "Equatorial Guinea",
      "brk_a3": "GNQ",
      "brk_name": "Eq. Guinea",
      "brk_group": null,
      "abbrev": "Eq. G.",
      "postal": "GQ",
      "formal_en": "Republic of Equatorial Guinea",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Equatorial Guinea",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 8.000000,
      "pop_est": 650702.000000,
      "gdp_md_est": 14060.000000,
      "pop_year": 0.000000,
      "lastcensus": 2002.000000,
      "gdp_year": 0.000000,
      "economy": "7. Least developed region",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "GQ",
      "iso_a3": "GNQ",
      "iso_n3": "226",
      "un_a3": "226",
      "wb_a2": "GQ",
      "wb_a3": "GNQ",
      "woe_id": -99.000000,
      "adm0_a3_is": "GNQ",
      "adm0_a3_us": "GNQ",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Middle Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 10.000000,
      "long_len": 17.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[9.492888624721985, 1.010119533691494], [9.305613234096256, 1.160911363119183], [9.649158155972628, 2.283866075037736], [11.276449008843713, 2.261050930180872], [11.285078973036462, 1.057661851400013], [9.830284051155644, 1.067893784993799], [9.492888624721985, 1.010119533691494]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Greece",
      "sov_a3": "GRC",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Greece",
      "adm0_a3": "GRC",
      "geou_dif": 0.000000,
      "geounit": "Greece",
      "gu_a3": "GRC",
      "su_dif": 0.000000,
      "subunit": "Greece",
      "su_a3": "GRC",
      "brk_diff": 0.000000,
      "name": "Greece",
      "name_long": "Greece",
      "brk_a3": "GRC",
      "brk_name": "Greece",
      "brk_group": null,
      "abbrev": "Greece",
      "postal": "GR",
      "formal_en": "Hellenic Republic",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Greece",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 9.000000,
      "pop_est": 10737428.000000,
      "gdp_md_est": 343000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "GR",
      "iso_a3": "GRC",
      "iso_n3": "300",
      "un_a3": "300",
      "wb_a2": "GR",
      "wb_a3": "GRC",
      "woe_id": -99.000000,
      "adm0_a3_is": "GRC",
      "adm0_a3_us": "GRC",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Southern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[23.699980096133004, 35.705004380835533], [24.24666507334868, 35.368022365860156], [25.02501549652888, 35.424995632461986], [25.769207797964185, 35.35401805270908], [25.745023227651586, 35.179997666966216], [26.290002882601726, 35.299990342747918], [26.164997592887659, 35.004995429009796], [24.724982130642303, 34.91998769788961], [24.735007358506948, 35.084990546197588], [23.514978468528113, 35.279991563450977], [23.699980096133004, 35.705004380835533]]], [[[26.604195590936285, 41.562114569661105], [26.29460208507578, 40.936261298174259], [26.056942172965506, 40.824123440100834], [25.447677036244187, 40.852545477861469], [24.925848422960939, 40.947061672523233], [23.714811232200816, 40.687129218095123], [24.407998894964066, 40.124992987624097], [23.899967889102584, 39.96200552017558], [23.3429993018608, 39.960997829745793], [22.813987664488963, 40.476005153966554], [22.626298862404781, 40.256561184239189], [22.849747755634809, 39.659310818025773], [23.350027296652598, 39.190011298167263], [22.973099399515547, 38.970903225249657], [23.530016310324953, 38.510001125638468], [24.025024855248944, 38.21999298761645], [24.040011020613605, 37.655014553369426], [23.115002882589152, 37.920011298162223], [23.409971958111072, 37.409990749657396], [22.774971958108637, 37.305010077456558], [23.15422529469862, 36.422505804992056], [22.490028110451107, 36.41000010837746], [21.670026482843696, 36.844986477194198], [21.295010613701578, 37.644989325504696], [21.120034213961333, 38.310323391262727], [20.730032179454582, 38.769985256498785], [20.217712029712857, 39.340234686839636], [20.15001590341052, 39.624997666984029], [20.615000441172782, 40.110006822259436], [20.674996779063633, 40.434999904943055], [20.999989861747281, 40.580003973953978], [21.020040317476429, 40.84272695572588], [21.674160597426976, 40.931274522457983], [22.05537763844427, 41.149865831052693], [22.597308383889015, 41.130487168943205], [22.76177, 41.3048], [22.952377150166569, 41.337993882811219], [23.692073601992462, 41.309080918943863], [24.492644891058035, 41.58389618587205], [25.197201368925533, 41.234485988930658], [26.106138136507184, 41.328898830727837], [26.117041863720914, 41.826904608724732], [26.604195590936285, 41.562114569661105]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Denmark",
      "sov_a3": "DN1",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Country",
      "admin": "Greenland",
      "adm0_a3": "GRL",
      "geou_dif": 0.000000,
      "geounit": "Greenland",
      "gu_a3": "GRL",
      "su_dif": 0.000000,
      "subunit": "Greenland",
      "su_a3": "GRL",
      "brk_diff": 0.000000,
      "name": "Greenland",
      "name_long": "Greenland",
      "brk_a3": "GRL",
      "brk_name": "Greenland",
      "brk_group": null,
      "abbrev": "Grlnd.",
      "postal": "GL",
      "formal_en": "Greenland",
      "formal_fr": null,
      "note_adm0": "Den.",
      "note_brk": null,
      "name_sort": "Greenland",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 12.000000,
      "pop_est": 57600.000000,
      "gdp_md_est": 1100.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "GL",
      "iso_a3": "GRL",
      "iso_n3": "304",
      "un_a3": "304",
      "wb_a2": "GL",
      "wb_a3": "GRL",
      "woe_id": -99.000000,
      "adm0_a3_is": "GRL",
      "adm0_a3_us": "GRL",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Northern America",
      "region_wb": "Europe & Central Asia",
      "name_len": 9.000000,
      "long_len": 9.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": -99.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-46.76379, 82.62796], [-43.40644, 83.22516], [-39.89753, 83.18018], [-38.62214, 83.54905], [-35.08787, 83.64513], [-27.10046, 83.51966], [-20.84539, 82.72669], [-22.69182, 82.34165], [-26.51753, 82.29765], [-31.9, 82.2], [-31.39646, 82.02154], [-27.85666, 82.13178], [-24.84448, 81.78697], [-22.90328, 82.09317], [-22.07175, 81.73449], [-23.16961, 81.15271], [-20.62363, 81.52462], [-15.76818, 81.91245], [-12.77018, 81.71885], [-12.20855, 81.29154], [-16.28533, 80.58004], [-16.85, 80.35], [-20.04624, 80.17708], [-17.73035, 80.12912], [-18.9, 79.4], [-19.70499, 78.75128], [-19.67353, 77.63859], [-18.47285, 76.98565], [-20.03503, 76.94434], [-21.67944, 76.62795], [-19.83407, 76.09808], [-19.59896, 75.24838], [-20.66818, 75.15585], [-19.37281, 74.29561], [-21.59422, 74.22382], [-20.43454, 73.81713], [-20.76234, 73.46436], [-22.17221, 73.30955], [-23.56593, 73.30663], [-22.31311, 72.62928], [-22.29954, 72.18409], [-24.27834, 72.59788], [-24.79296, 72.3302], [-23.44296, 72.08016], [-22.13281, 71.46898], [-21.75356, 70.66369], [-23.53603, 70.471], [-24.30702, 70.85649], [-25.54341, 71.43094], [-25.20135, 70.75226], [-26.36276, 70.22646], [-23.72742, 70.18401], [-22.34902, 70.12946], [-25.02927, 69.2588], [-27.74737, 68.47046], [-30.67371, 68.12503], [-31.77665, 68.12078], [-32.81105, 67.73547], [-34.20196, 66.67974], [-36.35284, 65.9789], [-37.04378, 65.93768], [-38.37505, 65.69213], [-39.81222, 65.45848], [-40.66899, 64.83997], [-40.68281, 64.13902], [-41.1887, 63.48246], [-42.81938, 62.68233], [-42.41666, 61.90093], [-42.86619, 61.07404], [-43.3784, 60.09772], [-44.7875, 60.03676], [-46.26364, 60.85328], [-48.26294, 60.85843], [-49.23308, 61.40681], [-49.90039, 62.38336], [-51.63325, 63.62691], [-52.14014, 64.27842], [-52.27659, 65.1767], [-53.66166, 66.09957], [-53.30161, 66.8365], [-53.96911, 67.18899], [-52.9804, 68.35759], [-51.47536, 68.72958], [-51.08041, 69.14781], [-50.87122, 69.9291], [-52.013585, 69.574925], [-52.55792, 69.42616], [-53.45629, 69.283625], [-54.68336, 69.61003], [-54.75001, 70.28932], [-54.35884, 70.821315], [-53.431315, 70.835755], [-51.39014, 70.56978], [-53.10937, 71.20485], [-54.00422, 71.54719], [-55.0, 71.406536967272572], [-55.83468, 71.65444], [-54.71819, 72.58625], [-55.32634, 72.95861], [-56.12003, 73.64977], [-57.32363, 74.71026], [-58.59679, 75.09861], [-58.58516, 75.51727], [-61.26861, 76.10238], [-63.39165, 76.1752], [-66.06427, 76.13486], [-68.50438, 76.06141], [-69.66485, 76.37975], [-71.40257, 77.00857], [-68.77671, 77.32312], [-66.76397, 77.37595], [-71.04293, 77.63595], [-73.297, 78.04419], [-73.15938, 78.43271], [-69.37345, 78.91388], [-65.7107, 79.39436], [-65.3239, 79.75814], [-68.02298, 80.11721], [-67.15129, 80.51582], [-63.68925, 81.21396], [-62.23444, 81.3211], [-62.65116, 81.77042], [-60.28249, 82.03363], [-57.20744, 82.19074], [-54.13442, 82.19962], [-53.04328, 81.88833], [-50.39061, 82.43883], [-48.00386, 82.06481], [-46.59984, 81.985945], [-44.523, 81.6607], [-46.9007, 82.19979], [-46.76379, 82.62796]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Guatemala",
      "sov_a3": "GTM",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Guatemala",
      "adm0_a3": "GTM",
      "geou_dif": 0.000000,
      "geounit": "Guatemala",
      "gu_a3": "GTM",
      "su_dif": 0.000000,
      "subunit": "Guatemala",
      "su_a3": "GTM",
      "brk_diff": 0.000000,
      "name": "Guatemala",
      "name_long": "Guatemala",
      "brk_a3": "GTM",
      "brk_name": "Guatemala",
      "brk_group": null,
      "abbrev": "Guat.",
      "postal": "GT",
      "formal_en": "Republic of Guatemala",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Guatemala",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 6.000000,
      "pop_est": 13276517.000000,
      "gdp_md_est": 68580.000000,
      "pop_year": -99.000000,
      "lastcensus": 2002.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "GT",
      "iso_a3": "GTM",
      "iso_n3": "320",
      "un_a3": "320",
      "wb_a2": "GT",
      "wb_a3": "GTM",
      "woe_id": -99.000000,
      "adm0_a3_is": "GTM",
      "adm0_a3_us": "GTM",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Central America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 9.000000,
      "long_len": 9.000000,
      "abbrev_len": 5.000000,
      "tiny": 4.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-90.095554572290979, 13.735337632700734], [-90.608624030300845, 13.909771429901951], [-91.232410244496052, 13.927832342987957], [-91.689746670279135, 14.126218166556455], [-92.227750006869826, 14.538828640190928], [-92.203229539747326, 14.830102850804069], [-92.087215949252069, 15.064584662328441], [-92.229248623406278, 15.25144664149586], [-91.747960171255926, 16.066564846251723], [-90.464472622422662, 16.069562079324655], [-90.438866950222035, 16.410109768128095], [-90.600846727240921, 16.470777899638762], [-90.711821865587723, 16.687483018454728], [-91.081670091500655, 16.918476670799407], [-91.453921271515156, 17.252177232324172], [-91.002269253284211, 17.25465770107418], [-91.001519945015957, 17.81759491624571], [-90.067933519230976, 17.819326076727478], [-89.143080410503316, 17.808318996649319], [-89.150806037130948, 17.015576687075836], [-89.229121670269279, 15.886937567605171], [-88.930612759135272, 15.887273464415076], [-88.604586147805847, 15.70638011317736], [-88.51836402052686, 15.855389105690975], [-88.225022752622024, 15.727722479713904], [-88.680679694355632, 15.346247056535304], [-89.154810960633569, 15.06641917567481], [-89.225220099631272, 14.874286200413621], [-89.145535041037178, 14.678019110569082], [-89.3533259752828, 14.424132798719114], [-89.587342698916558, 14.36258616785949], [-89.534219326520514, 14.244815578666305], [-89.721933966820728, 14.134228013561696], [-90.064677903996596, 13.881969509328925], [-90.095554572290979, 13.735337632700734]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Guyana",
      "sov_a3": "GUY",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Guyana",
      "adm0_a3": "GUY",
      "geou_dif": 0.000000,
      "geounit": "Guyana",
      "gu_a3": "GUY",
      "su_dif": 0.000000,
      "subunit": "Guyana",
      "su_a3": "GUY",
      "brk_diff": 0.000000,
      "name": "Guyana",
      "name_long": "Guyana",
      "brk_a3": "GUY",
      "brk_name": "Guyana",
      "brk_group": null,
      "abbrev": "Guy.",
      "postal": "GY",
      "formal_en": "Co-operative Republic of Guyana",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Guyana",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 8.000000,
      "pop_est": 772298.000000,
      "gdp_md_est": 2966.000000,
      "pop_year": -99.000000,
      "lastcensus": 2002.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "GY",
      "iso_a3": "GUY",
      "iso_n3": "328",
      "un_a3": "328",
      "wb_a2": "GY",
      "wb_a3": "GUY",
      "woe_id": -99.000000,
      "adm0_a3_is": "GUY",
      "adm0_a3_us": "GUY",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "South America",
      "region_un": "Americas",
      "subregion": "South America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-59.758284878159195, 8.367034816924047], [-59.101684129458661, 7.999201971870492], [-58.482962205628063, 7.347691351750697], [-58.454876064677421, 6.832787380394464], [-58.078103196837375, 6.809093736188643], [-57.542218593970645, 6.321268215353356], [-57.147436489476888, 5.973149929219161], [-57.307245856339506, 5.073566595882227], [-57.914288906472137, 4.812626451024414], [-57.860209520078698, 4.57680105226045], [-58.044694383360678, 4.060863552258382], [-57.60156897645787, 3.334654649260685], [-57.28143347840971, 3.333491929534119], [-57.150097825739913, 2.768926906745406], [-56.539385748914555, 1.899522609866921], [-56.782704230360828, 1.863710842288654], [-57.335822923396904, 1.948537705895759], [-57.660971035377372, 1.682584947105639], [-58.113449876525017, 1.507195135907025], [-58.429477098205965, 1.463941962078721], [-58.540012986878295, 1.268088283692521], [-59.030861579002647, 1.317697658692722], [-59.646043667221257, 1.786893825686789], [-59.718545701726747, 2.24963043864436], [-59.974524909084558, 2.755232652188056], [-59.815413174057866, 3.606498521332085], [-59.538039923731233, 3.958802598481938], [-59.767405768458715, 4.423502915866607], [-60.11100236676738, 4.574966538914083], [-59.980958624904886, 5.014061184098139], [-60.213683437731333, 5.244486395687602], [-60.733574184803722, 5.200277207861901], [-61.410302903881956, 5.959068101419618], [-61.139415045807951, 6.234296779806144], [-61.159336310456482, 6.696077378766319], [-60.543999192940987, 6.856584377464883], [-60.295668097562398, 7.043911444522919], [-60.637972785063766, 7.414999904810855], [-60.5505879380582, 7.779602972846178], [-59.758284878159195, 8.367034816924047]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Honduras",
      "sov_a3": "HND",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Honduras",
      "adm0_a3": "HND",
      "geou_dif": 0.000000,
      "geounit": "Honduras",
      "gu_a3": "HND",
      "su_dif": 0.000000,
      "subunit": "Honduras",
      "su_a3": "HND",
      "brk_diff": 0.000000,
      "name": "Honduras",
      "name_long": "Honduras",
      "brk_a3": "HND",
      "brk_name": "Honduras",
      "brk_group": null,
      "abbrev": "Hond.",
      "postal": "HN",
      "formal_en": "Republic of Honduras",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Honduras",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 5.000000,
      "pop_est": 7792854.000000,
      "gdp_md_est": 33720.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "HN",
      "iso_a3": "HND",
      "iso_n3": "340",
      "un_a3": "340",
      "wb_a2": "HN",
      "wb_a3": "HND",
      "woe_id": -99.000000,
      "adm0_a3_is": "HND",
      "adm0_a3_us": "HND",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Central America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-87.316654425795491, 12.984685777229004], [-87.489408738947134, 13.297534898323931], [-87.79311113152653, 13.384480495655168], [-87.723502977229316, 13.785050360565606], [-87.859515347021613, 13.893312486217098], [-88.065342576840123, 13.964625962779792], [-88.503997972349623, 13.845485948130943], [-88.541230841815945, 13.980154730683523], [-88.843072882832757, 14.140506700085211], [-89.058511929057659, 14.340029405164216], [-89.353325975282814, 14.424132798719086], [-89.145535041037192, 14.678019110569153], [-89.225220099631258, 14.874286200413678], [-89.15481096063354, 15.066419175674866], [-88.680679694355604, 15.34624705653539], [-88.225022752621953, 15.727722479714032], [-88.121153123715374, 15.688655096901357], [-87.901812506852423, 15.864458319558196], [-87.615680101252337, 15.878798529519202], [-87.522920905288458, 15.797278957578783], [-87.367762417332131, 15.846940009011291], [-86.903191291028179, 15.756712958229571], [-86.440945604177386, 15.782835394753192], [-86.119233974944336, 15.893448798073962], [-86.001954311857844, 16.005405788634391], [-85.683317430346278, 15.953651841693954], [-85.444003872402561, 15.885749009662447], [-85.182443610357211, 15.909158433490632], [-84.983721889978824, 15.995923163308703], [-84.526979743167146, 15.857223619037427], [-84.368255581382584, 15.835157782448732], [-84.063054572266822, 15.648244126849136], [-83.773976610026125, 15.424071763566872], [-83.410381232420377, 15.270902818253774], [-83.147219000974133, 14.99582916916421], [-83.489988776366033, 15.016267198135665], [-83.628584967772895, 14.880073960830373], [-83.97572140169359, 14.749435939996488], [-84.228341640952408, 14.748764146376629], [-84.449335903648603, 14.621614284722511], [-84.649582078779645, 14.666805324761867], [-84.820036790694303, 14.81958669683263], [-84.924500698572331, 14.790492865452336], [-85.052787441736882, 14.551541042534723], [-85.148750576502891, 14.560196844943619], [-85.165364549484821, 14.354369615125051], [-85.514413011400279, 14.079011745657908], [-85.698665330736958, 13.960078436738002], [-85.801294725268519, 13.836054999237604], [-86.096263800790609, 14.038187364147234], [-86.312142096689854, 13.771356106008227], [-86.52070817741992, 13.778487453664468], [-86.755086636079625, 13.754845485890939], [-86.733821784191491, 13.2630925562014], [-86.880557013684381, 13.254204209847217], [-87.005769009127448, 13.025794379117258], [-87.316654425795491, 12.984685777229004]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Croatia",
      "sov_a3": "HRV",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Croatia",
      "adm0_a3": "HRV",
      "geou_dif": 0.000000,
      "geounit": "Croatia",
      "gu_a3": "HRV",
      "su_dif": 0.000000,
      "subunit": "Croatia",
      "su_a3": "HRV",
      "brk_diff": 0.000000,
      "name": "Croatia",
      "name_long": "Croatia",
      "brk_a3": "HRV",
      "brk_name": "Croatia",
      "brk_group": null,
      "abbrev": "Cro.",
      "postal": "HR",
      "formal_en": "Republic of Croatia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Croatia",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 1.000000,
      "pop_est": 4489409.000000,
      "gdp_md_est": 82390.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "HR",
      "iso_a3": "HRV",
      "iso_n3": "191",
      "un_a3": "191",
      "wb_a2": "HR",
      "wb_a3": "HRV",
      "woe_id": -99.000000,
      "adm0_a3_is": "HRV",
      "adm0_a3_us": "HRV",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Southern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[18.829838087650046, 45.908877671891844], [19.072768995854176, 45.521511135432092], [19.390475701584592, 45.236515611342384], [19.005486281010121, 44.860233669609158], [18.553214145591653, 45.081589667331457], [17.861783481526402, 45.067740383477144], [17.002146030351014, 45.233776760430942], [16.534939406000206, 45.211607570977719], [16.318156772535872, 45.004126695325908], [15.959367303133376, 45.233776760430942], [15.750026075918981, 44.818711656262565], [16.239660271884532, 44.351143296885709], [16.456442905348865, 44.041239732431279], [16.916156447017329, 43.66772247982567], [17.297373488034452, 43.446340643887368], [17.674921502358984, 43.02856252702361], [18.56, 42.65], [18.450016310304818, 42.479991360029317], [17.509970330483327, 42.849994615239154], [16.930005730871642, 43.20999848080038], [16.015384555737683, 43.507215481127218], [15.174453973052096, 44.243191229827914], [15.376250441151797, 44.317915350922078], [14.920309279040509, 44.738483995129457], [14.901602410550879, 45.076060289076111], [14.258747592839995, 45.233776760430942], [13.952254672917036, 44.802123521496867], [13.656975538801191, 45.136935126315961], [13.679403110415819, 45.484149074885011], [13.715059848697251, 45.500323798192426], [14.411968214585499, 45.466165676447417], [14.59510949062792, 45.634940904312828], [14.935243767972963, 45.471695054702764], [15.327674594797429, 45.452316392593332], [15.323953891672431, 45.731782538427694], [15.671529575267641, 45.834153550797907], [15.768732944408612, 46.238108222023527], [16.564808383864943, 46.503750922219808], [16.882515089595415, 46.380631822284442], [17.630066359129557, 45.951769110694102], [18.456062452882861, 45.75948110613615], [18.829838087650046, 45.908877671891844]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Haiti",
      "sov_a3": "HTI",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Haiti",
      "adm0_a3": "HTI",
      "geou_dif": 0.000000,
      "geounit": "Haiti",
      "gu_a3": "HTI",
      "su_dif": 0.000000,
      "subunit": "Haiti",
      "su_a3": "HTI",
      "brk_diff": 0.000000,
      "name": "Haiti",
      "name_long": "Haiti",
      "brk_a3": "HTI",
      "brk_name": "Haiti",
      "brk_group": null,
      "abbrev": "Haiti",
      "postal": "HT",
      "formal_en": "Republic of Haiti",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Haiti",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 7.000000,
      "mapcolor13": 2.000000,
      "pop_est": 9035536.000000,
      "gdp_md_est": 11500.000000,
      "pop_year": -99.000000,
      "lastcensus": 2003.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "HT",
      "iso_a3": "HTI",
      "iso_n3": "332",
      "un_a3": "332",
      "wb_a2": "HT",
      "wb_a3": "HTI",
      "woe_id": -99.000000,
      "adm0_a3_is": "HTI",
      "adm0_a3_us": "HTI",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Caribbean",
      "region_wb": "Latin America & Caribbean",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-73.189790615517623, 19.915683905511912], [-72.579672817663621, 19.871500555902358], [-71.712361416292964, 19.714455878167357], [-71.624873216422827, 19.169837958243306], [-71.701302659782499, 18.785416978424053], [-71.945112067335558, 18.616900132720261], [-71.68773759630588, 18.316660061104471], [-71.708304816358051, 18.044997056546094], [-72.372476162389347, 18.21496084235406], [-72.844411180294884, 18.145611070218365], [-73.454554816365032, 18.2179063989947], [-73.922433234335656, 18.030992743395004], [-74.458033616824778, 18.342549953682706], [-74.369925299767132, 18.664907538319412], [-73.449542202432724, 18.526052964751145], [-72.694937099890637, 18.445799465401862], [-72.334881557897006, 18.668421535715254], [-72.791649542924887, 19.101625067618031], [-72.784104783810278, 19.483591416903408], [-73.415022345661754, 19.639550889560283], [-73.189790615517623, 19.915683905511912]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Hungary",
      "sov_a3": "HUN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Hungary",
      "adm0_a3": "HUN",
      "geou_dif": 0.000000,
      "geounit": "Hungary",
      "gu_a3": "HUN",
      "su_dif": 0.000000,
      "subunit": "Hungary",
      "su_a3": "HUN",
      "brk_diff": 0.000000,
      "name": "Hungary",
      "name_long": "Hungary",
      "brk_a3": "HUN",
      "brk_name": "Hungary",
      "brk_group": null,
      "abbrev": "Hun.",
      "postal": "HU",
      "formal_en": "Republic of Hungary",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Hungary",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 5.000000,
      "pop_est": 9905596.000000,
      "gdp_md_est": 196600.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "HU",
      "iso_a3": "HUN",
      "iso_n3": "348",
      "un_a3": "348",
      "wb_a2": "HU",
      "wb_a3": "HUN",
      "woe_id": -99.000000,
      "adm0_a3_is": "HUN",
      "adm0_a3_us": "HUN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Eastern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[16.202298211337364, 46.852385972676963], [16.534267612380376, 47.496170966169117], [16.340584344150415, 47.71290192320123], [16.903754103267261, 47.714865627628328], [16.979666782304037, 48.123497015976305], [17.48847293464982, 47.867466132186216], [17.857132602620027, 47.758428860050373], [18.696512892336926, 47.880953681014404], [18.777024773847671, 48.081768296900634], [19.174364861739889, 48.111378892603867], [19.661363559658497, 48.266614895208662], [19.769470656013112, 48.202691148463614], [20.239054396249347, 48.327567247096923], [20.473562045989866, 48.562850043321816], [20.801293979584926, 48.623854071642384], [21.872236362401736, 48.319970811550021], [22.085608351334855, 48.422264309271789], [22.640819939878753, 48.150239569687358], [22.710531447040495, 47.882193915389408], [22.099767693782837, 47.672439276716702], [21.626514926853872, 46.994237779318162], [21.021952345471249, 46.316087958351901], [20.220192498462836, 46.127468980486555], [19.596044549241583, 46.17172984474454], [18.829838087649961, 45.908877671891929], [18.456062452882861, 45.759481106136136], [17.630066359129557, 45.951769110694187], [16.882515089595302, 46.380631822284442], [16.564808383864857, 46.50375092221983], [16.370504998447416, 46.841327216166505], [16.202298211337364, 46.852385972676963]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Indonesia",
      "sov_a3": "IDN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Indonesia",
      "adm0_a3": "IDN",
      "geou_dif": 0.000000,
      "geounit": "Indonesia",
      "gu_a3": "IDN",
      "su_dif": 0.000000,
      "subunit": "Indonesia",
      "su_a3": "IDN",
      "brk_diff": 0.000000,
      "name": "Indonesia",
      "name_long": "Indonesia",
      "brk_a3": "IDN",
      "brk_name": "Indonesia",
      "brk_group": null,
      "abbrev": "Indo.",
      "postal": "INDO",
      "formal_en": "Republic of Indonesia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Indonesia",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 11.000000,
      "pop_est": 240271522.000000,
      "gdp_md_est": 914600.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "4. Emerging region: MIKT",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "ID",
      "iso_a3": "IDN",
      "iso_n3": "360",
      "un_a3": "360",
      "wb_a2": "ID",
      "wb_a3": "IDN",
      "woe_id": -99.000000,
      "adm0_a3_is": "IDN",
      "adm0_a3_us": "IDN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "South-Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 9.000000,
      "long_len": 9.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[120.715608758630452, -10.239581394087864], [120.295014276206899, -10.258649997603527], [118.967808465654713, -9.557969252158031], [119.900309686361624, -9.361340427287516], [120.425755649905426, -9.665921319215798], [120.775501743656747, -9.969675388227458], [120.715608758630452, -10.239581394087864]]], [[[124.435950148619412, -10.140000909061442], [123.579981724136729, -10.359987481327963], [123.459989048355027, -10.239994805546175], [123.550009393407464, -9.90001555749798], [123.980008986508125, -9.290026950724695], [124.968682489116219, -8.892790215697048], [125.07001997284064, -9.089987481322837], [125.088520135601101, -9.393173109579322], [124.435950148619412, -10.140000909061442]]], [[[117.900018345207769, -8.095681247594925], [118.260616489740499, -8.362383314653329], [118.878459914222134, -8.28068287519983], [119.1265067892231, -8.705824883665073], [117.970401645989313, -8.906639499551261], [117.277730747549043, -9.040894870645559], [116.740140822416635, -9.032936700072639], [117.083737420725328, -8.457157891476541], [117.632024367342154, -8.449303073768192], [117.900018345207769, -8.095681247594925]]], [[[122.903537225436111, -8.094234307490737], [122.756982863456329, -8.649807631060639], [121.254490594570115, -8.933666273639943], [119.924390903809609, -8.810417982623875], [119.92092858284613, -8.444858900591072], [120.715091994307585, -8.236964613480865], [121.341668735846582, -8.536739597206022], [122.007364536630433, -8.460620212440162], [122.903537225436111, -8.094234307490737]]], [[[108.623478631628956, -6.777673841990676], [110.539227329553313, -6.877357679881683], [110.759575636845938, -6.465186455921753], [112.614811232556377, -6.946035658397591], [112.978768345188115, -7.59421314863458], [114.478935174621171, -7.776527601760279], [115.705526971501087, -8.370806573116866], [114.564511346496516, -8.751816908404834], [113.464733514460903, -8.348947442257426], [112.559672479301042, -8.376180922075164], [111.522061395312477, -8.302128594600958], [110.586149530074323, -8.122604668819022], [109.427667270955197, -7.740664157749762], [108.693655226681329, -7.641600437046222], [108.27776329959633, -7.766657403192582], [106.454102004016164, -7.354899590690948], [106.280624220812314, -6.924899997590202], [105.365486281355544, -6.85141611087117], [106.051645949327082, -5.8959188777945], [107.265008579540194, -5.954985039904059], [108.072091099074697, -6.345762220895239], [108.486846144649263, -6.421984958525769], [108.623478631628956, -6.777673841990676]]], [[[134.724624465066682, -6.214400730009288], [134.210133905168931, -6.895237725454706], [134.112775506731026, -6.142467136259015], [134.290335728085807, -5.783057549669039], [134.49962527886791, -5.445042006047899], [134.727001580952134, -5.73758228925216], [134.724624465066682, -6.214400730009288]]], [[[127.249215122588936, -3.45906503663889], [126.874922723498884, -3.79098276124958], [126.18380211802733, -3.607376397316557], [125.989033644719285, -3.177273451351326], [127.000651483264988, -3.12931772218441], [127.249215122588936, -3.45906503663889]]], [[[130.471344028851803, -3.09376433676762], [130.834836053592795, -3.858472181822762], [129.990546502808144, -3.446300957862817], [129.155248651242431, -3.362636813982249], [128.590683628453661, -3.428679294451257], [127.898891229362363, -3.393435967628193], [128.135879347852807, -2.843650404474914], [129.370997756060916, -2.802154229344552], [130.471344028851803, -3.09376433676762]]], [[[134.1433679546478, -1.151867364103595], [134.42262739475305, -2.769184665542383], [135.457602980694702, -3.367752780779114], [136.293314243718811, -2.30704233155609], [137.440737746327528, -1.703513278819372], [138.329727411044786, -1.702686455902651], [139.184920689042968, -2.051295668143638], [139.926684198160416, -2.409051608900285], [141.000210402591875, -2.600151055515624], [141.017056919519035, -5.859021905138022], [141.033851760013903, -9.117892754760419], [140.143415155192571, -8.297167657100957], [139.127766554928115, -8.096042982620943], [138.881476678624978, -8.380935153846096], [137.614473911692841, -8.411682631059762], [138.039099155835203, -7.597882175327356], [138.668621454014811, -7.320224704623072], [138.407913853102372, -6.232849216337485], [137.927839797110863, -5.393365573756], [135.989250116113482, -4.546543877789048], [135.164597609599724, -4.462931410340772], [133.662880487197896, -3.538853448097527], [133.367704705946807, -4.024818617370315], [132.983955519747354, -4.112978610860281], [132.756940952689007, -3.74628264731713], [132.753788690319226, -3.311787204607072], [131.989804315316206, -2.820551039240456], [133.066844517143494, -2.460417982598443], [133.780030959203515, -2.47984832114021], [133.696211786026169, -2.214541517753688], [132.232373488494233, -2.212526136894326], [131.836221958544712, -1.617161960459597], [130.942839797082826, -1.432522067880797], [130.519558140180067, -0.937720228686075], [131.867537876513637, -0.695461114101818], [132.380116408416797, -0.369537855636977], [133.985548130428441, -0.780210463060442], [134.1433679546478, -1.151867364103595]]], [[[125.240500522971587, 1.419836127117605], [124.437035353697382, 0.427881171058971], [123.685504998876723, 0.235593166500877], [122.723083123872897, 0.431136786293337], [121.056724888189109, 0.381217352699451], [120.183083123862758, 0.23724681233422], [120.040869582195484, -0.519657891444851], [120.935905389490728, -1.408905938323372], [121.475820754076182, -0.955962009285116], [123.340564813328484, -0.615672702643081], [123.258399285984495, -1.076213067228338], [122.822715285331611, -0.930950616055881], [122.388529901215378, -1.516858005381124], [121.508273553555483, -1.904482924002423], [122.454572381684301, -3.186058444840882], [122.271896193532569, -3.529500013852697], [123.170962762546566, -4.683693129091708], [123.162332798353788, -5.340603936385961], [122.628515252778726, -5.634591159694494], [122.236394484548072, -5.282933037948283], [122.719569126477069, -4.46417164471579], [121.738233677254385, -4.8513314754465], [121.489463332201268, -4.574552504091216], [121.619171177253889, -4.188477878438675], [120.898181593917712, -3.602105401222829], [120.972388950688782, -2.62764291749491], [120.305452915529912, -2.931603692235726], [120.390047235191759, -4.097579034037224], [120.430716587405385, -5.528241062037779], [119.796543410319515, -5.673400160345651], [119.366905552244958, -5.379878024927805], [119.653606398600147, -4.459417412944958], [119.498835483885983, -3.49441171632651], [119.078344354327015, -3.487021986508765], [118.767768996252897, -2.801999200047689], [119.18097374885869, -2.147103773612798], [119.323393996255078, -1.353147067880471], [119.825998976725856, 0.154254462073496], [120.035701938966355, 0.566477362465804], [120.885779250167701, 1.309222723796836], [121.666816847826993, 1.013943589681077], [122.927566766451861, 0.875192368977466], [124.07752241424285, 0.917101955566139], [125.065989211121831, 1.643259182131558], [125.240500522971587, 1.419836127117605]]], [[[128.688248732620735, 1.132385972494106], [128.63595218314137, 0.258485826006179], [128.120169712436194, 0.356412665199286], [127.968034295768888, -0.252077325037533], [128.37999881399972, -0.780003757331286], [128.100015903842319, -0.899996433112975], [127.696474644075039, -0.266598402511505], [127.399490187693772, 1.011721503092573], [127.600511509309086, 1.810690822757181], [127.932377557487513, 2.174596258956555], [128.004156121940838, 1.628531398928331], [128.594559360875479, 1.540810655112864], [128.688248732620735, 1.132385972494106]]], [[[117.875627069166029, 1.827640692548911], [118.996747267738186, 0.902219143066048], [117.811858351717802, 0.784241848143722], [117.478338657706075, 0.102474676917026], [117.521643507966616, -0.803723239753211], [116.560048455879524, -1.487660821136231], [116.5337968282752, -2.483517347832901], [116.148083937648636, -4.012726332214015], [116.00085778204911, -3.657037448749008], [114.864803094544556, -4.106984144714417], [114.468651564595092, -3.495703627133821], [113.755671828264127, -3.43916961020652], [113.256994256647573, -3.118775729996855], [112.068126255340673, -3.478392022316072], [111.70329064336002, -2.994442233902632], [111.048240187628238, -3.049425957861189], [110.223846063276, -2.934032484553484], [110.070935500124364, -1.592874037282414], [109.571947869914055, -1.314906507984489], [109.091873813922547, -0.459506524257051], [108.952657505328176, 0.415375474444346], [109.069136183714051, 1.341933905437642], [109.663260125773746, 2.006466986494985], [109.830226678508865, 1.338135687664192], [110.51406090702713, 0.773131415200993], [111.159137811326588, 0.976478176269509], [111.797548455860436, 0.904441229654651], [112.380251906383677, 1.410120957846758], [112.859809198052204, 1.497790025229946], [113.80584964401956, 1.217548732911041], [114.621355422017501, 1.430688177898887], [115.134037306785245, 2.821481838386219], [115.519078403792008, 3.169238389494396], [115.865517205876785, 4.306559149590157], [117.015214471506368, 4.306094061699469], [117.882034946770176, 4.137551377779488], [117.313232456533541, 3.234428208830579], [118.048329705885379, 2.287690131027361], [117.875627069166029, 1.827640692548911]]], [[[105.81765506390937, -5.852355645372413], [104.710384149191526, -5.873284600450646], [103.86821333213075, -5.037314955264975], [102.584260695406925, -4.220258884298204], [102.156173130301028, -3.614146009946765], [101.399113397225079, -2.799777113459172], [100.902502882900166, -2.05026213949786], [100.141980828860625, -0.650347588710957], [99.263739862060248, 0.183141587724663], [98.970011020913347, 1.042882391764536], [98.601351352943112, 1.823506577965617], [97.69959760944991, 2.453183905442117], [97.176942173249898, 3.30879059489861], [96.424016554757344, 3.868859768077911], [95.380876092513489, 4.970782172053674], [95.293026157617334, 5.479820868344817], [95.936862827541773, 5.439513251157109], [97.484882033277103, 5.246320909034011], [98.369169142655693, 4.268370266126368], [99.14255862833582, 3.590349636240916], [99.693997837322428, 3.174328518075157], [100.641433546961679, 2.099381211755798], [101.658012323007341, 2.083697414555189], [102.49827111207324, 1.398700466310217], [103.07684044801303, 0.561361395668854], [103.838396030698362, 0.104541734208667], [103.437645298274987, -0.711945896002845], [104.010788608824015, -1.059211521004229], [104.369991489684907, -1.084843031421016], [104.539490187602183, -1.782371514496717], [104.887892694114015, -2.340425306816655], [105.622111444116996, -2.42884368246807], [106.108593377712708, -3.06177662517895], [105.85744591677414, -4.305524997579724], [105.81765506390937, -5.852355645372413]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "India",
      "sov_a3": "IND",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "India",
      "adm0_a3": "IND",
      "geou_dif": 0.000000,
      "geounit": "India",
      "gu_a3": "IND",
      "su_dif": 0.000000,
      "subunit": "India",
      "su_a3": "IND",
      "brk_diff": 0.000000,
      "name": "India",
      "name_long": "India",
      "brk_a3": "IND",
      "brk_name": "India",
      "brk_group": null,
      "abbrev": "India",
      "postal": "IND",
      "formal_en": "Republic of India",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "India",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 2.000000,
      "pop_est": 1166079220.000000,
      "gdp_md_est": 3297000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "3. Emerging region: BRIC",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "IN",
      "iso_a3": "IND",
      "iso_n3": "356",
      "un_a3": "356",
      "wb_a2": "IN",
      "wb_a3": "IND",
      "woe_id": -99.000000,
      "adm0_a3_is": "IND",
      "adm0_a3_us": "IND",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Southern Asia",
      "region_wb": "South Asia",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[77.837450799474567, 35.494009507787766], [78.912268914713223, 34.321936346975789], [78.811086460285736, 33.506198025032418], [79.208891636068586, 32.994394639613716], [79.17612877799553, 32.483779812137712], [78.458446486326011, 32.618164374312727], [78.738894484374015, 31.515906073527063], [79.721366815107103, 30.882714748654731], [81.111256138029319, 30.183480943313402], [80.476721225917402, 29.729865220655341], [80.088424513676273, 28.79447011974014], [81.057202589852025, 28.416095282499043], [81.999987420584972, 27.925479234319994], [83.304248895199549, 27.364505723575562], [84.675017938173795, 27.234901231387536], [85.251778598983378, 26.726198431906344], [86.024392938179176, 26.630984605408571], [87.227471958366294, 26.397898057556077], [88.06023766474982, 26.414615383402491], [88.174804315140918, 26.810405178325951], [88.043132765661227, 27.445818589786825], [88.12044070836987, 27.876541652939594], [88.730325962278556, 28.086864732367516], [88.814248488320558, 27.299315904239364], [88.83564253128938, 27.098966376243762], [89.744527622438852, 26.719402981059957], [90.373274774134075, 26.875724188742879], [91.217512648486434, 26.808648179628022], [92.033483514375092, 26.838310451763562], [92.103711785859744, 27.452614040633208], [91.696656528696678, 27.771741848251665], [92.503118931043645, 27.896876329046449], [93.413347609432691, 28.640629380807226], [94.565990431702943, 29.277438055939985], [95.40480228066464, 29.031716620392132], [96.117678664131034, 29.452802028922466], [96.586590610747493, 28.83097951915434], [96.248833449287787, 28.411030992134442], [97.327113885490036, 28.261582749946339], [97.402561476636137, 27.882536119085444], [97.051988559968095, 27.699058946233151], [97.133999058015306, 27.083773505149964], [96.419365675850969, 27.264589341739224], [95.124767694074961, 26.573572089132298], [95.155153436262594, 26.001307277932085], [94.603249139385383, 25.162495428970402], [94.55265791217164, 24.675238348890336], [94.106741977925068, 23.85074087167348], [93.325187615942795, 24.078556423432204], [93.286326938859276, 23.043658352139005], [93.060294224014626, 22.703110663335568], [93.166127557348375, 22.278459580977103], [92.672720981825563, 22.041238918541254], [92.146034783906813, 23.627498684172593], [91.869927606171316, 23.624346421802784], [91.706475050832111, 22.985263983649187], [91.158963250699728, 23.503526923104388], [91.467729933643682, 24.072639471934792], [91.915092807994426, 24.130413723237112], [92.376201613334814, 24.976692816664965], [91.79959598182208, 25.147431748957317], [90.872210727912119, 25.132600612889547], [89.920692580121852, 25.269749864192178], [89.832480910199621, 25.965082098895479], [89.35509402868729, 26.014407253518073], [88.563049350949768, 26.446525580342723], [88.209789259802506, 25.768065700782714], [88.931553989623083, 25.238692328384776], [88.306372511756024, 24.866079413344206], [88.084422235062419, 24.501657212821925], [88.699940220090923, 24.23371491138856], [88.529769728553788, 23.631141872649167], [88.876311883503092, 22.87914642993783], [89.031961297566227, 22.055708319582976], [88.888765903685425, 21.690588487224748], [88.208497348995223, 21.703171698487807], [86.975704380240273, 21.495561631755209], [87.033168572948867, 20.743307806882413], [86.499351027373791, 20.151638495356607], [85.060265740909699, 19.4785788029711], [83.941005893900012, 18.302009792549725], [83.189217156917849, 17.671221421778981], [82.192792189465919, 17.016636053937816], [82.191241896497189, 16.556664130107848], [81.692719354177484, 16.310219224507904], [80.791999139330144, 15.951972357644493], [80.324895867843878, 15.89918488205835], [80.025069207686442, 15.136414903214147], [80.233273553390404, 13.835770778859981], [80.286293572921863, 13.006260687710835], [79.862546828128501, 12.056215318240888], [79.857999302086824, 10.35727509199711], [79.340511509115998, 10.30885427493962], [78.885345493489183, 9.546135972527722], [79.189719679688295, 9.216543687370148], [78.277940708330505, 8.933046779816934], [77.941165399084355, 8.252959092639742], [77.539897902337941, 7.965534776232332], [76.592978957021671, 8.89927623131419], [76.130061476551077, 10.299630031775521], [75.746467319648502, 11.308250637248307], [75.396101108709587, 11.781245022015824], [74.864815708316826, 12.741935736537897], [74.616717156883539, 13.992582912649681], [74.443859490867226, 14.617221787977698], [73.534199253233396, 15.990652167214961], [73.119909295549434, 17.928570054592498], [72.820909458308648, 19.208233547436166], [72.824475132136797, 20.419503282141534], [72.630533481745402, 21.356009426351008], [71.175273471973952, 20.757441311114235], [70.470458611945105, 20.877330634031384], [69.164130080038831, 22.0892980005727], [69.644927606082405, 22.450774644454338], [69.349596795534353, 22.84317963306269], [68.176645135373406, 23.691965033456711], [68.842599318318776, 24.359133612560939], [71.043240187468228, 24.3565239527302], [70.844699334602836, 25.215102037043518], [70.282873162725593, 25.72222870533983], [70.168926629522019, 26.491871649678842], [69.514392938113133, 26.940965684511372], [70.616496209601934, 27.989196275335868], [71.777665643200322, 27.913180243434525], [72.823751662084703, 28.961591701772054], [73.450638462217427, 29.97641347911987], [74.421380242820277, 30.979814764931177], [74.405928989565012, 31.692639471965279], [75.258641798813215, 32.271105455040498], [74.451559279278712, 32.764899603805503], [74.104293654277342, 33.441473293586853], [73.749948358051967, 34.317698879527853], [74.240202671204969, 34.748887030571254], [75.757060988268336, 34.504922593721318], [76.871721632804025, 34.653544012992739], [77.837450799474567, 35.494009507787766]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Ireland",
      "sov_a3": "IRL",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Ireland",
      "adm0_a3": "IRL",
      "geou_dif": 0.000000,
      "geounit": "Ireland",
      "gu_a3": "IRL",
      "su_dif": 0.000000,
      "subunit": "Ireland",
      "su_a3": "IRL",
      "brk_diff": 0.000000,
      "name": "Ireland",
      "name_long": "Ireland",
      "brk_a3": "IRL",
      "brk_name": "Ireland",
      "brk_group": null,
      "abbrev": "Ire.",
      "postal": "IRL",
      "formal_en": "Ireland",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Ireland",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 2.000000,
      "pop_est": 4203200.000000,
      "gdp_md_est": 188400.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "IE",
      "iso_a3": "IRL",
      "iso_n3": "372",
      "un_a3": "372",
      "wb_a2": "IE",
      "wb_a3": "IRL",
      "woe_id": -99.000000,
      "adm0_a3_is": "IRL",
      "adm0_a3_us": "IRL",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Northern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-6.197884894220991, 53.867565009163364], [-6.032985398777611, 53.153164170944351], [-6.788856573910849, 52.260117906292336], [-8.561616583683559, 51.669301255899356], [-9.977085740590269, 51.820454820353078], [-9.166282517930782, 52.864628811242682], [-9.688524542672454, 53.881362616585299], [-8.327987433292009, 54.664518947968631], [-7.572167934591064, 55.131622219454869], [-7.366030646178785, 54.595840969452723], [-7.572167934591064, 54.059956366586], [-6.953730231138067, 54.073702297575636], [-6.197884894220991, 53.867565009163364]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Iran",
      "sov_a3": "IRN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Iran",
      "adm0_a3": "IRN",
      "geou_dif": 0.000000,
      "geounit": "Iran",
      "gu_a3": "IRN",
      "su_dif": 0.000000,
      "subunit": "Iran",
      "su_a3": "IRN",
      "brk_diff": 0.000000,
      "name": "Iran",
      "name_long": "Iran",
      "brk_a3": "IRN",
      "brk_name": "Iran",
      "brk_group": null,
      "abbrev": "Iran",
      "postal": "IRN",
      "formal_en": "Islamic Republic of Iran",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Iran, Islamic Rep.",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 13.000000,
      "pop_est": 66429284.000000,
      "gdp_md_est": 841700.000000,
      "pop_year": -99.000000,
      "lastcensus": 2006.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "IR",
      "iso_a3": "IRN",
      "iso_n3": "364",
      "un_a3": "364",
      "wb_a2": "IR",
      "wb_a3": "IRN",
      "woe_id": -99.000000,
      "adm0_a3_is": "IRN",
      "adm0_a3_us": "IRN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Southern Asia",
      "region_wb": "Middle East & North Africa",
      "name_len": 4.000000,
      "long_len": 4.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[53.921597934795557, 37.198918361961262], [54.800303989486565, 37.392420762678185], [55.511578403551908, 37.964117133123167], [56.180374790273333, 37.93512665460743], [56.619366082592819, 38.121394354803485], [57.330433790928986, 38.02922943781094], [58.436154412678206, 37.522309475243802], [59.234761997316809, 37.412987982730343], [60.377637973883878, 36.527383124328367], [61.123070509694145, 36.491597194966246], [61.210817091725744, 35.650072333309225], [60.803193393807447, 34.404101874319863], [60.528429803311582, 33.676446031218006], [60.963700392506006, 33.528832302376259], [60.536077915290775, 32.981268825811568], [60.863654819588966, 32.182919623334428], [60.941944614511129, 31.548074652628753], [61.699314406180832, 31.379506130492672], [61.781221551363444, 30.735850328081238], [60.874248488208792, 29.829238999952608], [61.36930870956494, 29.303276272085924], [61.771868117118629, 28.699333807890799], [62.727830438085988, 28.25964488373539], [62.755425652929858, 27.378923448184988], [63.233897739520302, 27.217047024030709], [63.316631707619592, 26.756532497661667], [61.87418745305655, 26.239974880472104], [61.49736290878419, 25.078237006118499], [59.616134067630846, 25.380156561783778], [58.525761346272304, 25.609961656185732], [57.397251417882387, 25.739902045183641], [56.970765822177555, 26.966106268821363], [56.492138706290206, 27.143304755150197], [55.723710158110066, 26.964633490501043], [54.715089552637266, 26.480657863871514], [53.493096958231348, 26.812368882753049], [52.483597853409613, 27.580849107365495], [51.520762566947418, 27.865689602158298], [50.852948032439542, 28.814520575469388], [50.115008579311585, 30.147772528599717], [49.576850213423995, 29.985715236932407], [48.941333449098551, 30.317090359004037], [48.567971225789755, 29.926778265903522], [48.014568312376099, 30.452456773392598], [48.004698113808324, 30.985137437457244], [47.685286085812272, 30.984853217079632], [47.849203729042102, 31.70917593029867], [47.334661492711909, 32.469155381799112], [46.109361606639318, 33.017287299119005], [45.416690708199042, 33.967797756479584], [45.648459507028093, 34.748137722303014], [46.151787957550937, 35.093258775364291], [46.0763403664048, 35.677383327775487], [45.420618117053209, 35.977545884742824], [44.77267, 37.17045], [44.225755649600529, 37.971584377589352], [44.421402622257546, 38.281281236314541], [44.109225294782341, 39.428136298168099], [44.793989699081948, 39.713002631177048], [44.952688022650307, 39.33576467544637], [45.457721795438772, 38.874139105783058], [46.143623081248819, 38.741201483712217], [46.505719842317973, 38.770605373686294], [47.685079380083096, 39.508363959301221], [48.060095249225242, 39.58223541926246], [48.355529412637878, 39.288764960276907], [48.010744256386481, 38.794014797514521], [48.634375441284817, 38.270377509100967], [48.883249139202491, 38.320245266262617], [49.199612257693339, 37.582874253889884], [50.14777143738462, 37.374566555321337], [50.842354363819709, 36.872814235983398], [52.264024692601424, 36.700421657857703], [53.825789829326418, 36.965030829408235], [53.921597934795557, 37.198918361961262]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Iraq",
      "sov_a3": "IRQ",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Iraq",
      "adm0_a3": "IRQ",
      "geou_dif": 0.000000,
      "geounit": "Iraq",
      "gu_a3": "IRQ",
      "su_dif": 0.000000,
      "subunit": "Iraq",
      "su_a3": "IRQ",
      "brk_diff": 0.000000,
      "name": "Iraq",
      "name_long": "Iraq",
      "brk_a3": "IRQ",
      "brk_name": "Iraq",
      "brk_group": null,
      "abbrev": "Iraq",
      "postal": "IRQ",
      "formal_en": "Republic of Iraq",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Iraq",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 1.000000,
      "pop_est": 31129225.000000,
      "gdp_md_est": 103900.000000,
      "pop_year": -99.000000,
      "lastcensus": 1997.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "IQ",
      "iso_a3": "IRQ",
      "iso_n3": "368",
      "un_a3": "368",
      "wb_a2": "IQ",
      "wb_a3": "IRQ",
      "woe_id": -99.000000,
      "adm0_a3_is": "IRQ",
      "adm0_a3_us": "IRQ",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Middle East & North Africa",
      "name_len": 4.000000,
      "long_len": 4.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[45.420618117053209, 35.977545884742824], [46.0763403664048, 35.677383327775487], [46.151787957550937, 35.093258775364291], [45.648459507028093, 34.748137722303014], [45.416690708199042, 33.967797756479584], [46.109361606639318, 33.017287299119005], [47.334661492711909, 32.469155381799112], [47.849203729042102, 31.70917593029867], [47.685286085812272, 30.984853217079632], [48.004698113808324, 30.985137437457244], [48.014568312376099, 30.452456773392598], [48.567971225789755, 29.926778265903522], [47.974519077349896, 29.975819200148504], [47.302622104690961, 30.059069932570722], [46.568713413281756, 29.09902517345229], [44.709498732284743, 29.178891099559383], [41.889980910007836, 31.190008653278369], [40.399994337736246, 31.889991766887935], [39.195468377444968, 32.161008816042667], [38.792340529136084, 33.378686428352225], [41.006158888519934, 34.419372260062119], [41.383965285005814, 35.628316555314356], [41.289707472505455, 36.358814602192268], [41.837064243340961, 36.605853786763575], [42.349591098811771, 37.229872544904097], [42.779125604021829, 37.385263576805755], [43.942258742047301, 37.25622752537295], [44.293451775902867, 37.001514390606303], [44.772699008977696, 37.170444647768434], [45.420618117053209, 35.977545884742824]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Iceland",
      "sov_a3": "ISL",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Iceland",
      "adm0_a3": "ISL",
      "geou_dif": 0.000000,
      "geounit": "Iceland",
      "gu_a3": "ISL",
      "su_dif": 0.000000,
      "subunit": "Iceland",
      "su_a3": "ISL",
      "brk_diff": 0.000000,
      "name": "Iceland",
      "name_long": "Iceland",
      "brk_a3": "ISL",
      "brk_name": "Iceland",
      "brk_group": null,
      "abbrev": "Iceland",
      "postal": "IS",
      "formal_en": "Republic of Iceland",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Iceland",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 9.000000,
      "pop_est": 306694.000000,
      "gdp_md_est": 12710.000000,
      "pop_year": -99.000000,
      "lastcensus": -99.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "IS",
      "iso_a3": "ISL",
      "iso_n3": "352",
      "un_a3": "352",
      "wb_a2": "IS",
      "wb_a3": "ISL",
      "woe_id": -99.000000,
      "adm0_a3_is": "ISL",
      "adm0_a3_us": "ISL",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Northern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 7.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-14.508695441129234, 66.455892239031428], [-14.739637417041607, 65.808748277440301], [-13.60973222497981, 65.126671047619865], [-14.909833746794902, 64.364081936288684], [-17.794438035543422, 63.678749091233854], [-18.656245896874992, 63.49638296167582], [-19.97275468594276, 63.643634955491528], [-22.762971971110158, 63.960178941495386], [-21.778484259517683, 64.402115790455511], [-23.955043911219111, 64.891129869233495], [-22.184402635170358, 65.084968166760305], [-22.227423265053332, 65.378593655042735], [-24.326184047939336, 65.611189276788465], [-23.650514695723089, 66.262519029395222], [-22.134922451250887, 66.41046865504687], [-20.57628373867955, 65.732112128351432], [-19.05684160000159, 66.276600857194765], [-17.798623826559052, 65.993853257909777], [-16.167818976292125, 66.526792304135867], [-14.508695441129234, 66.455892239031428]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Israel",
      "sov_a3": "ISR",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Israel",
      "adm0_a3": "ISR",
      "geou_dif": 0.000000,
      "geounit": "Israel",
      "gu_a3": "ISR",
      "su_dif": 0.000000,
      "subunit": "Israel",
      "su_a3": "ISR",
      "brk_diff": 0.000000,
      "name": "Israel",
      "name_long": "Israel",
      "brk_a3": "ISR",
      "brk_name": "Israel",
      "brk_group": null,
      "abbrev": "Isr.",
      "postal": "IS",
      "formal_en": "State of Israel",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Israel",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 9.000000,
      "pop_est": 7233701.000000,
      "gdp_md_est": 201400.000000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "IL",
      "iso_a3": "ISR",
      "iso_n3": "376",
      "un_a3": "376",
      "wb_a2": "IL",
      "wb_a3": "ISR",
      "woe_id": -99.000000,
      "adm0_a3_is": "ISR",
      "adm0_a3_us": "ISR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Middle East & North Africa",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "Polygon",
      "coordinates": [[[35.710194693904292, 32.691603793701766], [35.545665317534542, 32.393992011030576], [35.183930291491436, 32.532510687788943], [34.974640740709333, 31.866582343059722], [35.22589155451243, 31.754341132121766], [34.970506626125996, 31.61677846936081], [34.927408481594568, 31.353435370401414], [35.397560662586045, 31.489086005167582], [35.420918409981965, 31.100065822874356], [34.92260257339143, 29.501326198844524], [34.265433383935687, 31.219360866820153], [34.556371697738911, 31.548823960896996], [34.488107130681357, 31.605538845337321], [34.752587111151172, 32.072926337201167], [34.955417107896778, 32.827376410446377], [35.098457472480675, 33.080539252244265], [35.126052687324545, 33.090900376918782], [35.460709262846706, 33.089040025356283], [35.552796665190812, 33.264274807258019], [35.596656615035656, 33.266424721979803], [35.59594269603226, 33.265576037927978], [35.629855044975564, 32.718672746873523], [35.710194693904292, 32.691603793701766]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Italy",
      "sov_a3": "ITA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Italy",
      "adm0_a3": "ITA",
      "geou_dif": 0.000000,
      "geounit": "Italy",
      "gu_a3": "ITA",
      "su_dif": 0.000000,
      "subunit": "Italy",
      "su_a3": "ITA",
      "brk_diff": 0.000000,
      "name": "Italy",
      "name_long": "Italy",
      "brk_a3": "ITA",
      "brk_name": "Italy",
      "brk_group": null,
      "abbrev": "Italy",
      "postal": "I",
      "formal_en": "Italian Republic",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Italy",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 7.000000,
      "mapcolor9": 8.000000,
      "mapcolor13": 7.000000,
      "pop_est": 58126212.000000,
      "gdp_md_est": 1823000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2012.000000,
      "gdp_year": -99.000000,
      "economy": "1. Developed region: G7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "IT",
      "iso_a3": "ITA",
      "iso_n3": "380",
      "un_a3": "380",
      "wb_a2": "IT",
      "wb_a3": "ITA",
      "woe_id": -99.000000,
      "adm0_a3_is": "ITA",
      "adm0_a3_us": "ITA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Southern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[15.520376010813834, 38.231155096991472], [15.160242954171736, 37.44404551853782], [15.309897902089006, 37.1342194687318], [15.099988234119451, 36.619987290995397], [14.335228712632016, 36.996630967754754], [13.82673261887993, 37.1045313583802], [12.431003859108813, 37.612949937483819], [12.570943637755136, 38.12638113051969], [13.741156447004585, 38.034965521795357], [14.76124922044616, 38.143873602850505], [15.520376010813834, 38.231155096991472]]], [[[9.210011834356266, 41.209991360024219], [9.809975213264977, 40.500008856766101], [9.669518670295673, 39.177376410471794], [9.214817742559489, 39.240473334300134], [8.806935662479731, 38.906617743478478], [8.428302443077115, 39.171847032216618], [8.388253208050941, 40.378310858718805], [8.15999840661766, 40.950007229163788], [8.709990675500109, 40.899984442705232], [9.210011834356266, 41.209991360024219]]], [[[12.376485223040845, 46.767559109069879], [13.806475457421556, 46.509306138691187], [13.698109978905478, 46.016778062517375], [13.937630242578336, 45.591015936864665], [13.141606479554298, 45.736691799495418], [12.328581170306308, 45.381778062514854], [12.383874952858605, 44.885374253919082], [12.261453484759159, 44.600482082694015], [12.589237094786483, 44.091365871754476], [13.526905958722494, 43.587727362637906], [14.029820997787027, 42.76100779883248], [15.142569614327954, 41.955139675456905], [15.926191033601896, 41.961315009115737], [16.169897088290412, 41.740294908203424], [15.889345737377795, 41.541082261718202], [16.785001661860576, 41.179605617836586], [17.519168735431208, 40.877143459632236], [18.376687452882578, 40.355624904942658], [18.480247023195403, 40.168866278639825], [18.293385044028099, 39.810774441073249], [17.738380161213286, 40.277671006830303], [16.869595981522338, 40.442234605463852], [16.448743116937322, 39.79540070246648], [17.171489698971499, 39.424699815420723], [17.052840610429342, 38.902871202137305], [16.635088331781844, 38.843572496082402], [16.100960727613057, 37.985898749334183], [15.684086948314501, 37.90884918878703], [15.687962680736319, 38.214592800441864], [15.891981235424709, 38.750942491199226], [16.109332309644316, 38.964547024077689], [15.718813510814641, 39.544072374014945], [15.413612501698822, 40.04835683853517], [14.998495721098237, 40.172948716790927], [14.70326826341477, 40.604550279292624], [14.060671827865264, 40.786347968095441], [13.627985060285397, 41.188287258461656], [12.88808190273042, 41.253089504555618], [12.10668257004491, 41.704534817057407], [11.191906365614187, 42.355425319989678], [10.511947869517797, 42.931462510747224], [10.200028924204048, 43.920006822274615], [9.702488234097814, 44.03627879493132], [8.888946160526871, 44.36633616797954], [8.428560825238577, 44.231228135752417], [7.850766635783202, 43.767147935555244], [7.435184767291844, 43.693844916349178], [7.549596388386163, 44.127901109384823], [7.007562290076663, 44.254766750661389], [6.749955275101712, 45.028517971367592], [7.096652459347837, 45.333098863295874], [6.802355177445662, 45.70857982032868], [6.843592970414562, 45.991146552100673], [7.273850945676685, 45.776947740250762], [7.755992058959833, 45.824490057959281], [8.316629672894379, 46.163642483090854], [8.489952426801295, 46.00515086525175], [8.966305779667834, 46.036931871111165], [9.182881707403112, 46.440214748716983], [9.922836541390353, 46.314899400409189], [10.363378126678668, 46.483571275409844], [10.442701450246602, 46.893546250997446], [11.048555942436508, 46.751358547546403], [11.164827915093326, 46.941579494812743], [12.153088006243081, 47.115393174826437], [12.376485223040845, 46.767559109069879]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Jamaica",
      "sov_a3": "JAM",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Jamaica",
      "adm0_a3": "JAM",
      "geou_dif": 0.000000,
      "geounit": "Jamaica",
      "gu_a3": "JAM",
      "su_dif": 0.000000,
      "subunit": "Jamaica",
      "su_a3": "JAM",
      "brk_diff": 0.000000,
      "name": "Jamaica",
      "name_long": "Jamaica",
      "brk_a3": "JAM",
      "brk_name": "Jamaica",
      "brk_group": null,
      "abbrev": "Jam.",
      "postal": "J",
      "formal_en": "Jamaica",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Jamaica",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 10.000000,
      "pop_est": 2825928.000000,
      "gdp_md_est": 20910.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "JM",
      "iso_a3": "JAM",
      "iso_n3": "388",
      "un_a3": "388",
      "wb_a2": "JM",
      "wb_a3": "JAM",
      "woe_id": -99.000000,
      "adm0_a3_is": "JAM",
      "adm0_a3_us": "JAM",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Caribbean",
      "region_wb": "Latin America & Caribbean",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-77.569600796199211, 18.490525417550487], [-76.896618618462128, 18.400866807524082], [-76.365359056285541, 18.160700588447597], [-76.199658576141644, 17.886867173732966], [-76.9025614081757, 17.868237819891746], [-77.206341315403478, 17.701116237859821], [-77.766022915340614, 17.861597398342241], [-78.33771928578561, 18.225967922432233], [-78.217726610003879, 18.454532782459196], [-77.797364671525628, 18.524218451404778], [-77.569600796199211, 18.490525417550487]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Jordan",
      "sov_a3": "JOR",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Jordan",
      "adm0_a3": "JOR",
      "geou_dif": 0.000000,
      "geounit": "Jordan",
      "gu_a3": "JOR",
      "su_dif": 0.000000,
      "subunit": "Jordan",
      "su_a3": "JOR",
      "brk_diff": 0.000000,
      "name": "Jordan",
      "name_long": "Jordan",
      "brk_a3": "JOR",
      "brk_name": "Jordan",
      "brk_group": null,
      "abbrev": "Jord.",
      "postal": "J",
      "formal_en": "Hashemite Kingdom of Jordan",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Jordan",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 4.000000,
      "pop_est": 6342948.000000,
      "gdp_md_est": 31610.000000,
      "pop_year": -99.000000,
      "lastcensus": 2004.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "JO",
      "iso_a3": "JOR",
      "iso_n3": "400",
      "un_a3": "400",
      "wb_a2": "JO",
      "wb_a3": "JOR",
      "woe_id": -99.000000,
      "adm0_a3_is": "JOR",
      "adm0_a3_us": "JOR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Middle East & North Africa",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[35.545665317534542, 32.393992011030576], [35.719918247222751, 32.709192409794866], [36.834062127435544, 32.312937526980775], [38.792340529136084, 33.378686428352225], [39.195468377444968, 32.161008816042667], [39.004885695152552, 32.010216986614978], [37.002165561681011, 31.508412990844747], [37.998848911294374, 30.508499864213135], [37.668119744626381, 30.338665269485901], [37.503581984209035, 30.003776150018407], [36.74052778498725, 29.86528331147619], [36.50121422704359, 29.505253607698705], [36.068940870922063, 29.197494615184453], [34.956037225084259, 29.356554673778845], [34.92260257339143, 29.501326198844524], [35.420918409981965, 31.100065822874356], [35.397560662586045, 31.489086005167582], [35.545251906076203, 31.782504787720839], [35.545665317534542, 32.393992011030576]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Japan",
      "sov_a3": "JPN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Japan",
      "adm0_a3": "JPN",
      "geou_dif": 0.000000,
      "geounit": "Japan",
      "gu_a3": "JPN",
      "su_dif": 0.000000,
      "subunit": "Japan",
      "su_a3": "JPN",
      "brk_diff": 0.000000,
      "name": "Japan",
      "name_long": "Japan",
      "brk_a3": "JPN",
      "brk_name": "Japan",
      "brk_group": null,
      "abbrev": "Japan",
      "postal": "J",
      "formal_en": "Japan",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Japan",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 4.000000,
      "pop_est": 127078679.000000,
      "gdp_md_est": 4329000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "1. Developed region: G7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "JP",
      "iso_a3": "JPN",
      "iso_n3": "392",
      "un_a3": "392",
      "wb_a2": "JP",
      "wb_a3": "JPN",
      "woe_id": -99.000000,
      "adm0_a3_is": "JPN",
      "adm0_a3_us": "JPN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[134.638428176003885, 34.149233710256425], [134.766379022358507, 33.80633474378368], [134.203415968970859, 33.201177883429636], [133.792950067276507, 33.521985175097598], [133.280268182508877, 33.289570420864948], [133.014858026257883, 32.70456736910478], [132.363114862192703, 32.98938202568138], [132.371176385630207, 33.463642483040076], [132.924372593314814, 34.060298570282043], [133.492968377822223, 33.944620876596701], [133.904106073136376, 34.364931138642618], [134.638428176003885, 34.149233710256425]]], [[[140.976387567305295, 37.142074286440163], [140.599769728762141, 36.343983466124541], [140.77407433488267, 35.842877102190243], [140.253279250245129, 35.13811391859366], [138.975527785396224, 34.667600002576108], [137.217598911691226, 34.606285915661857], [135.792983026268899, 33.464805202766627], [135.120982700745429, 33.84907115328906], [135.079434849182718, 34.59654490817482], [133.340316196831992, 34.375938218720762], [132.156770868051325, 33.904933376596517], [130.98614464734348, 33.885761420216284], [132.00003624891005, 33.149992377244615], [131.332790155157369, 31.450354519164847], [130.686317987185959, 31.029579169228242], [130.202419875204981, 31.418237616495418], [130.447676222862157, 32.319474595665724], [129.814691603718899, 32.610309556604392], [129.408463169472583, 33.29605581311759], [130.353935174684665, 33.6041507024417], [130.878450962447147, 34.232742824840045], [131.88422936414392, 34.749713853487918], [132.617672967662514, 35.43339305270942], [134.608300815977799, 35.731617743465819], [135.67753787652893, 35.527134100886826], [136.723830601142453, 37.304984239240383], [137.390611607004502, 36.827390651998826], [138.857602166906275, 37.827484646143461], [139.426404657142911, 38.215962225897641], [140.054790073812086, 39.438807481436385], [139.883379347899876, 40.563312486323696], [140.30578250545372, 41.195005194659558], [141.368973423426695, 41.378559882160289], [141.914263136970504, 39.991616115878685], [141.884600864834994, 39.180864569651504], [140.959489373945786, 38.17400096287659], [140.976387567305295, 37.142074286440163]]], [[[143.910161981379503, 44.174099839853739], [144.613426548439662, 43.960882880217525], [145.320825230083102, 44.384732977875444], [145.543137241802782, 43.262088324550604], [144.059661899999895, 42.988358262700558], [143.183849725517319, 41.995214748699198], [141.611490920172486, 42.678790595056086], [141.067286411706647, 41.584593817707997], [139.955106235921079, 41.569555975911044], [139.817543573159952, 42.563758856774399], [140.312087030193226, 43.333272610032651], [141.380548944260028, 43.388824774746496], [141.67195234595394, 44.772125352551484], [141.96764489152801, 45.551483466161358], [143.142870314709825, 44.510358384776964], [143.910161981379503, 44.174099839853739]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Kazakhstan",
      "sov_a3": "KAZ",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Kazakhstan",
      "adm0_a3": "KAZ",
      "geou_dif": 0.000000,
      "geounit": "Kazakhstan",
      "gu_a3": "KAZ",
      "su_dif": 0.000000,
      "subunit": "Kazakhstan",
      "su_a3": "KAZ",
      "brk_diff": 0.000000,
      "name": "Kazakhstan",
      "name_long": "Kazakhstan",
      "brk_a3": "KAZ",
      "brk_name": "Kazakhstan",
      "brk_group": null,
      "abbrev": "Kaz.",
      "postal": "KZ",
      "formal_en": "Republic of Kazakhstan",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Kazakhstan",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 1.000000,
      "pop_est": 15399437.000000,
      "gdp_md_est": 175800.000000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "KZ",
      "iso_a3": "KAZ",
      "iso_n3": "398",
      "un_a3": "398",
      "wb_a2": "KZ",
      "wb_a3": "KAZ",
      "woe_id": -99.000000,
      "adm0_a3_is": "KAZ",
      "adm0_a3_us": "KAZ",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Central Asia",
      "region_wb": "Europe & Central Asia",
      "name_len": 10.000000,
      "long_len": 10.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[70.962314894499286, 42.266154283205537], [70.388964878220804, 42.081307684897524], [69.070027296835235, 41.384244289712342], [68.632482944620051, 40.668680731766869], [68.259895867795649, 40.662324530594901], [67.98585574735182, 41.135990708982206], [66.714047072216601, 41.168443508461564], [66.510648634715722, 41.987644151368556], [66.023391554635623, 41.994646307944038], [66.098012322865202, 42.997660020513081], [64.900824415959335, 43.728080552742654], [63.185786981056594, 43.650074978198006], [62.013300408786279, 43.504476630215663], [61.058319940032504, 44.405816962250583], [60.239971958258479, 44.784036770194746], [58.689989048095811, 45.500013739598728], [58.50312706892845, 45.586804307632974], [55.928917270741181, 44.995858466159177], [55.968191359283026, 41.308641669269377], [55.455251092353819, 41.25985911718584], [54.755345493392667, 42.043971462566617], [54.079417759014973, 42.324109402020838], [52.944293247291739, 42.116034247397579], [52.502459751196284, 41.78331553808647], [52.446339145727222, 42.027150783855575], [52.692112257707265, 42.443895372073371], [52.501426222550322, 42.792297878585202], [51.342427199108215, 43.132974758469345], [50.891291945200237, 44.031033637053781], [50.339129266161365, 44.284015611338475], [50.305642938036272, 44.609835516938915], [51.278503452363225, 44.514854234386462], [51.316899041556042, 45.245998236667901], [52.167389764215727, 45.408391425145112], [53.040876499245201, 45.259046535821767], [53.220865512917726, 46.234645901059935], [53.042736850807785, 46.853006089864493], [52.042022739475613, 46.804636949239239], [51.191945428274266, 47.048704738953916], [50.034083286342479, 46.608989976582222], [49.101160000000107, 46.399330000000134], [48.593241001180502, 46.561034247415478], [48.694733514201744, 47.075628160177928], [48.057253045449272, 47.743752753279523], [47.315231154170249, 47.715847479841955], [46.46644575377627, 48.39415233010493], [47.043671502476514, 49.152038886097614], [46.751596307162743, 49.356005764353768], [47.549480421749308, 50.454698391311126], [48.57784142435753, 49.874759629915673], [48.702381626181023, 50.605128485712839], [50.766648390512159, 51.692762356159903], [52.328723585830971, 51.718652248738124], [54.532878452376224, 51.026239732459317], [55.716940545479815, 50.621716620478537], [56.777961053296565, 51.043551337277052], [58.36329064314674, 51.063653469438577], [59.642282342370606, 50.545442206415714], [59.932807244715491, 50.842194118851864], [61.337424350840934, 50.799070136104262], [61.588003371024172, 51.272658799843214], [59.967533807215545, 51.960420437215703], [60.92726850774028, 52.447548326215042], [60.739993117114579, 52.719986477257748], [61.699986199800605, 52.979996446334269], [60.978066440683165, 53.664993394579142], [61.436591424409073, 54.006264553434789], [65.178533563095925, 54.354227810272107], [65.666875848253994, 54.601266994843456], [68.169100376258825, 54.970391750704323], [69.068166945272878, 55.385250149143531], [70.865266554655136, 55.169733588270105], [71.180131056609412, 54.133285224008262], [72.224150018202181, 54.376655381886735], [73.508516066384402, 54.035616766976602], [73.425678745420441, 53.489810289109755], [74.384845005190073, 53.54686107036008], [76.891100294913429, 54.490524400441927], [76.525179477854749, 54.177003485727141], [77.800915561844249, 53.404414984747575], [80.035559523441691, 50.864750881547252], [80.568446893235489, 51.38833649352847], [81.945985548839928, 50.812195949906368], [83.38300377801238, 51.069182847693924], [83.935114780618846, 50.889245510453577], [84.416377394553081, 50.311399644565824], [85.115559523462025, 50.117302964877638], [85.541269972682471, 49.692858588248157], [86.829356723989633, 49.826674709668168], [87.359970330762678, 49.214980780629162], [86.598776483103393, 48.549181626980612], [85.768232863308299, 48.455750637396989], [85.720483839870724, 47.452969468773119], [85.164290399113384, 47.000955715516113], [83.180483839860472, 47.330031236350862], [82.458925815769135, 45.539649563166506], [81.947070753918126, 45.317027492853242], [79.966106398441411, 44.917516994804657], [80.86620649610137, 43.180362046881044], [80.180150180994303, 42.920067857426943], [80.25999026888536, 42.349999294599115], [79.643645460940149, 42.496682847659656], [79.142177361979805, 42.856092434249604], [77.65839196158322, 42.960685533208334], [76.000353631498569, 42.988022365890629], [75.636964959622105, 42.877899888676779], [74.212865838522589, 43.298339341803512], [73.645303582660915, 43.09127187760987], [73.489757521462366, 42.50089447689129], [71.844638299450651, 42.845395412765185], [71.186280552052267, 42.704292914392227], [70.962314894499286, 42.266154283205537]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Kenya",
      "sov_a3": "KEN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Kenya",
      "adm0_a3": "KEN",
      "geou_dif": 0.000000,
      "geounit": "Kenya",
      "gu_a3": "KEN",
      "su_dif": 0.000000,
      "subunit": "Kenya",
      "su_a3": "KEN",
      "brk_diff": 0.000000,
      "name": "Kenya",
      "name_long": "Kenya",
      "brk_a3": "KEN",
      "brk_name": "Kenya",
      "brk_group": null,
      "abbrev": "Ken.",
      "postal": "KE",
      "formal_en": "Republic of Kenya",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Kenya",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 7.000000,
      "mapcolor13": 3.000000,
      "pop_est": 39002772.000000,
      "gdp_md_est": 61510.000000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "KE",
      "iso_a3": "KEN",
      "iso_n3": "404",
      "un_a3": "404",
      "wb_a2": "KE",
      "wb_a3": "KEN",
      "woe_id": -99.000000,
      "adm0_a3_is": "KEN",
      "adm0_a3_us": "KEN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[40.993, -0.85829], [41.58513, -1.68325], [40.88477, -2.08255], [40.63785, -2.49979], [40.26304, -2.57309], [40.12119, -3.27768], [39.80006, -3.68116], [39.60489, -4.34653], [39.20222, -4.67677], [37.7669, -3.67712], [37.69869, -3.09699], [34.07262, -1.05982], [33.903711197104528, -0.95], [33.893568969666944, 0.109813537861896], [34.18, 0.515], [34.6721, 1.17694], [35.03599, 1.90584], [34.59607, 3.05374], [34.47913, 3.5556], [34.005, 4.249884947362048], [34.620196267853878, 4.847122742081988], [35.298007118232981, 5.506], [35.817447662353516, 5.338232082790797], [35.817447662353516, 4.77696566346189], [36.159078632855646, 4.447864127672769], [36.855093238008124, 4.447864127672769], [38.120915, 3.598605], [38.43697, 3.58851], [38.67114, 3.61607], [38.89251, 3.50074], [39.559384258765853, 3.42206], [39.85494, 3.83879], [40.76848, 4.25702], [41.1718, 3.91909], [41.855083092643973, 3.918911920483727], [40.98105, 2.78452], [40.993, -0.85829]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Kyrgyzstan",
      "sov_a3": "KGZ",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Kyrgyzstan",
      "adm0_a3": "KGZ",
      "geou_dif": 0.000000,
      "geounit": "Kyrgyzstan",
      "gu_a3": "KGZ",
      "su_dif": 0.000000,
      "subunit": "Kyrgyzstan",
      "su_a3": "KGZ",
      "brk_diff": 0.000000,
      "name": "Kyrgyzstan",
      "name_long": "Kyrgyzstan",
      "brk_a3": "KGZ",
      "brk_name": "Kyrgyzstan",
      "brk_group": null,
      "abbrev": "Kgz.",
      "postal": "KG",
      "formal_en": "Kyrgyz Republic",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Kyrgyz Republic",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 7.000000,
      "mapcolor9": 7.000000,
      "mapcolor13": 6.000000,
      "pop_est": 5431747.000000,
      "gdp_md_est": 11610.000000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "KG",
      "iso_a3": "KGZ",
      "iso_n3": "417",
      "un_a3": "417",
      "wb_a2": "KG",
      "wb_a3": "KGZ",
      "woe_id": -99.000000,
      "adm0_a3_is": "KGZ",
      "adm0_a3_us": "KGZ",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Central Asia",
      "region_wb": "Europe & Central Asia",
      "name_len": 10.000000,
      "long_len": 10.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[70.962314894499144, 42.266154283205495], [71.186280552052125, 42.704292914392141], [71.844638299450594, 42.8453954127651], [73.489757521462366, 42.500894476891318], [73.645303582660915, 43.091271877609827], [74.212865838522561, 43.29833934180337], [75.63696495962202, 42.87789988867668], [76.000353631498456, 42.988022365890671], [77.65839196158322, 42.960685533208263], [79.142177361979776, 42.856092434249518], [79.643645460940121, 42.496682847659528], [80.259990268885304, 42.349999294599058], [80.119430373051387, 42.123940741538249], [78.54366092317531, 41.582242540038692], [78.187196893225973, 41.185315863604806], [76.904484490877081, 41.066485907549648], [76.526368035797447, 40.427946071935118], [75.467827996730705, 40.56207225194867], [74.776862420556057, 40.366425279291633], [73.822243686828301, 39.893973497063186], [73.960013055318427, 39.660008449861735], [73.675379266254794, 39.431236884105601], [71.784693637992007, 39.27946320246437], [70.549161818325615, 39.604197902986499], [69.46488691597753, 39.526683254548701], [69.559609816368521, 40.103211371412982], [70.648018833299972, 39.935753892571171], [71.01419803252017, 40.244365546218233], [71.77487511585656, 40.145844428053778], [73.05541710804917, 40.866033026689465], [71.870114780570475, 41.392900092121266], [71.157858514291604, 41.143587144529121], [70.42002241402821, 41.519998277343142], [71.259247674448233, 42.167710679689463], [70.962314894499144, 42.266154283205495]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Cambodia",
      "sov_a3": "KHM",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Cambodia",
      "adm0_a3": "KHM",
      "geou_dif": 0.000000,
      "geounit": "Cambodia",
      "gu_a3": "KHM",
      "su_dif": 0.000000,
      "subunit": "Cambodia",
      "su_a3": "KHM",
      "brk_diff": 0.000000,
      "name": "Cambodia",
      "name_long": "Cambodia",
      "brk_a3": "KHM",
      "brk_name": "Cambodia",
      "brk_group": null,
      "abbrev": "Camb.",
      "postal": "KH",
      "formal_en": "Kingdom of Cambodia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Cambodia",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 5.000000,
      "pop_est": 14494293.000000,
      "gdp_md_est": 27940.000000,
      "pop_year": -99.000000,
      "lastcensus": 2008.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "KH",
      "iso_a3": "KHM",
      "iso_n3": "116",
      "un_a3": "116",
      "wb_a2": "KH",
      "wb_a3": "KHM",
      "woe_id": -99.000000,
      "adm0_a3_is": "KHM",
      "adm0_a3_us": "KHM",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "South-Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[103.497279901139706, 10.632555446815928], [103.090689731867258, 11.153660590047165], [102.584932489026698, 12.186594956913282], [102.348099399833018, 13.394247341358223], [102.988422072361629, 14.225721136934467], [104.281418084736615, 14.416743068901367], [105.218776890078885, 14.273211778210694], [106.043946160915525, 13.881091009979956], [106.496373325630884, 14.570583807834282], [107.382727492301086, 14.202440904186972], [107.61454796756243, 13.535530707244206], [107.49140302941089, 12.337205918827948], [105.81052371625313, 11.567614650921229], [106.249670037869464, 10.961811835163587], [105.199914992292349, 10.889309800658097], [104.334334751403475, 10.48654368737523], [103.497279901139706, 10.632555446815928]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "South Korea",
      "sov_a3": "KOR",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "South Korea",
      "adm0_a3": "KOR",
      "geou_dif": 0.000000,
      "geounit": "South Korea",
      "gu_a3": "KOR",
      "su_dif": 0.000000,
      "subunit": "South Korea",
      "su_a3": "KOR",
      "brk_diff": 0.000000,
      "name": "Korea",
      "name_long": "Republic of Korea",
      "brk_a3": "KOR",
      "brk_name": "Republic of Korea",
      "brk_group": null,
      "abbrev": "S.K.",
      "postal": "KR",
      "formal_en": "Republic of Korea",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Korea, Rep.",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 5.000000,
      "pop_est": 48508972.000000,
      "gdp_md_est": 1335000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "4. Emerging region: MIKT",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "KR",
      "iso_a3": "KOR",
      "iso_n3": "410",
      "un_a3": "410",
      "wb_a2": "KR",
      "wb_a3": "KOR",
      "woe_id": -99.000000,
      "adm0_a3_is": "KOR",
      "adm0_a3_us": "KOR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 5.000000,
      "long_len": 17.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[128.349716424676615, 38.61224294692785], [129.212919549680066, 37.432392483055949], [129.460449660358165, 36.784189154602828], [129.4683044780665, 35.632140611303953], [129.091376580929591, 35.082484239231434], [128.185850457879098, 34.890377102186392], [127.386519403188402, 34.475673733044118], [126.485747511908755, 34.39004588473648], [126.373919712429142, 34.934560451795946], [126.559231398627787, 35.684540513647903], [126.117397902532289, 36.725484727519259], [126.860143263863392, 36.893924058574626], [126.174758742376241, 37.74968577732804], [126.237338901881756, 37.840377916000278], [126.683719924018931, 37.804772854151182], [127.07330854706737, 38.2561148137884], [127.780035435091008, 38.304535630845891], [128.205745884311455, 38.370397243801889], [128.349716424676615, 38.61224294692785]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Kosovo",
      "sov_a3": "KOS",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Kosovo",
      "adm0_a3": "KOS",
      "geou_dif": 0.000000,
      "geounit": "Kosovo",
      "gu_a3": "KOS",
      "su_dif": 0.000000,
      "subunit": "Kosovo",
      "su_a3": "KOS",
      "brk_diff": 1.000000,
      "name": "Kosovo",
      "name_long": "Kosovo",
      "brk_a3": "B57",
      "brk_name": "Kosovo",
      "brk_group": null,
      "abbrev": "Kos.",
      "postal": "KO",
      "formal_en": "Republic of Kosovo",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": "Self admin.; Claimed by Serbia",
      "name_sort": "Kosovo",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 11.000000,
      "pop_est": 1804838.000000,
      "gdp_md_est": 5352.000000,
      "pop_year": -99.000000,
      "lastcensus": 1981.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "-99",
      "iso_a3": "-99",
      "iso_n3": "-99",
      "un_a3": "-099",
      "wb_a2": "KV",
      "wb_a3": "KSV",
      "woe_id": -99.000000,
      "adm0_a3_is": "SRB",
      "adm0_a3_us": "KOS",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Southern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[20.76216, 42.05186], [20.717310000000111, 41.84711], [20.59023, 41.85541], [20.52295, 42.21787], [20.28374, 42.320250000000101], [20.0707, 42.58863], [20.25758, 42.812750000000108], [20.49679, 42.88469], [20.63508, 43.21671], [20.81448, 43.27205], [20.95651, 43.13094], [21.143395, 43.06868500000013], [21.27421, 42.90959], [21.43866, 42.86255], [21.63302, 42.67717], [21.77505, 42.6827], [21.66292, 42.43922], [21.54332, 42.320250000000101], [21.576635989402121, 42.245224397061861], [21.352700000000141, 42.2068], [20.76216, 42.05186]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Kuwait",
      "sov_a3": "KWT",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Kuwait",
      "adm0_a3": "KWT",
      "geou_dif": 0.000000,
      "geounit": "Kuwait",
      "gu_a3": "KWT",
      "su_dif": 0.000000,
      "subunit": "Kuwait",
      "su_a3": "KWT",
      "brk_diff": 0.000000,
      "name": "Kuwait",
      "name_long": "Kuwait",
      "brk_a3": "KWT",
      "brk_name": "Kuwait",
      "brk_group": null,
      "abbrev": "Kwt.",
      "postal": "KW",
      "formal_en": "State of Kuwait",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Kuwait",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 2.000000,
      "pop_est": 2691158.000000,
      "gdp_md_est": 149100.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "KW",
      "iso_a3": "KWT",
      "iso_n3": "414",
      "un_a3": "414",
      "wb_a2": "KW",
      "wb_a3": "KWT",
      "woe_id": -99.000000,
      "adm0_a3_is": "KWT",
      "adm0_a3_us": "KWT",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Middle East & North Africa",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[47.974519077349896, 29.975819200148504], [48.18318851094449, 29.534476630159762], [48.093943312376418, 29.306299343375002], [48.416094191283946, 28.55200429942667], [47.708850538937384, 28.526062730416143], [47.459821811722833, 29.002519436147224], [46.568713413281756, 29.09902517345229], [47.302622104690961, 30.059069932570722], [47.974519077349896, 29.975819200148504]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Laos",
      "sov_a3": "LAO",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Laos",
      "adm0_a3": "LAO",
      "geou_dif": 0.000000,
      "geounit": "Laos",
      "gu_a3": "LAO",
      "su_dif": 0.000000,
      "subunit": "Laos",
      "su_a3": "LAO",
      "brk_diff": 0.000000,
      "name": "Lao PDR",
      "name_long": "Lao PDR",
      "brk_a3": "LAO",
      "brk_name": "Laos",
      "brk_group": null,
      "abbrev": "Laos",
      "postal": "LA",
      "formal_en": "Lao People's Democratic Republic",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Lao PDR",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 9.000000,
      "pop_est": 6834942.000000,
      "gdp_md_est": 13980.000000,
      "pop_year": -99.000000,
      "lastcensus": 2005.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "LA",
      "iso_a3": "LAO",
      "iso_n3": "418",
      "un_a3": "418",
      "wb_a2": "LA",
      "wb_a3": "LAO",
      "woe_id": -99.000000,
      "adm0_a3_is": "LAO",
      "adm0_a3_us": "LAO",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "South-Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[105.218776890078885, 14.273211778210694], [105.544338413517693, 14.723933620660418], [105.589038527450157, 15.570316066952858], [104.779320509868796, 16.441864935771449], [104.716947056092494, 17.428858954330082], [103.956476678485302, 18.240954087796879], [103.20019209189374, 18.309632066312773], [102.998705682387708, 17.961694647691601], [102.413004998791621, 17.932781683824288], [102.113591750092482, 18.109101670804165], [101.059547560635167, 17.51249725999449], [101.035931431077771, 18.408928330961615], [101.282014601651696, 19.462584947176765], [100.606293573003157, 19.508344427971224], [100.548881056726884, 20.109237982661128], [100.115987583417848, 20.417849636308187], [100.329101190189533, 20.786121731036232], [101.180005324307544, 21.436572984294028], [101.270025669359967, 21.201651923095184], [101.803119744882935, 21.174366766845068], [101.652017856861519, 22.318198757409547], [102.170435825613581, 22.464753119389304], [102.754896274834664, 21.675137233969465], [103.203861118586445, 20.766562201413748], [104.435000441508052, 20.758733221921531], [104.822573683697101, 19.886641750563882], [104.183387892678937, 19.624668077060221], [103.896532017026715, 19.265180975821806], [105.094598423281525, 18.66697459561108], [105.925762160264028, 17.485315456608959], [106.556007928495688, 16.604283962464805], [107.312705926545604, 15.908538316303179], [107.564525181103903, 15.202173163305559], [107.382727492301086, 14.202440904186972], [106.496373325630884, 14.570583807834282], [106.043946160915525, 13.881091009979956], [105.218776890078885, 14.273211778210694]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Lebanon",
      "sov_a3": "LBN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Lebanon",
      "adm0_a3": "LBN",
      "geou_dif": 0.000000,
      "geounit": "Lebanon",
      "gu_a3": "LBN",
      "su_dif": 0.000000,
      "subunit": "Lebanon",
      "su_a3": "LBN",
      "brk_diff": 0.000000,
      "name": "Lebanon",
      "name_long": "Lebanon",
      "brk_a3": "LBN",
      "brk_name": "Lebanon",
      "brk_group": null,
      "abbrev": "Leb.",
      "postal": "LB",
      "formal_en": "Lebanese Republic",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Lebanon",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 12.000000,
      "pop_est": 4017095.000000,
      "gdp_md_est": 44060.000000,
      "pop_year": -99.000000,
      "lastcensus": 1970.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "LB",
      "iso_a3": "LBN",
      "iso_n3": "422",
      "un_a3": "422",
      "wb_a2": "LB",
      "wb_a3": "LBN",
      "woe_id": -99.000000,
      "adm0_a3_is": "LBN",
      "adm0_a3_us": "LBN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Middle East & North Africa",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": 4.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[35.821100701650238, 33.277426459276299], [35.552796665190812, 33.264274807258019], [35.460709262846706, 33.089040025356283], [35.126052687324545, 33.090900376918782], [35.482206658680127, 33.905450140919442], [35.979592319489399, 34.610058295219133], [35.998402540843642, 34.644914048800004], [36.448194207512103, 34.593935248344067], [36.611750115715893, 34.201788641897181], [36.066460402172055, 33.82491242119255], [35.821100701650238, 33.277426459276299]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Liberia",
      "sov_a3": "LBR",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Liberia",
      "adm0_a3": "LBR",
      "geou_dif": 0.000000,
      "geounit": "Liberia",
      "gu_a3": "LBR",
      "su_dif": 0.000000,
      "subunit": "Liberia",
      "su_a3": "LBR",
      "brk_diff": 0.000000,
      "name": "Liberia",
      "name_long": "Liberia",
      "brk_a3": "LBR",
      "brk_name": "Liberia",
      "brk_group": null,
      "abbrev": "Liberia",
      "postal": "LR",
      "formal_en": "Republic of Liberia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Liberia",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 9.000000,
      "pop_est": 3441790.000000,
      "gdp_md_est": 1526.000000,
      "pop_year": -99.000000,
      "lastcensus": 2008.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "LR",
      "iso_a3": "LBR",
      "iso_n3": "430",
      "un_a3": "430",
      "wb_a2": "LR",
      "wb_a3": "LBR",
      "woe_id": -99.000000,
      "adm0_a3_is": "LBR",
      "adm0_a3_us": "LBR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 7.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-7.71215938966975, 4.364565944837722], [-7.974107224957251, 4.355755113131963], [-9.004793667018674, 4.8324185245922], [-9.913420376006684, 5.593560695819207], [-10.765383876986645, 6.140710760925558], [-11.438779466182055, 6.785916856305747], [-11.199801805048279, 7.105845648624737], [-11.146704270868383, 7.396706447779536], [-10.695594855176481, 7.939464016141088], [-10.23009355309128, 8.406205552601293], [-10.016566534861255, 8.428503933135232], [-9.755342169625834, 8.541055202666925], [-9.337279832384581, 7.928534450711354], [-9.40334815106975, 7.526905218938907], [-9.208786383490846, 7.313920803247953], [-8.926064622422004, 7.309037380396376], [-8.722123582382125, 7.71167430259851], [-8.439298468448698, 7.686042792181738], [-8.48544552248535, 7.39520783124307], [-8.385451626000574, 6.911800645368743], [-8.60288021486862, 6.46756419517166], [-8.311347622094019, 6.193033148621083], [-7.993692592795881, 6.126189683451543], [-7.570152553731688, 5.707352199725904], [-7.539715135111763, 5.313345241716519], [-7.635368211284031, 5.188159084489456], [-7.71215938966975, 4.364565944837722]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Libya",
      "sov_a3": "LBY",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Libya",
      "adm0_a3": "LBY",
      "geou_dif": 0.000000,
      "geounit": "Libya",
      "gu_a3": "LBY",
      "su_dif": 0.000000,
      "subunit": "Libya",
      "su_a3": "LBY",
      "brk_diff": 0.000000,
      "name": "Libya",
      "name_long": "Libya",
      "brk_a3": "LBY",
      "brk_name": "Libya",
      "brk_group": null,
      "abbrev": "Libya",
      "postal": "LY",
      "formal_en": "Libya",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Libya",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 11.000000,
      "pop_est": 6310434.000000,
      "gdp_md_est": 88830.000000,
      "pop_year": -99.000000,
      "lastcensus": 2006.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "LY",
      "iso_a3": "LBY",
      "iso_n3": "434",
      "un_a3": "434",
      "wb_a2": "LY",
      "wb_a3": "LBY",
      "woe_id": -99.000000,
      "adm0_a3_is": "LBY",
      "adm0_a3_us": "LBY",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Northern Africa",
      "region_wb": "Middle East & North Africa",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[14.8513, 22.862950000000126], [14.143870883855243, 22.491288967371133], [13.581424594790462, 23.040506089769281], [11.999505649471701, 23.471668402596435], [11.560669386449035, 24.097909247325617], [10.771363559622955, 24.562532050061748], [10.303846876678449, 24.379313259370974], [9.948261346078027, 24.936953640232616], [9.910692579801776, 25.365454616796796], [9.31941084151822, 26.094324856057483], [9.716285841519664, 26.512206325785655], [9.629056023811074, 27.140953477481048], [9.756128370816782, 27.688258571884205], [9.683884718472882, 28.144173895779318], [9.859997999723475, 28.959989732371071], [9.805634392952356, 29.424638373323376], [9.482139926805417, 30.307556057246188], [9.970017124072967, 30.539324856075382], [10.056575148161699, 30.961831366493527], [9.950225050505196, 31.376069647745283], [10.636901482799487, 31.761420803345686], [10.944789666394513, 32.081814683555365], [11.432253452203781, 32.368903103152832], [11.488787469131012, 33.136995754523241], [12.66331, 32.79278], [13.08326, 32.87882], [13.91868, 32.71196], [15.24563, 32.26508], [15.71394, 31.37626], [16.61162, 31.18218], [18.02109, 30.76357], [19.08641, 30.26639], [19.57404, 30.52582], [20.05335, 30.98576], [19.82033, 31.751790000000142], [20.13397, 32.2382], [20.85452, 32.7068], [21.54298, 32.8432], [22.89576, 32.63858], [23.2368, 32.19149], [23.609130000000107, 32.18726], [23.9275, 32.01667], [24.92114, 31.89936], [25.16482, 31.56915], [24.80287, 31.08929], [24.95762, 30.6616], [24.70007, 30.04419], [25.000000000000114, 29.238654529533562], [25.000000000000114, 25.682499996361003], [25.000000000000114, 22.0], [25.000000000000114, 20.00304], [23.850000000000136, 20.0], [23.837660000000142, 19.580470000000105], [19.84926, 21.49509], [15.86085, 23.40972], [14.8513, 22.862950000000126]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Sri Lanka",
      "sov_a3": "LKA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Sri Lanka",
      "adm0_a3": "LKA",
      "geou_dif": 0.000000,
      "geounit": "Sri Lanka",
      "gu_a3": "LKA",
      "su_dif": 0.000000,
      "subunit": "Sri Lanka",
      "su_a3": "LKA",
      "brk_diff": 0.000000,
      "name": "Sri Lanka",
      "name_long": "Sri Lanka",
      "brk_a3": "LKA",
      "brk_name": "Sri Lanka",
      "brk_group": null,
      "abbrev": "Sri L.",
      "postal": "LK",
      "formal_en": "Democratic Socialist Republic of Sri Lanka",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Sri Lanka",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 9.000000,
      "pop_est": 21324791.000000,
      "gdp_md_est": 91870.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "LK",
      "iso_a3": "LKA",
      "iso_n3": "144",
      "un_a3": "144",
      "wb_a2": "LK",
      "wb_a3": "LKA",
      "woe_id": -99.000000,
      "adm0_a3_is": "LKA",
      "adm0_a3_us": "LKA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Southern Asia",
      "region_wb": "South Asia",
      "name_len": 9.000000,
      "long_len": 9.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[81.787959018891399, 7.523055324733164], [81.637322218760588, 6.481775214051922], [81.218019647144331, 6.197141424988288], [80.348356968104412, 5.968369859232155], [79.872468703128533, 6.76346344647493], [79.695166863935128, 8.200843410673386], [80.147800734379643, 9.824077663609557], [80.838817986986555, 9.268426825391188], [81.304319289071771, 8.56420624433369], [81.787959018891399, 7.523055324733164]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Lesotho",
      "sov_a3": "LSO",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Lesotho",
      "adm0_a3": "LSO",
      "geou_dif": 0.000000,
      "geounit": "Lesotho",
      "gu_a3": "LSO",
      "su_dif": 0.000000,
      "subunit": "Lesotho",
      "su_a3": "LSO",
      "brk_diff": 0.000000,
      "name": "Lesotho",
      "name_long": "Lesotho",
      "brk_a3": "LSO",
      "brk_name": "Lesotho",
      "brk_group": null,
      "abbrev": "Les.",
      "postal": "LS",
      "formal_en": "Kingdom of Lesotho",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Lesotho",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 8.000000,
      "pop_est": 2130819.000000,
      "gdp_md_est": 3293.000000,
      "pop_year": -99.000000,
      "lastcensus": 2006.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "LS",
      "iso_a3": "LSO",
      "iso_n3": "426",
      "un_a3": "426",
      "wb_a2": "LS",
      "wb_a3": "LSO",
      "woe_id": -99.000000,
      "adm0_a3_is": "LSO",
      "adm0_a3_us": "LSO",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Southern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[28.978262566857243, -28.955596612261711], [29.325166456832591, -29.257386976846256], [29.018415154748027, -29.743765557577369], [28.848399692507741, -30.070050551068256], [28.29106937023991, -30.2262167294543], [28.107204624145425, -30.545732110314951], [27.749397006956485, -30.645105889612225], [26.999261915807637, -29.875953871379984], [27.532511020627478, -29.24271087007536], [28.074338413207784, -28.851468601193588], [28.541700066855498, -28.647501722937569], [28.978262566857243, -28.955596612261711]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Lithuania",
      "sov_a3": "LTU",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Lithuania",
      "adm0_a3": "LTU",
      "geou_dif": 0.000000,
      "geounit": "Lithuania",
      "gu_a3": "LTU",
      "su_dif": 0.000000,
      "subunit": "Lithuania",
      "su_a3": "LTU",
      "brk_diff": 0.000000,
      "name": "Lithuania",
      "name_long": "Lithuania",
      "brk_a3": "LTU",
      "brk_name": "Lithuania",
      "brk_group": null,
      "abbrev": "Lith.",
      "postal": "LT",
      "formal_en": "Republic of Lithuania",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Lithuania",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 9.000000,
      "pop_est": 3555179.000000,
      "gdp_md_est": 63330.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "LT",
      "iso_a3": "LTU",
      "iso_n3": "440",
      "un_a3": "440",
      "wb_a2": "LT",
      "wb_a3": "LTU",
      "woe_id": -99.000000,
      "adm0_a3_is": "LTU",
      "adm0_a3_us": "LTU",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Northern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 9.000000,
      "long_len": 9.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[22.731098667092652, 54.327536932993326], [22.651051873472539, 54.582740993866736], [22.757763706155259, 54.85657440858138], [22.315723504330577, 55.015298570365864], [21.268448927503467, 55.190481675835315], [21.055800408622417, 56.031076361711065], [22.201156853939494, 56.33780182557949], [23.878263787539964, 56.273671373105273], [24.86068444184076, 56.37252838807963], [25.000934279080894, 56.164530748104838], [25.533046502390334, 56.100296942766036], [26.494331495883756, 55.615106919977634], [26.588279249790389, 55.167175604871673], [25.768432651479799, 54.846962592175089], [25.536353794056993, 54.282423407602529], [24.450683628037037, 53.905702216194754], [23.484127638449849, 53.912497667041137], [23.243987257589509, 54.220566718149144], [22.731098667092652, 54.327536932993326]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Luxembourg",
      "sov_a3": "LUX",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Luxembourg",
      "adm0_a3": "LUX",
      "geou_dif": 0.000000,
      "geounit": "Luxembourg",
      "gu_a3": "LUX",
      "su_dif": 0.000000,
      "subunit": "Luxembourg",
      "su_a3": "LUX",
      "brk_diff": 0.000000,
      "name": "Luxembourg",
      "name_long": "Luxembourg",
      "brk_a3": "LUX",
      "brk_name": "Luxembourg",
      "brk_group": null,
      "abbrev": "Lux.",
      "postal": "L",
      "formal_en": "Grand Duchy of Luxembourg",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Luxembourg",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 7.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 7.000000,
      "pop_est": 491775.000000,
      "gdp_md_est": 39370.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "LU",
      "iso_a3": "LUX",
      "iso_n3": "442",
      "un_a3": "442",
      "wb_a2": "LU",
      "wb_a3": "LUX",
      "woe_id": -99.000000,
      "adm0_a3_is": "LUX",
      "adm0_a3_us": "LUX",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Western Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 10.000000,
      "long_len": 10.000000,
      "abbrev_len": 4.000000,
      "tiny": 5.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[6.043073357781111, 50.128051662794235], [6.242751092156993, 49.902225653678727], [6.186320428094177, 49.463802802114515], [5.897759230176405, 49.442667141307027], [5.674051954784829, 49.529483547557504], [5.782417433300907, 50.09032786722122], [6.043073357781111, 50.128051662794235]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Latvia",
      "sov_a3": "LVA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Latvia",
      "adm0_a3": "LVA",
      "geou_dif": 0.000000,
      "geounit": "Latvia",
      "gu_a3": "LVA",
      "su_dif": 0.000000,
      "subunit": "Latvia",
      "su_a3": "LVA",
      "brk_diff": 0.000000,
      "name": "Latvia",
      "name_long": "Latvia",
      "brk_a3": "LVA",
      "brk_name": "Latvia",
      "brk_group": null,
      "abbrev": "Lat.",
      "postal": "LV",
      "formal_en": "Republic of Latvia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Latvia",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 7.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 13.000000,
      "pop_est": 2231503.000000,
      "gdp_md_est": 38860.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "LV",
      "iso_a3": "LVA",
      "iso_n3": "428",
      "un_a3": "428",
      "wb_a2": "LV",
      "wb_a3": "LVA",
      "woe_id": -99.000000,
      "adm0_a3_is": "LVA",
      "adm0_a3_us": "LVA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Northern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[21.055800408622417, 56.031076361711065], [21.090423618257972, 56.783872789122938], [21.581866489353672, 57.411870632549935], [22.524341261492879, 57.753374335350763], [23.318452996522097, 57.006236477274868], [24.120729607853431, 57.025692654032767], [24.312862583114622, 57.793423570376973], [25.164593540149269, 57.970156968815189], [25.602809685984369, 57.847528794986573], [26.463532342237787, 57.47638865826633], [27.288184848751513, 57.474528306703832], [27.770015903440932, 57.244258124411232], [27.855282016722526, 56.759326483784292], [28.176709425577997, 56.169129950578814], [27.102459751094528, 55.783313707087686], [26.494331495883756, 55.615106919977634], [25.533046502390334, 56.100296942766036], [25.000934279080894, 56.164530748104838], [24.86068444184076, 56.37252838807963], [23.878263787539964, 56.273671373105273], [22.201156853939494, 56.33780182557949], [21.055800408622417, 56.031076361711065]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Morocco",
      "sov_a3": "MAR",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Morocco",
      "adm0_a3": "MAR",
      "geou_dif": 0.000000,
      "geounit": "Morocco",
      "gu_a3": "MAR",
      "su_dif": 0.000000,
      "subunit": "Morocco",
      "su_a3": "MAR",
      "brk_diff": 0.000000,
      "name": "Morocco",
      "name_long": "Morocco",
      "brk_a3": "MAR",
      "brk_name": "Morocco",
      "brk_group": null,
      "abbrev": "Mor.",
      "postal": "MA",
      "formal_en": "Kingdom of Morocco",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Morocco",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 9.000000,
      "pop_est": 34859364.000000,
      "gdp_md_est": 136600.000000,
      "pop_year": -99.000000,
      "lastcensus": 2004.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "MA",
      "iso_a3": "MAR",
      "iso_n3": "504",
      "un_a3": "504",
      "wb_a2": "MA",
      "wb_a3": "MAR",
      "woe_id": -99.000000,
      "adm0_a3_is": "MAR",
      "adm0_a3_us": "MAR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Northern Africa",
      "region_wb": "Middle East & North Africa",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "Polygon",
      "coordinates": [[[-8.674116176782832, 28.84128896739665], [-8.665606420915562, 27.656574449396274], [-8.683366258163218, 27.656451727808502], [-8.964175991237255, 27.65640005137621], [-9.244934047879013, 27.656348374943917], [-9.52574378095305, 27.656296698511625], [-9.806527675810941, 27.656270860295479], [-10.087311570668831, 27.656245022079332], [-10.368121303742882, 27.65619334564704], [-10.648905198600772, 27.656141669214747], [-10.929689093458663, 27.656089992782455], [-11.210472988316553, 27.656038316350163], [-11.491256883174458, 27.65598663991787], [-11.772040778032348, 27.655934963485578], [-12.052824672890239, 27.655909125269432], [-12.333634405964276, 27.655883287053285], [-12.614392462606034, 27.655831610620993], [-12.895202195680071, 27.655779934188715], [-13.119530487057402, 27.65573864803957], [-12.618836635783111, 28.038185533148663], [-11.688919236690765, 28.148643907172584], [-10.900956997104402, 28.83214223888092], [-10.399592251008642, 29.09858592377779], [-9.564811163765626, 29.933573716749862], [-9.814718390329176, 31.17773550060906], [-9.434793260119363, 32.038096421836485], [-9.300692918321829, 32.564679266890636], [-8.65747636558504, 33.240245266242397], [-7.654178432638219, 33.697064927702513], [-6.91254411460136, 34.110476386037448], [-6.244342006851411, 35.145865383437524], [-5.929994269219833, 35.75998810479399], [-5.193863491222032, 35.755182196590852], [-4.591006232105144, 35.330711981745651], [-3.640056525070008, 35.399855048151977], [-2.604305792644112, 35.179093329401127], [-2.169913702798624, 35.168396307916709], [-1.792985805661658, 34.527918606091305], [-1.73345455566141, 33.919712836232122], [-1.388049282222596, 32.864015000941379], [-1.124551153966195, 32.651521511357203], [-1.30789913573787, 32.262888902306031], [-2.616604783529567, 32.094346218386164], [-3.068980271812649, 31.724497992473289], [-3.647497931320146, 31.637294012980817], [-3.690441046554668, 30.896951605751156], [-4.859646165374443, 30.501187649043885], [-5.242129278982787, 30.000443020135577], [-6.060632290053746, 29.731699734001808], [-7.059227667661901, 29.579228420524657], [-8.674116176782832, 28.84128896739665]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Moldova",
      "sov_a3": "MDA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Moldova",
      "adm0_a3": "MDA",
      "geou_dif": 0.000000,
      "geounit": "Moldova",
      "gu_a3": "MDA",
      "su_dif": 0.000000,
      "subunit": "Moldova",
      "su_a3": "MDA",
      "brk_diff": 0.000000,
      "name": "Moldova",
      "name_long": "Moldova",
      "brk_a3": "MDA",
      "brk_name": "Moldova",
      "brk_group": null,
      "abbrev": "Mda.",
      "postal": "MD",
      "formal_en": "Republic of Moldova",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Moldova",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 12.000000,
      "pop_est": 4320748.000000,
      "gdp_md_est": 10670.000000,
      "pop_year": -99.000000,
      "lastcensus": 2004.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "MD",
      "iso_a3": "MDA",
      "iso_n3": "498",
      "un_a3": "498",
      "wb_a2": "MD",
      "wb_a3": "MDA",
      "woe_id": -99.000000,
      "adm0_a3_is": "MDA",
      "adm0_a3_us": "MDA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Eastern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[26.619336785597795, 48.220726223333472], [26.857823520624805, 48.368210761094495], [27.522537469195157, 48.467119452501116], [28.259546746541844, 48.155562242213421], [28.670891147585166, 48.118148505234103], [29.122698195113031, 47.849095160506465], [29.050867954227328, 47.510226955752501], [29.415135125452736, 47.346645209332578], [29.559674106573112, 46.928582872091326], [29.908851759569302, 46.674360663431457], [29.838210076626297, 46.525325832701689], [30.024658644335375, 46.42393667254504], [29.759971958136394, 46.349987697935362], [29.170653924279886, 46.3792623968287], [29.072106967899291, 46.517677720722496], [28.862972446414062, 46.437889309263831], [28.933717482221624, 46.258830471372498], [28.659987420371579, 45.939986884131642], [28.485269402792767, 45.596907050145902], [28.233553501099042, 45.488283189468376], [28.054442986775399, 45.944586086605625], [28.160017937947714, 46.371562608417221], [28.128030226359044, 46.810476386088254], [27.551166212684848, 47.405117092470832], [27.233872918412743, 47.826770941756379], [26.924176059687568, 48.123264472030996], [26.619336785597795, 48.220726223333472]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Madagascar",
      "sov_a3": "MDG",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Madagascar",
      "adm0_a3": "MDG",
      "geou_dif": 0.000000,
      "geounit": "Madagascar",
      "gu_a3": "MDG",
      "su_dif": 0.000000,
      "subunit": "Madagascar",
      "su_a3": "MDG",
      "brk_diff": 0.000000,
      "name": "Madagascar",
      "name_long": "Madagascar",
      "brk_a3": "MDG",
      "brk_name": "Madagascar",
      "brk_group": null,
      "abbrev": "Mad.",
      "postal": "MG",
      "formal_en": "Republic of Madagascar",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Madagascar",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 3.000000,
      "pop_est": 20653556.000000,
      "gdp_md_est": 20130.000000,
      "pop_year": -99.000000,
      "lastcensus": 1993.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "MG",
      "iso_a3": "MDG",
      "iso_n3": "450",
      "un_a3": "450",
      "wb_a2": "MG",
      "wb_a3": "MDG",
      "woe_id": -99.000000,
      "adm0_a3_is": "MDG",
      "adm0_a3_us": "MDG",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 10.000000,
      "long_len": 10.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[49.543518914595751, -12.469832858940554], [49.808980747279094, -12.895284925999555], [50.056510857957164, -13.555761407121985], [50.217431268114069, -14.758788750876796], [50.476536899625529, -15.226512139550543], [50.377111443895956, -15.706069431219127], [50.200274692593183, -16.000263360256767], [49.860605503138679, -15.414252618066918], [49.672606642460863, -15.710203545802479], [49.863344354050156, -16.451036879138776], [49.774564243372708, -16.875042006093601], [49.498612094934117, -17.106035658438273], [49.435618523970305, -17.953064060134366], [49.041792433473944, -19.118781019774445], [48.548540887248009, -20.496888116134127], [47.930749139198667, -22.391501153251085], [47.547723423051309, -23.781958916928517], [47.095761346226595, -24.941629733990453], [46.282477654817086, -25.178462823184105], [45.409507684110451, -25.601434421493089], [44.833573846217554, -25.34610116953894], [44.039720493349762, -24.988345228782308], [43.763768344911171, -24.460677178649991], [43.697777540874455, -23.574116306250602], [43.345654331237625, -22.776903985283873], [43.254187046081, -22.057413018484123], [43.43329756040464, -21.336475111580189], [43.893682895692926, -21.163307386970128], [43.896370070172104, -20.830459486578174], [44.374325392439658, -20.072366224856388], [44.464397413924388, -19.435454196859048], [44.232421909366167, -18.961994724200906], [44.042976108584156, -18.331387220943171], [43.963084344260913, -17.409944756746782], [44.31246870298628, -16.850495700754955], [44.446517368351401, -16.216219170804507], [44.944936557806528, -16.179373874580399], [45.502731967964991, -15.974373467678539], [45.872993605336262, -15.793454278224687], [46.31224327981721, -15.780018405828798], [46.882182651564285, -15.210182386946315], [47.705129835812357, -14.594302666891764], [48.005214878131255, -14.091232598530375], [47.869047479042166, -13.663868503476586], [48.293827752481377, -13.784067884987486], [48.845060255738787, -13.089174899958664], [48.863508742066983, -12.487867933810421], [49.194651320193316, -12.04055673589197], [49.543518914595751, -12.469832858940554]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Mexico",
      "sov_a3": "MEX",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Mexico",
      "adm0_a3": "MEX",
      "geou_dif": 0.000000,
      "geounit": "Mexico",
      "gu_a3": "MEX",
      "su_dif": 0.000000,
      "subunit": "Mexico",
      "su_a3": "MEX",
      "brk_diff": 0.000000,
      "name": "Mexico",
      "name_long": "Mexico",
      "brk_a3": "MEX",
      "brk_name": "Mexico",
      "brk_group": null,
      "abbrev": "Mex.",
      "postal": "MX",
      "formal_en": "United Mexican States",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Mexico",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 7.000000,
      "mapcolor13": 3.000000,
      "pop_est": 111211789.000000,
      "gdp_md_est": 1563000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "4. Emerging region: MIKT",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "MX",
      "iso_a3": "MEX",
      "iso_n3": "484",
      "un_a3": "484",
      "wb_a2": "MX",
      "wb_a3": "MEX",
      "woe_id": -99.000000,
      "adm0_a3_is": "MEX",
      "adm0_a3_us": "MEX",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Central America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-97.140008307670712, 25.869997463478398], [-97.528072475966553, 24.9921440699203], [-97.702945522842242, 24.272343044526735], [-97.776041836319052, 22.93257986092766], [-97.872366706111109, 22.44421173755336], [-97.699043952204192, 21.898689480064263], [-97.388959520236767, 21.411018988525825], [-97.189333462293291, 20.635433254473128], [-96.525575527720321, 19.890930894444068], [-96.292127244841765, 19.320371405509547], [-95.900884975959968, 18.82802419684873], [-94.839063483442715, 18.562717393462208], [-94.425729539756219, 18.144370835843347], [-93.548651292682393, 18.423836981677937], [-92.786113857783505, 18.524838568592259], [-92.037348192090406, 18.704569200103435], [-91.407903408559264, 18.87608327888023], [-90.771869879910867, 19.284120388256781], [-90.533589850613055, 19.867418117751299], [-90.451475999701245, 20.707521877520435], [-90.278618333684904, 20.999855454995554], [-89.601321173851488, 21.261725775634488], [-88.543866339862859, 21.49367544197662], [-87.658416510757718, 21.458845526611981], [-87.051890224948067, 21.543543199138298], [-86.811982388032959, 21.331514797444754], [-86.845907965832623, 20.849864610268355], [-87.383291185235862, 20.25540477139873], [-87.62105445021075, 19.646553046135921], [-87.436750454441778, 19.472403469312269], [-87.586560431655926, 19.040130113190742], [-87.837191128271513, 18.25981598558343], [-88.090664028663184, 18.516647854074051], [-88.30003109409364, 18.49998220466], [-88.490122850279306, 18.48683055264172], [-88.848343878926585, 17.883198147040332], [-89.029857347351765, 18.001511338772559], [-89.150909389995491, 17.955467637600407], [-89.14308041050333, 17.808318996649405], [-90.067933519230905, 17.819326076727521], [-91.001519945015957, 17.817594916245696], [-91.002269253284169, 17.254657701074279], [-91.453921271515128, 17.252177232324186], [-91.081670091500598, 16.918476670799521], [-90.711821865587638, 16.68748301845477], [-90.600846727240935, 16.47077789963879], [-90.438866950222007, 16.410109768128109], [-90.464472622422647, 16.069562079324726], [-91.747960171255954, 16.066564846251765], [-92.229248623406306, 15.251446641495875], [-92.087215949252027, 15.064584662328514], [-92.203229539747269, 14.83010285080411], [-92.227750006869826, 14.538828640190957], [-93.35946387406176, 15.615429592343673], [-93.875168830118525, 15.940164292865916], [-94.691656460330137, 16.200975246642884], [-95.250227016973042, 16.128318182840644], [-96.053382127653322, 15.752087917539598], [-96.557434048228288, 15.653515122942792], [-97.263592495496653, 15.917064927631316], [-98.01302995480961, 16.107311713113916], [-98.947675747456515, 16.566043402568766], [-99.697397427147052, 16.706164048728169], [-100.829498867581322, 17.17107107184205], [-101.666088629954459, 17.649026394109626], [-101.918528001700224, 17.916090196193977], [-102.478132086988921, 17.975750637275098], [-103.500989549558085, 18.292294623278849], [-103.917527432046825, 18.748571682200009], [-104.992009650475495, 19.316133938061682], [-105.49303849976144, 19.946767279535436], [-105.731396043707662, 20.434101874264115], [-105.39777299683135, 20.531718654863425], [-105.50066077352443, 20.816895046466129], [-105.270752326257934, 21.076284898355141], [-105.265817226974036, 21.422103583252351], [-105.603160976975403, 21.871145941652571], [-105.693413865973127, 22.269080308516152], [-106.028716396898972, 22.773752346278627], [-106.90998043498837, 23.767774359628902], [-107.915448778091388, 24.54891531015295], [-108.401904873470983, 25.172313951105934], [-109.260198737406654, 25.580609442644061], [-109.444089321717343, 25.82488393808768], [-109.291643846456282, 26.442934068298428], [-109.801457689231825, 26.676175645447927], [-110.391731737085706, 27.16211497650454], [-110.641018846461634, 27.859876003525528], [-111.178918830187854, 27.94124054616907], [-111.759606899851633, 28.467952582303951], [-112.228234626090398, 28.954408677683489], [-112.271823696728688, 29.266844387320077], [-112.809594489373978, 30.021113593052348], [-113.163810594518679, 30.786880804969428], [-113.14866939985717, 31.170965887978923], [-113.871881069781864, 31.567608344035193], [-114.20573666060352, 31.524045111613134], [-114.776451178835032, 31.79953217216115], [-114.936699795372135, 31.393484605427602], [-114.771231859173497, 30.913617255165263], [-114.673899298951767, 30.162681179315996], [-114.330974494262932, 29.750432440707414], [-113.588875088335442, 29.061611436473015], [-113.424053107540544, 28.82617361095123], [-113.27196936730553, 28.754782619739899], [-113.140039435664391, 28.411289374295961], [-112.962298346796501, 28.42519033458251], [-112.761587083774884, 27.780216783147523], [-112.457910529411663, 27.525813706974759], [-112.244951951936798, 27.171726792910761], [-111.616489020619213, 26.662817287700477], [-111.284674648873022, 25.732589830014433], [-110.987819383572401, 25.294606228124564], [-110.710006883571339, 24.826004340101861], [-110.655048997828885, 24.298594672131117], [-110.172856208113444, 24.265547593680424], [-109.77184709352855, 23.811182562754198], [-109.409104377055712, 23.364672349536249], [-109.433392300232924, 23.185587673428699], [-109.854219326601708, 22.818271592698068], [-110.031391974714438, 22.823077500901206], [-110.295070970483664, 23.430973212166691], [-110.949501309028051, 24.000964260345995], [-111.670568407012695, 24.484423122652515], [-112.182035895621482, 24.738412787367167], [-112.148988817170846, 25.470125230404051], [-112.300710822379699, 26.012004299416617], [-112.777296719191554, 26.321959540303169], [-113.464670783321935, 26.768185533143424], [-113.596729906043834, 26.639459540304472], [-113.848936733844255, 26.90006378835244], [-114.465746629680041, 27.142090358991368], [-115.055142178185008, 27.722726752222911], [-114.982252570437424, 27.798200181585116], [-114.570365566854946, 27.741485297144891], [-114.19932878299926, 28.115002549750557], [-114.162018398884641, 28.566111965442303], [-114.931842210736647, 29.27947927501549], [-115.518653937626993, 29.556361599235402], [-115.887365282029577, 30.180793768834178], [-116.258350389452914, 30.836464341753583], [-116.721526252084971, 31.635743720012044], [-117.127759999999853, 32.53534], [-115.99135, 32.612390000000119], [-114.72139, 32.72083], [-114.815, 32.52528], [-113.30498, 32.03914], [-111.02361, 31.33472], [-109.035, 31.341940000000136], [-108.24194, 31.34222], [-108.24, 31.754853718166373], [-106.50759, 31.75452], [-106.1429, 31.39995], [-105.63159, 31.08383], [-105.03737, 30.64402], [-104.70575, 30.12173], [-104.456969999999899, 29.57196], [-103.94, 29.27], [-103.11, 28.97], [-102.48, 29.76], [-101.6624, 29.7793], [-100.9576, 29.380710000000136], [-100.45584, 28.696120000000121], [-100.11, 28.110000000000127], [-99.52, 27.54], [-99.3, 26.84], [-99.02, 26.37], [-98.24, 26.06], [-97.53, 25.84], [-97.140008307670712, 25.869997463478398]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Macedonia",
      "sov_a3": "MKD",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Macedonia",
      "adm0_a3": "MKD",
      "geou_dif": 0.000000,
      "geounit": "Macedonia",
      "gu_a3": "MKD",
      "su_dif": 0.000000,
      "subunit": "Macedonia",
      "su_a3": "MKD",
      "brk_diff": 0.000000,
      "name": "Macedonia",
      "name_long": "Macedonia",
      "brk_a3": "MKD",
      "brk_name": "Macedonia",
      "brk_group": null,
      "abbrev": "Mkd.",
      "postal": "MK",
      "formal_en": "Former Yugoslav Republic of Macedonia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Macedonia, FYR",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 7.000000,
      "mapcolor13": 3.000000,
      "pop_est": 2066718.000000,
      "gdp_md_est": 18780.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "MK",
      "iso_a3": "MKD",
      "iso_n3": "807",
      "un_a3": "807",
      "wb_a2": "MK",
      "wb_a3": "MKD",
      "woe_id": -99.000000,
      "adm0_a3_is": "MKD",
      "adm0_a3_us": "MKD",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Southern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 9.000000,
      "long_len": 9.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[20.59023, 41.85541], [20.717310000000111, 41.84711], [20.76216, 42.05186], [21.352700000000141, 42.2068], [21.576635989402121, 42.245224397061861], [21.917080000000112, 42.30364], [22.380525750424681, 42.320259507815081], [22.881373732197346, 41.999297186850356], [22.952377150166512, 41.33799388281119], [22.76177, 41.3048], [22.597308383889015, 41.130487168943205], [22.05537763844427, 41.149865831052693], [21.674160597426976, 40.931274522457954], [21.020040317476401, 40.84272695572588], [20.60518, 41.08622], [20.46315, 41.5150900000001], [20.59023, 41.85541]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Mali",
      "sov_a3": "MLI",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Mali",
      "adm0_a3": "MLI",
      "geou_dif": 0.000000,
      "geounit": "Mali",
      "gu_a3": "MLI",
      "su_dif": 0.000000,
      "subunit": "Mali",
      "su_a3": "MLI",
      "brk_diff": 0.000000,
      "name": "Mali",
      "name_long": "Mali",
      "brk_a3": "MLI",
      "brk_name": "Mali",
      "brk_group": null,
      "abbrev": "Mali",
      "postal": "ML",
      "formal_en": "Republic of Mali",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Mali",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 7.000000,
      "pop_est": 12666987.000000,
      "gdp_md_est": 14590.000000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "ML",
      "iso_a3": "MLI",
      "iso_n3": "466",
      "un_a3": "466",
      "wb_a2": "ML",
      "wb_a3": "MLI",
      "woe_id": -99.000000,
      "adm0_a3_is": "MLI",
      "adm0_a3_us": "MLI",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 4.000000,
      "long_len": 4.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-12.170750291380301, 14.616834214735505], [-11.834207526079467, 14.799096991428939], [-11.666078253617854, 15.388208319556298], [-11.349095017939504, 15.411256008358478], [-10.650791388379417, 15.132745876521426], [-10.086846482778213, 15.330485744686271], [-9.700255092802706, 15.264107367407362], [-9.550238409859389, 15.486496893775438], [-5.537744309908447, 15.501689764869257], [-5.315277268891933, 16.201853745991841], [-5.488522508150439, 16.325102037007966], [-5.971128709324248, 20.640833441647629], [-6.453786586930335, 24.956590684503425], [-4.923337368174231, 24.974574082941], [-1.550054897457613, 22.792665920497384], [1.823227573259032, 20.610809434486043], [2.06099083823392, 20.142233384679486], [2.683588494486429, 19.856230170160117], [3.1466610042539, 19.693578599521445], [3.158133172222705, 19.057364203360038], [4.267419467800039, 19.155265204336999], [4.270209995143802, 16.852227484601215], [3.723421665063483, 16.184283759012615], [3.638258904646477, 15.568119818580456], [2.749992709981484, 15.409524847876696], [1.385528191746858, 15.323561102759172], [1.01578331869851, 14.968182277887948], [0.374892205414682, 14.92890818934613], [-0.26625729003058, 14.924308986872148], [-0.515854458000348, 15.116157741755728], [-1.066363491205664, 14.973815009007765], [-2.001035122068771, 14.559008287000893], [-2.191824510090385, 14.246417548067356], [-2.967694464520577, 13.79815033615151], [-3.10370683431276, 13.541266791228594], [-3.522802700199861, 13.337661647998615], [-4.006390753587226, 13.472485459848116], [-4.28040503581488, 13.228443508349741], [-4.427166103523803, 12.542645575404295], [-5.220941941743121, 11.713858954307227], [-5.197842576508648, 11.37514577885014], [-5.470564947929006, 10.951269842976048], [-5.404341599946974, 10.370736802609146], [-5.816926235365287, 10.222554633012194], [-6.050452032892267, 10.096360785355444], [-6.205222947606431, 10.524060777219134], [-6.493965013037268, 10.411302801958271], [-6.666460944027548, 10.430810655148449], [-6.850506557635057, 10.138993841996239], [-7.622759161804809, 10.147236232946796], [-7.899589809592372, 10.297382106970828], [-8.029943610048619, 10.206534939001713], [-8.33537716310974, 10.494811916541934], [-8.282357143578281, 10.792597357623846], [-8.407310756860028, 10.909256903522762], [-8.620321010767128, 10.810890814655183], [-8.581305304386774, 11.136245632364805], [-8.376304897484914, 11.393645941610629], [-8.786099005559464, 11.812560939984706], [-8.90526485842453, 12.088358059126437], [-9.127473517279583, 12.308060411015333], [-9.327616339546012, 12.334286200403454], [-9.567911749703214, 12.194243068892476], [-9.890992804392013, 12.060478623904972], [-10.165213792348837, 11.844083563682744], [-10.593223842806282, 11.92397532800598], [-10.870829637078215, 12.17788747807211], [-11.03655595543826, 12.211244615116515], [-11.297573614944511, 12.077971096235771], [-11.456168585648271, 12.076834214725338], [-11.513942836950591, 12.442987575729418], [-11.467899135778524, 12.754518947800975], [-11.553397793005431, 13.141213690641067], [-11.927716030311615, 13.422075100147396], [-12.124887457721259, 13.994727484589788], [-12.170750291380301, 14.616834214735505]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Myanmar",
      "sov_a3": "MMR",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Myanmar",
      "adm0_a3": "MMR",
      "geou_dif": 0.000000,
      "geounit": "Myanmar",
      "gu_a3": "MMR",
      "su_dif": 0.000000,
      "subunit": "Myanmar",
      "su_a3": "MMR",
      "brk_diff": 0.000000,
      "name": "Myanmar",
      "name_long": "Myanmar",
      "brk_a3": "MMR",
      "brk_name": "Myanmar",
      "brk_group": null,
      "abbrev": "Myan.",
      "postal": "MM",
      "formal_en": "Republic of the Union of Myanmar",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Myanmar",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 13.000000,
      "pop_est": 48137741.000000,
      "gdp_md_est": 55130.000000,
      "pop_year": -99.000000,
      "lastcensus": 1983.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "MM",
      "iso_a3": "MMR",
      "iso_n3": "104",
      "un_a3": "104",
      "wb_a2": "MM",
      "wb_a3": "MMR",
      "woe_id": -99.000000,
      "adm0_a3_is": "MMR",
      "adm0_a3_us": "MMR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "South-Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[99.543309360759309, 20.186597601802063], [98.959675734454876, 19.752980658440947], [98.25372399291561, 19.708203029860044], [97.797782830804408, 18.627080389881755], [97.375896437573545, 18.445437730375815], [97.859122755934862, 17.567946071843664], [98.49376102091135, 16.837835598207931], [98.903348423256759, 16.177824204976119], [98.537375929765716, 15.308497422746084], [98.192074009191401, 15.123702500870351], [98.430819126379873, 14.622027696180837], [99.097755161538757, 13.827502549693278], [99.212011753336085, 13.269293728076464], [99.196353794351666, 12.80474843998867], [99.587286004639722, 11.892762762901697], [99.038120558673981, 10.960545762572437], [98.553550653073046, 9.932959906448545], [98.457174106848726, 10.67526601810515], [98.764545526120784, 11.441291612183749], [98.428338657629851, 12.032986761925685], [98.509574009192676, 13.122377631070677], [98.103603957107694, 13.640459703012851], [97.777732375075175, 14.837285874892642], [97.597071567782763, 16.100567938699768], [97.164539829499802, 16.92873444260934], [96.505768670642993, 16.427240505432849], [95.369352248112406, 15.714389960182601], [94.80840457558412, 15.803454291237641], [94.188804152404543, 16.037936102762018], [94.533485955791349, 17.277240301985728], [94.324816522196755, 18.2135139022499], [93.540988397193644, 19.366492621330025], [93.663254835996213, 19.726961574781996], [93.078277622452191, 19.855144965081976], [92.36855350135562, 20.670883287025347], [92.303234490938678, 21.475485337809818], [92.65225711463799, 21.324047552978485], [92.672720981825563, 22.041238918541254], [93.166127557348375, 22.278459580977103], [93.060294224014626, 22.703110663335568], [93.286326938859276, 23.043658352139005], [93.325187615942795, 24.078556423432204], [94.106741977925068, 23.85074087167348], [94.55265791217164, 24.675238348890336], [94.603249139385383, 25.162495428970402], [95.155153436262594, 26.001307277932085], [95.124767694074961, 26.573572089132298], [96.419365675850969, 27.264589341739224], [97.133999058015306, 27.083773505149964], [97.051988559968095, 27.699058946233151], [97.402561476636137, 27.882536119085444], [97.327113885490036, 28.261582749946339], [97.911987746169444, 28.335945136014345], [98.246230910233294, 27.747221381129179], [98.682690057370465, 27.508812160750619], [98.712093947344513, 26.743535874940267], [98.671838006589155, 25.918702500913525], [97.724609002679145, 25.083637193293001], [97.604719679761985, 23.897404690033042], [98.660262485755766, 24.063286037689966], [98.898749220782776, 23.142722072842531], [99.531992222087396, 22.949038804612581], [99.240898878987252, 22.118314317304581], [99.983489211021492, 21.742936713136402], [100.416537713627378, 21.558839423096614], [101.15003299357825, 21.849984442629022], [101.180005324307544, 21.436572984294028], [100.329101190189533, 20.786121731036232], [100.115987583417848, 20.417849636308187], [99.543309360759309, 20.186597601802063]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Montenegro",
      "sov_a3": "MNE",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Montenegro",
      "adm0_a3": "MNE",
      "geou_dif": 0.000000,
      "geounit": "Montenegro",
      "gu_a3": "MNE",
      "su_dif": 0.000000,
      "subunit": "Montenegro",
      "su_a3": "MNE",
      "brk_diff": 0.000000,
      "name": "Montenegro",
      "name_long": "Montenegro",
      "brk_a3": "MNE",
      "brk_name": "Montenegro",
      "brk_group": null,
      "abbrev": "Mont.",
      "postal": "ME",
      "formal_en": "Montenegro",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Montenegro",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 5.000000,
      "pop_est": 672180.000000,
      "gdp_md_est": 6816.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "ME",
      "iso_a3": "MNE",
      "iso_n3": "499",
      "un_a3": "499",
      "wb_a2": "ME",
      "wb_a3": "MNE",
      "woe_id": -99.000000,
      "adm0_a3_is": "MNE",
      "adm0_a3_us": "MNE",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Southern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 10.000000,
      "long_len": 10.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[19.801613396898688, 42.500093492190842], [19.738051385179631, 42.688247382165571], [19.304490000000101, 42.19574], [19.37177000000014, 41.87755], [19.16246, 41.95502], [18.88214, 42.28151], [18.45, 42.48], [18.56, 42.65], [18.70648, 43.20011], [19.03165, 43.43253], [19.21852, 43.52384], [19.48389, 43.35229], [19.63, 43.213779970270537], [19.95857, 43.10604], [20.3398, 42.89852], [20.25758, 42.812750000000108], [20.0707, 42.58863], [19.801613396898688, 42.500093492190842]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Mongolia",
      "sov_a3": "MNG",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Mongolia",
      "adm0_a3": "MNG",
      "geou_dif": 0.000000,
      "geounit": "Mongolia",
      "gu_a3": "MNG",
      "su_dif": 0.000000,
      "subunit": "Mongolia",
      "su_a3": "MNG",
      "brk_diff": 0.000000,
      "name": "Mongolia",
      "name_long": "Mongolia",
      "brk_a3": "MNG",
      "brk_name": "Mongolia",
      "brk_group": null,
      "abbrev": "Mong.",
      "postal": "MN",
      "formal_en": "Mongolia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Mongolia",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 6.000000,
      "pop_est": 3041142.000000,
      "gdp_md_est": 9476.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "MN",
      "iso_a3": "MNG",
      "iso_n3": "496",
      "un_a3": "496",
      "wb_a2": "MN",
      "wb_a3": "MNG",
      "woe_id": -99.000000,
      "adm0_a3_is": "MNG",
      "adm0_a3_us": "MNG",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[87.751264276076711, 49.297197984405486], [88.805566847695516, 49.470520738312423], [90.71366743364068, 50.331811835321091], [92.234711541719676, 50.802170722041723], [93.10421919146269, 50.495290228876428], [94.147566359435629, 50.48053660745709], [94.815949334698729, 50.013433335970852], [95.814027947983988, 49.977466539095715], [97.25972781778141, 49.726060695995741], [98.231761509191557, 50.422400621128745], [97.825739780674311, 51.010995184933179], [98.861490513100335, 52.047366034546691], [99.981732212323536, 51.634006252643992], [100.889480421962617, 51.516855780638323], [102.065222609467327, 51.259920559283124], [102.255908644624327, 50.510560614618683], [103.676545444760222, 50.089966132195116], [104.621552362081701, 50.275329494826074], [105.886591424586754, 50.406019192092224], [106.88880415245535, 50.274295966180233], [107.86817589725095, 49.793705145865815], [108.475167270951289, 49.28254771585074], [109.402449171996665, 49.29296051695755], [110.662010532678778, 49.130128078805868], [111.581230910286621, 49.377968248077693], [112.897739699354389, 49.543565375356991], [114.362456496235268, 50.248302720737414], [114.962109816550182, 50.140247300815126], [115.485695428531415, 49.805177313834605], [116.67880089728618, 49.888531399121391], [116.191802199367572, 49.134598090199106], [115.485282017073061, 48.135382595403442], [115.742837355615791, 47.726544501326288], [116.308952671373234, 47.85341014260284], [117.29550744025741, 47.697709052107427], [118.064142694166719, 48.066730455103688], [118.866574334794947, 47.747060044946167], [119.772823927897505, 47.048058783550132], [119.663269891438759, 46.692679958678923], [118.874325799638726, 46.805412095723653], [117.421701287914189, 46.67273285581426], [116.717868280098855, 46.388202419615212], [115.985096470200091, 45.727235012386004], [114.460331658996068, 45.339816799493825], [113.463906691544167, 44.808893134127118], [112.436062453258813, 45.011645616224293], [111.873306105600307, 45.102079372735062], [111.348376906379457, 44.45744171811009], [111.66773725794323, 44.073175767587713], [111.82958784388137, 43.743118394539522], [111.129682244920232, 43.40683401140015], [110.412103306115284, 42.871233628911028], [109.243595819131457, 42.5194463160841], [107.744772576937947, 42.481515814781872], [106.129315627061686, 42.134327704428912], [104.964993931093474, 41.597409572916348], [104.522281935648991, 41.908346666016556], [103.312278273534815, 41.907468166667599], [101.833040399179936, 42.514872951826277], [100.845865513108265, 42.663804429691453], [99.515817498780038, 42.524691473961724], [97.451757440178014, 42.74888967546002], [96.349395786527808, 42.725635280928685], [95.762454868556688, 43.319449164394605], [95.306875441471533, 44.241330878265472], [94.688928664125328, 44.352331854828421], [93.480733677141302, 44.975472113619965], [92.133890822318222, 45.115075995456458], [90.945539585334302, 45.286073309910279], [90.585768263718279, 45.719716091487527], [90.970809360725013, 46.88814606382293], [90.280825636763922, 47.69354909930793], [88.854297723346761, 48.069081732772965], [88.013832228551735, 48.599462795600616], [87.751264276076711, 49.297197984405486]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Mozambique",
      "sov_a3": "MOZ",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Mozambique",
      "adm0_a3": "MOZ",
      "geou_dif": 0.000000,
      "geounit": "Mozambique",
      "gu_a3": "MOZ",
      "su_dif": 0.000000,
      "subunit": "Mozambique",
      "su_a3": "MOZ",
      "brk_diff": 0.000000,
      "name": "Mozambique",
      "name_long": "Mozambique",
      "brk_a3": "MOZ",
      "brk_name": "Mozambique",
      "brk_group": null,
      "abbrev": "Moz.",
      "postal": "MZ",
      "formal_en": "Republic of Mozambique",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Mozambique",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 4.000000,
      "pop_est": 21669278.000000,
      "gdp_md_est": 18940.000000,
      "pop_year": -99.000000,
      "lastcensus": 2007.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "MZ",
      "iso_a3": "MOZ",
      "iso_n3": "508",
      "un_a3": "508",
      "wb_a2": "MZ",
      "wb_a3": "MOZ",
      "woe_id": -99.000000,
      "adm0_a3_is": "MOZ",
      "adm0_a3_us": "MOZ",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 10.000000,
      "long_len": 10.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[34.559989047999352, -11.520020033415925], [35.312397902169039, -11.439146416879147], [36.514081658684262, -11.720938002166735], [36.775150994622805, -11.594537448780805], [37.47128421402661, -11.568750909067161], [37.82764489111139, -11.268769219612835], [38.427556593587752, -11.285202325081656], [39.521029900883775, -10.896853936408228], [40.316588576017189, -10.317096042525698], [40.478387485523029, -10.765440769089993], [40.437253045418686, -11.761710707245015], [40.560811395028573, -12.639176527561027], [40.59962039567975, -14.201975192931862], [40.775475294768995, -14.691764418194241], [40.477250604012603, -15.406294447493972], [40.089263950365222, -16.10077402106446], [39.452558628097051, -16.72089120856694], [38.538350864421517, -17.101023044505958], [37.411132846838882, -17.586368096591237], [36.281279331209362, -18.659687595293448], [35.896496616364061, -18.842260430580637], [35.198399692533144, -19.552811374593894], [34.786383497870048, -19.784011732667736], [34.701892531072843, -20.497043145431011], [35.176127150215365, -21.254361260668411], [35.373427768705739, -21.840837090748877], [35.385848253705404, -22.14], [35.562545536369086, -22.09], [35.533934767404304, -23.070787855727758], [35.371774122872381, -23.535358982031699], [35.607470330555628, -23.706563002214683], [35.458745558419622, -24.122609958596549], [35.040734897610662, -24.478350518493805], [34.215824008935471, -24.816314385682659], [33.013210076639012, -25.357573337507738], [32.574632195777866, -25.727318210556092], [32.660363396950089, -26.148584486599447], [32.915955031065693, -26.215867201443466], [32.830120477028885, -26.742191664336197], [32.071665480281069, -26.733820082304909], [31.985779249811969, -26.291779880480227], [31.83777794772806, -25.843331801051349], [31.752408481581881, -25.484283949487413], [31.930588820124253, -24.369416599222539], [31.670397983534656, -23.658969008073864], [31.191409132621288, -22.251509698172399], [32.244988234188014, -21.116488539313693], [32.508693068173443, -20.395292250248307], [32.65974327976258, -20.304290052982317], [32.772707960752626, -19.715592136313298], [32.611994256324891, -19.419382826416275], [32.654885695127149, -18.672089939043495], [32.849860874164392, -17.979057305577179], [32.847638787575846, -16.713398125884616], [32.328238966610229, -16.392074069893752], [31.852040643040599, -16.319417006091378], [31.636498243951195, -16.071990248277885], [31.17306399915768, -15.860943698797874], [30.338954705534544, -15.880839125230246], [30.27425581230511, -15.507786960515213], [30.17948123548183, -14.796099134991529], [33.214024692525214, -13.971860039936153], [33.789700148256685, -14.45183074306307], [34.064825473778626, -14.35995004644812], [34.459633416488543, -14.613009535381423], [34.517666049952311, -15.013708591372612], [34.307291294092096, -15.478641452702597], [34.381291945134052, -16.183559665596043], [35.033810255683534, -16.801299737213093], [35.339062941231646, -16.107440280830112], [35.771904738108361, -15.896858819240727], [35.68684533055594, -14.611045830954332], [35.267956170398008, -13.887834161029566], [34.907151320136165, -13.565424899960568], [34.559989047999352, -13.579997653866876], [34.28000613784198, -12.280025323132506], [34.559989047999352, -11.520020033415925]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Mauritania",
      "sov_a3": "MRT",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Mauritania",
      "adm0_a3": "MRT",
      "geou_dif": 0.000000,
      "geounit": "Mauritania",
      "gu_a3": "MRT",
      "su_dif": 0.000000,
      "subunit": "Mauritania",
      "su_a3": "MRT",
      "brk_diff": 0.000000,
      "name": "Mauritania",
      "name_long": "Mauritania",
      "brk_a3": "MRT",
      "brk_name": "Mauritania",
      "brk_group": null,
      "abbrev": "Mrt.",
      "postal": "MR",
      "formal_en": "Islamic Republic of Mauritania",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Mauritania",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 1.000000,
      "pop_est": 3129486.000000,
      "gdp_md_est": 6308.000000,
      "pop_year": -99.000000,
      "lastcensus": 2000.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "MR",
      "iso_a3": "MRT",
      "iso_n3": "478",
      "un_a3": "478",
      "wb_a2": "MR",
      "wb_a3": "MRT",
      "woe_id": -99.000000,
      "adm0_a3_is": "MRT",
      "adm0_a3_us": "MRT",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 10.000000,
      "long_len": 10.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-12.170750291380301, 14.616834214735505], [-12.830658331747516, 15.303691514542948], [-13.435737677453062, 16.039383042866191], [-14.099521450242179, 16.304302273010492], [-14.577347581428981, 16.598263658102809], [-15.135737270558819, 16.587282416240782], [-15.623666144258692, 16.369337063049812], [-16.120690070041931, 16.455662543193384], [-16.463098110407884, 16.13503611903846], [-16.549707810929064, 16.673892116761962], [-16.270551723688357, 17.166962795474873], [-16.14634741867485, 18.108481553616656], [-16.256883307347167, 19.096715806550307], [-16.37765112961327, 19.593817246981985], [-16.277838100641517, 20.092520656814699], [-16.536323614965468, 20.567866319251493], [-17.063423224342571, 20.999752102130827], [-16.845193650773993, 21.333323472574879], [-12.929101935263532, 21.327070624267563], [-13.118754441774712, 22.771220201096256], [-12.874221564169575, 23.284832261645178], [-11.937224493853321, 23.374594224536168], [-11.969418911171161, 25.933352769468268], [-8.6872936670174, 25.881056219988906], [-8.684399786809053, 27.395744126896005], [-4.923337368174231, 24.974574082941], [-6.453786586930335, 24.956590684503425], [-5.971128709324248, 20.640833441647629], [-5.488522508150439, 16.325102037007966], [-5.315277268891933, 16.201853745991841], [-5.537744309908447, 15.501689764869257], [-9.550238409859389, 15.486496893775438], [-9.700255092802706, 15.264107367407362], [-10.086846482778213, 15.330485744686271], [-10.650791388379417, 15.132745876521426], [-11.349095017939504, 15.411256008358478], [-11.666078253617854, 15.388208319556298], [-11.834207526079467, 14.799096991428939], [-12.170750291380301, 14.616834214735505]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Malawi",
      "sov_a3": "MWI",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Malawi",
      "adm0_a3": "MWI",
      "geou_dif": 0.000000,
      "geounit": "Malawi",
      "gu_a3": "MWI",
      "su_dif": 0.000000,
      "subunit": "Malawi",
      "su_a3": "MWI",
      "brk_diff": 0.000000,
      "name": "Malawi",
      "name_long": "Malawi",
      "brk_a3": "MWI",
      "brk_name": "Malawi",
      "brk_group": null,
      "abbrev": "Mal.",
      "postal": "MW",
      "formal_en": "Republic of Malawi",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Malawi",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 5.000000,
      "pop_est": 14268711.000000,
      "gdp_md_est": 11810.000000,
      "pop_year": -99.000000,
      "lastcensus": 2008.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "MW",
      "iso_a3": "MWI",
      "iso_n3": "454",
      "un_a3": "454",
      "wb_a2": "MW",
      "wb_a3": "MWI",
      "woe_id": -99.000000,
      "adm0_a3_is": "MWI",
      "adm0_a3_us": "MWI",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[34.559989047999352, -11.520020033415925], [34.28000613784198, -12.280025323132506], [34.559989047999352, -13.579997653866876], [34.907151320136165, -13.565424899960568], [35.267956170398008, -13.887834161029566], [35.68684533055594, -14.611045830954332], [35.771904738108361, -15.896858819240727], [35.339062941231646, -16.107440280830112], [35.033810255683534, -16.801299737213093], [34.381291945134052, -16.183559665596043], [34.307291294092096, -15.478641452702597], [34.517666049952311, -15.013708591372612], [34.459633416488543, -14.613009535381423], [34.064825473778626, -14.35995004644812], [33.789700148256685, -14.45183074306307], [33.214024692525214, -13.971860039936153], [32.688165317523129, -13.712857761289277], [32.991764357237884, -12.783870537978274], [33.306422153463075, -12.435778090060218], [33.114289178201915, -11.607198174692314], [33.315310499817286, -10.796549981329697], [33.485687697083591, -10.525558770391115], [33.231387973775298, -9.676721693564801], [32.759375441221323, -9.23059905358906], [33.73972903823045, -9.417150974162723], [33.940837724096539, -9.693673841980294], [34.28000613784198, -10.159999688358404], [34.559989047999352, -11.520020033415925]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Malaysia",
      "sov_a3": "MYS",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Malaysia",
      "adm0_a3": "MYS",
      "geou_dif": 0.000000,
      "geounit": "Malaysia",
      "gu_a3": "MYS",
      "su_dif": 0.000000,
      "subunit": "Malaysia",
      "su_a3": "MYS",
      "brk_diff": 0.000000,
      "name": "Malaysia",
      "name_long": "Malaysia",
      "brk_a3": "MYS",
      "brk_name": "Malaysia",
      "brk_group": null,
      "abbrev": "Malay.",
      "postal": "MY",
      "formal_en": "Malaysia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Malaysia",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 6.000000,
      "pop_est": 25715819.000000,
      "gdp_md_est": 384300.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "MY",
      "iso_a3": "MYS",
      "iso_n3": "458",
      "un_a3": "458",
      "wb_a2": "MY",
      "wb_a3": "MYS",
      "woe_id": -99.000000,
      "adm0_a3_is": "MYS",
      "adm0_a3_us": "MYS",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "South-Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[101.075515578213327, 6.204867051615892], [101.154218784593837, 5.691384182147715], [101.814281854258041, 5.810808417174229], [102.141186964936452, 6.221636053894656], [102.37114708863524, 6.128205064310961], [102.961705356866702, 5.524495144061078], [103.381214634212171, 4.855001125503748], [103.438575474056194, 4.181605536308382], [103.332122023534879, 3.726697902842972], [103.429428745540548, 3.38286876058902], [103.502447544368891, 2.791018581550205], [103.854674106870362, 2.515454006353764], [104.247931756611507, 1.631141058759056], [104.228811476663537, 1.293048000489534], [103.519707472754448, 1.226333726400682], [102.5736153503548, 1.967115383304744], [101.390638462329179, 2.760813706875624], [101.273539666755852, 3.270291652841181], [100.695435418706694, 3.93913971599487], [100.557407668055106, 4.76728038168828], [100.196706170657734, 5.31249258058368], [100.306260207116537, 6.040561835143876], [100.085756870527092, 6.464489447450291], [100.259596388756933, 6.642824815289572], [101.075515578213327, 6.204867051615892]]], [[[118.618320754064854, 4.478202419447541], [117.882034946770176, 4.137551377779488], [117.015214471506368, 4.306094061699469], [115.865517205876785, 4.306559149590157], [115.519078403792008, 3.169238389494396], [115.134037306785245, 2.821481838386219], [114.621355422017501, 1.430688177898887], [113.80584964401956, 1.217548732911041], [112.859809198052204, 1.497790025229946], [112.380251906383677, 1.410120957846758], [111.797548455860436, 0.904441229654651], [111.159137811326588, 0.976478176269509], [110.51406090702713, 0.773131415200993], [109.830226678508865, 1.338135687664192], [109.663260125773746, 2.006466986494985], [110.396135288537067, 1.663774725751395], [111.168852980597507, 1.850636704918784], [111.370081007942105, 2.697303371588873], [111.79692833867287, 2.885896511238073], [112.995614862115275, 3.102394924324869], [113.712935418758747, 3.893509426281128], [114.204016554828428, 4.52587392823682], [114.659595981913554, 4.00763682699781], [114.869557326315402, 4.348313706881953], [115.347460972150685, 4.316636053887009], [115.405700311343622, 4.955227565933825], [115.450710483869813, 5.447729803891562], [116.220741001450989, 6.143191229675622], [116.725102980619766, 6.924771429873999], [117.129626092600489, 6.928052883324568], [117.643393182446317, 6.422166449403306], [117.689075148592366, 5.987490139180181], [118.347691278152212, 5.708695786965464], [119.181903924639954, 5.407835598162251], [119.110693800941732, 5.016128241389865], [118.43972700406411, 4.96651886638962], [118.618320754064854, 4.478202419447541]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Namibia",
      "sov_a3": "NAM",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Namibia",
      "adm0_a3": "NAM",
      "geou_dif": 0.000000,
      "geounit": "Namibia",
      "gu_a3": "NAM",
      "su_dif": 0.000000,
      "subunit": "Namibia",
      "su_a3": "NAM",
      "brk_diff": 0.000000,
      "name": "Namibia",
      "name_long": "Namibia",
      "brk_a3": "NAM",
      "brk_name": "Namibia",
      "brk_group": null,
      "abbrev": "Nam.",
      "postal": "NA",
      "formal_en": "Republic of Namibia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Namibia",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 7.000000,
      "pop_est": 2108665.000000,
      "gdp_md_est": 13250.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "NA",
      "iso_a3": "NAM",
      "iso_n3": "516",
      "un_a3": "516",
      "wb_a2": "NA",
      "wb_a3": "NAM",
      "woe_id": -99.000000,
      "adm0_a3_is": "NAM",
      "adm0_a3_us": "NAM",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Southern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[16.344976840895242, -28.576705010697701], [15.601818068105816, -27.821247247022804], [15.210472446359461, -27.090955905874047], [14.989710727608553, -26.117371921495156], [14.743214145576331, -25.39292001719538], [14.408144158595833, -23.853014011329847], [14.385716586981149, -22.656652927340691], [14.257714064194175, -22.111208184499958], [13.86864220546866, -21.699036960539978], [13.352497999737439, -20.872834161057504], [12.826845330464494, -19.673165785401665], [12.608564080463621, -19.045348809487699], [11.794918654028066, -18.069129327061916], [11.734198846085121, -17.301889336824473], [12.215461460019355, -17.111668389558083], [12.814081251688407, -16.941342868724071], [13.462362094789967, -16.971211846588773], [14.05850141770901, -17.423380629142663], [14.209706658595024, -17.353100681225719], [18.263309360434164, -17.309950860262006], [18.956186964603603, -17.789094740472258], [21.377176141045567, -17.930636488519696], [23.215048455506064, -17.523116143465984], [24.033861525170778, -17.295843194246324], [24.682349074001507, -17.353410739819473], [25.076950310982259, -17.578823337476621], [25.084443393664571, -17.661815687737374], [24.520705193792537, -17.887124932529936], [24.217364536239213, -17.889347019118489], [23.579005568137717, -18.281261081620059], [23.196858351339301, -17.869038181227786], [21.655040317478978, -18.219146010005225], [20.910641310314535, -18.252218926672022], [20.88113406747587, -21.814327080983148], [19.895457797940679, -21.849156996347869], [19.895767856534434, -24.767790215760591], [19.894734327888614, -28.461104831660776], [19.002127312911085, -28.972443129188868], [18.464899122804752, -29.045461928017279], [17.83615197110953, -28.856377862261319], [17.387497185951503, -28.783514092729781], [17.218928663815404, -28.355943291946812], [16.824017368240902, -28.08216155366447], [16.344976840895242, -28.576705010697701]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "France",
      "sov_a3": "FR1",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Dependency",
      "admin": "New Caledonia",
      "adm0_a3": "NCL",
      "geou_dif": 0.000000,
      "geounit": "New Caledonia",
      "gu_a3": "NCL",
      "su_dif": 0.000000,
      "subunit": "New Caledonia",
      "su_a3": "NCL",
      "brk_diff": 0.000000,
      "name": "New Caledonia",
      "name_long": "New Caledonia",
      "brk_a3": "NCL",
      "brk_name": "New Caledonia",
      "brk_group": null,
      "abbrev": "New C.",
      "postal": "NC",
      "formal_en": "New Caledonia",
      "formal_fr": "Nouvelle-Caldonie",
      "note_adm0": "Fr.",
      "note_brk": null,
      "name_sort": "New Caledonia",
      "name_alt": null,
      "mapcolor7": 7.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 9.000000,
      "mapcolor13": 11.000000,
      "pop_est": 227436.000000,
      "gdp_md_est": 3158.000000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "NC",
      "iso_a3": "NCL",
      "iso_n3": "540",
      "un_a3": "540",
      "wb_a2": "NC",
      "wb_a3": "NCL",
      "woe_id": -99.000000,
      "adm0_a3_is": "NCL",
      "adm0_a3_us": "NCL",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Oceania",
      "region_un": "Oceania",
      "subregion": "Melanesia",
      "region_wb": "East Asia & Pacific",
      "name_len": 13.000000,
      "long_len": 13.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": -99.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[165.779989862326374, -21.080004978115628], [166.599991489933842, -21.700018812753527], [167.120011428086912, -22.159990736583492], [166.740034621444806, -22.39997608814695], [166.18973229396866, -22.129708347260454], [165.474375441752215, -21.679606621998232], [164.829815301775682, -21.149819838141951], [164.167995233413649, -20.444746595951628], [164.029605747736014, -20.105645847252354], [164.459967075862721, -20.120011895429499], [165.02003624904205, -20.45999114347773], [165.46000939357512, -20.80002206795826], [165.779989862326374, -21.080004978115628]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Niger",
      "sov_a3": "NER",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Niger",
      "adm0_a3": "NER",
      "geou_dif": 0.000000,
      "geounit": "Niger",
      "gu_a3": "NER",
      "su_dif": 0.000000,
      "subunit": "Niger",
      "su_a3": "NER",
      "brk_diff": 0.000000,
      "name": "Niger",
      "name_long": "Niger",
      "brk_a3": "NER",
      "brk_name": "Niger",
      "brk_group": null,
      "abbrev": "Niger",
      "postal": "NE",
      "formal_en": "Republic of Niger",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Niger",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 13.000000,
      "pop_est": 15306252.000000,
      "gdp_md_est": 10040.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "NE",
      "iso_a3": "NER",
      "iso_n3": "562",
      "un_a3": "562",
      "wb_a2": "NE",
      "wb_a3": "NER",
      "woe_id": -99.000000,
      "adm0_a3_is": "NER",
      "adm0_a3_us": "NER",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.15447350424995, 11.940150051313424], [2.177107781593918, 12.625017808477537], [1.024103224297619, 12.851825669806601], [0.993045688490156, 13.335749620003867], [0.429927605805517, 13.988733018443895], [0.295646396495215, 14.444234930880668], [0.374892205414767, 14.928908189346146], [1.015783318698482, 14.96818227788799], [1.385528191746971, 15.323561102759243], [2.749992709981541, 15.409524847876753], [3.638258904646591, 15.568119818580442], [3.723421665063597, 16.184283759012658], [4.270209995143887, 16.852227484601315], [4.267419467800096, 19.155265204337127], [5.677565952180714, 19.601206976799801], [8.572893100629869, 21.565660712159229], [11.999505649471701, 23.471668402596435], [13.581424594790462, 23.040506089769281], [14.143870883855243, 22.491288967371133], [14.8513, 22.862950000000126], [15.096887648181848, 21.308518785074909], [15.471076694407316, 21.048457139565983], [15.487148064850146, 20.730414537025638], [15.903246697664315, 20.387618923417506], [15.685740594147774, 19.957180080642388], [15.300441114979719, 17.927949937405003], [15.247731154041844, 16.627305813050782], [13.972201775781684, 15.684365953021143], [13.540393507550789, 14.367133693901224], [13.956698846094127, 13.996691189016929], [13.95447675950561, 13.353448798063766], [14.595781284247607, 13.330426947477861], [14.495787387762903, 12.859396267137356], [14.213530714584749, 12.802035427293333], [14.18133629726691, 12.483656927943173], [13.995352817448293, 12.461565253138303], [13.318701613018561, 13.556356309457954], [13.083987257548813, 13.596147162322495], [12.302071160540549, 13.037189032437539], [11.527803175511508, 13.328980007373559], [10.989593133191534, 13.387322699431195], [10.701031935273818, 13.246917832894042], [10.114814487354749, 13.277251898649467], [9.524928012743089, 12.851102199754564], [9.014933302454438, 12.826659247280418], [7.804671258178871, 13.343526923063735], [7.330746697630047, 13.098038031461215], [6.820441928747812, 13.115091254117601], [6.445426059605722, 13.492768459522722], [5.443058302440136, 13.865923977102227], [4.368343540066007, 13.747481594289411], [4.107945997747379, 13.531215725147945], [3.967282749048934, 12.956108710171577], [3.680633579125924, 12.552903347214169], [3.611180454125588, 11.660167141155966], [2.848643019226586, 12.235635891158211], [2.490163608418015, 12.233052069543589], [2.15447350424995, 11.940150051313424]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Nigeria",
      "sov_a3": "NGA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Nigeria",
      "adm0_a3": "NGA",
      "geou_dif": 0.000000,
      "geounit": "Nigeria",
      "gu_a3": "NGA",
      "su_dif": 0.000000,
      "subunit": "Nigeria",
      "su_a3": "NGA",
      "brk_diff": 0.000000,
      "name": "Nigeria",
      "name_long": "Nigeria",
      "brk_a3": "NGA",
      "brk_name": "Nigeria",
      "brk_group": null,
      "abbrev": "Nigeria",
      "postal": "NG",
      "formal_en": "Federal Republic of Nigeria",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Nigeria",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 2.000000,
      "pop_est": 149229090.000000,
      "gdp_md_est": 335400.000000,
      "pop_year": -99.000000,
      "lastcensus": 2006.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "NG",
      "iso_a3": "NGA",
      "iso_n3": "566",
      "un_a3": "566",
      "wb_a2": "NG",
      "wb_a3": "NGA",
      "woe_id": -99.000000,
      "adm0_a3_is": "NGA",
      "adm0_a3_us": "NGA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 7.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[8.500287713259695, 4.771982937026849], [7.462108188515941, 4.412108262546241], [7.082596469764439, 4.464689032403228], [6.6980721370806, 4.240594183769517], [5.898172641634687, 4.262453314628985], [5.362804803090881, 4.887970689305959], [5.033574252959369, 5.611802476418234], [4.325607130560684, 6.270651149923467], [3.574180128604553, 6.258300482605719], [2.691701694356254, 6.258817246928629], [2.74906253420022, 7.870734361192888], [2.723792758809509, 8.506845404489709], [2.912308383810256, 9.137607937044322], [3.220351596702101, 9.444152533399702], [3.705438266625919, 10.063210354040208], [3.600070021182802, 10.332186184119408], [3.797112257511714, 10.734745591673105], [3.572216424177469, 11.32793935795152], [3.611180454125559, 11.660167141155968], [3.680633579125811, 12.552903347214226], [3.967282749048849, 12.956108710171575], [4.107945997747322, 13.531215725147831], [4.368343540066064, 13.747481594289326], [5.443058302440164, 13.865923977102298], [6.445426059605637, 13.492768459522678], [6.820441928747754, 13.115091254117518], [7.330746697630019, 13.098038031461201], [7.804671258178786, 13.343526923063747], [9.014933302454466, 12.82665924728043], [9.524928012742947, 12.851102199754479], [10.114814487354693, 13.277251898649411], [10.701031935273706, 13.246917832894084], [10.989593133191535, 13.38732269943111], [11.527803175511394, 13.328980007373588], [12.302071160540523, 13.037189032437524], [13.08398725754887, 13.596147162322566], [13.318701613018561, 13.556356309457826], [13.995352817448349, 12.461565253138346], [14.181336297266794, 12.483656927943116], [14.577177768622533, 12.085360826053503], [14.468192172918975, 11.904751695193411], [14.415378859116684, 11.572368882692075], [13.572949659894562, 10.798565985553566], [13.308676385153918, 10.160362046748928], [13.167599724997103, 9.640626328973411], [12.955467970438974, 9.417771714714704], [12.753671502339216, 8.717762762888995], [12.218872104550599, 8.305824082874324], [12.063946160539558, 7.799808457872302], [11.839308709366803, 7.397042344589437], [11.745774366918511, 6.981382961449754], [11.058787876030351, 6.644426784690594], [10.497375115611419, 7.055357774275564], [10.118276808318257, 7.03876963950988], [9.522705926154401, 6.453482367372117], [9.233162876023044, 6.444490668153335], [8.757532993208628, 5.479665839047911], [8.500287713259695, 4.771982937026849]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Nicaragua",
      "sov_a3": "NIC",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Nicaragua",
      "adm0_a3": "NIC",
      "geou_dif": 0.000000,
      "geounit": "Nicaragua",
      "gu_a3": "NIC",
      "su_dif": 0.000000,
      "subunit": "Nicaragua",
      "su_a3": "NIC",
      "brk_diff": 0.000000,
      "name": "Nicaragua",
      "name_long": "Nicaragua",
      "brk_a3": "NIC",
      "brk_name": "Nicaragua",
      "brk_group": null,
      "abbrev": "Nic.",
      "postal": "NI",
      "formal_en": "Republic of Nicaragua",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Nicaragua",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 9.000000,
      "pop_est": 5891199.000000,
      "gdp_md_est": 16790.000000,
      "pop_year": -99.000000,
      "lastcensus": 2005.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "NI",
      "iso_a3": "NIC",
      "iso_n3": "558",
      "un_a3": "558",
      "wb_a2": "NI",
      "wb_a3": "NIC",
      "woe_id": -99.000000,
      "adm0_a3_is": "NIC",
      "adm0_a3_us": "NIC",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Central America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 9.000000,
      "long_len": 9.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-85.712540452807303, 11.088444932494824], [-86.058488328785259, 11.403438625529944], [-86.525849982432959, 11.806876532432597], [-86.745991583996329, 12.143961900272487], [-87.16751624220116, 12.458257961471658], [-87.668493415054712, 12.909909979702633], [-87.557466600275617, 13.064551703336065], [-87.392386237319229, 12.914018256069838], [-87.316654425795491, 12.984685777228975], [-87.005769009127576, 13.025794379117158], [-86.880557013684367, 13.254204209847245], [-86.733821784191605, 13.263092556201443], [-86.75508663607971, 13.754845485890913], [-86.520708177419905, 13.778487453664439], [-86.312142096689925, 13.77135610600817], [-86.096263800790595, 14.038187364147248], [-85.80129472526859, 13.836054999237589], [-85.698665330736929, 13.960078436738087], [-85.514413011400251, 14.079011745657837], [-85.165364549484806, 14.35436961512508], [-85.148750576502962, 14.560196844943617], [-85.052787441736939, 14.551541042534723], [-84.924500698572402, 14.79049286545235], [-84.82003679069436, 14.819586696832671], [-84.649582078779616, 14.666805324761754], [-84.449335903648603, 14.621614284722497], [-84.228341640952408, 14.748764146376658], [-83.97572140169359, 14.749435939996461], [-83.628584967772923, 14.880073960830302], [-83.489988776366118, 15.016267198135537], [-83.147219000974133, 14.995829169164111], [-83.233234422523935, 14.899866034398102], [-83.284161546547594, 14.676623846897201], [-83.182126430987282, 14.31070302983845], [-83.412499966144452, 13.970077826386557], [-83.519831916014681, 13.567699286345883], [-83.552207200845544, 13.127054348193086], [-83.498515387694269, 12.869292303921227], [-83.473323126951982, 12.419087225794428], [-83.626104499022915, 12.320850328007566], [-83.719613003255063, 11.893124497927728], [-83.650857510090717, 11.62903209070012], [-83.855470343750397, 11.373311265503787], [-83.808935716471552, 11.103043524617275], [-83.655611741861577, 10.938764146361422], [-83.895054490885954, 10.726839097532446], [-84.19017859570485, 10.793450018756674], [-84.35593075228104, 10.999225572142905], [-84.673069017256267, 11.082657172078143], [-84.903003302738952, 10.952303371621896], [-85.561851976244199, 11.217119248901597], [-85.712540452807303, 11.088444932494824]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Netherlands",
      "sov_a3": "NL1",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Country",
      "admin": "Netherlands",
      "adm0_a3": "NLD",
      "geou_dif": 0.000000,
      "geounit": "Netherlands",
      "gu_a3": "NLD",
      "su_dif": 0.000000,
      "subunit": "Netherlands",
      "su_a3": "NLD",
      "brk_diff": 0.000000,
      "name": "Netherlands",
      "name_long": "Netherlands",
      "brk_a3": "NLD",
      "brk_name": "Netherlands",
      "brk_group": null,
      "abbrev": "Neth.",
      "postal": "NL",
      "formal_en": "Kingdom of the Netherlands",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Netherlands",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 9.000000,
      "pop_est": 16715999.000000,
      "gdp_md_est": 672000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "NL",
      "iso_a3": "NLD",
      "iso_n3": "528",
      "un_a3": "528",
      "wb_a2": "NL",
      "wb_a3": "NLD",
      "woe_id": -99.000000,
      "adm0_a3_is": "NLD",
      "adm0_a3_us": "NLD",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Western Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 11.000000,
      "long_len": 11.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[6.074182570020923, 53.510403347378144], [6.905139601274129, 53.482162177130647], [7.092053256873896, 53.144043280644894], [6.842869500362383, 52.228440253297549], [6.589396599970826, 51.852029120483394], [5.988658074577813, 51.851615709025054], [6.15665815595878, 50.803721015010581], [5.606975945670001, 51.037298488969782], [4.973991326526914, 51.475023708698131], [4.047071160507528, 51.26725861266857], [3.314971144228537, 51.34575511331991], [3.830288527043137, 51.620544542031951], [4.705997348661185, 53.091798407597764], [6.074182570020923, 53.510403347378144]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Norway",
      "sov_a3": "NOR",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Norway",
      "adm0_a3": "NOR",
      "geou_dif": 0.000000,
      "geounit": "Norway",
      "gu_a3": "NOR",
      "su_dif": 0.000000,
      "subunit": "Norway",
      "su_a3": "NOR",
      "brk_diff": 0.000000,
      "name": "Norway",
      "name_long": "Norway",
      "brk_a3": "NOR",
      "brk_name": "Norway",
      "brk_group": null,
      "abbrev": "Nor.",
      "postal": "N",
      "formal_en": "Kingdom of Norway",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Norway",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 8.000000,
      "mapcolor13": 12.000000,
      "pop_est": 4676305.000000,
      "gdp_md_est": 276400.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "NO",
      "iso_a3": "NOR",
      "iso_n3": "578",
      "un_a3": "578",
      "wb_a2": "NO",
      "wb_a3": "NOR",
      "woe_id": -99.000000,
      "adm0_a3_is": "NOR",
      "adm0_a3_us": "NOR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Northern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[28.165547316202918, 71.185474351680512], [31.293418409965483, 70.453787746859916], [30.005435011522792, 70.186258856884905], [31.101078728975125, 69.558080145944871], [29.399580519332886, 69.15691600206307], [28.591929559043194, 69.064776923286701], [29.015572950971972, 69.766491197377974], [27.732292107867892, 70.164193020296295], [26.179622023226301, 69.825298977326156], [25.689212680776393, 69.092113755969024], [24.735679152126721, 68.649556789821446], [23.662049594830762, 68.891247463650529], [22.356237827247412, 68.841741441514955], [21.24493615081073, 69.370443020293123], [20.645592889089585, 69.10624726020086], [20.025268995857914, 69.065138658312719], [19.878559604581255, 68.407194322372618], [17.99386844246439, 68.567391262477344], [17.729181756265348, 68.010551866316234], [16.768878614985539, 68.013936672631388], [16.108712192456835, 67.302455552836904], [15.108411492583059, 66.193866889095432], [13.555689731509091, 64.787027696381472], [13.919905226302205, 64.445420640716122], [13.57191613124877, 64.049114081469668], [12.579935336973932, 64.066218980558347], [11.930569288794231, 63.128317572676991], [11.992064243221535, 61.800362453856565], [12.631146681375242, 61.2935716823701], [12.300365838274899, 60.11793284773006], [11.468271925511175, 59.432393296946003], [11.027368605196926, 58.856149400459401], [10.356556837616097, 59.469807033925377], [8.382000359743643, 58.313288479233279], [7.048748406613299, 58.078884182357285], [5.665835402050419, 58.588155422593672], [5.308234490590735, 59.663231919993819], [4.992078077829007, 61.970998033284275], [5.912900424837886, 62.614472968182696], [8.553411085655767, 63.454008287196473], [10.527709181366788, 64.486038316497485], [12.358346795306375, 65.879725857193165], [14.761145867581604, 67.81064158799515], [16.435927361728972, 68.563205471461686], [19.184028354578516, 69.817444159617821], [21.378416375420613, 70.255169379346057], [23.023742303161583, 70.202071845166273], [24.546543409938522, 71.030496731237236], [26.370049676221811, 70.986261705195375], [28.165547316202918, 71.185474351680512]]], [[[24.72412, 77.85385], [22.49032, 77.44493], [20.72601, 77.67704], [21.41611, 77.93504], [20.8119, 78.25463], [22.88426, 78.45494], [23.28134, 78.07954], [24.72412, 77.85385]]], [[[18.25183, 79.70175], [21.54383, 78.95611], [19.02737, 78.5626], [18.47172, 77.82669], [17.59441, 77.63796], [17.1182, 76.80941], [15.91315, 76.77045], [13.76259, 77.38035], [14.66956, 77.73565], [13.1706, 78.02493], [11.22231, 78.8693], [10.44453, 79.65239], [13.17077, 80.01046], [13.71852, 79.66039], [15.14282, 79.67431], [15.52255, 80.01608], [16.99085, 80.05086], [18.25183, 79.70175]]], [[[25.447625359811894, 80.407340399894508], [27.407505730913499, 80.056405748200461], [25.924650506298178, 79.517833970854554], [23.02446577321362, 79.400011705229105], [20.075188429451885, 79.566823228667261], [19.897266473070914, 79.842361965647513], [18.462263624757924, 79.859880276194417], [17.368015170977458, 80.318896186027018], [20.455992059010697, 80.59815562613224], [21.907944777115404, 80.357679348462085], [22.919252557067438, 80.657144273593502], [25.447625359811894, 80.407340399894508]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Nepal",
      "sov_a3": "NPL",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Nepal",
      "adm0_a3": "NPL",
      "geou_dif": 0.000000,
      "geounit": "Nepal",
      "gu_a3": "NPL",
      "su_dif": 0.000000,
      "subunit": "Nepal",
      "su_a3": "NPL",
      "brk_diff": 0.000000,
      "name": "Nepal",
      "name_long": "Nepal",
      "brk_a3": "NPL",
      "brk_name": "Nepal",
      "brk_group": null,
      "abbrev": "Nepal",
      "postal": "NP",
      "formal_en": "Nepal",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Nepal",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 12.000000,
      "pop_est": 28563377.000000,
      "gdp_md_est": 31080.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "NP",
      "iso_a3": "NPL",
      "iso_n3": "524",
      "un_a3": "524",
      "wb_a2": "NP",
      "wb_a3": "NPL",
      "woe_id": -99.000000,
      "adm0_a3_is": "NPL",
      "adm0_a3_us": "NPL",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Southern Asia",
      "region_wb": "South Asia",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[88.12044070836987, 27.876541652939594], [88.043132765661227, 27.445818589786825], [88.174804315140918, 26.810405178325951], [88.06023766474982, 26.414615383402491], [87.227471958366294, 26.397898057556077], [86.024392938179176, 26.630984605408571], [85.251778598983378, 26.726198431906344], [84.675017938173795, 27.234901231387536], [83.304248895199549, 27.364505723575562], [81.999987420584972, 27.925479234319994], [81.057202589852025, 28.416095282499043], [80.088424513676273, 28.79447011974014], [80.476721225917402, 29.729865220655341], [81.111256138029319, 30.183480943313402], [81.525804477874743, 30.422716986608631], [82.327512648450877, 30.115268052688137], [83.33711510613719, 29.463731594352197], [83.898992954446726, 29.320226141877658], [84.23457970575015, 28.839893703724698], [85.011638218123039, 28.642773952747344], [85.823319940131512, 28.203575954698707], [86.954517043000607, 27.974261786403517], [88.12044070836987, 27.876541652939594]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "New Zealand",
      "sov_a3": "NZ1",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Country",
      "admin": "New Zealand",
      "adm0_a3": "NZL",
      "geou_dif": 0.000000,
      "geounit": "New Zealand",
      "gu_a3": "NZL",
      "su_dif": 0.000000,
      "subunit": "New Zealand",
      "su_a3": "NZL",
      "brk_diff": 0.000000,
      "name": "New Zealand",
      "name_long": "New Zealand",
      "brk_a3": "NZL",
      "brk_name": "New Zealand",
      "brk_group": null,
      "abbrev": "N.Z.",
      "postal": "NZ",
      "formal_en": "New Zealand",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "New Zealand",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 4.000000,
      "pop_est": 4213418.000000,
      "gdp_md_est": 116700.000000,
      "pop_year": -99.000000,
      "lastcensus": 2006.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "NZ",
      "iso_a3": "NZL",
      "iso_n3": "554",
      "un_a3": "554",
      "wb_a2": "NZ",
      "wb_a3": "NZL",
      "woe_id": -99.000000,
      "adm0_a3_is": "NZL",
      "adm0_a3_us": "NZL",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Oceania",
      "region_un": "Oceania",
      "subregion": "Australia and New Zealand",
      "region_wb": "East Asia & Pacific",
      "name_len": 11.000000,
      "long_len": 11.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[173.02037479074076, -40.919052422856424], [173.24723432850206, -41.331998793300784], [173.958405389702904, -40.926700534835618], [174.247586704808128, -41.34915536882167], [174.248516880589506, -41.770008233406756], [173.876446568087914, -42.233184096038826], [173.222739699595678, -42.970038344088564], [172.711246372770773, -43.372287693048506], [173.080112746470235, -43.853343601253584], [172.308583612352521, -43.865694268571346], [171.45292524646365, -44.242518812843727], [171.185137974327262, -44.897104180684892], [170.616697219116617, -45.908928724959708], [169.831422154009289, -46.355774834987599], [169.332331170934282, -46.641235446967855], [168.411353794628582, -46.619944756863589], [167.763744745146852, -46.290197442409209], [166.676886021184231, -46.21991749449225], [166.509144321964726, -45.852704766626218], [167.046424188503266, -45.110941257508671], [168.303763462596891, -44.123973077166127], [168.949408807651565, -43.935819187191427], [169.667814569373178, -43.555325616226341], [170.52491987536618, -43.03168832781283], [171.125089960004033, -42.512753594737788], [171.569713983443222, -41.767424411792135], [171.948708937871942, -41.514416599291152], [172.097227004278778, -40.956104424809681], [172.798579543344005, -40.493962090823473], [173.02037479074076, -40.919052422856424]]], [[[174.612008905330555, -36.156397393540544], [175.336615838927202, -37.20909799575827], [175.357596470437528, -36.526193943021127], [175.808886753642497, -36.798942152657688], [175.958490025127531, -37.55538176854607], [176.763195428776584, -37.881253350578703], [177.438813104560523, -37.961248467766495], [178.010354445708714, -37.579824721020131], [178.517093540762829, -37.695373223624799], [178.274731073313859, -38.582812595373099], [177.97046023997936, -39.166342868812976], [177.206992629299151, -39.145775648760846], [176.939980503647035, -39.449736423501577], [177.032946405340141, -39.879942722331478], [176.885823602605257, -40.065977878582174], [176.508017206119376, -40.604808038089587], [176.012440220440311, -41.289624118821507], [175.239567499082995, -41.688307793953243], [175.067898391009436, -41.425894870775082], [174.650972935278475, -41.281820977545451], [175.227630243223672, -40.459235528323404], [174.900156691789988, -39.90893320084723], [173.824046665744021, -39.508854262043513], [173.852261997775344, -39.146602471677468], [174.574801874080407, -38.797683200842755], [174.743473749081062, -38.027807712558385], [174.697016636450627, -37.381128838857961], [174.292028436579216, -36.711092217761447], [174.319003534235577, -36.534823907213891], [173.840996535535822, -36.121980889634116], [173.054171177459608, -35.237125339500338], [172.636005487353742, -34.529106540669389], [173.007042271209485, -34.450661716450341], [173.551298456107503, -35.006183363587965], [174.329390497126298, -35.265495700828623], [174.612008905330555, -36.156397393540544]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Oman",
      "sov_a3": "OMN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Oman",
      "adm0_a3": "OMN",
      "geou_dif": 0.000000,
      "geounit": "Oman",
      "gu_a3": "OMN",
      "su_dif": 0.000000,
      "subunit": "Oman",
      "su_a3": "OMN",
      "brk_diff": 0.000000,
      "name": "Oman",
      "name_long": "Oman",
      "brk_a3": "OMN",
      "brk_name": "Oman",
      "brk_group": null,
      "abbrev": "Oman",
      "postal": "OM",
      "formal_en": "Sultanate of Oman",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Oman",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 6.000000,
      "pop_est": 3418085.000000,
      "gdp_md_est": 66980.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "OM",
      "iso_a3": "OMN",
      "iso_n3": "512",
      "un_a3": "512",
      "wb_a2": "OM",
      "wb_a3": "OMN",
      "woe_id": -99.000000,
      "adm0_a3_is": "OMN",
      "adm0_a3_us": "OMN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Middle East & North Africa",
      "name_len": 4.000000,
      "long_len": 4.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[58.861141391846587, 21.114034532144302], [58.487985874266968, 20.428985907467109], [58.034318475176605, 20.481437486243351], [57.826372511634105, 20.243002427648634], [57.665762160070955, 19.736004950433113], [57.788700392493382, 19.06757029873765], [57.694390903560674, 18.944709580963803], [57.234263950433814, 18.947991034414258], [56.609650913321985, 18.574267076079479], [56.512189162019496, 18.087113348863937], [56.283520949128018, 17.876066799383949], [55.661491733630697, 17.884128322821539], [55.269939406155203, 17.632309068263197], [55.274900343655105, 17.228354397037663], [54.791002231674128, 16.950696926333364], [54.239252964093765, 17.044980577049984], [53.570508253804604, 16.707662665264678], [53.108572625547509, 16.651051133688981], [52.78218427919208, 17.349742336491232], [52.000009800022241, 19.000003363516072], [54.999981723862419, 19.999994004796122], [55.666659376859883, 22.000001125572311], [55.208341098863201, 22.708329982997014], [55.234489373602884, 23.110992743415352], [55.525841098864504, 23.524869289640918], [55.528631626208295, 23.933604030853502], [55.981213820220518, 24.130542914317857], [55.804118686756254, 24.269604193615294], [55.886232537668064, 24.920830593357493], [56.396847365143998, 24.924732163995515], [56.845140415276063, 24.241673081961494], [57.40345258975745, 23.878594468678841], [58.136947869708337, 23.747930609628838], [58.729211460205448, 23.565667832935418], [59.18050174341036, 22.99239533130546], [59.45009769067704, 22.6602709009656], [59.808060337162857, 22.533611965418203], [59.806148309168094, 22.310524807214193], [59.442191196536413, 21.714540513592084], [59.282407667889885, 21.433885809814882], [58.861141391846587, 21.114034532144302]]], [[[56.391421339753407, 25.895990708921261], [56.261041701080927, 25.714606431576755], [56.070820753814559, 26.055464178973949], [56.362017449779358, 26.395934353128951], [56.485679152253823, 26.309117946878672], [56.391421339753407, 25.895990708921261]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Pakistan",
      "sov_a3": "PAK",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Pakistan",
      "adm0_a3": "PAK",
      "geou_dif": 0.000000,
      "geounit": "Pakistan",
      "gu_a3": "PAK",
      "su_dif": 0.000000,
      "subunit": "Pakistan",
      "su_a3": "PAK",
      "brk_diff": 0.000000,
      "name": "Pakistan",
      "name_long": "Pakistan",
      "brk_a3": "PAK",
      "brk_name": "Pakistan",
      "brk_group": null,
      "abbrev": "Pak.",
      "postal": "PK",
      "formal_en": "Islamic Republic of Pakistan",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Pakistan",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 11.000000,
      "pop_est": 176242949.000000,
      "gdp_md_est": 427300.000000,
      "pop_year": -99.000000,
      "lastcensus": 1998.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "PK",
      "iso_a3": "PAK",
      "iso_n3": "586",
      "un_a3": "586",
      "wb_a2": "PK",
      "wb_a3": "PAK",
      "woe_id": -99.000000,
      "adm0_a3_is": "PAK",
      "adm0_a3_us": "PAK",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Southern Asia",
      "region_wb": "South Asia",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[75.158027785140916, 37.133030910789117], [75.89689741405013, 36.666806138651836], [76.192848341785691, 35.898403428687828], [77.837450799474567, 35.494009507787766], [76.871721632804025, 34.653544012992739], [75.757060988268336, 34.504922593721318], [74.240202671204969, 34.748887030571254], [73.749948358051967, 34.317698879527853], [74.104293654277342, 33.441473293586853], [74.451559279278712, 32.764899603805503], [75.258641798813215, 32.271105455040498], [74.405928989565012, 31.692639471965279], [74.421380242820277, 30.979814764931177], [73.450638462217427, 29.97641347911987], [72.823751662084703, 28.961591701772054], [71.777665643200322, 27.913180243434525], [70.616496209601934, 27.989196275335868], [69.514392938113133, 26.940965684511372], [70.168926629522019, 26.491871649678842], [70.282873162725593, 25.72222870533983], [70.844699334602836, 25.215102037043518], [71.043240187468228, 24.3565239527302], [68.842599318318776, 24.359133612560939], [68.176645135373406, 23.691965033456711], [67.443666619745471, 23.944843654876991], [67.145441928989072, 24.663611151624647], [66.372827589793275, 25.425140896093851], [64.530407749291129, 25.237038682551429], [62.905700718034609, 25.218409328710209], [61.49736290878419, 25.078237006118499], [61.87418745305655, 26.239974880472104], [63.316631707619592, 26.756532497661667], [63.233897739520302, 27.217047024030709], [62.755425652929858, 27.378923448184988], [62.727830438085988, 28.25964488373539], [61.771868117118629, 28.699333807890799], [61.36930870956494, 29.303276272085924], [60.874248488208792, 29.829238999952608], [62.549856805272782, 29.318572496044311], [63.550260858011171, 29.468330796826166], [64.148002150331251, 29.340819200145972], [64.350418735618518, 29.560030625928093], [65.046862013616106, 29.472180691031905], [66.346472609324422, 29.887943427036177], [66.381457553986024, 30.738899237586452], [66.938891229118468, 31.304911200479353], [67.683393589147471, 31.303154201781421], [67.792689243444784, 31.582930406209631], [68.556932000609322, 31.713310044882018], [68.926676873657669, 31.620189113892067], [69.317764113242561, 31.901412258424443], [69.262522007122556, 32.5019440780883], [69.687147251264861, 33.105498969041236], [70.323594191371598, 33.358532619758392], [69.930543247359594, 34.02012014417511], [70.881803012988399, 33.98885590263852], [71.156773309213463, 34.348911444632151], [71.115018751921639, 34.733125718722235], [71.613076206350712, 35.153203436822864], [71.498767938121091, 35.650563259416003], [71.26234826038575, 36.074387518857804], [71.846291945283923, 36.509942328429858], [72.920024855444467, 36.720007025696319], [74.067551710917826, 36.836175645488453], [74.575892775372978, 37.020841376283457], [75.158027785140916, 37.133030910789117]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Panama",
      "sov_a3": "PAN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Panama",
      "adm0_a3": "PAN",
      "geou_dif": 0.000000,
      "geounit": "Panama",
      "gu_a3": "PAN",
      "su_dif": 0.000000,
      "subunit": "Panama",
      "su_a3": "PAN",
      "brk_diff": 0.000000,
      "name": "Panama",
      "name_long": "Panama",
      "brk_a3": "PAN",
      "brk_name": "Panama",
      "brk_group": null,
      "abbrev": "Pan.",
      "postal": "PA",
      "formal_en": "Republic of Panama",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Panama",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 3.000000,
      "pop_est": 3360474.000000,
      "gdp_md_est": 38830.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "PA",
      "iso_a3": "PAN",
      "iso_n3": "591",
      "un_a3": "591",
      "wb_a2": "PA",
      "wb_a3": "PAN",
      "woe_id": -99.000000,
      "adm0_a3_is": "PAN",
      "adm0_a3_us": "PAN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Central America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-77.881571417945253, 7.223771267114785], [-78.214936082660117, 7.512254950384161], [-78.429160732726075, 8.052041123888927], [-78.182095709938636, 8.319182440621773], [-78.435465257465694, 8.387705389840789], [-78.622120530903942, 8.718124497915028], [-79.120307176413746, 8.996092027213024], [-79.55787736684519, 8.932374986197146], [-79.760578172510051, 8.584515082224399], [-80.164481167303336, 8.333315944853595], [-80.382659064439622, 8.298408514840432], [-80.4806892564973, 8.090307522001069], [-80.003689948227162, 7.547524115423372], [-80.276670701808996, 7.419754136581716], [-80.42115800649708, 7.271571966984765], [-80.886400926420805, 7.220541490096537], [-81.059542812814726, 7.817921047390597], [-81.189715745757951, 7.64790558515034], [-81.51951473664468, 7.706610012233909], [-81.721311204744467, 8.108962714058435], [-82.131441209628917, 8.175392767769637], [-82.390934414382571, 8.292362372262289], [-82.82008134635042, 8.290863755725823], [-82.850958014644817, 8.073822740099956], [-82.965783047197363, 8.225027980985985], [-82.913176439124214, 8.42351715741907], [-82.829770677405165, 8.62629547773237], [-82.868657192704774, 8.807266343618522], [-82.719183112300527, 8.925708726431495], [-82.927154914059159, 9.074330145702916], [-82.932890998043575, 9.476812038608173], [-82.546196255203483, 9.566134751824677], [-82.187122565423408, 9.207448635286781], [-82.207586432610967, 8.9955752628901], [-81.808566860669288, 8.950616766796173], [-81.714154018872037, 9.031955471223583], [-81.439287075511544, 8.786234035675719], [-80.947301601876759, 8.858503526235907], [-80.521901211250082, 9.111072089062432], [-79.914599778955989, 9.312765204297619], [-79.573302781884308, 9.611610012241528], [-79.021191779277927, 9.552931423374105], [-79.058450486960368, 9.454565334506526], [-78.500887620747193, 9.420458889193881], [-78.055927700498017, 9.247730414258299], [-77.729513515926413, 8.946844387238869], [-77.353360765273862, 8.67050466555807], [-77.474722866511328, 8.524286200388218], [-77.242566494440084, 7.935278225125444], [-77.431107957656991, 7.638061224798734], [-77.753413865861404, 7.709839789252143], [-77.881571417945253, 7.223771267114785]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Peru",
      "sov_a3": "PER",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Peru",
      "adm0_a3": "PER",
      "geou_dif": 0.000000,
      "geounit": "Peru",
      "gu_a3": "PER",
      "su_dif": 0.000000,
      "subunit": "Peru",
      "su_a3": "PER",
      "brk_diff": 0.000000,
      "name": "Peru",
      "name_long": "Peru",
      "brk_a3": "PER",
      "brk_name": "Peru",
      "brk_group": null,
      "abbrev": "Peru",
      "postal": "PE",
      "formal_en": "Republic of Peru",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Peru",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 11.000000,
      "pop_est": 29546963.000000,
      "gdp_md_est": 247300.000000,
      "pop_year": -99.000000,
      "lastcensus": 2007.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "PE",
      "iso_a3": "PER",
      "iso_n3": "604",
      "un_a3": "604",
      "wb_a2": "PE",
      "wb_a3": "PER",
      "woe_id": -99.000000,
      "adm0_a3_is": "PER",
      "adm0_a3_us": "PER",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "South America",
      "region_un": "Americas",
      "subregion": "South America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 4.000000,
      "long_len": 4.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-69.59042375352405, -17.580011895419332], [-69.858443569605868, -18.092693780187012], [-70.372572394477714, -18.347975355708869], [-71.375250210236928, -17.773798516513857], [-71.462040778271131, -17.363487644116383], [-73.444529588500416, -16.359362888252996], [-75.237882656541444, -15.265682875227782], [-76.009205084929945, -14.649286390850321], [-76.423469204397747, -13.823186944232432], [-76.25924150257417, -13.535039157772943], [-77.106192389621839, -12.22271615972082], [-78.092152879534638, -10.377712497604065], [-79.036953091126946, -8.386567884965892], [-79.445920376284846, -7.93083342858386], [-79.760578172510051, -7.194340915560084], [-80.537481655586078, -6.541667575713717], [-81.249996304026425, -6.136834405139183], [-80.926346808582437, -5.690556735866565], [-81.410942552399462, -4.736764825055459], [-81.099669562489368, -4.036394138203697], [-80.302560594387216, -3.404856459164713], [-80.184014858709673, -3.821161797708044], [-80.469294603176948, -4.059286797708999], [-80.442241990872162, -4.425724379090674], [-80.02890804718561, -4.346090996928893], [-79.624979214176179, -4.454198093283495], [-79.205289069317729, -4.959128513207389], [-78.639897223612337, -4.547784112164074], [-78.450683966775642, -3.873096612161376], [-77.837904832658609, -3.003020521663103], [-76.635394253226721, -2.608677666843818], [-75.544995693652041, -1.56160979574588], [-75.233722703741947, -0.911416924649529], [-75.373223232713855, -0.15203175212045], [-75.106624518520078, -0.05720549886486], [-74.441600511355972, -0.530820000819887], [-74.122395189089062, -1.002832533373848], [-73.6595035468346, -1.260491224781134], [-73.070392218707241, -2.308954359550953], [-72.325786505813653, -2.434218031426454], [-71.774760708285399, -2.169789727388938], [-71.413645799429787, -2.342802422702128], [-70.813475714791963, -2.256864515800743], [-70.047708502874855, -2.725156345229699], [-70.692682054309714, -3.742872002785859], [-70.394043952094989, -3.766591485207825], [-69.893635219996625, -4.298186944194327], [-70.794768846302304, -4.251264743673303], [-70.928843349883579, -4.401591485210368], [-71.748405727816547, -4.593982842633011], [-72.891927659787257, -5.274561455916981], [-72.9645072089412, -5.741251315944893], [-73.21971126981461, -6.089188734566078], [-73.120027431923603, -6.629930922068239], [-73.724486660441642, -6.91859547285064], [-73.723401455363501, -7.340998630404414], [-73.987235480429661, -7.523829847853065], [-73.571059332967067, -8.424446709835834], [-73.015382656532552, -9.032833347208062], [-73.226713426390162, -9.462212823121234], [-72.563033006465645, -9.520193780152717], [-72.18489071316985, -10.053597914269432], [-71.302412278921537, -10.079436130415374], [-70.481893886991173, -9.490118096558845], [-70.548685675728407, -11.009146823778465], [-70.093752204046893, -11.123971856331012], [-69.529678107364958, -10.951734307502194], [-68.665079718689626, -12.561300144097173], [-68.88007951523997, -12.899729099176653], [-68.92922380234954, -13.602683607643009], [-68.948886684836594, -14.453639418193283], [-69.339534674747014, -14.953195489158832], [-69.160346645774951, -15.323973890853019], [-69.389764166934711, -15.660129082911652], [-68.959635382753305, -16.50069793057127], [-69.59042375352405, -17.580011895419332]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Philippines",
      "sov_a3": "PHL",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Philippines",
      "adm0_a3": "PHL",
      "geou_dif": 0.000000,
      "geounit": "Philippines",
      "gu_a3": "PHL",
      "su_dif": 0.000000,
      "subunit": "Philippines",
      "su_a3": "PHL",
      "brk_diff": 0.000000,
      "name": "Philippines",
      "name_long": "Philippines",
      "brk_a3": "PHL",
      "brk_name": "Philippines",
      "brk_group": null,
      "abbrev": "Phil.",
      "postal": "PH",
      "formal_en": "Republic of the Philippines",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Philippines",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 8.000000,
      "pop_est": 97976603.000000,
      "gdp_md_est": 317500.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "PH",
      "iso_a3": "PHL",
      "iso_n3": "608",
      "un_a3": "608",
      "wb_a2": "PH",
      "wb_a3": "PHL",
      "woe_id": -99.000000,
      "adm0_a3_is": "PHL",
      "adm0_a3_us": "PHL",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "South-Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 11.000000,
      "long_len": 11.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[126.37681359263749, 8.414706325713354], [126.478512811387901, 7.750354112168978], [126.53742394420064, 7.189380601424574], [126.196772902532558, 6.27429433840004], [125.831420526229095, 7.293715318221857], [125.363852166852297, 6.786485297060992], [125.683160841983721, 6.049656887227258], [125.396511672060655, 5.58100332277229], [124.21978763234236, 6.161355495626182], [123.938719517106932, 6.885135606306122], [124.243662144061346, 7.360610459823661], [123.61021243702757, 7.833527329942754], [123.296071405125218, 7.418875637232787], [122.825505812675402, 7.457374579290217], [122.085499302255784, 6.899424139834849], [121.919928013192617, 7.192119452336073], [122.31235884001714, 8.034962063016508], [122.942397902519673, 8.316236883981176], [123.487687616063539, 8.693009751821194], [123.841154412939858, 8.240324204944386], [124.601469761250229, 8.514157619659017], [124.764612257995651, 8.96040945071546], [125.471390822451582, 8.986996975129642], [125.412117954612796, 9.760334784377548], [126.222714471543185, 9.286074327018852], [126.306636997585116, 8.782487494334575], [126.37681359263749, 8.414706325713354]]], [[[123.982437778825812, 10.278778591345812], [123.623183221532798, 9.950090643753299], [123.309920688979361, 9.318268744336677], [122.99588300994165, 9.0221886255204], [122.380054966319477, 9.713360907424203], [122.5860889018671, 9.981044826696106], [122.837081333508735, 10.261156927934238], [122.947410516451924, 10.881868394408031], [123.498849725438475, 10.940624497923949], [123.33777428598475, 10.267383938025446], [124.077935825701246, 11.23272553145371], [123.982437778825812, 10.278778591345812]]], [[[118.504580926590364, 9.316382554558089], [117.174274530100689, 8.367499904814665], [117.664477166821399, 9.066888739452935], [118.386913690261764, 9.684499619989225], [118.987342157061079, 10.376292019080509], [119.511496209797571, 11.369668077027214], [119.689676548339918, 10.554291490109875], [119.029458449379007, 10.003653265823871], [118.504580926590364, 9.316382554558089]]], [[[121.883547804859148, 11.89175507247198], [122.483821242361472, 11.582187404827508], [123.120216506035973, 11.58366018314787], [123.100837843926485, 11.16593374271649], [122.637713657726721, 10.741308498574227], [122.002610304859587, 10.441016750526089], [121.967366978036551, 10.905691229694625], [122.038370396005547, 11.41584096928004], [121.883547804859148, 11.89175507247198]]], [[[125.502551711123516, 12.162694606978349], [125.78346479706218, 11.046121934447768], [125.011883986512288, 11.31145457605038], [125.032761265158143, 10.975816148314706], [125.277449172060273, 10.358722032101312], [124.801819289245742, 10.134678859899893], [124.760168084818503, 10.837995103392302], [124.459101190286077, 10.889929917845635], [124.302521600441736, 11.495370998577229], [124.891012811381614, 11.415582587118593], [124.87799035044398, 11.794189968304991], [124.266761509295719, 12.557760931849685], [125.227116327007849, 12.535720933477194], [125.502551711123516, 12.162694606978349]]], [[[121.52739383350351, 13.069590155484519], [121.262190382981572, 12.205560207564403], [120.833896112146562, 12.704496161342419], [120.323436313967505, 13.46641347905387], [121.180128208502168, 13.429697373910443], [121.52739383350351, 13.069590155484519]]], [[[121.321308221523594, 18.504064642811016], [121.937601353036399, 18.218552354398383], [122.246006300954292, 18.478949896717097], [122.336956821787993, 18.224882717354177], [122.174279412933203, 17.810282701076375], [122.515653924653378, 17.093504746971973], [122.252310825693911, 16.262444362854126], [121.662786086108298, 15.931017564350128], [121.50506961475341, 15.124813544164624], [121.728828566577278, 14.328376369682246], [122.258925409027341, 14.218202216035976], [122.701275669445664, 14.336541245984421], [123.950295037940265, 13.78213064214107], [123.855107049658642, 13.237771104378467], [124.181288690284902, 12.997527370653472], [124.077419061378265, 12.536676947474575], [123.298035109552274, 13.027525539598983], [122.928651971529945, 13.552919826710408], [122.671355015148691, 13.185836289925135], [122.034649692880549, 13.784481919810347], [121.126384718918615, 13.636687323455561], [120.628637323083325, 13.857655747935652], [120.679383579593861, 14.271015529838323], [120.991819289230563, 14.525392767795083], [120.693336216312701, 14.756670640517285], [120.564145135583004, 14.396279201713824], [120.070428501466409, 14.970869452367097], [119.92092858284613, 15.40634674729074], [119.883773228028275, 16.363704331929966], [120.28648766487882, 16.034628811095331], [120.390047235191759, 17.599081122299509], [120.715867140791914, 18.505227362537539], [121.321308221523594, 18.504064642811016]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Papua New Guinea",
      "sov_a3": "PNG",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Papua New Guinea",
      "adm0_a3": "PNG",
      "geou_dif": 0.000000,
      "geounit": "Papua New Guinea",
      "gu_a3": "PNG",
      "su_dif": 1.000000,
      "subunit": "Papua New Guinea",
      "su_a3": "PN1",
      "brk_diff": 0.000000,
      "name": "Papua New Guinea",
      "name_long": "Papua New Guinea",
      "brk_a3": "PN1",
      "brk_name": "Papua New Guinea",
      "brk_group": null,
      "abbrev": "P.N.G.",
      "postal": "PG",
      "formal_en": "Independent State of Papua New Guinea",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Papua New Guinea",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 1.000000,
      "pop_est": 6057263.000000,
      "gdp_md_est": 13210.000000,
      "pop_year": -99.000000,
      "lastcensus": 2000.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "PG",
      "iso_a3": "PNG",
      "iso_n3": "598",
      "un_a3": "598",
      "wb_a2": "PG",
      "wb_a3": "PNG",
      "woe_id": -99.000000,
      "adm0_a3_is": "PNG",
      "adm0_a3_us": "PNG",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Oceania",
      "region_un": "Oceania",
      "subregion": "Melanesia",
      "region_wb": "East Asia & Pacific",
      "name_len": 16.000000,
      "long_len": 16.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[155.88002566957843, -6.81999684003776], [155.599991082988794, -6.919990736522493], [155.166994256815116, -6.535931491729301], [154.729191522438356, -5.900828138862209], [154.514114211239672, -5.139117526880014], [154.652503696917364, -5.04243092206184], [154.759990676084414, -5.339983819198494], [155.062917922179366, -5.566791680527487], [155.547746209941721, -6.200654799019659], [156.019965448224781, -6.540013929880388], [155.88002566957843, -6.81999684003776]]], [[[151.98279585185449, -5.478063246282346], [151.459106887008687, -5.560280450058741], [151.301390415653913, -5.840728448106702], [150.754447056276689, -6.083762709175389], [150.241196730753842, -6.317753594592986], [149.709963006793345, -6.316513360218053], [148.89006473205049, -6.026040134305433], [148.318936802360753, -5.74714242922613], [148.401825799756892, -5.437755629094724], [149.298411900020852, -5.583741550319218], [149.845561965127246, -5.505503431829339], [149.996250441690307, -5.026101169457675], [150.139755894164949, -5.001348158389789], [150.236907586873514, -5.532220147324281], [150.807467075808091, -5.455842380396888], [151.089672072554009, -5.113692722192368], [151.647880894170868, -4.757073662946169], [151.537861769821546, -4.16780730552189], [152.136791620084381, -4.14879037843852], [152.338743117481016, -4.312966403829762], [152.318692661751783, -4.86766122805075], [151.98279585185449, -5.478063246282346]]], [[[147.191873814074967, -7.38802418378998], [148.084635858349401, -8.044108168167611], [148.734105259393601, -9.104663588093757], [149.306835158484461, -9.071435642130069], [149.266630894161352, -9.514406019736029], [150.038728469034339, -9.684318129111702], [149.73879845601229, -9.872937106977005], [150.801627638959161, -10.293686618697421], [150.690574985963877, -10.582712904505868], [150.028393182575854, -10.652476088099931], [149.782310012002, -10.393267103723943], [148.923137648717244, -10.280922539921363], [147.913018426708021, -10.130440769087471], [147.135443150012264, -9.492443536012019], [146.567880894150647, -8.942554619994155], [146.048481073184945, -8.06741423913131], [144.744167922138018, -7.630128269077474], [143.89708784400969, -7.915330498896282], [143.286375767184296, -8.245491224809058], [143.413913202080693, -8.983068942910947], [142.628431431244252, -9.326820570516503], [142.068258905200224, -9.159595635620036], [141.033851760013903, -9.117892754760419], [141.017056919519035, -5.859021905138022], [141.000210402591875, -2.600151055515624], [142.7352466167915, -3.289152927263217], [144.583970982033264, -3.861417738463402], [145.273179559509998, -4.373737888205028], [145.829786411725678, -4.876497897972683], [145.981921828392984, -5.465609226100014], [147.648073358347602, -6.083659356310804], [147.891107619416204, -6.614014580922316], [146.97090538959489, -6.721656589386257], [147.191873814074967, -7.38802418378998]]], [[[153.140037876598768, -4.499983412294114], [152.827292108368312, -4.766427097190999], [152.638673130503008, -4.176127211120928], [152.406025832324957, -3.789742526874562], [151.953236932583565, -3.462062269711822], [151.384279413050052, -3.035421644710112], [150.662049595338857, -2.741486097833956], [150.939965448204561, -2.500002129734028], [151.479984165654542, -2.779985039891386], [151.820015090135115, -2.999971612157907], [152.239989455371102, -3.240008640153661], [152.640016717742554, -3.659983005389648], [153.01999352438466, -3.980015150573294], [153.140037876598768, -4.499983412294114]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Poland",
      "sov_a3": "POL",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Poland",
      "adm0_a3": "POL",
      "geou_dif": 0.000000,
      "geounit": "Poland",
      "gu_a3": "POL",
      "su_dif": 0.000000,
      "subunit": "Poland",
      "su_a3": "POL",
      "brk_diff": 0.000000,
      "name": "Poland",
      "name_long": "Poland",
      "brk_a3": "POL",
      "brk_name": "Poland",
      "brk_group": null,
      "abbrev": "Pol.",
      "postal": "PL",
      "formal_en": "Republic of Poland",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Poland",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 7.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 2.000000,
      "pop_est": 38482919.000000,
      "gdp_md_est": 667900.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "PL",
      "iso_a3": "POL",
      "iso_n3": "616",
      "un_a3": "616",
      "wb_a2": "PL",
      "wb_a3": "POL",
      "woe_id": -99.000000,
      "adm0_a3_is": "POL",
      "adm0_a3_us": "POL",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Eastern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[15.016995883858669, 51.10667409932158], [14.607098422919535, 51.745188096719971], [14.685026482815687, 52.089947414755201], [14.437599725002201, 52.62485016540839], [14.074521111719491, 52.981262518925433], [14.353315463934138, 53.248171291712971], [14.119686313542587, 53.75702912049104], [14.802900424873458, 54.050706285205749], [16.363477003655731, 54.513158677785725], [17.622831658608675, 54.851535956432912], [18.620858595461641, 54.682605699270781], [18.696254510175464, 54.43871877706929], [19.660640089606403, 54.426083889373928], [20.892244500418627, 54.312524929412533], [22.731098667092652, 54.327536932993326], [23.243987257589509, 54.220566718149144], [23.484127638449849, 53.912497667041137], [23.527535841575002, 53.470121568406555], [23.804934930117781, 53.089731350306074], [23.799198846133379, 52.691099351606567], [23.199493849386187, 52.486977444053672], [23.508002150168693, 52.023646552124731], [23.527070753684374, 51.57845408793024], [24.029985792748903, 50.705406602575181], [23.922757195743262, 50.424881089878753], [23.426508416444392, 50.308505764357456], [22.518450148211603, 49.476773586619743], [22.776418898212626, 49.027395331409622], [22.558137648211755, 49.085738023467144], [21.607808058364213, 49.470107326854091], [20.887955356538413, 49.32877228453583], [20.415839471119853, 49.431453355499769], [19.825022820726872, 49.217125352569226], [19.320712517990472, 49.571574001659194], [18.909574822676319, 49.435845852244576], [18.853144158613617, 49.496229763377642], [18.392913852622172, 49.988628648470751], [17.649445021238989, 50.049038397819956], [17.554567091551121, 50.362145901076417], [16.868769158605659, 50.47397370055603], [16.719475945714436, 50.215746568393541], [16.176253289462267, 50.422607326857907], [16.238626743238569, 50.697732652379841], [15.490972120839729, 50.784729926143207], [15.016995883858669, 51.10667409932158]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "United States of America",
      "sov_a3": "US1",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Dependency",
      "admin": "Puerto Rico",
      "adm0_a3": "PRI",
      "geou_dif": 0.000000,
      "geounit": "Puerto Rico",
      "gu_a3": "PRI",
      "su_dif": 0.000000,
      "subunit": "Puerto Rico",
      "su_a3": "PRI",
      "brk_diff": 0.000000,
      "name": "Puerto Rico",
      "name_long": "Puerto Rico",
      "brk_a3": "PRI",
      "brk_name": "Puerto Rico",
      "brk_group": null,
      "abbrev": "P.R.",
      "postal": "PR",
      "formal_en": "Commonwealth of Puerto Rico",
      "formal_fr": null,
      "note_adm0": "Commonwealth of U.S.A.",
      "note_brk": null,
      "name_sort": "Puerto Rico",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 1.000000,
      "pop_est": 3971020.000000,
      "gdp_md_est": 70230.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "PR",
      "iso_a3": "PRI",
      "iso_n3": "630",
      "un_a3": "630",
      "wb_a2": "PR",
      "wb_a3": "PRI",
      "woe_id": -99.000000,
      "adm0_a3_is": "PRI",
      "adm0_a3_us": "PRI",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Caribbean",
      "region_wb": "Latin America & Caribbean",
      "name_len": 11.000000,
      "long_len": 11.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": -99.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-66.282434455008215, 18.514761664295364], [-65.7713028632093, 18.426679185453878], [-65.591003790942949, 18.228034979723915], [-65.847163865813769, 17.975905666571862], [-66.599934455009489, 17.981822618069273], [-67.184162360285271, 17.946553453030077], [-67.242427537694354, 18.374460150622937], [-67.10067908391774, 18.520601101144351], [-66.282434455008215, 18.514761664295364]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "North Korea",
      "sov_a3": "PRK",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "North Korea",
      "adm0_a3": "PRK",
      "geou_dif": 0.000000,
      "geounit": "North Korea",
      "gu_a3": "PRK",
      "su_dif": 0.000000,
      "subunit": "North Korea",
      "su_a3": "PRK",
      "brk_diff": 0.000000,
      "name": "Dem. Rep. Korea",
      "name_long": "Dem. Rep. Korea",
      "brk_a3": "PRK",
      "brk_name": "Dem. Rep. Korea",
      "brk_group": null,
      "abbrev": "N.K.",
      "postal": "KP",
      "formal_en": "Democratic People's Republic of Korea",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Korea, Dem. Rep.",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 9.000000,
      "pop_est": 22665345.000000,
      "gdp_md_est": 40000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "KP",
      "iso_a3": "PRK",
      "iso_n3": "408",
      "un_a3": "408",
      "wb_a2": "KP",
      "wb_a3": "PRK",
      "woe_id": -99.000000,
      "adm0_a3_is": "PRK",
      "adm0_a3_us": "PRK",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 15.000000,
      "long_len": 15.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[130.640015903852429, 42.395009467125277], [130.78000735893113, 42.22000722916885], [130.400030552289024, 42.280003567059708], [129.965948521037262, 41.94136790625106], [129.667362095254816, 41.601104437825228], [129.705189243692473, 40.882827867184332], [129.188114862179987, 40.661807766271991], [129.010399611528214, 40.485436102859815], [128.63336836152672, 40.189846910150308], [127.96741417858135, 40.025412502597561], [127.533435500194173, 39.756850083976701], [127.502119582225305, 39.323930772451533], [127.385434198110275, 39.213472398427655], [127.783342726757724, 39.050898342437421], [128.349716424676615, 38.61224294692785], [128.205745884311455, 38.370397243801889], [127.780035435091008, 38.304535630845891], [127.07330854706737, 38.2561148137884], [126.683719924018931, 37.804772854151182], [126.237338901881756, 37.840377916000278], [126.174758742376241, 37.74968577732804], [125.689103631697208, 37.940010077459021], [125.568439162295704, 37.752088731429623], [125.275330438336198, 37.669070542952724], [125.240087111513162, 37.857224432927438], [124.981033156433966, 37.94882090916478], [124.71216067921938, 38.10834605564979], [124.985994093933982, 38.54847422947968], [125.221948683778706, 38.665857245430672], [125.132858514507518, 38.848559271798592], [125.386589797060594, 39.387957872061165], [125.321115757346817, 39.55138458918421], [124.737482131042398, 39.660344346671621], [124.265624627785314, 39.928493353834156], [125.079941847840644, 40.569823716792449], [126.18204511932943, 41.107336127276369], [126.869083286649868, 41.81656932226619], [127.343782993683021, 41.503151760415967], [128.208433058790661, 41.466771552082491], [128.05221520397231, 41.994284572917948], [129.596668735879518, 42.424981797854556], [129.994267205933227, 42.985386867843786], [130.640015903852429, 42.395009467125277]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Portugal",
      "sov_a3": "PRT",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Portugal",
      "adm0_a3": "PRT",
      "geou_dif": 0.000000,
      "geounit": "Portugal",
      "gu_a3": "PRT",
      "su_dif": 1.000000,
      "subunit": "Portugal",
      "su_a3": "PR1",
      "brk_diff": 0.000000,
      "name": "Portugal",
      "name_long": "Portugal",
      "brk_a3": "PR1",
      "brk_name": "Portugal",
      "brk_group": null,
      "abbrev": "Port.",
      "postal": "P",
      "formal_en": "Portuguese Republic",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Portugal",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 7.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 4.000000,
      "pop_est": 10707924.000000,
      "gdp_md_est": 208627.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": 0.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "PT",
      "iso_a3": "PRT",
      "iso_n3": "620",
      "un_a3": "620",
      "wb_a2": "PT",
      "wb_a3": "PRT",
      "woe_id": -99.000000,
      "adm0_a3_is": "PRT",
      "adm0_a3_us": "PRT",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Southern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-9.034817674180246, 41.880570583659676], [-8.67194576662672, 42.134689439454959], [-8.263856980817792, 42.28046865495034], [-8.013174607769912, 41.790886135417125], [-7.422512986673795, 41.792074693359837], [-7.251308966490824, 41.918346055665047], [-6.668605515967656, 41.883386949219584], [-6.389087693700915, 41.381815497394655], [-6.851126674822552, 41.111082668617527], [-6.864019944679385, 40.330871893874829], [-7.026413133156595, 40.184524237624245], [-7.066591559263529, 39.711891587882775], [-7.498632371439726, 39.629571031241809], [-7.098036668313128, 39.030072740223787], [-7.374092169616318, 38.373058580064921], [-7.029281175148796, 38.075764065089771], [-7.166507941099865, 37.803894354802225], [-7.537105475281024, 37.428904323876239], [-7.453725551778092, 37.097787583966067], [-7.855613165711986, 36.838268540996268], [-8.382816127953689, 36.978880113262463], [-8.898856980820327, 36.868809312480778], [-8.746101446965554, 37.651345526676607], [-8.83999752443988, 38.266243394517616], [-9.287463751655224, 38.358485826158599], [-9.526570603869715, 38.737429104154913], [-9.446988898140233, 39.39206614842837], [-9.048305223008427, 39.755093085278773], [-8.977353481471681, 40.159306138665812], [-8.768684047877102, 40.760638943030187], [-8.79085323733031, 41.184334011391257], [-8.990789353867569, 41.543459377603639], [-9.034817674180246, 41.880570583659676]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Paraguay",
      "sov_a3": "PRY",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Paraguay",
      "adm0_a3": "PRY",
      "geou_dif": 0.000000,
      "geounit": "Paraguay",
      "gu_a3": "PRY",
      "su_dif": 0.000000,
      "subunit": "Paraguay",
      "su_a3": "PRY",
      "brk_diff": 0.000000,
      "name": "Paraguay",
      "name_long": "Paraguay",
      "brk_a3": "PRY",
      "brk_name": "Paraguay",
      "brk_group": null,
      "abbrev": "Para.",
      "postal": "PY",
      "formal_en": "Republic of Paraguay",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Paraguay",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 2.000000,
      "pop_est": 6995655.000000,
      "gdp_md_est": 28890.000000,
      "pop_year": -99.000000,
      "lastcensus": 2002.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "PY",
      "iso_a3": "PRY",
      "iso_n3": "600",
      "un_a3": "600",
      "wb_a2": "PY",
      "wb_a3": "PRY",
      "woe_id": -99.000000,
      "adm0_a3_is": "PRY",
      "adm0_a3_us": "PRY",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "South America",
      "region_un": "Americas",
      "subregion": "South America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-62.685057135657885, -22.249029229422387], [-62.291179368729225, -21.051634616787393], [-62.265961269770798, -20.513734633061276], [-61.786326463453769, -19.633736667562964], [-60.043564622626491, -19.342746677327426], [-59.115042487206111, -19.356906019775401], [-58.183471442280506, -19.868399346600363], [-58.166392381408045, -20.176700941653678], [-57.8706739976178, -20.732687676681952], [-57.937155727761294, -22.090175876557172], [-56.881509568902899, -22.282153822521479], [-56.473317430229393, -22.086300144135283], [-55.797958136606908, -22.356929620047822], [-55.610682745981144, -22.655619398694846], [-55.517639329639636, -23.571997572526637], [-55.400747239795422, -23.956935316668805], [-55.02790178080955, -24.001273695575229], [-54.652834235235133, -23.839578138933959], [-54.292959560754518, -24.021014092710729], [-54.293476325077449, -24.570799655863965], [-54.428946092330591, -25.162184747012166], [-54.625290696823576, -25.739255466415514], [-54.788794928595053, -26.621785577096134], [-55.695845506398157, -27.387837009390864], [-56.486701626192996, -27.548499037386293], [-57.609759690976141, -27.395898532828387], [-58.618173590719749, -27.123718763947096], [-57.633660040911131, -25.603656508081642], [-57.777217169817938, -25.16233977630904], [-58.807128465394982, -24.771459242453311], [-60.02896603050403, -24.032796319273274], [-60.846564704009914, -23.880712579038292], [-62.685057135657885, -22.249029229422387]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Israel",
      "sov_a3": "ISR",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Disputed",
      "admin": "Palestine",
      "adm0_a3": "PSX",
      "geou_dif": 0.000000,
      "geounit": "Palestine",
      "gu_a3": "PSX",
      "su_dif": 0.000000,
      "subunit": "Palestine",
      "su_a3": "PSX",
      "brk_diff": 0.000000,
      "name": "Palestine",
      "name_long": "Palestine",
      "brk_a3": "PSX",
      "brk_name": "Palestine",
      "brk_group": null,
      "abbrev": "Pal.",
      "postal": "PAL",
      "formal_en": "West Bank and Gaza",
      "formal_fr": null,
      "note_adm0": "Partial self-admin.",
      "note_brk": "Partial self-admin.",
      "name_sort": "Palestine (West Bank and Gaza)",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 8.000000,
      "pop_est": 4119083.000000,
      "gdp_md_est": 11950.770000,
      "pop_year": -99.000000,
      "lastcensus": 2007.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "PS",
      "iso_a3": "PSE",
      "iso_n3": "275",
      "un_a3": "275",
      "wb_a2": "GZ",
      "wb_a3": "WBG",
      "woe_id": -99.000000,
      "adm0_a3_is": "PSE",
      "adm0_a3_us": "PSX",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Middle East & North Africa",
      "name_len": 9.000000,
      "long_len": 9.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": -99.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[35.545665317534542, 32.393992011030576], [35.545251906076203, 31.782504787720839], [35.397560662586045, 31.489086005167582], [34.927408481594568, 31.353435370401414], [34.970506626125996, 31.61677846936081], [35.22589155451243, 31.754341132121766], [34.974640740709333, 31.866582343059722], [35.183930291491436, 32.532510687788943], [35.545665317534542, 32.393992011030576]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Qatar",
      "sov_a3": "QAT",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Qatar",
      "adm0_a3": "QAT",
      "geou_dif": 0.000000,
      "geounit": "Qatar",
      "gu_a3": "QAT",
      "su_dif": 0.000000,
      "subunit": "Qatar",
      "su_a3": "QAT",
      "brk_diff": 0.000000,
      "name": "Qatar",
      "name_long": "Qatar",
      "brk_a3": "QAT",
      "brk_name": "Qatar",
      "brk_group": null,
      "abbrev": "Qatar",
      "postal": "QA",
      "formal_en": "State of Qatar",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Qatar",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 4.000000,
      "pop_est": 833285.000000,
      "gdp_md_est": 91330.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "QA",
      "iso_a3": "QAT",
      "iso_n3": "634",
      "un_a3": "634",
      "wb_a2": "QA",
      "wb_a3": "QAT",
      "woe_id": -99.000000,
      "adm0_a3_is": "QAT",
      "adm0_a3_us": "QAT",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Middle East & North Africa",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[50.810108270069577, 24.754742539971378], [50.743910760303692, 25.482424221289396], [51.013351678273494, 26.006991685484195], [51.286461622936059, 26.114582017515868], [51.589078810437258, 25.801112779233382], [51.606700473848811, 25.215670477798739], [51.38960778179063, 24.627385972588058], [51.112415398977021, 24.556330878186724], [50.810108270069577, 24.754742539971378]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Romania",
      "sov_a3": "ROU",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Romania",
      "adm0_a3": "ROU",
      "geou_dif": 0.000000,
      "geounit": "Romania",
      "gu_a3": "ROU",
      "su_dif": 0.000000,
      "subunit": "Romania",
      "su_a3": "ROU",
      "brk_diff": 0.000000,
      "name": "Romania",
      "name_long": "Romania",
      "brk_a3": "ROU",
      "brk_name": "Romania",
      "brk_group": null,
      "abbrev": "Rom.",
      "postal": "RO",
      "formal_en": "Romania",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Romania",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 13.000000,
      "pop_est": 22215421.000000,
      "gdp_md_est": 271400.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "RO",
      "iso_a3": "ROU",
      "iso_n3": "642",
      "un_a3": "642",
      "wb_a2": "RO",
      "wb_a3": "ROM",
      "woe_id": -99.000000,
      "adm0_a3_is": "ROU",
      "adm0_a3_us": "ROU",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Eastern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[22.710531447040495, 47.882193915389408], [23.142236362406805, 48.096341050806949], [23.760958286237411, 47.985598456405455], [24.402056105250381, 47.981877753280429], [24.866317172960578, 47.737525743188314], [25.207743361112989, 47.891056423527473], [25.945941196402401, 47.987148749374214], [26.197450392366932, 48.220881252630349], [26.619336785597795, 48.220726223333472], [26.924176059687568, 48.123264472030996], [27.233872918412743, 47.826770941756379], [27.551166212684848, 47.405117092470832], [28.128030226359044, 46.810476386088254], [28.160017937947714, 46.371562608417221], [28.054442986775399, 45.944586086605625], [28.233553501099042, 45.488283189468376], [28.679779493939382, 45.304030870131704], [29.149724969201653, 45.464925442072456], [29.603289015427436, 45.293308010431126], [29.626543409958771, 45.035390936862399], [29.141611769331835, 44.820210272799045], [28.8378577003202, 44.913873806328056], [28.558081495891997, 43.707461656258133], [27.970107049275075, 43.812468166675217], [27.242399529740908, 44.175986029632405], [26.065158725699746, 43.943493760751267], [25.569271681426926, 43.688444729174719], [24.100679152124172, 43.741051337247853], [23.332302280376325, 43.897010809904714], [22.944832391051847, 43.82378530534713], [22.657149692482989, 44.234923000661283], [22.474008416440601, 44.409227606781769], [22.705725538837356, 44.578002834647023], [22.459022251075936, 44.702517198254299], [22.145087924902811, 44.478422349620587], [21.562022739353608, 44.7689472519655], [21.483526238702236, 45.18117015235778], [20.874312778413355, 45.416375433934235], [20.762174920339987, 45.734573065771443], [20.220192498462836, 46.127468980486555], [21.021952345471249, 46.316087958351901], [21.626514926853872, 46.994237779318162], [22.099767693782837, 47.672439276716702], [22.710531447040495, 47.882193915389408]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Russia",
      "sov_a3": "RUS",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Russia",
      "adm0_a3": "RUS",
      "geou_dif": 0.000000,
      "geounit": "Russia",
      "gu_a3": "RUS",
      "su_dif": 0.000000,
      "subunit": "Russia",
      "su_a3": "RUS",
      "brk_diff": 0.000000,
      "name": "Russia",
      "name_long": "Russian Federation",
      "brk_a3": "RUS",
      "brk_name": "Russia",
      "brk_group": null,
      "abbrev": "Rus.",
      "postal": "RUS",
      "formal_en": "Russian Federation",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Russian Federation",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 7.000000,
      "mapcolor13": 7.000000,
      "pop_est": 140041247.000000,
      "gdp_md_est": 2266000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "3. Emerging region: BRIC",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "RU",
      "iso_a3": "RUS",
      "iso_n3": "643",
      "un_a3": "643",
      "wb_a2": "RU",
      "wb_a3": "RUS",
      "woe_id": -99.000000,
      "adm0_a3_is": "RUS",
      "adm0_a3_us": "RUS",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Eastern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 6.000000,
      "long_len": 18.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[143.648007440362875, 50.747600409541519], [144.654147577085638, 48.976390692737596], [143.173927850517231, 49.306551418650372], [142.558668247650104, 47.861575018904915], [143.533492466404056, 46.836728013692493], [143.505277134372619, 46.137907619809482], [142.747700636973917, 46.740764878926569], [142.092030064054512, 45.966755276058791], [141.906925083585037, 46.805928860046549], [142.018442824470895, 47.780132961612935], [141.904444614835057, 48.85918854429957], [142.135800002205684, 49.615163072297463], [142.179983351815309, 50.952342434281917], [141.594075962490052, 51.935434882202543], [141.68254601457366, 53.301966457728781], [142.606934035410774, 53.762145087287905], [142.209748976815405, 54.225475979216867], [142.65478641171299, 54.365880845753878], [142.914615513276573, 53.704577541714741], [143.260847609632066, 52.740760403039047], [143.235267775647657, 51.756660264688747], [143.648007440362875, 50.747600409541519]]], [[[22.731098667092652, 54.327536932993326], [20.892244500418656, 54.312524929412575], [19.660640089606403, 54.426083889373984], [19.888481479581344, 54.866160386771497], [21.268448927503499, 55.190481675835287], [22.315723504330606, 55.0152985703659], [22.757763706155288, 54.856574408581423], [22.651051873472568, 54.582740993866707], [22.731098667092652, 54.327536932993326]]], [[[-175.01425, 66.58435], [-174.33983, 66.33556], [-174.57182, 67.06219], [-171.85731, 66.91308], [-169.89958, 65.97724], [-170.89107, 65.54139], [-172.53025, 65.43791], [-172.555, 64.46079], [-172.95533, 64.25269], [-173.89184, 64.2826], [-174.65392, 64.63125], [-175.98353, 64.92288], [-176.20716, 65.35667], [-177.22266, 65.52024], [-178.35993, 65.39052], [-178.90332, 65.74044], [-178.68611, 66.11211], [-179.88377, 65.87456], [-179.43268, 65.40411], [-180.0, 64.979708702198366], [-180.0, 68.963636363636368], [-177.55, 68.2], [-174.92825, 67.20589], [-175.01425, 66.58435]]], [[[180.000000000000142, 70.832199208546683], [178.903425000000112, 70.78114], [178.7253, 71.0988], [180.000000000000142, 71.51571433642826], [180.000000000000142, 70.832199208546683]]], [[[-178.69378, 70.89302], [-180.0, 70.832199208546683], [-180.0, 71.51571433642826], [-179.871875, 71.55762], [-179.02433, 71.55553], [-177.577945, 71.26948], [-177.663575, 71.13277], [-178.69378, 70.89302]]], [[[143.60385, 73.21244], [142.08763, 73.20544], [140.038155, 73.31692], [139.86312, 73.36983], [140.81171, 73.76506], [142.06207, 73.85758], [143.48283, 73.47525], [143.60385, 73.21244]]], [[[150.73167, 75.08406], [149.575925, 74.68892], [147.977465, 74.778355], [146.11919, 75.17298], [146.358485, 75.49682], [148.22223, 75.345845], [150.73167, 75.08406]]], [[[145.086285, 75.562625], [144.3, 74.82], [140.61381, 74.84768], [138.95544, 74.61148], [136.97439, 75.26167], [137.51176, 75.94917], [138.831075, 76.13676], [141.471615, 76.09289], [145.086285, 75.562625]]], [[[57.5356925799924, 70.72046397570216], [56.944979282463947, 70.632743231886678], [53.677375115784201, 70.76265778266847], [53.412016635965387, 71.206661688920207], [51.601894565645722, 71.474759019650492], [51.455753615124223, 72.014881089965144], [52.478275180883571, 72.22944163684096], [52.444168735570855, 72.774731350384855], [54.427613559797663, 73.627547512497586], [53.50828982932515, 73.749813951300155], [55.902458937407658, 74.627486477345343], [55.631932814359715, 75.081412258597169], [57.868643833248854, 75.609390367323215], [61.170044386647504, 76.251883450008137], [64.498368361270224, 76.439055487769281], [66.210977003855106, 76.809782213031241], [68.157059767534832, 76.939696763812918], [68.852211134725138, 76.544811306454619], [68.180572544227658, 76.23364166940911], [64.637326287703019, 75.737754625136233], [61.583507521414759, 75.260884507946798], [58.47708214705338, 74.309056301562833], [56.986785516188007, 73.333043524866241], [55.419335971910954, 72.371267605265984], [55.622837762276305, 71.54059479439033], [57.5356925799924, 70.72046397570216]]], [[[106.970130000000125, 76.97419], [107.240000000000151, 76.48], [108.1538, 76.723350000000153], [111.077260000000166, 76.71], [113.33151, 76.22224], [114.13417, 75.84764], [113.88539, 75.327790000000135], [112.77918, 75.03186], [110.151250000000203, 74.47673], [109.4, 74.18], [110.64, 74.04], [112.11919, 73.787740000000127], [113.019540000000262, 73.976930000000152], [113.529580000000323, 73.335050000000109], [113.96881, 73.594880000000103], [115.56782, 73.75285], [118.776330000000229, 73.58772], [119.02, 73.12], [123.200660000000113, 72.97122], [123.257770000000193, 73.735030000000108], [125.380000000000194, 73.56], [126.97644, 73.56549], [128.59126, 73.03871], [129.05157, 72.39872], [128.460000000000122, 71.98], [129.715990000000232, 71.19304], [131.28858000000028, 70.786990000000117], [132.253500000000173, 71.836300000000108], [133.857660000000322, 71.386420000000157], [135.56193, 71.655250000000137], [137.49755, 71.34763], [138.23409000000018, 71.62803], [139.869830000000121, 71.487830000000145], [139.14791, 72.416190000000114], [140.46817, 72.849410000000148], [149.5, 72.2], [150.351180000000198, 71.60643], [152.968900000000218, 70.84222], [157.00688, 71.03141], [158.99779, 70.86672], [159.830310000000253, 70.45324], [159.70866, 69.72198], [160.940530000000336, 69.437280000000101], [162.279070000000132, 69.64204], [164.052480000000145, 69.66823], [165.940370000000229, 69.47199], [167.83567, 69.58269], [169.577630000000198, 68.6938], [170.816880000000282, 69.01363], [170.008200000000187, 69.65276], [170.453450000000288, 70.09703], [173.643910000000261, 69.81743], [175.724030000000226, 69.877250000000231], [178.6, 69.4], [180.000000000000142, 68.963636363636567], [180.000000000000142, 64.979708702198479], [179.99281, 64.97433], [178.707200000000256, 64.53493], [177.411280000000176, 64.60821], [178.313000000000244, 64.07593], [178.908250000000209, 63.251970000000142], [179.37034, 62.982620000000111], [179.48636, 62.56894], [179.228250000000145, 62.304100000000147], [177.3643, 62.5219], [174.569290000000223, 61.76915], [173.68013, 61.65261], [172.15, 60.95], [170.698500000000109, 60.33618], [170.330850000000311, 59.88177], [168.90046, 60.57355], [166.294980000000322, 59.788550000000214], [165.840000000000231, 60.16], [164.87674, 59.7316], [163.539290000000136, 59.86871], [163.217110000000247, 59.21101], [162.017330000000101, 58.24328], [162.05297, 57.83912], [163.19191, 57.615030000000104], [163.057940000000173, 56.159240000000125], [162.129580000000232, 56.12219], [161.70146, 55.285680000000156], [162.117490000000174, 54.85514], [160.368770000000353, 54.34433], [160.021730000000247, 53.20257], [158.530940000000186, 52.958680000000243], [158.23118, 51.94269], [156.789790000000295, 51.01105], [156.420000000000158, 51.7], [155.99182, 53.15895], [155.433660000000117, 55.381030000000123], [155.91442000000032, 56.767920000000146], [156.75815, 57.3647], [156.810350000000113, 57.83204], [158.364330000000194, 58.05575], [160.150640000000152, 59.314770000000124], [161.87204, 60.343000000000131], [163.66969, 61.140900000000101], [164.473550000000131, 62.55061], [163.2584200000002, 62.46627], [162.65791, 61.6425], [160.121480000000105, 60.54423], [159.30232, 61.773960000000102], [156.720680000000101, 61.43442], [154.218060000000349, 59.758180000000124], [155.04375, 59.14495], [152.81185, 58.88385], [151.265730000000275, 58.78089], [151.338150000000127, 59.50396], [149.78371, 59.655730000000148], [148.54481, 59.16448], [145.48722, 59.33637], [142.197820000000178, 59.03998], [138.958480000000321, 57.08805], [135.12619, 54.72959], [136.70171, 54.603550000000126], [137.19342, 53.97732], [138.1647, 53.755010000000254], [138.80463, 54.254550000000108], [139.90151, 54.18968000000018], [141.34531, 53.089570000000123], [141.37923, 52.23877], [140.597420000000199, 51.239670000000103], [140.51308, 50.045530000000127], [140.061930000000217, 48.446710000000166], [138.554720000000231, 46.99965], [138.21971, 46.30795], [136.86232, 45.143500000000188], [135.515350000000211, 43.989], [134.869390000000266, 43.39821], [133.536870000000278, 42.81147], [132.906270000000148, 42.798490000000101], [132.27807000000027, 43.284560000000113], [130.935870000000165, 42.55274], [130.78, 42.220000000000198], [130.640000000000185, 42.395], [130.63386640840983, 42.903014634770557], [131.14468794161499, 42.929989732426947], [131.288555129115622, 44.111519680348266], [131.025190000000265, 44.96796], [131.88345421765959, 45.321161607436522], [133.097120000000217, 45.14409], [133.769643996313192, 46.116926988299156], [134.112350000000191, 47.212480000000141], [134.50081, 47.578450000000146], [135.026311476786788, 48.478229885443909], [133.373595819228029, 48.183441677434843], [132.506690000000134, 47.78896], [130.987260000000134, 47.79013], [130.582293328982672, 48.729687404976204], [129.397817824420514, 49.440600084015614], [127.657400000000365, 49.76027], [127.287455682484932, 50.739797268265448], [126.939156528837856, 51.35389415140591], [126.564399041857001, 51.784255479532703], [125.946348911646481, 52.79279857035695], [125.068211297710462, 53.161044826868931], [123.57147, 53.4588], [122.245747918793057, 53.431725979213695], [121.003084751470368, 53.251401068731241], [120.177088657716894, 52.753886216841209], [120.725789015792003, 52.516226304730907], [120.7382, 51.96411], [120.182080000000184, 51.64355], [119.27939, 50.58292], [119.288460728025854, 50.142882798861962], [117.879244419426499, 49.510983384797044], [116.678800897286209, 49.888531399121405], [115.485695428531443, 49.805177313834747], [114.962109816550395, 50.140247300815133], [114.362456496235353, 50.248302720737485], [112.897739699354389, 49.543565375356991], [111.581230910286678, 49.377968248077678], [110.662010532678863, 49.130128078805853], [109.402449171996722, 49.292960516957692], [108.475167270951289, 49.282547715850711], [107.86817589725112, 49.793705145865886], [106.888804152455322, 50.27429596618029], [105.886591424586896, 50.406019192092174], [104.62158, 50.275320000000164], [103.676545444760364, 50.089966132195144], [102.255890000000107, 50.510560000000112], [102.06521, 51.259910000000104], [100.889480421962645, 51.516855780638423], [99.981732212323578, 51.634006252643957], [98.861490513100506, 52.047366034546712], [97.825739780674525, 51.01099518493325], [98.231761509191728, 50.42240062112873], [97.259760000000227, 49.72605], [95.81402000000017, 49.977460000000121], [94.815949334698786, 50.013433335970888], [94.147566359435615, 50.480536607457168], [93.10421, 50.49529], [92.23471154171969, 50.802170722041751], [90.713667433640779, 50.331811835321105], [88.805566847695587, 49.470520738312473], [87.751264276076853, 49.297197984405557], [87.359970330762707, 49.214980780629162], [86.829356723989662, 49.82667470966814], [85.5412699726825, 49.692858588248157], [85.11555952346211, 50.117302964877638], [84.416377394553052, 50.311399644565824], [83.935114780618932, 50.889245510453577], [83.383003778012466, 51.069182847693895], [81.945985548839957, 50.812195949906339], [80.56844689323546, 51.388336493528442], [80.035559523441719, 50.864750881547224], [77.800915561844334, 53.404414984747547], [76.525179477854778, 54.177003485727141], [76.891100294913457, 54.490524400441927], [74.384820000000133, 53.54685000000012], [73.425678745420527, 53.489810289109755], [73.508516066384374, 54.035616766976602], [72.224150018202209, 54.376655381886792], [71.180131056609497, 54.133285224008262], [70.865266554655165, 55.169733588270105], [69.068166945272907, 55.385250149143502], [68.169100376258911, 54.97039175070438], [65.666870000000102, 54.601250000000164], [65.178533563095954, 54.354227810272079], [61.436600000000141, 54.00625], [60.97806644068325, 53.664993394579142], [61.699986199800634, 52.979996446334269], [60.739993117114551, 52.719986477257748], [60.927268507740251, 52.447548326215014], [59.967533807215574, 51.960420437215674], [61.588003371024143, 51.272658799843185], [61.337424350841019, 50.799070136104262], [59.932807244715576, 50.842194118851836], [59.642282342370578, 50.545442206415714], [58.36332000000013, 51.06364], [56.77798, 51.04355], [55.716940000000108, 50.621710000000149], [54.532878452376195, 51.026239732459373], [52.328723585831057, 51.718652248738096], [50.766648390512188, 51.692762356159875], [48.702381626181051, 50.605128485712839], [48.577841424357615, 49.874759629915644], [47.549480421749394, 50.454698391311126], [46.751596307162771, 49.356005764353739], [47.043671502476599, 49.152038886097586], [46.466445753776298, 48.39415233010493], [47.315240000000159, 47.71585], [48.05725, 47.74377], [48.694733514201886, 47.075628160177899], [48.593250000000154, 46.561040000000105], [49.101160000000135, 46.399330000000106], [48.645410000000112, 45.80629], [47.67591, 45.641490000000118], [46.68201, 44.609200000000101], [47.59094, 43.660160000000133], [47.49252, 42.98658], [48.584370000000177, 41.80888], [47.98728315612604, 41.405819200194401], [47.81566572448466, 41.151416124021353], [47.373315464066394, 41.219732367511142], [46.686070591016716, 41.827137152669906], [46.404950799348939, 41.860675157227433], [45.7764, 42.092440000000238], [45.470279168485916, 42.502780666670049], [44.537622918482072, 42.711992702803684], [43.931210000000107, 42.554960000000108], [43.755990000000196, 42.74083], [42.394400000000161, 43.2203], [40.922190000000143, 43.382150000000138], [40.076964959479852, 43.553104153002494], [39.955008579271095, 43.434997666999294], [38.68, 44.28], [37.539120000000111, 44.65721], [36.675460000000129, 45.24469], [37.40317, 45.404510000000101], [38.23295, 46.24087], [37.67372, 46.63657], [39.14767, 47.044750000000136], [39.12120000000013, 47.26336], [38.223538038899477, 47.102189846375978], [38.255112339029807, 47.54640045835697], [38.77057, 47.825620000000242], [39.738277622238996, 47.898937079452082], [39.89562000000015, 48.23241], [39.67465, 48.783820000000134], [40.080789015469492, 49.307429917999372], [40.069040000000115, 49.60105], [38.59498823421356, 49.926461900423732], [38.010631137857075, 49.915661526074729], [37.393459506995242, 50.383953355503678], [36.626167840325394, 50.225590928745135], [35.356116163888117, 50.577197374059153], [35.37791, 50.77394], [35.022183058417937, 51.207572333371502], [34.224815708154409, 51.255993150428935], [34.141978387190619, 51.566413479206204], [34.391730584457235, 51.768881740925906], [33.752699822735877, 52.33507457133166], [32.71576053236717, 52.238465481162166], [32.412058139787774, 52.288694973349777], [32.159440000000217, 52.061250000000115], [31.78597, 52.10168], [31.540018344862261, 52.742052313846443], [31.305200636527985, 53.073995876673308], [31.49764, 53.167430000000138], [32.304519484188376, 53.132726141972853], [32.693643019346126, 53.351420803432148], [32.405598585751164, 53.618045355842014], [31.731272820774592, 53.794029446012019], [31.791424187962406, 53.974638576872195], [31.384472283663825, 54.157056382862379], [30.757533807098781, 54.811770941784403], [30.971835971813249, 55.081547756564134], [30.873909132620071, 55.550976467503517], [29.896294386522442, 55.789463202530499], [29.37157189303079, 55.670090643936277], [29.229513380660393, 55.918344224666413], [28.17670942557794, 56.169129950578792], [27.855282016722526, 56.759326483784378], [27.770015903440992, 57.244258124411203], [27.288184848751655, 57.474528306703917], [27.716685825315778, 57.79189911562446], [27.420150000000206, 58.724570000000142], [28.131699253051863, 59.300825100330997], [27.98112, 59.47537], [29.1177, 60.028050000000121], [28.07, 60.503520000000151], [30.211107212044652, 61.780027777749694], [31.139991082491036, 62.357692776124452], [31.516092156711267, 62.867687486412905], [30.035872430142803, 63.552813625738565], [30.44468468600374, 64.204453436939076], [29.544429559047018, 64.948671576590556], [30.21765, 65.80598], [29.054588657352383, 66.944286200622031], [29.977426385220696, 67.698297024192755], [28.445943637818772, 68.364612942164001], [28.591929559043365, 69.064776923286701], [29.39955, 69.156920000000184], [31.10108000000011, 69.55811], [32.132720000000262, 69.905950000000246], [33.77547, 69.301420000000121], [36.51396, 69.06342], [40.292340000000166, 67.9324], [41.059870000000132, 67.45713000000012], [41.125950000000188, 66.791580000000124], [40.01583, 66.266180000000134], [38.38295, 65.999530000000107], [33.918710000000175, 66.75961], [33.18444, 66.63253], [34.81477, 65.900150000000139], [34.878574253078767, 65.436212877048206], [34.943910000000159, 64.414370000000162], [36.23129, 64.10945], [37.012730000000118, 63.849830000000111], [37.141970000000157, 64.33471], [36.539579035089815, 64.76446], [37.176040000000143, 65.143220000000127], [39.59345, 64.520790000000176], [40.435600000000107, 64.76446], [39.762600000000162, 65.49682], [42.093090000000103, 66.47623], [43.016040000000118, 66.418580000000105], [43.949750000000137, 66.06908], [44.53226, 66.756340000000137], [43.69839, 67.35245], [44.187950000000143, 67.95051], [43.45282, 68.57079], [46.250000000000142, 68.25], [46.821340000000163, 67.68997], [45.55517, 67.56652], [45.562020000000103, 67.010050000000206], [46.349150000000151, 66.667670000000101], [47.894160000000255, 66.884550000000161], [48.13876, 67.52238], [50.227660000000157, 67.998670000000146], [53.717430000000178, 68.85738000000012], [54.47171, 68.80815], [53.485820000000132, 68.20131], [54.72628, 68.09702], [55.442680000000138, 68.43866], [57.317020000000156, 68.46628], [58.80200000000022, 68.88082], [59.941420000000193, 68.278440000000103], [61.07784000000018, 68.94069], [60.03, 69.52], [60.55, 69.85], [63.504000000000161, 69.54739], [64.888115, 69.234835000000146], [68.512160000000137, 68.092330000000175], [69.18068, 68.615630000000124], [68.16444, 69.14436], [68.13522, 69.35649], [66.930080000000117, 69.454610000000116], [67.25976, 69.92873], [66.724920000000139, 70.708890000000139], [66.69466, 71.028970000000243], [68.540060000000125, 71.934500000000241], [69.196360000000112, 72.84336000000016], [69.94, 73.040000000000134], [72.58754, 72.776290000000103], [72.79603, 72.22006], [71.848110000000105, 71.40898], [72.47011, 71.09019], [72.79188, 70.39114], [72.564700000000215, 69.02085], [73.66787, 68.4079], [73.2387, 67.7404], [71.280000000000115, 66.320000000000164], [72.423010000000176, 66.172670000000181], [72.82077, 66.53267], [73.92099000000016, 66.789460000000133], [74.186510000000197, 67.28429], [75.052, 67.760470000000169], [74.469260000000162, 68.32899], [74.935840000000127, 68.98918], [73.84236, 69.07146], [73.601870000000218, 69.62763], [74.3998, 70.63175], [73.1011, 71.447170000000256], [74.890820000000218, 72.12119], [74.65926, 72.83227], [75.158010000000189, 72.854970000000122], [75.68351, 72.300560000000132], [75.288980000000123, 71.33556], [76.35911, 71.152870000000149], [75.903130000000175, 71.87401], [77.576650000000114, 72.26717], [79.652020000000135, 72.32011], [81.5, 71.75], [80.610710000000125, 72.582850000000121], [80.51109, 73.6482], [82.25, 73.850000000000108], [84.65526, 73.805910000000182], [86.82230000000024, 73.93688], [86.00956, 74.459670000000159], [87.166820000000172, 75.11643], [88.315710000000109, 75.14393], [90.26, 75.64], [92.90058, 75.77333], [93.234210000000161, 76.0472], [95.860000000000156, 76.1400000000001], [96.67821, 75.91548], [98.922540000000225, 76.44689], [100.759670000000227, 76.43028], [101.03532, 76.86189], [101.990840000000134, 77.287540000000206], [104.351600000000104, 77.69792], [106.066640000000149, 77.37389], [104.70500000000024, 77.1274], [106.970130000000125, 76.97419]]], [[[105.07547, 78.30689], [99.43814, 77.921], [101.2649, 79.23399], [102.08635, 79.34641], [102.837815, 79.28129], [105.37243, 78.71334], [105.07547, 78.30689]]], [[[51.13618655783128, 80.547280178540944], [49.793684523320707, 80.415427761548216], [48.894411248577541, 80.339566758943704], [48.754936557821765, 80.175468248200843], [47.586119012244154, 80.010181179515342], [46.502825962109654, 80.247246812654367], [47.072455275262911, 80.559424140129465], [44.846958042181114, 80.589809882317184], [46.799138624871233, 80.771917629713641], [48.318477410684665, 80.784009914869955], [48.522806023966695, 80.514568996900152], [49.097189568890911, 80.753985907708426], [50.039767693894618, 80.918885403151819], [51.522932977103693, 80.69972565380192], [51.13618655783128, 80.547280178540944]]], [[[99.93976, 78.88094], [97.75794, 78.7562], [94.97259, 79.044745], [93.31288, 79.4265], [92.5454, 80.14379], [91.18107, 80.34146], [93.77766, 81.0246], [95.940895, 81.2504], [97.88385, 80.746975], [100.186655, 79.780135], [99.93976, 78.88094]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Rwanda",
      "sov_a3": "RWA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Rwanda",
      "adm0_a3": "RWA",
      "geou_dif": 0.000000,
      "geounit": "Rwanda",
      "gu_a3": "RWA",
      "su_dif": 0.000000,
      "subunit": "Rwanda",
      "su_a3": "RWA",
      "brk_diff": 0.000000,
      "name": "Rwanda",
      "name_long": "Rwanda",
      "brk_a3": "RWA",
      "brk_name": "Rwanda",
      "brk_group": null,
      "abbrev": "Rwa.",
      "postal": "RW",
      "formal_en": "Republic of Rwanda",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Rwanda",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 10.000000,
      "pop_est": 10473282.000000,
      "gdp_md_est": 9706.000000,
      "pop_year": -99.000000,
      "lastcensus": 2002.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "RW",
      "iso_a3": "RWA",
      "iso_n3": "646",
      "un_a3": "646",
      "wb_a2": "RW",
      "wb_a3": "RWA",
      "woe_id": -99.000000,
      "adm0_a3_is": "RWA",
      "adm0_a3_us": "RWA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[30.419104852019245, -1.134659112150416], [30.816134881317712, -1.698914076345389], [30.758308953583111, -2.287250257988369], [30.469696079232989, -2.413857517103459], [29.938359002407939, -2.348486830254238], [29.632176141078588, -2.917857761246097], [29.024926385216787, -2.839257907730158], [29.117478875451553, -2.292211195488385], [29.254834832483343, -2.215109958508911], [29.291886834436614, -1.620055840667987], [29.579466180140884, -1.341313164885626], [29.821518588996014, -1.443322442229785], [30.419104852019245, -1.134659112150416]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 7.000000,
      "sovereignt": "Western Sahara",
      "sov_a3": "SAH",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Indeterminate",
      "admin": "Western Sahara",
      "adm0_a3": "SAH",
      "geou_dif": 0.000000,
      "geounit": "Western Sahara",
      "gu_a3": "SAH",
      "su_dif": 0.000000,
      "subunit": "Western Sahara",
      "su_a3": "SAH",
      "brk_diff": 1.000000,
      "name": "W. Sahara",
      "name_long": "Western Sahara",
      "brk_a3": "B28",
      "brk_name": "W. Sahara",
      "brk_group": null,
      "abbrev": "W. Sah.",
      "postal": "WS",
      "formal_en": "Sahrawi Arab Democratic Republic",
      "formal_fr": null,
      "note_adm0": "Self admin.",
      "note_brk": "Self admin.; Claimed by Morocco",
      "name_sort": "Western Sahara",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 7.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 4.000000,
      "pop_est": -99.000000,
      "gdp_md_est": -99.000000,
      "pop_year": -99.000000,
      "lastcensus": -99.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "EH",
      "iso_a3": "ESH",
      "iso_n3": "732",
      "un_a3": "732",
      "wb_a2": "-99",
      "wb_a3": "-99",
      "woe_id": -99.000000,
      "adm0_a3_is": "MAR",
      "adm0_a3_us": "SAH",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Northern Africa",
      "region_wb": "Middle East & North Africa",
      "name_len": 9.000000,
      "long_len": 14.000000,
      "abbrev_len": 7.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "Polygon",
      "coordinates": [[[-8.665606420915562, 27.656574449396274], [-8.665124477564191, 27.589479071558227], [-8.684399786809053, 27.395744126896005], [-8.6872936670174, 25.881056219988906], [-11.969418911171161, 25.933352769468268], [-11.937224493853321, 23.374594224536168], [-12.874221564169575, 23.284832261645178], [-13.118754441774712, 22.771220201096256], [-12.929101935263532, 21.327070624267563], [-16.845193650773993, 21.333323472574879], [-17.063423224342571, 20.999752102130827], [-16.973247849993186, 21.885744533774954], [-16.58913692876763, 22.158234361250095], [-16.261921759495664, 22.679339504481277], [-16.326413946995899, 23.017768459560898], [-15.982610642958065, 23.723358466074103], [-15.426003790742186, 24.359133612561038], [-15.089331834360735, 24.520260728446971], [-14.824645148161693, 25.103532619725314], [-14.800925665739669, 25.636264960222292], [-14.439939947964831, 26.254418443297652], [-13.773804897506466, 26.618892320252286], [-13.139941779014293, 27.640147813420498], [-13.121613369914712, 27.654147671719812], [-13.119530487057402, 27.65573864803957], [-12.895202195680071, 27.655779934188715], [-12.614392462606034, 27.655831610620993], [-12.333634405964276, 27.655883287053285], [-12.052824672890239, 27.655909125269432], [-11.772040778032348, 27.655934963485578], [-11.491256883174458, 27.65598663991787], [-11.210472988316553, 27.656038316350163], [-10.929689093458663, 27.656089992782455], [-10.648905198600772, 27.656141669214747], [-10.368121303742882, 27.65619334564704], [-10.087311570668831, 27.656245022079332], [-9.806527675810941, 27.656270860295479], [-9.52574378095305, 27.656296698511625], [-9.244934047879013, 27.656348374943917], [-8.964175991237255, 27.65640005137621], [-8.683366258163218, 27.656451727808502], [-8.665606420915562, 27.656574449396274]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Saudi Arabia",
      "sov_a3": "SAU",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Saudi Arabia",
      "adm0_a3": "SAU",
      "geou_dif": 0.000000,
      "geounit": "Saudi Arabia",
      "gu_a3": "SAU",
      "su_dif": 0.000000,
      "subunit": "Saudi Arabia",
      "su_a3": "SAU",
      "brk_diff": 0.000000,
      "name": "Saudi Arabia",
      "name_long": "Saudi Arabia",
      "brk_a3": "SAU",
      "brk_name": "Saudi Arabia",
      "brk_group": null,
      "abbrev": "Saud.",
      "postal": "SA",
      "formal_en": "Kingdom of Saudi Arabia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Saudi Arabia",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 7.000000,
      "pop_est": 28686633.000000,
      "gdp_md_est": 576500.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "SA",
      "iso_a3": "SAU",
      "iso_n3": "682",
      "un_a3": "682",
      "wb_a2": "SA",
      "wb_a3": "SAU",
      "woe_id": -99.000000,
      "adm0_a3_is": "SAU",
      "adm0_a3_us": "SAU",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Middle East & North Africa",
      "name_len": 12.000000,
      "long_len": 12.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[42.77933230975097, 16.347891343648683], [42.649572788266084, 16.774635321514964], [42.347989129410713, 17.075805568912003], [42.270887892431226, 17.474721787989125], [41.754381951673963, 17.833046169500975], [41.22139122901558, 18.67159963630121], [40.93934126156654, 19.486485297111756], [40.247652215339826, 20.174634507726491], [39.801684604660949, 20.338862209550058], [39.139399448408284, 21.291904812092934], [39.023695916506796, 21.986875311770195], [39.066328973147591, 22.57965566659027], [38.492772251140082, 23.688451036060854], [38.023860304523623, 24.078685614512935], [37.483634881344386, 24.285494696545015], [37.154817742671185, 24.858482977797308], [37.209491408036001, 25.084541530858107], [36.93162723160259, 25.602959499610179], [36.639603712721225, 25.826227525327223], [36.249136590323815, 26.570135606384881], [35.640181512196392, 27.376520494083422], [35.130186801907882, 28.063351955674719], [34.632336053207979, 28.058546047471566], [34.787778761541944, 28.607427273059699], [34.832220493312946, 28.957483425404845], [34.956037225084259, 29.356554673778845], [36.068940870922063, 29.197494615184453], [36.50121422704359, 29.505253607698705], [36.74052778498725, 29.86528331147619], [37.503581984209035, 30.003776150018407], [37.668119744626381, 30.338665269485901], [37.998848911294374, 30.508499864213135], [37.002165561681011, 31.508412990844747], [39.004885695152552, 32.010216986614978], [39.195468377444968, 32.161008816042667], [40.399994337736246, 31.889991766887935], [41.889980910007836, 31.190008653278369], [44.709498732284743, 29.178891099559383], [46.568713413281756, 29.09902517345229], [47.459821811722833, 29.002519436147224], [47.708850538937384, 28.526062730416143], [48.416094191283946, 28.55200429942667], [48.807594842327177, 27.689627997339883], [49.299554477745829, 27.461218166609811], [49.470913527225662, 27.109999294538085], [50.152422316290881, 26.689663194275997], [50.212935418504685, 26.277026882425375], [50.113303257045942, 25.943972276304251], [50.239858839728754, 25.608049628190926], [50.527386509000735, 25.327808335872103], [50.660556675016892, 24.999895534764022], [50.810108270069577, 24.754742539971378], [51.112415398977021, 24.556330878186724], [51.38960778179063, 24.627385972588058], [51.579518670463273, 24.245497137951105], [51.617707553926977, 24.014219265228832], [52.000733270074335, 23.00115448657894], [55.006803012924905, 22.496947536707136], [55.208341098863194, 22.708329982997046], [55.666659376859826, 22.000001125572339], [54.999981723862362, 19.999994004796108], [52.000009800022241, 19.000003363516058], [49.116671583864871, 18.616667588774945], [48.183343540241339, 18.166669216377315], [47.466694777217633, 17.116681626854884], [47.000004917189756, 16.949999294497445], [46.749994337761649, 17.283338120996177], [46.366658563020536, 17.233315334537636], [45.399999220568759, 17.333335069238558], [45.216651238797191, 17.433328965723334], [44.062613152855079, 17.410358791569593], [43.791518589051918, 17.319976711491108], [43.380794305196105, 17.579986680567671], [43.115797560403358, 17.088440456607373], [43.218375278502748, 16.66688996018641], [42.77933230975097, 16.347891343648683]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Sudan",
      "sov_a3": "SDN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Sudan",
      "adm0_a3": "SDN",
      "geou_dif": 0.000000,
      "geounit": "Sudan",
      "gu_a3": "SDN",
      "su_dif": 0.000000,
      "subunit": "Sudan",
      "su_a3": "SDN",
      "brk_diff": 0.000000,
      "name": "Sudan",
      "name_long": "Sudan",
      "brk_a3": "SDN",
      "brk_name": "Sudan",
      "brk_group": null,
      "abbrev": "Sudan",
      "postal": "SD",
      "formal_en": "Republic of the Sudan",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Sudan",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 1.000000,
      "pop_est": 25946220.000000,
      "gdp_md_est": 88080.000000,
      "pop_year": -99.000000,
      "lastcensus": 2008.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "SD",
      "iso_a3": "SDN",
      "iso_n3": "729",
      "un_a3": "729",
      "wb_a2": "SD",
      "wb_a3": "SDN",
      "woe_id": -99.000000,
      "adm0_a3_is": "SDN",
      "adm0_a3_us": "SDN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Northern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[33.963392794971185, 9.464285229420625], [33.824963480907513, 9.484060845715362], [33.842130853028152, 9.981914637215993], [33.721959248183111, 10.325262079630193], [33.206938084561784, 10.720111638406593], [33.086766479716744, 11.441141267476496], [33.206938084561784, 12.179338268667095], [32.743419037302544, 12.248007757149992], [32.674749548819648, 12.02483191958072], [32.073891524594785, 11.973329803218519], [32.314234734284753, 11.681484477166521], [32.400071594888345, 11.080626452941488], [31.850715687025513, 10.531270545078826], [31.352861895524882, 9.810240916008695], [30.837840731903384, 9.70723668328452], [29.996639497988554, 10.290927335388687], [29.618957311332849, 10.084918869940225], [29.515953078608618, 9.793073543888056], [29.000931914987177, 9.604232450560289], [28.966597170745786, 9.398223985111656], [27.970889587744352, 9.398223985111656], [27.833550610778786, 9.604232450560289], [27.112520981708883, 9.638567194801624], [26.752006167173818, 9.466893473594496], [26.477328213242515, 9.552730334198088], [25.962307049621018, 10.136420986302426], [25.790633328413946, 10.411098940233728], [25.069603699343986, 10.273759963267992], [24.794925745412684, 9.810240916008695], [24.53741516360202, 8.91753756573172], [24.19406772118765, 8.728696472403897], [23.886979580860668, 8.619729712933065], [23.805813429466752, 8.666318874542526], [23.459012892355986, 8.954285793489021], [23.394779087017298, 9.265067857292252], [23.557249790142919, 9.68121816653877], [23.554304233502194, 10.08925527591532], [22.977543572692753, 10.71446259199854], [22.864165480244253, 11.142395127807617], [22.87622, 11.384610000000123], [22.50869, 11.67936], [22.49762, 12.26024], [22.28801, 12.64605], [21.93681, 12.588180000000136], [22.03759, 12.95546], [22.29658, 13.37232], [22.18329, 13.78648], [22.51202, 14.09318], [22.30351, 14.32682], [22.56795000000011, 14.944290000000137], [23.024590000000103, 15.68072], [23.886890000000108, 15.61084], [23.837660000000142, 19.580470000000105], [23.850000000000136, 20.0], [25.000000000000114, 20.00304], [25.000000000000114, 22.0], [29.02, 22.0], [32.9, 22.0], [36.86623, 22.0], [37.188720000000103, 21.01885], [36.96941, 20.837440000000129], [37.114700000000141, 19.80796], [37.481790000000103, 18.61409], [37.86276, 18.36786], [38.410089959473225, 17.998307399970315], [37.90400000000011, 17.42754], [37.16747, 17.263140000000135], [36.852530000000115, 16.95655], [36.75389, 16.29186], [36.32322, 14.82249], [36.42951, 14.42211], [36.27022, 13.563330000000121], [35.86363, 12.57828], [35.26049, 12.08286], [34.831630000000132, 11.318960000000118], [34.731150000000127, 10.910170000000107], [34.25745, 10.63009], [33.96162, 9.58358], [33.963392794971185, 9.464285229420625]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "South Sudan",
      "sov_a3": "SDS",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "South Sudan",
      "adm0_a3": "SDS",
      "geou_dif": 0.000000,
      "geounit": "South Sudan",
      "gu_a3": "SDS",
      "su_dif": 0.000000,
      "subunit": "South Sudan",
      "su_a3": "SDS",
      "brk_diff": 0.000000,
      "name": "S. Sudan",
      "name_long": "South Sudan",
      "brk_a3": "SDS",
      "brk_name": "S. Sudan",
      "brk_group": null,
      "abbrev": "S. Sud.",
      "postal": "SS",
      "formal_en": "Republic of South Sudan",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "South Sudan",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 5.000000,
      "pop_est": 10625176.000000,
      "gdp_md_est": 13227.000000,
      "pop_year": -99.000000,
      "lastcensus": 2008.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "SS",
      "iso_a3": "SSD",
      "iso_n3": "728",
      "un_a3": "728",
      "wb_a2": "SS",
      "wb_a3": "SSD",
      "woe_id": -99.000000,
      "adm0_a3_is": "SSD",
      "adm0_a3_us": "SDS",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 8.000000,
      "long_len": 11.000000,
      "abbrev_len": 7.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[33.963392794971185, 9.464285229420625], [33.97498, 8.68456], [33.825500000000147, 8.37916], [33.294800000000123, 8.35458], [32.95418, 7.784970000000101], [33.568290000000104, 7.71334], [34.0751, 7.22595], [34.25032, 6.82607], [34.70702, 6.594220000000121], [35.298007118233102, 5.506], [34.620196267853942, 4.847122742082036], [34.005, 4.249884947362148], [33.3900000000001, 3.79], [32.68642, 3.79232], [31.881450000000143, 3.55827], [31.24556, 3.7819], [30.83385, 3.50917], [29.95349, 4.1737], [29.71599531425602, 4.600804755060153], [29.159078403446642, 4.389267279473245], [28.696677687298802, 4.455077215996994], [28.428993768026999, 4.287154649264608], [27.979977247842953, 4.408413397637389], [27.374226108517632, 5.233944403500175], [27.213409051225256, 5.550953477394614], [26.465909458123292, 5.946717434101856], [26.21341840994512, 6.546603298362129], [25.796647983511264, 6.97931590415817], [25.124130893664812, 7.500085150579423], [25.114932488716875, 7.825104071479245], [24.567369012152199, 8.229187933785454], [23.886979580860668, 8.619729712933065], [24.19406772118765, 8.728696472403897], [24.53741516360202, 8.91753756573172], [24.794925745412684, 9.810240916008695], [25.069603699343986, 10.273759963267992], [25.790633328413946, 10.411098940233728], [25.962307049621018, 10.136420986302426], [26.477328213242515, 9.552730334198088], [26.752006167173818, 9.466893473594496], [27.112520981708883, 9.638567194801624], [27.833550610778786, 9.604232450560289], [27.970889587744352, 9.398223985111656], [28.966597170745786, 9.398223985111656], [29.000931914987177, 9.604232450560289], [29.515953078608618, 9.793073543888056], [29.618957311332849, 10.084918869940225], [29.996639497988554, 10.290927335388687], [30.837840731903384, 9.70723668328452], [31.352861895524882, 9.810240916008695], [31.850715687025513, 10.531270545078826], [32.400071594888345, 11.080626452941488], [32.314234734284753, 11.681484477166521], [32.073891524594785, 11.973329803218519], [32.674749548819648, 12.02483191958072], [32.743419037302544, 12.248007757149992], [33.206938084561784, 12.179338268667095], [33.086766479716744, 11.441141267476496], [33.206938084561784, 10.720111638406593], [33.721959248183111, 10.325262079630193], [33.842130853028152, 9.981914637215993], [33.824963480907513, 9.484060845715362], [33.963392794971185, 9.464285229420625]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Senegal",
      "sov_a3": "SEN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Senegal",
      "adm0_a3": "SEN",
      "geou_dif": 0.000000,
      "geounit": "Senegal",
      "gu_a3": "SEN",
      "su_dif": 0.000000,
      "subunit": "Senegal",
      "su_a3": "SEN",
      "brk_diff": 0.000000,
      "name": "Senegal",
      "name_long": "Senegal",
      "brk_a3": "SEN",
      "brk_name": "Senegal",
      "brk_group": null,
      "abbrev": "Sen.",
      "postal": "SN",
      "formal_en": "Republic of Senegal",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Senegal",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 5.000000,
      "pop_est": 13711597.000000,
      "gdp_md_est": 21980.000000,
      "pop_year": -99.000000,
      "lastcensus": 2002.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "SN",
      "iso_a3": "SEN",
      "iso_n3": "686",
      "un_a3": "686",
      "wb_a2": "SN",
      "wb_a3": "SEN",
      "woe_id": -99.000000,
      "adm0_a3_is": "SEN",
      "adm0_a3_us": "SEN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-16.713728807023472, 13.594958604379855], [-17.126106736712615, 14.373515733289224], [-17.625042690490659, 14.729540513564073], [-17.185172898822231, 14.919477240452862], [-16.700706346085923, 15.621527411354108], [-16.463098110407884, 16.13503611903846], [-16.120690070041931, 16.455662543193384], [-15.623666144258692, 16.369337063049812], [-15.135737270558819, 16.587282416240782], [-14.577347581428981, 16.598263658102809], [-14.099521450242179, 16.304302273010492], [-13.435737677453062, 16.039383042866191], [-12.830658331747516, 15.303691514542948], [-12.170750291380301, 14.616834214735505], [-12.124887457721259, 13.994727484589788], [-11.927716030311615, 13.422075100147396], [-11.553397793005431, 13.141213690641067], [-11.467899135778524, 12.754518947800975], [-11.513942836950591, 12.442987575729418], [-11.658300950557932, 12.386582749882836], [-12.203564825885634, 12.465647691289405], [-12.27859900557344, 12.354440008997287], [-12.499050665730564, 12.332089952031057], [-13.217818162478238, 12.575873521367967], [-13.700476040084325, 12.586182969610194], [-15.54847693527401, 12.628170070847347], [-15.816574266004254, 12.515567124883347], [-16.147716844130585, 12.547761542201187], [-16.677451951554573, 12.384851589401052], [-16.841524624081273, 13.151393947802561], [-15.931295945692211, 13.130284125211332], [-15.691000535534995, 13.270353094938457], [-15.511812506562933, 13.278569647672867], [-15.141163295949468, 13.509511623585238], [-14.712197231494628, 13.298206691943777], [-14.277701788784555, 13.280585028532244], [-13.844963344772408, 13.505041612192002], [-14.046992356817482, 13.794067898000449], [-14.376713833055788, 13.625680243377374], [-14.687030808968487, 13.630356960499784], [-15.081735398813819, 13.876491807505985], [-15.39877031092446, 13.860368760630919], [-15.624596320039942, 13.623587347869559], [-16.713728807023472, 13.594958604379855]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Solomon Islands",
      "sov_a3": "SLB",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Solomon Islands",
      "adm0_a3": "SLB",
      "geou_dif": 0.000000,
      "geounit": "Solomon Islands",
      "gu_a3": "SLB",
      "su_dif": 0.000000,
      "subunit": "Solomon Islands",
      "su_a3": "SLB",
      "brk_diff": 0.000000,
      "name": "Solomon Is.",
      "name_long": "Solomon Islands",
      "brk_a3": "SLB",
      "brk_name": "Solomon Is.",
      "brk_group": null,
      "abbrev": "S. Is.",
      "postal": "SB",
      "formal_en": null,
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Solomon Islands",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 6.000000,
      "pop_est": 595613.000000,
      "gdp_md_est": 1078.000000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "SB",
      "iso_a3": "SLB",
      "iso_n3": "090",
      "un_a3": "090",
      "wb_a2": "SB",
      "wb_a3": "SLB",
      "woe_id": -99.000000,
      "adm0_a3_is": "SLB",
      "adm0_a3_us": "SLB",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Oceania",
      "region_un": "Oceania",
      "subregion": "Melanesia",
      "region_wb": "East Asia & Pacific",
      "name_len": 11.000000,
      "long_len": 15.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[162.11902469304087, -10.482719008021135], [162.398645868172224, -10.826367282762121], [161.700032180018383, -10.820011081590224], [161.319796991214758, -10.204751478723125], [161.91738325423799, -10.446700534713656], [162.11902469304087, -10.482719008021135]]], [[[160.85222863183796, -9.872937106977005], [160.462588332357285, -9.895209649294841], [159.849447463214204, -9.794027194867368], [159.640002883135168, -9.639979750205271], [159.702944777666659, -9.242949720906779], [160.362956170898457, -9.400304457235535], [160.688517694337207, -9.610162448772812], [160.85222863183796, -9.872937106977005]]], [[[161.679981724289149, -9.599982191611375], [161.529396600590559, -9.784312025596435], [160.788253208660564, -8.91754322676492], [160.579997186524366, -8.320008640173967], [160.920028111004939, -8.320008640173967], [161.280006138349989, -9.120011488484451], [161.679981724289149, -9.599982191611375]]], [[[159.875027297198613, -8.337320244991716], [159.917401971678004, -8.538289890174866], [159.133677199539392, -8.1141814103554], [158.586113722974716, -7.754823500197716], [158.211149530264862, -7.421872246941149], [158.359977655265453, -7.320017998893917], [158.820001255527728, -7.560003350457393], [159.640002883135168, -8.020026950719569], [159.875027297198613, -8.337320244991716]]], [[[157.538425734689298, -7.347819919466929], [157.339419793933274, -7.404767347852555], [156.902030471014797, -7.176874281445393], [156.491357863591332, -6.765943291860395], [156.542827590153962, -6.59933847415148], [157.140000441718911, -7.021638278840655], [157.538425734689298, -7.347819919466929]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Sierra Leone",
      "sov_a3": "SLE",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Sierra Leone",
      "adm0_a3": "SLE",
      "geou_dif": 0.000000,
      "geounit": "Sierra Leone",
      "gu_a3": "SLE",
      "su_dif": 0.000000,
      "subunit": "Sierra Leone",
      "su_a3": "SLE",
      "brk_diff": 0.000000,
      "name": "Sierra Leone",
      "name_long": "Sierra Leone",
      "brk_a3": "SLE",
      "brk_name": "Sierra Leone",
      "brk_group": null,
      "abbrev": "S.L.",
      "postal": "SL",
      "formal_en": "Republic of Sierra Leone",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Sierra Leone",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 7.000000,
      "pop_est": 6440053.000000,
      "gdp_md_est": 4285.000000,
      "pop_year": -99.000000,
      "lastcensus": 2004.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "SL",
      "iso_a3": "SLE",
      "iso_n3": "694",
      "un_a3": "694",
      "wb_a2": "SL",
      "wb_a3": "SLE",
      "woe_id": -99.000000,
      "adm0_a3_is": "SLE",
      "adm0_a3_us": "SLE",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 12.000000,
      "long_len": 12.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-11.438779466182055, 6.785916856305747], [-11.70819454593574, 6.860098374860726], [-12.428098924193819, 7.26294200279203], [-12.949049038128194, 7.798645738145738], [-13.124025437868482, 8.163946438016978], [-13.246550258832515, 8.903048610871508], [-12.71195756677308, 9.342711696810767], [-12.59671912276221, 9.620188300001971], [-12.425928514037565, 9.835834051955956], [-12.150338100625005, 9.858571682164381], [-11.917277390988659, 10.046983954300558], [-11.11748124840733, 10.045872911006285], [-10.839151984083301, 9.688246161330369], [-10.622395188835041, 9.267910061068278], [-10.654770473665891, 8.977178452994195], [-10.494315151399633, 8.715540676300435], [-10.505477260774668, 8.348896389189605], [-10.23009355309128, 8.406205552601293], [-10.695594855176481, 7.939464016141088], [-11.146704270868383, 7.396706447779536], [-11.199801805048279, 7.105845648624737], [-11.438779466182055, 6.785916856305747]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "El Salvador",
      "sov_a3": "SLV",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "El Salvador",
      "adm0_a3": "SLV",
      "geou_dif": 0.000000,
      "geounit": "El Salvador",
      "gu_a3": "SLV",
      "su_dif": 0.000000,
      "subunit": "El Salvador",
      "su_a3": "SLV",
      "brk_diff": 0.000000,
      "name": "El Salvador",
      "name_long": "El Salvador",
      "brk_a3": "SLV",
      "brk_name": "El Salvador",
      "brk_group": null,
      "abbrev": "El. S.",
      "postal": "SV",
      "formal_en": "Republic of El Salvador",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "El Salvador",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 8.000000,
      "pop_est": 7185218.000000,
      "gdp_md_est": 43630.000000,
      "pop_year": -99.000000,
      "lastcensus": 2007.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "SV",
      "iso_a3": "SLV",
      "iso_n3": "222",
      "un_a3": "222",
      "wb_a2": "SV",
      "wb_a3": "SLV",
      "woe_id": -99.000000,
      "adm0_a3_is": "SLV",
      "adm0_a3_us": "SLV",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Central America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 11.000000,
      "long_len": 11.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-87.793111131526572, 13.384480495655055], [-87.904112108089521, 13.149016831917137], [-88.48330156121682, 13.163951320849492], [-88.84322791212972, 13.259733588102478], [-89.256742723329296, 13.458532823129303], [-89.812393561547665, 13.520622056527998], [-90.095554572290979, 13.735337632700734], [-90.064677903996596, 13.881969509328925], [-89.721933966820728, 14.134228013561696], [-89.534219326520514, 14.244815578666305], [-89.587342698916558, 14.36258616785949], [-89.3533259752828, 14.424132798719114], [-89.058511929057659, 14.340029405164087], [-88.843072882832843, 14.140506700085171], [-88.541230841816002, 13.980154730683479], [-88.503997972349708, 13.845485948130857], [-88.065342576840138, 13.964625962779778], [-87.859515347021599, 13.893312486216983], [-87.723502977229401, 13.785050360565506], [-87.793111131526572, 13.384480495655055]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Somaliland",
      "sov_a3": "SOL",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Indeterminate",
      "admin": "Somaliland",
      "adm0_a3": "SOL",
      "geou_dif": 0.000000,
      "geounit": "Somaliland",
      "gu_a3": "SOL",
      "su_dif": 0.000000,
      "subunit": "Somaliland",
      "su_a3": "SOL",
      "brk_diff": 1.000000,
      "name": "Somaliland",
      "name_long": "Somaliland",
      "brk_a3": "B30",
      "brk_name": "Somaliland",
      "brk_group": null,
      "abbrev": "Solnd.",
      "postal": "SL",
      "formal_en": "Republic of Somaliland",
      "formal_fr": null,
      "note_adm0": "Self admin.",
      "note_brk": "Self admin.; Claimed by Somalia",
      "name_sort": "Somaliland",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 2.000000,
      "pop_est": 3500000.000000,
      "gdp_md_est": 12250.000000,
      "pop_year": -99.000000,
      "lastcensus": -99.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "-99",
      "iso_a3": "-99",
      "iso_n3": "-99",
      "un_a3": "-099",
      "wb_a2": "-99",
      "wb_a3": "-99",
      "woe_id": -99.000000,
      "adm0_a3_is": "SOM",
      "adm0_a3_us": "SOM",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 10.000000,
      "long_len": 10.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[48.938129510296505, 9.451748968946674], [48.486735874227008, 8.837626247589981], [47.78942, 8.003], [46.948328484897957, 7.996876532417389], [43.67875, 9.18358000000012], [43.296975132018758, 9.540477403191744], [42.92812, 10.021940000000143], [42.55876, 10.57258000000013], [42.776851841000962, 10.92687856693442], [43.145304803242141, 11.462039699748857], [43.470659620951665, 11.277709865763882], [43.666668328634842, 10.864169216348159], [44.11780358254282, 10.445538438351605], [44.614259067570856, 10.442205308468942], [45.556940545439147, 10.698029486529776], [46.645401238803004, 10.816549383991173], [47.525657586462785, 11.12722809492999], [48.021596307167783, 11.193063869669743], [48.37878380716927, 11.375481675660126], [48.948206414593471, 11.41062164961852], [48.942005242718437, 11.394266058798166], [48.938491245322609, 10.982327378783452], [48.93823286316109, 9.973500067581483], [48.938129510296505, 9.451748968946674]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Somalia",
      "sov_a3": "SOM",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Somalia",
      "adm0_a3": "SOM",
      "geou_dif": 0.000000,
      "geounit": "Somalia",
      "gu_a3": "SOM",
      "su_dif": 0.000000,
      "subunit": "Somalia",
      "su_a3": "SOM",
      "brk_diff": 0.000000,
      "name": "Somalia",
      "name_long": "Somalia",
      "brk_a3": "SOM",
      "brk_name": "Somalia",
      "brk_group": null,
      "abbrev": "Som.",
      "postal": "SO",
      "formal_en": "Federal Republic of Somalia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Somalia",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 8.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 7.000000,
      "pop_est": 9832017.000000,
      "gdp_md_est": 5524.000000,
      "pop_year": -99.000000,
      "lastcensus": 1987.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "SO",
      "iso_a3": "SOM",
      "iso_n3": "706",
      "un_a3": "706",
      "wb_a2": "SO",
      "wb_a3": "SOM",
      "woe_id": -99.000000,
      "adm0_a3_is": "SOM",
      "adm0_a3_us": "SOM",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[49.72862, 11.5789], [50.25878, 11.67957], [50.73202, 12.0219], [51.1112, 12.02464], [51.13387, 11.74815], [51.04153, 11.16651], [51.04531, 10.6409], [50.83418, 10.27972], [50.55239, 9.19874], [50.07092, 8.08173], [49.4527, 6.80466], [48.59455, 5.33911], [47.74079, 4.2194], [46.56476, 2.85529], [45.56399, 2.04576], [44.06815, 1.05283], [43.13597, 0.2922], [42.04157, -0.91916], [41.81095, -1.44647], [41.58513, -1.68325], [40.993, -0.85829], [40.98105, 2.78452], [41.855083092643973, 3.918911920483727], [42.12861, 4.23413], [42.76967, 4.25259], [43.66087, 4.95755], [44.9636, 5.00162], [47.78942, 8.003], [48.486735874226952, 8.837626247589995], [48.938129510296449, 9.451748968946617], [48.938232863161033, 9.973500067581512], [48.938491245322496, 10.982327378783467], [48.942005242718352, 11.394266058798138], [48.948204758509739, 11.410617281697963], [49.26776, 11.43033], [49.72862, 11.5789]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Republic of Serbia",
      "sov_a3": "SRB",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Republic of Serbia",
      "adm0_a3": "SRB",
      "geou_dif": 0.000000,
      "geounit": "Republic of Serbia",
      "gu_a3": "SRB",
      "su_dif": 0.000000,
      "subunit": "Republic of Serbia",
      "su_a3": "SRB",
      "brk_diff": 0.000000,
      "name": "Serbia",
      "name_long": "Serbia",
      "brk_a3": "SRB",
      "brk_name": "Serbia",
      "brk_group": null,
      "abbrev": "Serb.",
      "postal": "RS",
      "formal_en": "Republic of Serbia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Serbia",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 10.000000,
      "pop_est": 7379339.000000,
      "gdp_md_est": 80340.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "RS",
      "iso_a3": "SRB",
      "iso_n3": "688",
      "un_a3": "688",
      "wb_a2": "YF",
      "wb_a3": "SRB",
      "woe_id": -99.000000,
      "adm0_a3_is": "SRB",
      "adm0_a3_us": "SRB",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Southern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[20.874312778413412, 45.41637543393432], [21.483526238702211, 45.181170152357879], [21.562022739353722, 44.768947251965642], [22.145087924902896, 44.478422349620587], [22.459022251075965, 44.702517198254441], [22.705725538837441, 44.578002834647009], [22.474008416440654, 44.409227606781769], [22.657149692483074, 44.234923000661354], [22.410446404721597, 44.008063462900054], [22.500156691180223, 43.642814439461006], [22.986018507588483, 43.211161200527101], [22.604801466571359, 42.898518785161116], [22.436594679461393, 42.580321153323951], [22.54501183440965, 42.46136200618804], [22.380525750424681, 42.320259507815081], [21.917080000000112, 42.30364], [21.576635989402121, 42.245224397061861], [21.54332, 42.320250000000101], [21.66292, 42.43922], [21.77505, 42.6827], [21.63302, 42.67717], [21.43866, 42.86255], [21.27421, 42.90959], [21.143395, 43.06868500000013], [20.95651, 43.13094], [20.81448, 43.27205], [20.63508, 43.21671], [20.49679, 42.88469], [20.25758, 42.812750000000108], [20.3398, 42.89852], [19.95857, 43.10604], [19.63, 43.213779970270537], [19.48389, 43.35229], [19.21852, 43.52384], [19.454, 43.568100000000129], [19.59976, 44.03847], [19.11761, 44.423070000000109], [19.36803, 44.863], [19.00548, 44.86023], [19.390475701584592, 45.236515611342384], [19.072768995854176, 45.521511135432092], [18.82982, 45.90888], [19.59604454924164, 46.171729844744561], [20.220192498462893, 46.127468980486583], [20.762174920339987, 45.734573065771485], [20.874312778413412, 45.41637543393432]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Suriname",
      "sov_a3": "SUR",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Suriname",
      "adm0_a3": "SUR",
      "geou_dif": 0.000000,
      "geounit": "Suriname",
      "gu_a3": "SUR",
      "su_dif": 0.000000,
      "subunit": "Suriname",
      "su_a3": "SUR",
      "brk_diff": 0.000000,
      "name": "Suriname",
      "name_long": "Suriname",
      "brk_a3": "SUR",
      "brk_name": "Suriname",
      "brk_group": null,
      "abbrev": "Sur.",
      "postal": "SR",
      "formal_en": "Republic of Suriname",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Suriname",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 7.000000,
      "mapcolor13": 6.000000,
      "pop_est": 481267.000000,
      "gdp_md_est": 4254.000000,
      "pop_year": -99.000000,
      "lastcensus": 2004.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "SR",
      "iso_a3": "SUR",
      "iso_n3": "740",
      "un_a3": "740",
      "wb_a2": "SR",
      "wb_a3": "SUR",
      "woe_id": -99.000000,
      "adm0_a3_is": "SUR",
      "adm0_a3_us": "SUR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "South America",
      "region_un": "Americas",
      "subregion": "South America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-57.147436489476888, 5.973149929219161], [-55.9493184067898, 5.772877915872002], [-55.841779751190415, 5.95312531170606], [-55.033250291551774, 6.025291449401664], [-53.958044603070903, 5.756548163267765], [-54.478632981979231, 4.896755682795586], [-54.399542202356514, 4.212611395683467], [-54.006930508019011, 3.620037746592558], [-54.181726040246275, 3.189779771330421], [-54.269705166223197, 2.732391669115046], [-54.524754197799716, 2.311848863123785], [-55.097587449755139, 2.523748073736613], [-55.569755011605999, 2.421506252447131], [-55.973322109589375, 2.510363877773017], [-56.073341844290297, 2.220794989425499], [-55.905600145070885, 2.02199575439866], [-55.995698004771754, 1.817667141116601], [-56.539385748914555, 1.899522609866921], [-57.150097825739913, 2.768926906745406], [-57.28143347840971, 3.333491929534119], [-57.60156897645787, 3.334654649260685], [-58.044694383360678, 4.060863552258382], [-57.860209520078698, 4.57680105226045], [-57.914288906472137, 4.812626451024414], [-57.307245856339506, 5.073566595882227], [-57.147436489476888, 5.973149929219161]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Slovakia",
      "sov_a3": "SVK",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Slovakia",
      "adm0_a3": "SVK",
      "geou_dif": 0.000000,
      "geounit": "Slovakia",
      "gu_a3": "SVK",
      "su_dif": 0.000000,
      "subunit": "Slovakia",
      "su_a3": "SVK",
      "brk_diff": 0.000000,
      "name": "Slovakia",
      "name_long": "Slovakia",
      "brk_a3": "SVK",
      "brk_name": "Slovakia",
      "brk_group": null,
      "abbrev": "Svk.",
      "postal": "SK",
      "formal_en": "Slovak Republic",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Slovak Republic",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 9.000000,
      "pop_est": 5463046.000000,
      "gdp_md_est": 119500.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "SK",
      "iso_a3": "SVK",
      "iso_n3": "703",
      "un_a3": "703",
      "wb_a2": "SK",
      "wb_a3": "SVK",
      "woe_id": -99.000000,
      "adm0_a3_is": "SVK",
      "adm0_a3_us": "SVK",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Eastern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[18.853144158613617, 49.496229763377642], [18.909574822676319, 49.435845852244576], [19.320712517990472, 49.571574001659194], [19.825022820726872, 49.217125352569226], [20.415839471119853, 49.431453355499769], [20.887955356538413, 49.32877228453583], [21.607808058364213, 49.470107326854091], [22.558137648211755, 49.085738023467144], [22.28084191253356, 48.825392157580673], [22.085608351334855, 48.422264309271789], [21.872236362401736, 48.319970811550021], [20.801293979584926, 48.623854071642384], [20.473562045989866, 48.562850043321816], [20.239054396249347, 48.327567247096923], [19.769470656013112, 48.202691148463614], [19.661363559658497, 48.266614895208662], [19.174364861739889, 48.111378892603867], [18.777024773847671, 48.081768296900634], [18.696512892336926, 47.880953681014404], [17.857132602620027, 47.758428860050373], [17.48847293464982, 47.867466132186216], [16.979666782304037, 48.123497015976305], [16.879982944413001, 48.47001333270947], [16.960288120194576, 48.5969823268506], [17.101984897538898, 48.816968899117114], [17.545006951577108, 48.80001902932537], [17.886484816161811, 48.903475246773709], [17.913511590250465, 48.996492824899086], [18.104972771891852, 49.043983466175312], [18.170498488037964, 49.271514797556435], [18.399993523846177, 49.315000515330041], [18.554971144289482, 49.495015367218784], [18.853144158613617, 49.496229763377642]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Slovenia",
      "sov_a3": "SVN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Slovenia",
      "adm0_a3": "SVN",
      "geou_dif": 0.000000,
      "geounit": "Slovenia",
      "gu_a3": "SVN",
      "su_dif": 0.000000,
      "subunit": "Slovenia",
      "su_a3": "SVN",
      "brk_diff": 0.000000,
      "name": "Slovenia",
      "name_long": "Slovenia",
      "brk_a3": "SVN",
      "brk_name": "Slovenia",
      "brk_group": null,
      "abbrev": "Slo.",
      "postal": "SLO",
      "formal_en": "Republic of Slovenia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Slovenia",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 12.000000,
      "pop_est": 2005692.000000,
      "gdp_md_est": 59340.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "SI",
      "iso_a3": "SVN",
      "iso_n3": "705",
      "un_a3": "705",
      "wb_a2": "SI",
      "wb_a3": "SVN",
      "woe_id": -99.000000,
      "adm0_a3_is": "SVN",
      "adm0_a3_us": "SVN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Southern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[13.806475457421527, 46.509306138691215], [14.632471551174829, 46.431817328469549], [15.137091912504985, 46.65870270444703], [16.011663852612656, 46.683610744811702], [16.202298211337364, 46.852385972676963], [16.370504998447416, 46.841327216166505], [16.564808383864857, 46.50375092221983], [15.768732944408553, 46.238108222023449], [15.671529575267556, 45.834153550797879], [15.323953891672405, 45.73178253842768], [15.327674594797429, 45.452316392593232], [14.935243767972935, 45.471695054702685], [14.595109490627806, 45.634940904312714], [14.411968214585414, 45.46616567644746], [13.715059848697223, 45.500323798192376], [13.937630242578308, 45.591015936864622], [13.698109978905478, 46.016778062517353], [13.806475457421527, 46.509306138691215]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Sweden",
      "sov_a3": "SWE",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Sweden",
      "adm0_a3": "SWE",
      "geou_dif": 0.000000,
      "geounit": "Sweden",
      "gu_a3": "SWE",
      "su_dif": 0.000000,
      "subunit": "Sweden",
      "su_a3": "SWE",
      "brk_diff": 0.000000,
      "name": "Sweden",
      "name_long": "Sweden",
      "brk_a3": "SWE",
      "brk_name": "Sweden",
      "brk_group": null,
      "abbrev": "Swe.",
      "postal": "S",
      "formal_en": "Kingdom of Sweden",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Sweden",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 4.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 4.000000,
      "pop_est": 9059651.000000,
      "gdp_md_est": 344300.000000,
      "pop_year": -99.000000,
      "lastcensus": -99.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "1. High income: OECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "SE",
      "iso_a3": "SWE",
      "iso_n3": "752",
      "un_a3": "752",
      "wb_a2": "SE",
      "wb_a3": "SWE",
      "woe_id": -99.000000,
      "adm0_a3_is": "SWE",
      "adm0_a3_us": "SWE",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Northern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[22.18317345550193, 65.723740546320172], [21.21351687997722, 65.026005357515274], [21.369631381930958, 64.413587958424287], [19.77887576669022, 63.609554348395037], [17.847779168375212, 62.74940013289681], [17.119554884518124, 61.341165676510968], [17.831346062906391, 60.636583360427409], [18.787721795332089, 60.081914374422595], [17.86922488777634, 58.953766181058697], [16.829185011470088, 58.719826972073392], [16.447709588291474, 57.041118069071885], [15.879785597403783, 56.104301866268663], [14.666681349352075, 56.200885118222175], [14.100721062891465, 55.407781073622651], [12.942910597392057, 55.361737372450577], [12.625100538797028, 56.30708018658197], [11.787942335668674, 57.441817125063068], [11.027368605196868, 58.856149400459358], [11.468271925511146, 59.432393296946039], [12.300365838274899, 60.117932847730032], [12.631146681375185, 61.293571682370136], [11.992064243221563, 61.80036245385655], [11.930569288794231, 63.128317572676977], [12.579935336973934, 64.066218980558332], [13.571916131248713, 64.04911408146971], [13.919905226302204, 64.44542064071608], [13.555689731509091, 64.787027696381514], [15.108411492583002, 66.193866889095474], [16.108712192456778, 67.302455552836889], [16.768878614985482, 68.013936672631402], [17.729181756265348, 68.010551866316277], [17.993868442464333, 68.567391262477358], [19.878559604581255, 68.407194322372575], [20.025268995857886, 69.065138658312705], [20.645592889089528, 69.106247260200874], [21.978534783626117, 68.616845608180697], [23.539473097434438, 67.93600861273525], [23.565879754335583, 66.396050930437426], [23.903378533633802, 66.006927395279618], [22.18317345550193, 65.723740546320172]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Swaziland",
      "sov_a3": "SWZ",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Swaziland",
      "adm0_a3": "SWZ",
      "geou_dif": 0.000000,
      "geounit": "Swaziland",
      "gu_a3": "SWZ",
      "su_dif": 0.000000,
      "subunit": "Swaziland",
      "su_a3": "SWZ",
      "brk_diff": 0.000000,
      "name": "Swaziland",
      "name_long": "Swaziland",
      "brk_a3": "SWZ",
      "brk_name": "Swaziland",
      "brk_group": null,
      "abbrev": "Swz.",
      "postal": "SW",
      "formal_en": "Kingdom of Swaziland",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Swaziland",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 5.000000,
      "pop_est": 1123913.000000,
      "gdp_md_est": 5702.000000,
      "pop_year": -99.000000,
      "lastcensus": 2007.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "SZ",
      "iso_a3": "SWZ",
      "iso_n3": "748",
      "un_a3": "748",
      "wb_a2": "SZ",
      "wb_a3": "SWZ",
      "woe_id": -99.000000,
      "adm0_a3_is": "SWZ",
      "adm0_a3_us": "SWZ",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Southern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 9.000000,
      "long_len": 9.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[32.071665480281069, -26.733820082304909], [31.86806033705108, -27.177927341421277], [31.282773064913329, -27.285879408478998], [30.68596194837448, -26.743845310169533], [30.67660851412964, -26.398078301704608], [30.949666782359913, -26.022649021104151], [31.044079624157149, -25.731452325139443], [31.333157586397903, -25.66019052500895], [31.83777794772806, -25.843331801051349], [31.985779249811969, -26.291779880480227], [32.071665480281069, -26.733820082304909]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Syria",
      "sov_a3": "SYR",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Syria",
      "adm0_a3": "SYR",
      "geou_dif": 0.000000,
      "geounit": "Syria",
      "gu_a3": "SYR",
      "su_dif": 0.000000,
      "subunit": "Syria",
      "su_a3": "SYR",
      "brk_diff": 0.000000,
      "name": "Syria",
      "name_long": "Syria",
      "brk_a3": "SYR",
      "brk_name": "Syria",
      "brk_group": null,
      "abbrev": "Syria",
      "postal": "SYR",
      "formal_en": "Syrian Arab Republic",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Syrian Arab Republic",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 6.000000,
      "pop_est": 20178485.000000,
      "gdp_md_est": 98830.000000,
      "pop_year": -99.000000,
      "lastcensus": 2004.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "SY",
      "iso_a3": "SYR",
      "iso_n3": "760",
      "un_a3": "760",
      "wb_a2": "SY",
      "wb_a3": "SYR",
      "woe_id": -99.000000,
      "adm0_a3_is": "SYR",
      "adm0_a3_us": "SYR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Middle East & North Africa",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "Polygon",
      "coordinates": [[[38.792340529136084, 33.378686428352225], [36.834062127435544, 32.312937526980775], [35.719918247222751, 32.709192409794866], [35.545665317534542, 32.393992011030576], [35.710194693904292, 32.691603793701766], [35.629855044975564, 32.718672746873523], [35.59594269603226, 33.265576037927978], [35.596656615035656, 33.266424721979803], [35.552796665190812, 33.264274807258019], [35.821100701650238, 33.277426459276299], [36.066460402172055, 33.82491242119255], [36.611750115715893, 34.201788641897181], [36.448194207512103, 34.593935248344067], [35.998402540843642, 34.644914048800004], [35.905023227692226, 35.410009467097325], [36.149762811026534, 35.821534735653671], [36.417550083163036, 36.04061697035506], [36.685389031731802, 36.259699205056464], [36.739494256341402, 36.817520453431086], [37.066761102045831, 36.623036200500621], [38.167727492024198, 36.901210435527773], [38.699891391765902, 36.712927354472342], [39.522580193852548, 36.716053778625991], [40.673259311695688, 37.091276353497292], [41.212089471203051, 37.074352321921694], [42.349591098811771, 37.229872544904097], [41.837064243340961, 36.605853786763575], [41.289707472505455, 36.358814602192268], [41.383965285005814, 35.628316555314356], [41.006158888519934, 34.419372260062119], [38.792340529136084, 33.378686428352225]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Chad",
      "sov_a3": "TCD",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Chad",
      "adm0_a3": "TCD",
      "geou_dif": 0.000000,
      "geounit": "Chad",
      "gu_a3": "TCD",
      "su_dif": 0.000000,
      "subunit": "Chad",
      "su_a3": "TCD",
      "brk_diff": 0.000000,
      "name": "Chad",
      "name_long": "Chad",
      "brk_a3": "TCD",
      "brk_name": "Chad",
      "brk_group": null,
      "abbrev": "Chad",
      "postal": "TD",
      "formal_en": "Republic of Chad",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Chad",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 8.000000,
      "mapcolor13": 6.000000,
      "pop_est": 10329208.000000,
      "gdp_md_est": 15860.000000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "TD",
      "iso_a3": "TCD",
      "iso_n3": "148",
      "un_a3": "148",
      "wb_a2": "TD",
      "wb_a3": "TCD",
      "woe_id": -99.000000,
      "adm0_a3_is": "TCD",
      "adm0_a3_us": "TCD",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Middle Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 4.000000,
      "long_len": 4.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[14.495787387762903, 12.859396267137356], [14.595781284247607, 13.330426947477861], [13.95447675950561, 13.353448798063766], [13.956698846094127, 13.996691189016929], [13.540393507550789, 14.367133693901224], [13.97217, 15.68437], [15.247731154041844, 16.627305813050782], [15.300441114979719, 17.927949937405003], [15.685740594147774, 19.957180080642388], [15.903246697664315, 20.387618923417506], [15.487148064850146, 20.730414537025638], [15.47106, 21.04845], [15.096887648181848, 21.308518785074909], [14.8513, 22.862950000000126], [15.86085, 23.40972], [19.84926, 21.49509], [23.837660000000142, 19.580470000000105], [23.886890000000108, 15.61084], [23.024590000000103, 15.68072], [22.56795000000011, 14.944290000000137], [22.30351, 14.32682], [22.51202, 14.09318], [22.18329, 13.78648], [22.29658, 13.37232], [22.03759, 12.95546], [21.93681, 12.588180000000136], [22.28801, 12.64605], [22.49762, 12.26024], [22.50869, 11.67936], [22.87622, 11.384610000000123], [22.864165480244253, 11.142395127807617], [22.23112918466876, 10.97188873946061], [21.723821648859541, 10.567055568885962], [21.000868361096309, 9.47598521569148], [20.059685499764271, 9.012706000194839], [19.094008009526078, 9.074846910025769], [18.812009718509273, 8.982914536978626], [18.911021762780592, 8.630894680206438], [18.389554884523307, 8.281303615751881], [17.964929640380888, 7.890914008002994], [16.705988396886369, 7.508327541529979], [16.456184523187403, 7.73477366783294], [16.290561557691888, 7.754307359239419], [16.106231723706742, 7.497087917506462], [15.279460483469165, 7.421924546738012], [15.436091749745742, 7.692812404811889], [15.120865512765306, 8.382150173369439], [14.979995558337691, 8.796104234243444], [14.544466586981855, 8.96586131432224], [13.954218377344091, 9.549494940626687], [14.171466098699113, 10.021378282100045], [14.62720055508106, 9.920919297724595], [14.9093538753948, 9.99212942142276], [15.467872755605242, 9.982336737503545], [14.923564894275046, 10.891325181517516], [14.960151808337685, 11.555574042197236], [14.89336, 12.21905], [14.495787387762903, 12.859396267137356]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 6.000000,
      "sovereignt": "Togo",
      "sov_a3": "TGO",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Togo",
      "adm0_a3": "TGO",
      "geou_dif": 0.000000,
      "geounit": "Togo",
      "gu_a3": "TGO",
      "su_dif": 0.000000,
      "subunit": "Togo",
      "su_a3": "TGO",
      "brk_diff": 0.000000,
      "name": "Togo",
      "name_long": "Togo",
      "brk_a3": "TGO",
      "brk_name": "Togo",
      "brk_group": null,
      "abbrev": "Togo",
      "postal": "TG",
      "formal_en": "Togolese Republic",
      "formal_fr": "Rpublique Togolaise",
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Togo",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 5.000000,
      "pop_est": 6019877.000000,
      "gdp_md_est": 5118.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "TG",
      "iso_a3": "TGO",
      "iso_n3": "768",
      "un_a3": "768",
      "wb_a2": "TG",
      "wb_a3": "TGO",
      "woe_id": -99.000000,
      "adm0_a3_is": "TGO",
      "adm0_a3_us": "TGO",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Western Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 4.000000,
      "long_len": 4.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[1.865240512712319, 6.142157701029731], [1.060121697604927, 5.928837388528876], [0.836931186536333, 6.279978745952149], [0.570384148774849, 6.914358628767189], [0.490957472342245, 7.411744289576475], [0.712029249686879, 8.312464504423829], [0.461191847342121, 8.677222601756014], [0.365900506195885, 9.465003973829482], [0.367579990245389, 10.19121287682718], [-0.049784715159944, 10.706917832883931], [0.023802524423701, 11.018681748900804], [0.899563022474069, 10.99733938236426], [0.772335646171484, 10.470808213742359], [1.077795037448738, 10.175606594275024], [1.425060662450136, 9.825395412633], [1.46304284018467, 9.334624335157088], [1.664477573258381, 9.128590399609379], [1.618950636409238, 6.832038072126238], [1.865240512712319, 6.142157701029731]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Thailand",
      "sov_a3": "THA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Thailand",
      "adm0_a3": "THA",
      "geou_dif": 0.000000,
      "geounit": "Thailand",
      "gu_a3": "THA",
      "su_dif": 0.000000,
      "subunit": "Thailand",
      "su_a3": "THA",
      "brk_diff": 0.000000,
      "name": "Thailand",
      "name_long": "Thailand",
      "brk_a3": "THA",
      "brk_name": "Thailand",
      "brk_group": null,
      "abbrev": "Thai.",
      "postal": "TH",
      "formal_en": "Kingdom of Thailand",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Thailand",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 8.000000,
      "mapcolor13": 1.000000,
      "pop_est": 65905410.000000,
      "gdp_md_est": 547400.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "TH",
      "iso_a3": "THA",
      "iso_n3": "764",
      "un_a3": "764",
      "wb_a2": "TH",
      "wb_a3": "THA",
      "woe_id": -99.000000,
      "adm0_a3_is": "THA",
      "adm0_a3_us": "THA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "South-Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[102.584932489026698, 12.186594956913282], [101.687157830819956, 12.645740057826572], [100.831809523524868, 12.627084865769206], [100.978467238369205, 13.412721665902566], [100.097797479251113, 13.406856390837433], [100.018732537844556, 12.307001044153354], [99.47892052612363, 10.846366685423547], [99.153772414143162, 9.963061428258555], [99.222398716226763, 9.239255479362427], [99.873831821698133, 9.20786204674512], [100.279646844486223, 8.295152899606052], [100.459274123132758, 7.429572658717177], [101.017327915452725, 6.856868597842478], [101.62307905477806, 6.74062246340192], [102.141186964936381, 6.221636053894628], [101.814281854257985, 5.810808417174242], [101.154218784593866, 5.691384182147715], [101.075515578213356, 6.204867051615921], [100.259596388756961, 6.642824815289543], [100.085756870527106, 6.464489447450291], [99.690690545655755, 6.848212795433597], [99.519641554769635, 7.34345388430276], [98.988252801512303, 7.907993068875328], [98.503786248775995, 8.382305202666288], [98.339661899817003, 7.794511623562386], [98.150009393305822, 8.350007432483878], [98.259150018306258, 8.973922837759801], [98.553550653073046, 9.932959906448545], [99.038120558673981, 10.960545762572437], [99.587286004639722, 11.892762762901697], [99.196353794351666, 12.80474843998867], [99.212011753336085, 13.269293728076464], [99.097755161538757, 13.827502549693278], [98.430819126379873, 14.622027696180837], [98.192074009191401, 15.123702500870351], [98.537375929765716, 15.308497422746084], [98.903348423256759, 16.177824204976119], [98.49376102091135, 16.837835598207931], [97.859122755934862, 17.567946071843664], [97.375896437573545, 18.445437730375815], [97.797782830804408, 18.627080389881755], [98.25372399291561, 19.708203029860044], [98.959675734454876, 19.752980658440947], [99.543309360759309, 20.186597601802063], [100.115987583417848, 20.417849636308187], [100.548881056726884, 20.109237982661128], [100.606293573003157, 19.508344427971224], [101.282014601651696, 19.462584947176765], [101.035931431077771, 18.408928330961615], [101.059547560635167, 17.51249725999449], [102.113591750092482, 18.109101670804165], [102.413004998791621, 17.932781683824288], [102.998705682387708, 17.961694647691601], [103.20019209189374, 18.309632066312773], [103.956476678485302, 18.240954087796879], [104.716947056092494, 17.428858954330082], [104.779320509868796, 16.441864935771449], [105.589038527450157, 15.570316066952858], [105.544338413517693, 14.723933620660418], [105.218776890078885, 14.273211778210694], [104.281418084736615, 14.416743068901367], [102.988422072361629, 14.225721136934467], [102.348099399833018, 13.394247341358223], [102.584932489026698, 12.186594956913282]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Tajikistan",
      "sov_a3": "TJK",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Tajikistan",
      "adm0_a3": "TJK",
      "geou_dif": 0.000000,
      "geounit": "Tajikistan",
      "gu_a3": "TJK",
      "su_dif": 0.000000,
      "subunit": "Tajikistan",
      "su_a3": "TJK",
      "brk_diff": 0.000000,
      "name": "Tajikistan",
      "name_long": "Tajikistan",
      "brk_a3": "TJK",
      "brk_name": "Tajikistan",
      "brk_group": null,
      "abbrev": "Tjk.",
      "postal": "TJ",
      "formal_en": "Republic of Tajikistan",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Tajikistan",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 5.000000,
      "pop_est": 7349145.000000,
      "gdp_md_est": 13160.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "TJ",
      "iso_a3": "TJK",
      "iso_n3": "762",
      "un_a3": "762",
      "wb_a2": "TJ",
      "wb_a3": "TJK",
      "woe_id": -99.000000,
      "adm0_a3_is": "TJK",
      "adm0_a3_us": "TJK",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Central Asia",
      "region_wb": "Europe & Central Asia",
      "name_len": 10.000000,
      "long_len": 10.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[71.01419803252017, 40.244365546218233], [70.648018833299972, 39.935753892571171], [69.559609816368521, 40.103211371412982], [69.46488691597753, 39.526683254548701], [70.549161818325615, 39.604197902986499], [71.784693637992007, 39.27946320246437], [73.675379266254794, 39.431236884105601], [73.928852166646436, 38.505815334622739], [74.257514276022732, 38.606506862943448], [74.864815708316826, 38.378846340481601], [74.829985792952101, 37.990007025701402], [74.980002475895418, 37.419990139305895], [73.9486959166465, 37.4215662704908], [73.260055779925011, 37.495256862939002], [72.636889682917285, 37.047558091778356], [72.193040805962397, 36.948287665345674], [71.844638299450594, 36.738171291646921], [71.448693475230243, 37.06564484308052], [71.541917759084782, 37.905774441065645], [71.239403924448169, 37.953265082341886], [71.348131137990265, 38.258905341132163], [70.806820509732887, 38.486281643216415], [70.376304152309302, 38.138395901027522], [70.270574171840138, 37.735164699854025], [70.116578403610333, 37.588222764632093], [69.518785434857961, 37.60899669041342], [69.196272820924378, 37.151143500307427], [68.859445835245936, 37.344335842430596], [68.135562371701383, 37.023115139304309], [67.829999627559516, 37.144994004864685], [68.392032505165957, 38.157025254868742], [68.176025018185925, 38.901553453113905], [67.442219679641312, 39.140143541005486], [67.701428664017357, 39.580478420564532], [68.536416456989429, 39.533452867178937], [69.011632928345506, 40.086158148756667], [69.329494663372827, 40.727824408524853], [70.666622348925046, 40.960213324541414], [70.458159621059622, 40.496494859370287], [70.601406691372688, 40.218527330072291], [71.01419803252017, 40.244365546218233]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Turkmenistan",
      "sov_a3": "TKM",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Turkmenistan",
      "adm0_a3": "TKM",
      "geou_dif": 0.000000,
      "geounit": "Turkmenistan",
      "gu_a3": "TKM",
      "su_dif": 0.000000,
      "subunit": "Turkmenistan",
      "su_a3": "TKM",
      "brk_diff": 0.000000,
      "name": "Turkmenistan",
      "name_long": "Turkmenistan",
      "brk_a3": "TKM",
      "brk_name": "Turkmenistan",
      "brk_group": null,
      "abbrev": "Turkm.",
      "postal": "TM",
      "formal_en": "Turkmenistan",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Turkmenistan",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 9.000000,
      "pop_est": 4884887.000000,
      "gdp_md_est": 29780.000000,
      "pop_year": -99.000000,
      "lastcensus": 1995.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "TM",
      "iso_a3": "TKM",
      "iso_n3": "795",
      "un_a3": "795",
      "wb_a2": "TM",
      "wb_a3": "TKM",
      "woe_id": -99.000000,
      "adm0_a3_is": "TKM",
      "adm0_a3_us": "TKM",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Central Asia",
      "region_wb": "Europe & Central Asia",
      "name_len": 12.000000,
      "long_len": 12.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[61.210817091725744, 35.650072333309225], [61.123070509694145, 36.491597194966246], [60.377637973883878, 36.527383124328367], [59.234761997316809, 37.412987982730343], [58.436154412678206, 37.522309475243802], [57.330433790928986, 38.02922943781094], [56.619366082592819, 38.121394354803485], [56.180374790273333, 37.93512665460743], [55.511578403551908, 37.964117133123167], [54.800303989486565, 37.392420762678185], [53.921597934795557, 37.198918361961262], [53.735511102112518, 37.906136176091692], [53.880928582581845, 38.952093003895357], [53.101027866432901, 39.290573635407128], [53.35780805849123, 39.975286363274449], [52.693972609269821, 40.033629055331971], [52.915251092343624, 40.876523342444727], [53.858139275941134, 40.631034450842179], [54.73684533063215, 40.951014919593462], [54.008310988181314, 41.551210842447418], [53.72171349469059, 42.12319143327003], [52.916749708880076, 41.868116563477329], [52.814688755103617, 41.135370591794711], [52.502459751196149, 41.78331553808637], [52.944293247291654, 42.116034247397593], [54.079417759014952, 42.324109402020831], [54.755345493392639, 42.043971462566574], [55.45525109235377, 41.25985911718584], [55.968191359282912, 41.308641669269363], [57.096391229079103, 41.322310085610567], [56.932215203687804, 41.826026109375604], [57.786529982337079, 42.170552883465518], [58.62901085799146, 42.751551011723052], [59.976422153569786, 42.223081976890207], [60.083340691981675, 41.425146185871405], [60.465952996670694, 41.220326646482548], [61.547178989513561, 41.266370347654615], [61.882714064384693, 41.084856879229406], [62.374260288345006, 40.053886216790389], [63.518014764261032, 39.363256537425642], [64.170223016216767, 38.892406724598246], [65.215998976507393, 38.4026950139843], [66.546150343700219, 37.974684963526869], [66.51860680528867, 37.362784328758792], [66.217384881459338, 37.39379018813392], [65.745630731066825, 37.661164048812068], [65.588947788357842, 37.305216783185642], [64.746105177677407, 37.111817735333304], [64.546479119733903, 36.312073269184268], [63.98289594915871, 36.007957465146603], [63.193538445900352, 35.857165635718914], [62.98466230657661, 35.404040839167621], [62.230651483005886, 35.270663967422294], [61.210817091725744, 35.650072333309225]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "East Timor",
      "sov_a3": "TLS",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "East Timor",
      "adm0_a3": "TLS",
      "geou_dif": 0.000000,
      "geounit": "East Timor",
      "gu_a3": "TLS",
      "su_dif": 0.000000,
      "subunit": "East Timor",
      "su_a3": "TLS",
      "brk_diff": 0.000000,
      "name": "Timor-Leste",
      "name_long": "Timor-Leste",
      "brk_a3": "TLS",
      "brk_name": "Timor-Leste",
      "brk_group": null,
      "abbrev": "T.L.",
      "postal": "TL",
      "formal_en": "Democratic Republic of Timor-Leste",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Timor-Leste",
      "name_alt": "East Timor",
      "mapcolor7": 2.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 3.000000,
      "pop_est": 1131612.000000,
      "gdp_md_est": 2520.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "TL",
      "iso_a3": "TLS",
      "iso_n3": "626",
      "un_a3": "626",
      "wb_a2": "TP",
      "wb_a3": "TMP",
      "woe_id": -99.000000,
      "adm0_a3_is": "TLS",
      "adm0_a3_us": "TLS",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "South-Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 11.000000,
      "long_len": 11.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[124.968682489116233, -8.892790215697083], [125.086246372580263, -8.65688730228468], [125.947072381698263, -8.432094821815035], [126.644704217638548, -8.398246758663852], [126.957243280139835, -8.273344821814398], [127.33592817597463, -8.397316582882603], [126.967991978056546, -8.668256117388893], [125.925885044458596, -9.106007175333353], [125.088520135601087, -9.393173109579294], [125.070019972840612, -9.089987481322872], [124.968682489116233, -8.892790215697083]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 5.000000,
      "sovereignt": "Trinidad and Tobago",
      "sov_a3": "TTO",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Trinidad and Tobago",
      "adm0_a3": "TTO",
      "geou_dif": 0.000000,
      "geounit": "Trinidad and Tobago",
      "gu_a3": "TTO",
      "su_dif": 0.000000,
      "subunit": "Trinidad and Tobago",
      "su_a3": "TTO",
      "brk_diff": 0.000000,
      "name": "Trinidad and Tobago",
      "name_long": "Trinidad and Tobago",
      "brk_a3": "TTO",
      "brk_name": "Trinidad and Tobago",
      "brk_group": null,
      "abbrev": "Tr.T.",
      "postal": "TT",
      "formal_en": "Republic of Trinidad and Tobago",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Trinidad and Tobago",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 5.000000,
      "pop_est": 1310000.000000,
      "gdp_md_est": 29010.000000,
      "pop_year": -99.000000,
      "lastcensus": 2011.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "TT",
      "iso_a3": "TTO",
      "iso_n3": "780",
      "un_a3": "780",
      "wb_a2": "TT",
      "wb_a3": "TTO",
      "woe_id": -99.000000,
      "adm0_a3_is": "TTO",
      "adm0_a3_us": "TTO",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Caribbean",
      "region_wb": "Latin America & Caribbean",
      "name_len": 19.000000,
      "long_len": 19.000000,
      "abbrev_len": 5.000000,
      "tiny": 2.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-61.68, 10.76], [-61.105, 10.89], [-60.895, 10.855], [-60.935, 10.11], [-61.77, 10.0], [-61.95, 10.09], [-61.66, 10.365], [-61.68, 10.76]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Tunisia",
      "sov_a3": "TUN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Tunisia",
      "adm0_a3": "TUN",
      "geou_dif": 0.000000,
      "geounit": "Tunisia",
      "gu_a3": "TUN",
      "su_dif": 0.000000,
      "subunit": "Tunisia",
      "su_a3": "TUN",
      "brk_diff": 0.000000,
      "name": "Tunisia",
      "name_long": "Tunisia",
      "brk_a3": "TUN",
      "brk_name": "Tunisia",
      "brk_group": null,
      "abbrev": "Tun.",
      "postal": "TN",
      "formal_en": "Republic of Tunisia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Tunisia",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 2.000000,
      "pop_est": 10486339.000000,
      "gdp_md_est": 81710.000000,
      "pop_year": -99.000000,
      "lastcensus": 2004.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "TN",
      "iso_a3": "TUN",
      "iso_n3": "788",
      "un_a3": "788",
      "wb_a2": "TN",
      "wb_a3": "TUN",
      "woe_id": -99.000000,
      "adm0_a3_is": "TUN",
      "adm0_a3_us": "TUN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Northern Africa",
      "region_wb": "Middle East & North Africa",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[9.482139926805274, 30.307556057246188], [9.055602654668149, 32.102691962201291], [8.439102817426118, 32.506284898400821], [8.430472853233368, 32.748337307255952], [7.612641635782182, 33.344114895148962], [7.524481642292244, 34.09737641045146], [8.140981479534304, 34.65514598239379], [8.376367628623768, 35.479876003555944], [8.217824334352315, 36.433176988260286], [8.420964389691676, 36.946427313783161], [9.509993523810607, 37.349994411766545], [10.210002475636317, 37.230001735984814], [10.180650262094531, 36.724037787415085], [11.02886722173335, 37.092103176413957], [11.100025668999251, 36.899996039368915], [10.600004510143094, 36.410000108377375], [10.593286573945138, 35.947444362932814], [10.939518670300687, 35.698984076473494], [10.807847120821009, 34.83350718844919], [10.149592726287125, 34.330773016897709], [10.339658644256616, 33.785741685515319], [10.856836378633687, 33.768740139291282], [11.108500603895122, 33.293342800422195], [11.488787469131012, 33.136995754523141], [11.432253452203696, 32.368903103152874], [10.944789666394456, 32.081814683555365], [10.636901482799487, 31.761420803345757], [9.950225050505082, 31.376069647745258], [10.056575148161755, 30.961831366493598], [9.970017124072854, 30.53932485607524], [9.482139926805274, 30.307556057246188]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Turkey",
      "sov_a3": "TUR",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Turkey",
      "adm0_a3": "TUR",
      "geou_dif": 0.000000,
      "geounit": "Turkey",
      "gu_a3": "TUR",
      "su_dif": 0.000000,
      "subunit": "Turkey",
      "su_a3": "TUR",
      "brk_diff": 0.000000,
      "name": "Turkey",
      "name_long": "Turkey",
      "brk_a3": "TUR",
      "brk_name": "Turkey",
      "brk_group": null,
      "abbrev": "Tur.",
      "postal": "TR",
      "formal_en": "Republic of Turkey",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Turkey",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 8.000000,
      "mapcolor13": 4.000000,
      "pop_est": 76805524.000000,
      "gdp_md_est": 902700.000000,
      "pop_year": -99.000000,
      "lastcensus": 2000.000000,
      "gdp_year": -99.000000,
      "economy": "4. Emerging region: MIKT",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "TR",
      "iso_a3": "TUR",
      "iso_n3": "792",
      "un_a3": "792",
      "wb_a2": "TR",
      "wb_a3": "TUR",
      "woe_id": -99.000000,
      "adm0_a3_is": "TUR",
      "adm0_a3_us": "TUR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Europe & Central Asia",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[36.913127068842158, 41.335358384764305], [38.347664829264517, 40.948586127275718], [39.512606642420252, 41.102762763018575], [40.373432651538252, 41.013672593747344], [41.554084100110714, 41.535656236327611], [42.619548781104555, 41.583172715819927], [43.582745802592711, 41.092143256182567], [43.752657911968498, 40.740200914058818], [43.65643639504097, 40.253563951166171], [44.400008579288766, 40.005000311842309], [44.793989699082005, 39.713002631177034], [44.109225294782362, 39.428136298168056], [44.421402622257602, 38.281281236314527], [44.225755649600529, 37.971584377589352], [44.772699008977753, 37.170444647768448], [44.293451775902867, 37.00151439060636], [43.942258742047358, 37.256227525372935], [42.779125604021857, 37.385263576805812], [42.349591098811771, 37.229872544904111], [41.212089471203029, 37.074352321921737], [40.673259311695716, 37.091276353497364], [39.522580193852519, 36.716053778626019], [38.699891391765931, 36.712927354472328], [38.16772749202417, 36.901210435527787], [37.066761102045831, 36.623036200500621], [36.739494256341374, 36.817520453431115], [36.68538903173183, 36.259699205056506], [36.417550083163093, 36.040616970355103], [36.149762811026591, 35.821534735653671], [35.782084995269855, 36.274995429014922], [36.160821567537056, 36.650605577128374], [35.550936313628341, 36.565442816711339], [34.714553256984374, 36.795532131490916], [34.02689497247647, 36.219960028623973], [32.509158156064103, 36.1075637883892], [31.699595167779563, 36.644275214172609], [30.621624790171069, 36.677864895162315], [30.391096225717121, 36.26298065850699], [29.699975620245567, 36.144357408181008], [28.732902866335394, 36.676831366516438], [27.64118655773737, 36.658822129862756], [27.048767937943296, 37.653360907536012], [26.318218214633049, 38.208133246405396], [26.804700148228733, 38.985760199533559], [26.170785353304382, 39.463612168936464], [27.280019972449395, 40.420013739578309], [28.81997765474722, 40.460011298172219], [29.240003696415584, 41.219990749672689], [31.145933872204438, 41.087621568357065], [32.347979363745793, 41.736264146484643], [33.513282911927519, 42.018960069337311], [35.16770389175187, 42.040224921225445], [36.913127068842158, 41.335358384764305]]], [[[27.192376743282409, 40.690565700842455], [26.35800906749779, 40.151993923496491], [26.043351271272542, 40.617753607743168], [26.056942172965336, 40.824123440100749], [26.294602085075695, 40.936261298174173], [26.604195590936285, 41.56211456966102], [26.117041863720829, 41.826904608724561], [27.135739373490509, 42.141484890301314], [27.996720411905414, 42.007358710287775], [28.115524529744448, 41.622886054036286], [28.98844282401879, 41.299934190428189], [28.806438429486747, 41.054962063148537], [27.619017368284119, 40.999823309893117], [27.192376743282409, 40.690565700842455]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Taiwan",
      "sov_a3": "TWN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Taiwan",
      "adm0_a3": "TWN",
      "geou_dif": 0.000000,
      "geounit": "Taiwan",
      "gu_a3": "TWN",
      "su_dif": 0.000000,
      "subunit": "Taiwan",
      "su_a3": "TWN",
      "brk_diff": 1.000000,
      "name": "Taiwan",
      "name_long": "Taiwan",
      "brk_a3": "B77",
      "brk_name": "Taiwan",
      "brk_group": null,
      "abbrev": "Taiwan",
      "postal": "TW",
      "formal_en": null,
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": "Self admin.; Claimed by China",
      "name_sort": "Taiwan",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 7.000000,
      "mapcolor13": 2.000000,
      "pop_est": 22974347.000000,
      "gdp_md_est": 712000.000000,
      "pop_year": -99.000000,
      "lastcensus": -99.000000,
      "gdp_year": -99.000000,
      "economy": "2. Developed region: nonG7",
      "income_grp": "2. High income: nonOECD",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "TW",
      "iso_a3": "TWN",
      "iso_n3": "158",
      "un_a3": "-099",
      "wb_a2": "-99",
      "wb_a3": "-99",
      "woe_id": -99.000000,
      "adm0_a3_is": "TWN",
      "adm0_a3_us": "TWN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[121.777817824389928, 24.3942735865194], [121.175632358892742, 22.790857245367167], [120.747079705896226, 21.970571397382113], [120.220083449383679, 22.814860948166739], [120.106188592612398, 23.556262722258236], [120.694679803552248, 24.538450832613737], [121.495044386888779, 25.295458889257386], [121.951243931161457, 24.997595933527037], [121.777817824389928, 24.3942735865194]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "United Republic of Tanzania",
      "sov_a3": "TZA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "United Republic of Tanzania",
      "adm0_a3": "TZA",
      "geou_dif": 0.000000,
      "geounit": "Tanzania",
      "gu_a3": "TZA",
      "su_dif": 0.000000,
      "subunit": "Tanzania",
      "su_a3": "TZA",
      "brk_diff": 0.000000,
      "name": "Tanzania",
      "name_long": "Tanzania",
      "brk_a3": "TZA",
      "brk_name": "Tanzania",
      "brk_group": null,
      "abbrev": "Tanz.",
      "postal": "TZ",
      "formal_en": "United Republic of Tanzania",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Tanzania",
      "name_alt": null,
      "mapcolor7": 3.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 2.000000,
      "pop_est": 41048532.000000,
      "gdp_md_est": 54250.000000,
      "pop_year": -99.000000,
      "lastcensus": 2002.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "TZ",
      "iso_a3": "TZA",
      "iso_n3": "834",
      "un_a3": "834",
      "wb_a2": "TZ",
      "wb_a3": "TZA",
      "woe_id": -99.000000,
      "adm0_a3_is": "TZA",
      "adm0_a3_us": "TZA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[33.903711197104599, -0.95], [34.07262, -1.05982], [37.69869, -3.09699], [37.7669, -3.67712], [39.20222, -4.67677], [38.74054, -5.90895], [38.79977, -6.47566], [39.44, -6.839999999999861], [39.470000000000141, -7.1], [39.19469, -7.7039], [39.25203, -8.00781], [39.18652, -8.48551], [39.53574, -9.112369999999885], [39.9496, -10.0984], [40.31659, -10.317099999999868], [39.521, -10.89688], [38.427556593587781, -11.285202325081627], [37.82764, -11.26879], [37.47129, -11.56876], [36.775150994622891, -11.594537448780784], [36.514081658684404, -11.720938002166747], [35.312397902169153, -11.439146416879169], [34.559989047999466, -11.520020033415847], [34.28, -10.16], [33.940837724096525, -9.693673841980285], [33.73972, -9.41715], [32.75937544122138, -9.230599053589003], [32.191864861791942, -8.930358981973257], [31.556348097466639, -8.762048841998649], [31.157751336950071, -8.594578747317314], [30.74, -8.34], [30.2, -7.08], [29.62, -6.52], [29.419992710088309, -5.939998874539299], [29.51998660657307, -5.419978936386258], [29.339997592900374, -4.499983412294114], [29.753512404099865, -4.452389418153302], [30.11632, -4.09012], [30.50554, -3.56858], [30.75224, -3.35931], [30.74301, -3.03431], [30.52766, -2.80762], [30.46967, -2.41383], [30.758308953583139, -2.287250257988376], [30.816134881317851, -1.698914076345375], [30.419104852019302, -1.134659112150416], [30.769860000000108, -1.01455], [31.86617, -1.02736], [33.903711197104599, -0.95]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Uganda",
      "sov_a3": "UGA",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Uganda",
      "adm0_a3": "UGA",
      "geou_dif": 0.000000,
      "geounit": "Uganda",
      "gu_a3": "UGA",
      "su_dif": 0.000000,
      "subunit": "Uganda",
      "su_a3": "UGA",
      "brk_diff": 0.000000,
      "name": "Uganda",
      "name_long": "Uganda",
      "brk_a3": "UGA",
      "brk_name": "Uganda",
      "brk_group": null,
      "abbrev": "Uga.",
      "postal": "UG",
      "formal_en": "Republic of Uganda",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Uganda",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 4.000000,
      "pop_est": 32369558.000000,
      "gdp_md_est": 39380.000000,
      "pop_year": -99.000000,
      "lastcensus": 2002.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "UG",
      "iso_a3": "UGA",
      "iso_n3": "800",
      "un_a3": "800",
      "wb_a2": "UG",
      "wb_a3": "UGA",
      "woe_id": -99.000000,
      "adm0_a3_is": "UGA",
      "adm0_a3_us": "UGA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[31.86617, -1.02736], [30.769860000000108, -1.01455], [30.419104852019302, -1.134659112150416], [29.821518588996128, -1.443322442229771], [29.579466180141026, -1.341313164885605], [29.587837762172171, -0.587405694179381], [29.8195, -0.2053], [29.875778842902434, 0.597379868976361], [30.086153598762792, 1.062312730306417], [30.468507521290292, 1.583805446779706], [30.85267011894814, 1.849396470543752], [31.17414920423596, 2.204465236821306], [30.77332, 2.339890000000139], [30.83385, 3.50917], [31.24556, 3.7819], [31.88145, 3.55827], [32.68642, 3.79232], [33.3900000000001, 3.79], [34.005, 4.249884947362148], [34.47913, 3.5556], [34.59607, 3.053740000000118], [35.03599, 1.90584], [34.6721, 1.17694], [34.18, 0.515], [33.893568969667001, 0.109813537861839], [33.903711197104599, -0.95], [31.86617, -1.02736]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Ukraine",
      "sov_a3": "UKR",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Ukraine",
      "adm0_a3": "UKR",
      "geou_dif": 0.000000,
      "geounit": "Ukraine",
      "gu_a3": "UKR",
      "su_dif": 0.000000,
      "subunit": "Ukraine",
      "su_a3": "UKR",
      "brk_diff": 0.000000,
      "name": "Ukraine",
      "name_long": "Ukraine",
      "brk_a3": "UKR",
      "brk_name": "Ukraine",
      "brk_group": null,
      "abbrev": "Ukr.",
      "postal": "UA",
      "formal_en": "Ukraine",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Ukraine",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 1.000000,
      "mapcolor9": 6.000000,
      "mapcolor13": 3.000000,
      "pop_est": 45700395.000000,
      "gdp_md_est": 339800.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "UA",
      "iso_a3": "UKR",
      "iso_n3": "804",
      "un_a3": "804",
      "wb_a2": "UA",
      "wb_a3": "UKR",
      "woe_id": -99.000000,
      "adm0_a3_is": "UKR",
      "adm0_a3_us": "UKR",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Europe",
      "region_un": "Europe",
      "subregion": "Eastern Europe",
      "region_wb": "Europe & Central Asia",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[31.785998162571587, 52.101677964885454], [32.159412062312668, 52.061266994833218], [32.412058139787632, 52.288694973349749], [32.715760532366971, 52.238465481162052], [33.752699822735707, 52.335074571331695], [34.391730584457008, 51.768881740925792], [34.141978387190392, 51.566413479206233], [34.224815708154267, 51.255993150428957], [35.02218305841788, 51.207572333371459], [35.377923618315123, 50.77395539001035], [35.356116163887947, 50.577197374059061], [36.626167840325337, 50.225590928745135], [37.393459506995072, 50.383953355503593], [38.010631137856905, 49.915661526074629], [38.594988234213417, 49.926461900423632], [40.069058465339111, 49.601055406281702], [40.08078901546935, 49.307429917999286], [39.674663934087533, 48.783818467801879], [39.895632358567582, 48.232405097031432], [39.738277622238826, 47.89893707945199], [38.7705847511412, 47.825608222029814], [38.255112339029751, 47.546400458356814], [38.22353803889942, 47.102189846375886], [37.425137159989987, 47.022220567404204], [36.75985477066439, 46.698700263040934], [35.823684523264831, 46.645964463887069], [34.962341749823878, 46.273196519549643], [35.020787794745985, 45.651218980484657], [35.510008579253167, 45.409993394546191], [36.529997999830158, 45.469989732437057], [36.33471276219916, 45.113215643893966], [35.239999220528119, 44.939996242851606], [33.882511020652885, 44.361478583344073], [33.326420932760044, 44.564877020844889], [33.546924269349461, 45.03477081967489], [32.454174432105503, 45.327466132176077], [32.630804477679135, 45.519185695978912], [33.588162062318389, 45.851568508480241], [33.298567335754711, 46.080598456397844], [31.744140252415178, 46.333347886737386], [31.675307244602408, 46.706245022155542], [30.748748813609101, 46.583100084004002], [30.377608676888883, 46.03241018328567], [29.603289015427436, 45.293308010431126], [29.149724969201653, 45.464925442072456], [28.679779493939382, 45.304030870131704], [28.233553501099042, 45.488283189468376], [28.485269402792767, 45.596907050145902], [28.659987420371579, 45.939986884131642], [28.933717482221624, 46.258830471372498], [28.862972446414062, 46.437889309263831], [29.072106967899291, 46.517677720722496], [29.170653924279886, 46.3792623968287], [29.759971958136394, 46.349987697935362], [30.024658644335375, 46.42393667254504], [29.838210076626297, 46.525325832701689], [29.908851759569302, 46.674360663431457], [29.559674106573112, 46.928582872091326], [29.415135125452736, 47.346645209332578], [29.050867954227328, 47.510226955752501], [29.122698195113031, 47.849095160506465], [28.670891147585166, 48.118148505234103], [28.259546746541844, 48.155562242213421], [27.522537469195157, 48.467119452501116], [26.857823520624805, 48.368210761094495], [26.619336785597795, 48.220726223333472], [26.197450392366932, 48.220881252630349], [25.945941196402401, 47.987148749374214], [25.207743361112989, 47.891056423527473], [24.866317172960578, 47.737525743188314], [24.402056105250381, 47.981877753280429], [23.760958286237411, 47.985598456405455], [23.142236362406805, 48.096341050806949], [22.710531447040495, 47.882193915389408], [22.640819939878753, 48.150239569687358], [22.085608351334855, 48.422264309271789], [22.28084191253356, 48.825392157580673], [22.558137648211755, 49.085738023467144], [22.776418898212626, 49.027395331409622], [22.518450148211603, 49.476773586619743], [23.426508416444392, 50.308505764357456], [23.922757195743262, 50.424881089878753], [24.029985792748903, 50.705406602575181], [23.527070753684374, 51.57845408793024], [24.00507775238421, 51.617443956094462], [24.553106316839518, 51.888461005249184], [25.327787713327009, 51.910656032918553], [26.337958611768556, 51.832288723347929], [27.454066196408434, 51.592303371784467], [28.241615024536571, 51.572227077839067], [28.617612745892249, 51.427713934934843], [28.992835320763533, 51.602044379271476], [29.254938185347925, 51.368234361366895], [30.157363722460897, 51.416138414101468], [30.555117221811457, 51.319503485715657], [30.619454380014844, 51.822806098022376], [30.927549269338982, 52.04235342061439], [31.785998162571587, 52.101677964885454]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Uruguay",
      "sov_a3": "URY",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Uruguay",
      "adm0_a3": "URY",
      "geou_dif": 0.000000,
      "geounit": "Uruguay",
      "gu_a3": "URY",
      "su_dif": 0.000000,
      "subunit": "Uruguay",
      "su_a3": "URY",
      "brk_diff": 0.000000,
      "name": "Uruguay",
      "name_long": "Uruguay",
      "brk_a3": "URY",
      "brk_name": "Uruguay",
      "brk_group": null,
      "abbrev": "Ury.",
      "postal": "UY",
      "formal_en": "Oriental Republic of Uruguay",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Uruguay",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 2.000000,
      "mapcolor9": 2.000000,
      "mapcolor13": 10.000000,
      "pop_est": 3494382.000000,
      "gdp_md_est": 43160.000000,
      "pop_year": -99.000000,
      "lastcensus": 2004.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "UY",
      "iso_a3": "URY",
      "iso_n3": "858",
      "un_a3": "858",
      "wb_a2": "UY",
      "wb_a3": "URY",
      "woe_id": -99.000000,
      "adm0_a3_is": "URY",
      "adm0_a3_us": "URY",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "South America",
      "region_un": "Americas",
      "subregion": "South America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-57.625133429582959, -30.216294854454262], [-56.976025763564735, -30.109686374636127], [-55.973244594940937, -30.883075860316303], [-55.601510179249345, -30.853878676071393], [-54.572451544805119, -31.494511407193748], [-53.787951626182192, -32.047242526987624], [-53.209588995971544, -32.727666110974724], [-53.650543992718099, -33.20200408298183], [-53.373661668498244, -33.768377780900764], [-53.806425950726535, -34.396814874002231], [-54.93586605489773, -34.952646579733624], [-55.674089728403288, -34.752658786764073], [-56.215297003796067, -34.859835707337417], [-57.139685024633103, -34.430456231424245], [-57.81786068381551, -34.462547295877499], [-58.427074144104388, -33.909454441057576], [-58.349611172098875, -33.263188978815407], [-58.132647671121447, -33.040566908502015], [-58.142440355040762, -32.044503676076154], [-57.874937303281882, -31.016556084926208], [-57.625133429582959, -30.216294854454262]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "United States of America",
      "sov_a3": "US1",
      "adm0_dif": 1.000000,
      "level": 2.000000,
      "type": "Country",
      "admin": "United States of America",
      "adm0_a3": "USA",
      "geou_dif": 0.000000,
      "geounit": "United States of America",
      "gu_a3": "USA",
      "su_dif": 0.000000,
      "subunit": "United States of America",
      "su_a3": "USA",
      "brk_diff": 0.000000,
      "name": "United States",
      "name_long": "United States",
      "brk_a3": "USA",
      "brk_name": "United States",
      "brk_group": null,
      "abbrev": "U.S.A.",
      "postal": "US",
      "formal_en": "United States of America",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "United States of America",
      "name_alt": null,
      "mapcolor7": 4.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 1.000000,
      "pop_est": 313973000.000000,
      "gdp_md_est": 15094000.000000,
      "pop_year": 0.000000,
      "lastcensus": 2010.000000,
      "gdp_year": 0.000000,
      "economy": "1. Developed region: G7",
      "income_grp": "1. High income: OECD",
      "wikipedia": 0.000000,
      "fips_10": null,
      "iso_a2": "US",
      "iso_a3": "USA",
      "iso_n3": "840",
      "un_a3": "840",
      "wb_a2": "US",
      "wb_a3": "USA",
      "woe_id": -99.000000,
      "adm0_a3_is": "USA",
      "adm0_a3_us": "USA",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "North America",
      "region_un": "Americas",
      "subregion": "Northern America",
      "region_wb": "North America",
      "name_len": 13.000000,
      "long_len": 13.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-155.54211, 19.08348], [-155.68817, 18.91619], [-155.93665, 19.05939], [-155.90806, 19.33888], [-156.07347, 19.70294], [-156.02368, 19.81422], [-155.85008, 19.97729], [-155.91907, 20.17395], [-155.86108, 20.26721], [-155.78505, 20.2487], [-155.40214, 20.07975], [-155.22452, 19.99302], [-155.06226, 19.8591], [-154.80741, 19.50871], [-154.83147, 19.45328], [-155.22217, 19.23972], [-155.54211, 19.08348]]], [[[-156.07926, 20.64397], [-156.41445, 20.57241], [-156.58673, 20.783], [-156.70167, 20.8643], [-156.71055, 20.92676], [-156.61258, 21.01249], [-156.25711, 20.91745], [-155.99566, 20.76404], [-156.07926, 20.64397]]], [[[-156.75824, 21.17684], [-156.78933, 21.06873], [-157.32521, 21.09777], [-157.25027, 21.21958], [-156.75824, 21.17684]]], [[[-157.65283, 21.32217], [-157.70703, 21.26442], [-157.7786, 21.27729], [-158.12667, 21.31244], [-158.2538, 21.53919], [-158.29265, 21.57912], [-158.0252, 21.71696], [-157.94161, 21.65272], [-157.65283, 21.32217]]], [[[-159.34512, 21.982], [-159.46372, 21.88299], [-159.80051, 22.06533], [-159.74877, 22.1382], [-159.5962, 22.23618], [-159.36569, 22.21494], [-159.34512, 21.982]]], [[[-94.81758, 49.38905], [-94.639999999999873, 48.840000000000117], [-94.32914, 48.670740000000109], [-93.63087, 48.60926], [-92.61, 48.45], [-91.64, 48.14], [-90.83, 48.27], [-89.6, 48.010000000000105], [-89.272917446636683, 48.019808254582841], [-88.378114183286527, 48.30291758889382], [-87.439792623300235, 47.94], [-86.46199083122815, 47.553338019392044], [-85.65236324740323, 47.220218817730512], [-84.876079881514869, 46.900083319682381], [-84.779238247399832, 46.637101955749131], [-84.543748745445669, 46.538684190449231], [-84.6049, 46.4396], [-84.3367, 46.408770000000118], [-84.142119513673293, 46.512225857115737], [-84.091851264161477, 46.27541860613826], [-83.890765347005669, 46.116926988299156], [-83.616130947590506, 46.116926988299156], [-83.469550747394635, 45.994686387712591], [-83.592850714843081, 45.81689362241255], [-82.550924648758183, 45.34751658790546], [-82.337763125431081, 44.44], [-82.13764238150398, 43.571087551440002], [-82.43, 42.980000000000103], [-82.899999999999892, 42.430000000000149], [-83.119999999999891, 42.08], [-83.141999681312569, 41.975681057293002], [-83.029810146806938, 41.832795722006011], [-82.690089280920176, 41.675105088867326], [-82.439277716791622, 41.675105088867326], [-81.277746548167073, 42.209025987306859], [-80.247447679347857, 42.366199856122677], [-78.939362148743697, 42.863611355148123], [-78.92, 42.965], [-79.009999999999877, 43.27], [-79.171673550111876, 43.466339423184309], [-78.720279914042379, 43.62508942318496], [-77.737885097957616, 43.629055589363389], [-76.820034145805579, 43.628784288093755], [-76.5, 44.018458893758606], [-76.375, 44.09631], [-75.31821, 44.816450000000174], [-74.867, 45.000480000000124], [-73.34783, 45.00738], [-71.505059999999872, 45.008200000000102], [-71.405, 45.255000000000138], [-71.08482, 45.305240000000168], [-70.659999999999798, 45.46], [-70.305, 45.915], [-69.99997, 46.69307], [-69.237216, 47.447781], [-68.905, 47.185], [-68.23444, 47.35486], [-67.79046, 47.06636], [-67.79134, 45.702810000000142], [-67.13741, 45.13753], [-66.96466, 44.809700000000163], [-68.03252, 44.3252], [-69.059999999999889, 43.98], [-70.11617, 43.684050000000155], [-70.645475633410996, 43.09023834896405], [-70.81489, 42.8653], [-70.825, 42.335], [-70.495, 41.805], [-70.08, 41.78], [-70.185, 42.145], [-69.88497, 41.922830000000118], [-69.96503, 41.637170000000168], [-70.64, 41.475], [-71.12039, 41.494450000000171], [-71.859999999999843, 41.32], [-72.295, 41.27], [-72.87643, 41.22065], [-73.71, 40.931102351654488], [-72.24126, 41.119480000000152], [-71.944999999999823, 40.93], [-73.345, 40.63], [-73.982, 40.628], [-73.952325, 40.75075], [-74.25671, 40.47351], [-73.96244, 40.42763], [-74.17838, 39.70926], [-74.90604, 38.93954], [-74.98041, 39.1964], [-75.20002, 39.248450000000105], [-75.52805, 39.4985], [-75.32, 38.96], [-75.071834764789799, 38.782032230179283], [-75.05673, 38.40412000000012], [-75.37747, 38.01551], [-75.94023, 37.21689], [-76.03127, 37.2566], [-75.722049999999797, 37.937050000000113], [-76.23287, 38.319215], [-76.35, 39.15], [-76.542725, 38.717615000000109], [-76.32933, 38.08326], [-76.989997931613544, 38.239991766913391], [-76.30162, 37.917945], [-76.25874, 36.966400000000107], [-75.9718, 36.89726], [-75.868039999999837, 36.55125], [-75.72749, 35.550740000000133], [-76.36318, 34.808540000000136], [-77.397634999999894, 34.51201], [-78.05496, 33.92547], [-78.554349999999829, 33.861330000000123], [-79.06067, 33.49395], [-79.20357, 33.15839], [-80.301325, 32.509355], [-80.86498, 32.0333], [-81.33629, 31.44049], [-81.49042, 30.729990000000129], [-81.31371, 30.035520000000105], [-80.98, 29.180000000000121], [-80.535584999999884, 28.47213], [-80.529999999999802, 28.040000000000106], [-80.056539284977561, 26.880000000000138], [-80.088015, 26.205765], [-80.131559999999865, 25.816775], [-80.38103, 25.20616], [-80.679999999999893, 25.08], [-81.17213, 25.201260000000133], [-81.33, 25.64], [-81.709999999999809, 25.87], [-82.24, 26.730000000000132], [-82.70515, 27.49504], [-82.85526, 27.88624], [-82.65, 28.550000000000153], [-82.929999999999893, 29.100000000000136], [-83.70959, 29.93656], [-84.1, 30.090000000000117], [-85.10882, 29.63615], [-85.28784, 29.68612000000013], [-85.7731, 30.152610000000124], [-86.399999999999892, 30.400000000000119], [-87.53036, 30.27433], [-88.41782, 30.3849], [-89.18049, 30.31598], [-89.593831178419777, 30.159994004836847], [-89.413735, 29.89419], [-89.43, 29.48864], [-89.21767, 29.29108], [-89.40823, 29.15961], [-89.77928, 29.307140000000146], [-90.15463, 29.11743], [-90.880225, 29.148535000000123], [-91.62678499999987, 29.677000000000135], [-92.49906, 29.5523], [-93.22637, 29.78375], [-93.84842, 29.71363], [-94.69, 29.480000000000132], [-95.60026, 28.73863], [-96.59404, 28.30748], [-97.139999999999816, 27.83], [-97.37, 27.38], [-97.379999999999882, 26.69], [-97.33, 26.210000000000122], [-97.139999999999816, 25.87], [-97.529999999999887, 25.84], [-98.24, 26.060000000000116], [-99.019999999999882, 26.37], [-99.3, 26.84], [-99.519999999999868, 27.54], [-100.11, 28.110000000000127], [-100.45584, 28.696120000000121], [-100.9576, 29.380710000000136], [-101.6624, 29.77930000000012], [-102.48, 29.76], [-103.11, 28.97], [-103.94, 29.27], [-104.456969999999842, 29.57196], [-104.70575, 30.12173], [-105.03737, 30.64402], [-105.63159, 31.08383000000012], [-106.1429, 31.39995], [-106.507589999999823, 31.75452], [-108.24, 31.754853718166402], [-108.24194, 31.34222], [-109.035, 31.341940000000164], [-111.02361, 31.33472], [-113.30498, 32.03914], [-114.815, 32.52528], [-114.721389999999872, 32.72083], [-115.99135, 32.612390000000147], [-117.127759999999796, 32.53534], [-117.295937691273892, 33.046224615203897], [-117.944, 33.621236431201396], [-118.410602275897503, 33.740909223124504], [-118.519894822799714, 34.027781577575752], [-119.081, 34.078], [-119.438840642016686, 34.348477178284298], [-120.36778, 34.44711], [-120.62286, 34.60855], [-120.74433, 35.156860000000108], [-121.714569999999881, 36.16153], [-122.54747, 37.551760000000115], [-122.51201, 37.783390000000139], [-122.95319, 38.113710000000111], [-123.7272, 38.951660000000118], [-123.86517, 39.766990000000135], [-124.39807, 40.3132], [-124.17886, 41.142020000000116], [-124.2137, 41.999640000000142], [-124.53284, 42.765990000000102], [-124.14214, 43.70838], [-124.020535, 44.615895], [-123.89893, 45.52341], [-124.079635, 46.86475], [-124.39567, 47.72017000000011], [-124.687210083007827, 48.184432983398551], [-124.566101074218764, 48.379714965820398], [-123.12, 48.04], [-122.58736, 47.096], [-122.34, 47.36], [-122.5, 48.18], [-122.84, 49.000000000000114], [-120.0, 49.000000000000114], [-117.03121, 49.000000000000114], [-116.04818, 49.000000000000114], [-113.0, 49.000000000000114], [-110.049999999999841, 49.000000000000114], [-107.05, 49.000000000000114], [-104.04826, 48.99986], [-100.65, 49.000000000000114], [-97.228720000004728, 49.000700000000109], [-95.159069509171957, 49.000000000000114], [-95.15609, 49.38425], [-94.81758, 49.38905]]], [[[-153.006314053336894, 57.115842190165893], [-154.005090298458128, 56.734676825581062], [-154.516402757770095, 56.992748928446701], [-154.670992804971149, 57.4611957871725], [-153.762779507441479, 57.81657461204378], [-153.228729417921102, 57.968968410872435], [-152.564790615835136, 57.901427313866975], [-152.14114722390633, 57.591058661521998], [-153.006314053336894, 57.115842190165893]]], [[[-165.579164191733582, 59.90998688418756], [-166.192770148767266, 59.754440822988983], [-166.848337368822001, 59.941406155020957], [-167.455277066090076, 60.213069159579391], [-166.467792121424623, 60.384169826897789], [-165.674429694663672, 60.293606879306253], [-165.579164191733582, 59.90998688418756]]], [[[-171.731656867539414, 63.78251536727592], [-171.114433560245232, 63.592191067144995], [-170.491112433940714, 63.694975490973519], [-169.682505459653584, 63.431115627691156], [-168.68943946030069, 63.297506212000599], [-168.771940884454608, 63.188598130945451], [-169.529439867205042, 62.976931464277897], [-170.290556200215974, 63.194437567794466], [-170.671385667990876, 63.375821845138972], [-171.55306311753867, 63.317789211675091], [-171.791110602891195, 63.405845852300502], [-171.731656867539414, 63.78251536727592]]], [[[-155.06779029032424, 71.147776394323699], [-154.344165208941234, 70.696408596470206], [-153.90000627339262, 70.889988511835696], [-152.210006069935304, 70.829992173944845], [-152.270002407826155, 70.600006212029854], [-150.739992438744537, 70.430016588005714], [-149.720003018167517, 70.530010484490447], [-147.613361579357075, 70.214034939241799], [-145.689989800225305, 70.120009670686755], [-144.920010959076421, 69.989991767040493], [-143.589446180425199, 70.152514146598321], [-142.072510348713422, 69.851938178172645], [-140.98598752156073, 69.711998399526379], [-140.985988329004897, 69.711998399526379], [-140.992498752029405, 66.000028591568679], [-140.997769748123147, 60.3063967962986], [-140.012997816153103, 60.276837877027589], [-139.039000420315858, 60.000007229240026], [-138.34089, 59.56211000000016], [-137.4525, 58.905000000000115], [-136.4797200000001, 59.46389], [-135.47583, 59.78778], [-134.945, 59.270560000000131], [-134.27111, 58.86111], [-133.355548882207216, 58.410285142645165], [-132.73042, 57.692890000000119], [-131.707809999999881, 56.55212], [-130.00778, 55.91583], [-129.979994263358293, 55.284997870497222], [-130.536110189467252, 54.802753404349403], [-131.085818237972148, 55.178906155002039], [-131.967211467142306, 55.497775580459063], [-132.250010742859473, 56.369996242897457], [-133.539181084356414, 57.178887437562139], [-134.078062920296048, 58.12306753196691], [-135.038211032279065, 58.187714748763938], [-136.628062309954657, 58.212209377670462], [-137.800006279686045, 58.499995429103791], [-139.86778704141301, 59.537761542389148], [-140.825273817133052, 59.727517401765084], [-142.574443535564455, 60.084446519604995], [-143.958880994879905, 59.999180406323404], [-145.92555681682785, 60.458609727614288], [-147.114373949146682, 60.884656073644635], [-148.224306200127671, 60.672989406977166], [-148.018065558850765, 59.978328965893638], [-148.570822516860886, 59.914172675203304], [-149.727857835875881, 59.705658270905559], [-150.60824337461645, 59.368211168039494], [-151.716392788683322, 59.155821031319988], [-151.859433153267162, 59.744984035879611], [-151.409719001247197, 60.725802720779399], [-150.346941494732533, 61.033587551509868], [-150.621110806256979, 61.284424953854455], [-151.895839199816862, 60.727197984451294], [-152.578329841095609, 60.061657212964292], [-154.019172126257615, 59.350279446034278], [-153.287511359653195, 58.864727688219801], [-154.232492438758499, 58.146373602930538], [-155.307491421510235, 57.727794501366333], [-156.30833472392311, 57.42277435976365], [-156.556097378546326, 56.979984849670643], [-158.117216559867757, 56.46360809999419], [-158.433321296197164, 55.994153550838547], [-159.603327399717443, 55.56668610292013], [-160.289719611634212, 55.643580634170576], [-161.223047655257801, 55.364734605523495], [-162.237766079741078, 55.024186916720112], [-163.069446581046407, 54.689737046927178], [-164.785569221027203, 54.404173082082167], [-164.942226325520039, 54.572224839895341], [-163.848339606765677, 55.039431464246121], [-162.870001390615926, 55.348043117893212], [-161.804174974596037, 55.894986477270436], [-160.563604702781163, 56.008054511125039], [-160.070559862284512, 56.418055324928758], [-158.684442918919444, 57.016675116597867], [-158.461097378553973, 57.21692129172888], [-157.722770352183886, 57.570000515363063], [-157.550274421193592, 58.328326321030232], [-157.041674974577006, 58.918884589261722], [-158.194731208305484, 58.615802313869835], [-158.517217984023091, 58.787781480537319], [-159.058606126928737, 58.424186102931685], [-159.711667040017346, 58.931390285876347], [-159.981288825500201, 58.572549140041644], [-160.355271165996527, 59.071123358793642], [-161.355003425115058, 58.670837714260756], [-161.96889360252635, 58.671664537177378], [-162.054986538724677, 59.26692536074745], [-161.874170702135359, 59.633621324290601], [-162.518059048492091, 59.989723619213919], [-163.818341437820152, 59.798055731843391], [-164.662217577146464, 60.26748444278266], [-165.346387702474829, 60.50749563256241], [-165.350831875651863, 61.073895168697504], [-166.121379157555964, 61.500019029376233], [-165.734451870770528, 62.074996853271813], [-164.919178636717845, 62.63307648380794], [-164.562507901039368, 63.146378485763051], [-163.753332485997021, 63.219448961023772], [-163.067224494457889, 63.059458726648018], [-162.260555386381725, 63.541935736741181], [-161.534449836248598, 63.455816962326764], [-160.772506680321129, 63.766108100023274], [-160.958335130842556, 64.222798570402773], [-161.518068407212212, 64.402787584075327], [-160.777777676414757, 64.788603827566419], [-161.391926235987626, 64.777235012462342], [-162.453050096668846, 64.55944468856822], [-162.757786017894091, 64.338605455168818], [-163.546394212884309, 64.559160468190498], [-164.96082984114517, 64.446945095468863], [-166.425288255864501, 64.68667206487072], [-166.845004238939055, 65.088895575614544], [-168.110560065767174, 65.669997056736747], [-166.705271166021959, 66.088317776139405], [-164.474709642575505, 66.576660061297503], [-163.652511766595666, 66.576660061297503], [-163.788601651036174, 66.077207343196676], [-161.67777442121016, 66.116119696712417], [-162.489714525380009, 66.735565090595117], [-163.719716966791111, 67.116394558370104], [-164.43099138085654, 67.616338202577793], [-165.39028683170676, 68.042772121850248], [-166.764440680996017, 68.358876858179684], [-166.204707404626618, 68.883030910916176], [-164.430810513343488, 68.915535386827742], [-163.168613654614518, 69.371114813912897], [-162.930566169262022, 69.858061835399269], [-161.908897264635527, 70.333329983187639], [-160.934796515933698, 70.447689927849581], [-159.039175788387155, 70.89164215766894], [-158.119722866833968, 70.824721177851046], [-156.580824551398052, 71.35776357694175], [-155.06779029032424, 71.147776394323699]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Uzbekistan",
      "sov_a3": "UZB",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Uzbekistan",
      "adm0_a3": "UZB",
      "geou_dif": 0.000000,
      "geounit": "Uzbekistan",
      "gu_a3": "UZB",
      "su_dif": 0.000000,
      "subunit": "Uzbekistan",
      "su_a3": "UZB",
      "brk_diff": 0.000000,
      "name": "Uzbekistan",
      "name_long": "Uzbekistan",
      "brk_a3": "UZB",
      "brk_name": "Uzbekistan",
      "brk_group": null,
      "abbrev": "Uzb.",
      "postal": "UZ",
      "formal_en": "Republic of Uzbekistan",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Uzbekistan",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 4.000000,
      "pop_est": 27606007.000000,
      "gdp_md_est": 71670.000000,
      "pop_year": -99.000000,
      "lastcensus": 1989.000000,
      "gdp_year": -99.000000,
      "economy": "6. Developing region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "UZ",
      "iso_a3": "UZB",
      "iso_n3": "860",
      "un_a3": "860",
      "wb_a2": "UZ",
      "wb_a3": "UZB",
      "woe_id": -99.000000,
      "adm0_a3_is": "UZB",
      "adm0_a3_us": "UZB",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Central Asia",
      "region_wb": "Europe & Central Asia",
      "name_len": 10.000000,
      "long_len": 10.000000,
      "abbrev_len": 4.000000,
      "tiny": 5.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[66.51860680528867, 37.362784328758792], [66.546150343700219, 37.974684963526869], [65.215998976507393, 38.4026950139843], [64.170223016216767, 38.892406724598246], [63.518014764261032, 39.363256537425642], [62.374260288345006, 40.053886216790389], [61.882714064384693, 41.084856879229406], [61.547178989513561, 41.266370347654615], [60.465952996670694, 41.220326646482548], [60.083340691981675, 41.425146185871405], [59.976422153569786, 42.223081976890207], [58.62901085799146, 42.751551011723052], [57.786529982337079, 42.170552883465518], [56.932215203687804, 41.826026109375604], [57.096391229079103, 41.322310085610567], [55.968191359282912, 41.308641669269363], [55.928917270741096, 44.995858466159113], [58.503127068928471, 45.586804307632832], [58.689989048095896, 45.500013739598629], [60.239971958258337, 44.784036770194732], [61.058319940032447, 44.405816962250512], [62.01330040878625, 43.504476630215649], [63.185786981056573, 43.650074978198006], [64.900824415959278, 43.728080552742583], [66.098012322865088, 42.997660020513095], [66.023391554635623, 41.994646307943981], [66.510648634715722, 41.987644151368443], [66.714047072216516, 41.1684435084615], [67.98585574735182, 41.13599070898222], [68.25989586779562, 40.662324530594901], [68.632482944620023, 40.668680731766813], [69.07002729683532, 41.38424428971237], [70.388964878220804, 42.081307684897453], [70.962314894499144, 42.266154283205495], [71.259247674448233, 42.167710679689463], [70.42002241402821, 41.519998277343142], [71.157858514291604, 41.143587144529121], [71.870114780570475, 41.392900092121266], [73.05541710804917, 40.866033026689465], [71.77487511585656, 40.145844428053778], [71.01419803252017, 40.244365546218233], [70.601406691372688, 40.218527330072291], [70.458159621059622, 40.496494859370287], [70.666622348925046, 40.960213324541414], [69.329494663372827, 40.727824408524853], [69.011632928345506, 40.086158148756667], [68.536416456989429, 39.533452867178937], [67.701428664017357, 39.580478420564532], [67.442219679641312, 39.140143541005486], [68.176025018185925, 38.901553453113905], [68.392032505165957, 38.157025254868742], [67.829999627559516, 37.144994004864685], [67.075782098259623, 37.356143907209287], [66.51860680528867, 37.362784328758792]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Venezuela",
      "sov_a3": "VEN",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Venezuela",
      "adm0_a3": "VEN",
      "geou_dif": 0.000000,
      "geounit": "Venezuela",
      "gu_a3": "VEN",
      "su_dif": 0.000000,
      "subunit": "Venezuela",
      "su_a3": "VEN",
      "brk_diff": 0.000000,
      "name": "Venezuela",
      "name_long": "Venezuela",
      "brk_a3": "VEN",
      "brk_name": "Venezuela",
      "brk_group": null,
      "abbrev": "Ven.",
      "postal": "VE",
      "formal_en": "Bolivarian Republic of Venezuela",
      "formal_fr": "Repblica Bolivariana de Venezuela",
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Venezuela, RB",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 1.000000,
      "mapcolor13": 4.000000,
      "pop_est": 26814843.000000,
      "gdp_md_est": 357400.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "VE",
      "iso_a3": "VEN",
      "iso_n3": "862",
      "un_a3": "862",
      "wb_a2": "VE",
      "wb_a3": "VEN",
      "woe_id": -99.000000,
      "adm0_a3_is": "VEN",
      "adm0_a3_us": "VEN",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "South America",
      "region_un": "Americas",
      "subregion": "South America",
      "region_wb": "Latin America & Caribbean",
      "name_len": 9.000000,
      "long_len": 9.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[-71.331583624950298, 11.776284084515808], [-71.360005662710819, 11.539993597861212], [-71.947049933546509, 11.423282375530022], [-71.620868292920193, 10.969459947142795], [-71.633063930941091, 10.446494452349029], [-72.074173956984509, 9.865651353388373], [-71.695644090446535, 9.072263088411248], [-71.264559292267734, 9.137194525585983], [-71.03999935574339, 9.859992784052409], [-71.350083787710787, 10.211935126176215], [-71.400623338492238, 10.968969021036015], [-70.155298834906517, 11.375481675660041], [-70.29384334988103, 11.846822414594214], [-69.943244594996827, 12.162307033736099], [-69.584300096297468, 11.459610907431212], [-68.882999233664449, 11.443384507691563], [-68.23327145045873, 10.885744126829946], [-68.194126552997631, 10.554653225135922], [-67.296248541926332, 10.54586823164631], [-66.227864142507997, 10.648626817258688], [-65.655237596281751, 10.200798855017323], [-64.89045223657817, 10.077214667191299], [-64.329478725833738, 10.38959870039568], [-64.318006557864948, 10.64141795495398], [-63.079322475828732, 10.7017243514386], [-61.880946010980196, 10.715625311725104], [-62.730118984616411, 10.420268662960906], [-62.388511928950976, 9.94820445397464], [-61.58876746280194, 9.873066921422264], [-60.830596686431718, 9.381339829948942], [-60.671252407459733, 8.580174261911878], [-60.15009558779618, 8.602756862823426], [-59.758284878159195, 8.367034816924047], [-60.5505879380582, 7.779602972846178], [-60.637972785063766, 7.414999904810855], [-60.295668097562398, 7.043911444522919], [-60.543999192940987, 6.856584377464883], [-61.159336310456482, 6.696077378766319], [-61.139415045807951, 6.234296779806144], [-61.410302903881956, 5.959068101419618], [-60.733574184803722, 5.200277207861901], [-60.601179165271944, 4.91809804933213], [-60.966893276601539, 4.536467596856639], [-62.085429653559132, 4.162123521334308], [-62.804533047116706, 4.006965033377952], [-63.093197597899106, 3.770571193858785], [-63.888342861574159, 4.020530096854571], [-64.628659430587547, 4.14848094320925], [-64.816064012294021, 4.056445217297423], [-64.368494432214106, 3.797210394705246], [-64.408827887617917, 3.126786200366624], [-64.269999152265797, 2.497005520025567], [-63.422867397705119, 2.411067613124175], [-63.368788011311665, 2.200899562993129], [-64.083085496666087, 1.91636912679408], [-64.199305792890513, 1.49285492594602], [-64.611011928959869, 1.328730576987042], [-65.354713304288367, 1.0952822941085], [-65.548267381437569, 0.78925446207603], [-66.325765143484958, 0.724452215982012], [-66.87632585312258, 1.253360500489336], [-67.18129431829307, 2.250638129074062], [-67.447092047786313, 2.600280869960869], [-67.809938117123707, 2.820655015469569], [-67.303173183853445, 3.31845408773718], [-67.337563849543685, 3.542342230641722], [-67.621835903581285, 3.839481716319995], [-67.823012254493548, 4.503937282728899], [-67.744696621355217, 5.221128648291668], [-67.521531948502755, 5.556870428891969], [-67.341439581965574, 6.095468044454023], [-67.695087246355016, 6.267318020040647], [-68.26505245631823, 6.153268133972475], [-68.985318569602356, 6.206804917826858], [-69.389479946557117, 6.099860541198836], [-70.093312954372422, 6.96037649172311], [-70.674233567981517, 7.087784735538719], [-71.960175747348643, 6.991614895043539], [-72.198352423781884, 7.340430813013683], [-72.444487270788073, 7.423784898300482], [-72.479678921178845, 7.632506008327354], [-72.360900641555972, 8.002638454617895], [-72.439862230097958, 8.405275376820029], [-72.660494757768106, 8.625287787302682], [-72.788729824500393, 9.085027167187334], [-73.304951544880055, 9.151999823437606], [-73.027604132769568, 9.736770331252444], [-72.905286017534706, 10.450344346554772], [-72.614657762325209, 10.821975409381778], [-72.227575446242938, 11.108702093953241], [-71.973921678338286, 11.60867157637712], [-71.331583624950298, 11.776284084515808]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "Vietnam",
      "sov_a3": "VNM",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Vietnam",
      "adm0_a3": "VNM",
      "geou_dif": 0.000000,
      "geounit": "Vietnam",
      "gu_a3": "VNM",
      "su_dif": 0.000000,
      "subunit": "Vietnam",
      "su_a3": "VNM",
      "brk_diff": 0.000000,
      "name": "Vietnam",
      "name_long": "Vietnam",
      "brk_a3": "VNM",
      "brk_name": "Vietnam",
      "brk_group": null,
      "abbrev": "Viet.",
      "postal": "VN",
      "formal_en": "Socialist Republic of Vietnam",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Vietnam",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 6.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 4.000000,
      "pop_est": 86967524.000000,
      "gdp_md_est": 241700.000000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "VN",
      "iso_a3": "VNM",
      "iso_n3": "704",
      "un_a3": "704",
      "wb_a2": "VN",
      "wb_a3": "VNM",
      "woe_id": -99.000000,
      "adm0_a3_is": "VNM",
      "adm0_a3_us": "VNM",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "South-Eastern Asia",
      "region_wb": "East Asia & Pacific",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 5.000000,
      "tiny": 2.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[108.050180291782937, 21.552379869060118], [106.715067987090094, 20.696850694252021], [105.881682163519031, 19.752050482659698], [105.662005649846307, 19.05816518806057], [106.42681684776602, 18.004120998603227], [107.361953566519745, 16.697456569887052], [108.269495070429628, 16.079742336486149], [108.877106561317476, 15.27669057867044], [109.335269810017223, 13.426028347217724], [109.200135939573983, 11.666859239137764], [108.366129998815452, 11.008320624226272], [107.220928582795239, 10.364483954301832], [106.405112746203429, 9.530839748569321], [105.15826378786511, 8.599759629750494], [104.795185174582386, 9.241038316276502], [105.076201613385621, 9.918490505406808], [104.334334751403475, 10.48654368737523], [105.199914992292349, 10.889309800658097], [106.249670037869464, 10.961811835163587], [105.81052371625313, 11.567614650921229], [107.49140302941089, 12.337205918827948], [107.61454796756243, 13.535530707244206], [107.382727492301086, 14.202440904186972], [107.564525181103903, 15.202173163305559], [107.312705926545604, 15.908538316303179], [106.556007928495688, 16.604283962464805], [105.925762160264028, 17.485315456608959], [105.094598423281525, 18.66697459561108], [103.896532017026715, 19.265180975821806], [104.183387892678937, 19.624668077060221], [104.822573683697101, 19.886641750563882], [104.435000441508052, 20.758733221921531], [103.203861118586445, 20.766562201413748], [102.754896274834664, 21.675137233969465], [102.170435825613581, 22.464753119389304], [102.706992222100098, 22.708795070887675], [103.50451460166056, 22.703756618739209], [104.476858351664475, 22.819150092046968], [105.329209425886631, 23.352063300056912], [105.811247186305224, 22.976892401617903], [106.725403273548466, 22.794267889898421], [106.567273390735323, 22.218204860924772], [107.043420037872636, 21.811898912029914], [108.050180291782937, 21.552379869060118]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 4.000000,
      "sovereignt": "Vanuatu",
      "sov_a3": "VUT",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Vanuatu",
      "adm0_a3": "VUT",
      "geou_dif": 0.000000,
      "geounit": "Vanuatu",
      "gu_a3": "VUT",
      "su_dif": 0.000000,
      "subunit": "Vanuatu",
      "su_a3": "VUT",
      "brk_diff": 0.000000,
      "name": "Vanuatu",
      "name_long": "Vanuatu",
      "brk_a3": "VUT",
      "brk_name": "Vanuatu",
      "brk_group": null,
      "abbrev": "Van.",
      "postal": "VU",
      "formal_en": "Republic of Vanuatu",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Vanuatu",
      "name_alt": null,
      "mapcolor7": 6.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 7.000000,
      "mapcolor13": 3.000000,
      "pop_est": 218519.000000,
      "gdp_md_est": 988.500000,
      "pop_year": -99.000000,
      "lastcensus": 2009.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "VU",
      "iso_a3": "VUT",
      "iso_n3": "548",
      "un_a3": "548",
      "wb_a2": "VU",
      "wb_a3": "VUT",
      "woe_id": -99.000000,
      "adm0_a3_is": "VUT",
      "adm0_a3_us": "VUT",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Oceania",
      "region_un": "Oceania",
      "subregion": "Melanesia",
      "region_wb": "East Asia & Pacific",
      "name_len": 7.000000,
      "long_len": 7.000000,
      "abbrev_len": 4.000000,
      "tiny": 2.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[167.844876743845106, -16.466333103097156], [167.515181105822904, -16.59784962327997], [167.18000776597782, -16.15999521247096], [167.216801385769628, -15.891846205308454], [167.844876743845106, -16.466333103097156]]], [[[167.107712437201513, -14.933920179913954], [167.270028111030257, -15.740020847234874], [167.001207310247963, -15.614602146062495], [166.793157993840879, -15.668810723536723], [166.649859247095577, -15.392703545801197], [166.629136997746485, -14.626497084209603], [167.107712437201513, -14.933920179913954]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Yemen",
      "sov_a3": "YEM",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Yemen",
      "adm0_a3": "YEM",
      "geou_dif": 0.000000,
      "geounit": "Yemen",
      "gu_a3": "YEM",
      "su_dif": 0.000000,
      "subunit": "Yemen",
      "su_a3": "YEM",
      "brk_diff": 0.000000,
      "name": "Yemen",
      "name_long": "Yemen",
      "brk_a3": "YEM",
      "brk_name": "Yemen",
      "brk_group": null,
      "abbrev": "Yem.",
      "postal": "YE",
      "formal_en": "Republic of Yemen",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Yemen, Rep.",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 11.000000,
      "pop_est": 23822783.000000,
      "gdp_md_est": 55280.000000,
      "pop_year": -99.000000,
      "lastcensus": 2004.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "YE",
      "iso_a3": "YEM",
      "iso_n3": "887",
      "un_a3": "887",
      "wb_a2": "RY",
      "wb_a3": "YEM",
      "woe_id": -99.000000,
      "adm0_a3_is": "YEM",
      "adm0_a3_us": "YEM",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Asia",
      "region_un": "Asia",
      "subregion": "Western Asia",
      "region_wb": "Middle East & North Africa",
      "name_len": 5.000000,
      "long_len": 5.000000,
      "abbrev_len": 4.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[53.108572625547509, 16.651051133688952], [52.385205926325881, 16.382411200419654], [52.19172936382509, 15.93843313238402], [52.1681649107, 15.597420355689948], [51.172515089732485, 15.175249742081492], [49.57457645040315, 14.708766587782748], [48.679230584514158, 14.00320241948566], [48.238947381387419, 13.948089504446372], [47.938914015500785, 14.007233181204427], [47.354453566279716, 13.592219753468383], [46.717076450391744, 13.399699204965019], [45.877592807810267, 13.347764390511685], [45.625050083199881, 13.290946153206763], [45.406458774605255, 13.026905422411433], [45.144355910020863, 12.953938300015309], [44.989533318874415, 12.69958690027471], [44.494576450382851, 12.721652736863348], [44.175112745954493, 12.585950425664876], [43.482958611837127, 12.636800035040084], [43.222871128112132, 13.220950425667425], [43.25144819516953, 13.767583726450852], [43.087943963398061, 14.062630316621309], [42.892245314308724, 14.802249253798749], [42.60487267433362, 15.213335272680595], [42.805015496600049, 15.261962795467255], [42.702437778500659, 15.718885809791999], [42.823670688657415, 15.911742255105267], [42.77933230975097, 16.347891343648683], [43.218375278502748, 16.66688996018641], [43.115797560403358, 17.088440456607373], [43.380794305196105, 17.579986680567671], [43.791518589051918, 17.319976711491108], [44.062613152855079, 17.410358791569593], [45.216651238797191, 17.433328965723334], [45.399999220568759, 17.333335069238558], [46.366658563020536, 17.233315334537636], [46.749994337761649, 17.283338120996177], [47.000004917189756, 16.949999294497445], [47.466694777217633, 17.116681626854884], [48.183343540241339, 18.166669216377315], [49.116671583864871, 18.616667588774945], [52.000009800022241, 19.000003363516058], [52.782184279192052, 17.349742336491232], [53.108572625547509, 16.651051133688952]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 2.000000,
      "sovereignt": "South Africa",
      "sov_a3": "ZAF",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "South Africa",
      "adm0_a3": "ZAF",
      "geou_dif": 0.000000,
      "geounit": "South Africa",
      "gu_a3": "ZAF",
      "su_dif": 0.000000,
      "subunit": "South Africa",
      "su_a3": "ZAF",
      "brk_diff": 0.000000,
      "name": "South Africa",
      "name_long": "South Africa",
      "brk_a3": "ZAF",
      "brk_name": "South Africa",
      "brk_group": null,
      "abbrev": "S.Af.",
      "postal": "ZA",
      "formal_en": "Republic of South Africa",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "South Africa",
      "name_alt": null,
      "mapcolor7": 2.000000,
      "mapcolor8": 3.000000,
      "mapcolor9": 4.000000,
      "mapcolor13": 2.000000,
      "pop_est": 49052489.000000,
      "gdp_md_est": 491000.000000,
      "pop_year": -99.000000,
      "lastcensus": 2001.000000,
      "gdp_year": -99.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "3. Upper middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "ZA",
      "iso_a3": "ZAF",
      "iso_n3": "710",
      "un_a3": "710",
      "wb_a2": "ZA",
      "wb_a3": "ZAF",
      "woe_id": -99.000000,
      "adm0_a3_is": "ZAF",
      "adm0_a3_us": "ZAF",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Southern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 12.000000,
      "long_len": 12.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[31.521001417778876, -29.257386976846256], [31.325561150851001, -29.401977634398914], [30.901762729625347, -29.909956963828037], [30.622813348113819, -30.423775730106129], [30.055716180142781, -31.140269463832958], [28.925552605919538, -32.172041110972501], [28.2197558936771, -32.771952813448856], [27.464608188595975, -33.226963799778801], [26.419452345492825, -33.614950453426189], [25.909664340933489, -33.667040297176399], [25.780628289500697, -33.944646091448341], [25.172861769315972, -33.796851495093584], [24.677853224392123, -33.987175795224552], [23.594043409934642, -33.794474379208154], [22.988188917744736, -33.916430759416983], [22.574157342222236, -33.864082533505311], [21.542799106541025, -34.258838799782936], [20.689052768647002, -34.417175388325234], [20.071261020597632, -34.795136814107991], [19.616405063564571, -34.819166355123713], [19.193278435958717, -34.462598972309792], [18.85531456876987, -34.444305515278465], [18.42464318204938, -33.99787281670897], [18.377410922934615, -34.136520684548067], [18.24449913907992, -33.86775156019803], [18.250080193767445, -33.281430759414441], [17.925190463948439, -32.611290785453427], [18.247909783611192, -32.42913136162457], [18.221761508871481, -31.661632989225669], [17.566917758868868, -30.725721123987547], [17.064416131262703, -29.878641045859162], [17.062917514726223, -29.875953871379984], [16.344976840895242, -28.576705010697701], [16.824017368240902, -28.08216155366447], [17.218928663815404, -28.355943291946812], [17.387497185951503, -28.783514092729781], [17.83615197110953, -28.856377862261319], [18.464899122804752, -29.045461928017279], [19.002127312911085, -28.972443129188868], [19.894734327888614, -28.461104831660776], [19.895767856534434, -24.767790215760591], [20.165725538827189, -24.917961928000771], [20.758609246511838, -25.86813648855145], [20.66647016773544, -26.477453301704923], [20.889609002371738, -26.828542982695915], [21.605896030369394, -26.726533705351756], [22.105968865657868, -26.280256036079138], [22.579531691180591, -25.979447523708146], [22.824271274514899, -25.500458672794771], [23.312096795350186, -25.26868987396572], [23.73356977712271, -25.390129489851617], [24.211266717228796, -25.670215752873574], [25.025170525825786, -25.719670098576898], [25.664666375437719, -25.486816094669713], [25.76584882986521, -25.174845472923678], [25.941652052522159, -24.696373386333221], [26.485753208123299, -24.616326592713104], [26.786406691197413, -24.240690606383485], [27.119409620886245, -23.574323011979775], [28.017235955525251, -22.827753594659079], [29.43218834810904, -22.091312758067588], [29.839036899542972, -22.102216485281176], [30.322883335091774, -22.271611830333935], [30.65986535006709, -22.151567478119915], [31.191409132621288, -22.251509698172399], [31.670397983534656, -23.658969008073864], [31.930588820124253, -24.369416599222539], [31.752408481581881, -25.484283949487413], [31.83777794772806, -25.843331801051349], [31.333157586397903, -25.66019052500895], [31.044079624157149, -25.731452325139443], [30.949666782359913, -26.022649021104151], [30.67660851412964, -26.398078301704608], [30.68596194837448, -26.743845310169533], [31.282773064913329, -27.285879408478998], [31.86806033705108, -27.177927341421277], [32.071665480281069, -26.733820082304909], [32.830120477028885, -26.742191664336197], [32.580264926897684, -27.470157566031816], [32.462132602678452, -28.301011244420557], [32.203388706193039, -28.752404880490069], [31.521001417778876, -29.257386976846256]], [[28.978262566857243, -28.955596612261711], [28.541700066855498, -28.647501722937569], [28.074338413207784, -28.851468601193588], [27.532511020627478, -29.24271087007536], [26.999261915807637, -29.875953871379984], [27.749397006956485, -30.645105889612225], [28.107204624145425, -30.545732110314951], [28.29106937023991, -30.2262167294543], [28.848399692507741, -30.070050551068256], [29.018415154748027, -29.743765557577369], [29.325166456832591, -29.257386976846256], [28.978262566857243, -28.955596612261711]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Zambia",
      "sov_a3": "ZMB",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Zambia",
      "adm0_a3": "ZMB",
      "geou_dif": 0.000000,
      "geounit": "Zambia",
      "gu_a3": "ZMB",
      "su_dif": 0.000000,
      "subunit": "Zambia",
      "su_a3": "ZMB",
      "brk_diff": 0.000000,
      "name": "Zambia",
      "name_long": "Zambia",
      "brk_a3": "ZMB",
      "brk_name": "Zambia",
      "brk_group": null,
      "abbrev": "Zambia",
      "postal": "ZM",
      "formal_en": "Republic of Zambia",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Zambia",
      "name_alt": null,
      "mapcolor7": 5.000000,
      "mapcolor8": 8.000000,
      "mapcolor9": 5.000000,
      "mapcolor13": 13.000000,
      "pop_est": 11862740.000000,
      "gdp_md_est": 17500.000000,
      "pop_year": -99.000000,
      "lastcensus": 2010.000000,
      "gdp_year": -99.000000,
      "economy": "7. Least developed region",
      "income_grp": "4. Lower middle income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "ZM",
      "iso_a3": "ZMB",
      "iso_n3": "894",
      "un_a3": "894",
      "wb_a2": "ZM",
      "wb_a3": "ZMB",
      "woe_id": -99.000000,
      "adm0_a3_is": "ZMB",
      "adm0_a3_us": "ZMB",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 6.000000,
      "long_len": 6.000000,
      "abbrev_len": 6.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[32.759375441221323, -9.23059905358906], [33.231387973775298, -9.676721693564801], [33.485687697083591, -10.525558770391115], [33.315310499817286, -10.796549981329697], [33.114289178201915, -11.607198174692314], [33.306422153463075, -12.435778090060218], [32.991764357237884, -12.783870537978274], [32.688165317523129, -13.712857761289277], [33.214024692525214, -13.971860039936153], [30.17948123548183, -14.796099134991529], [30.27425581230511, -15.507786960515213], [29.516834344203147, -15.644677829656388], [28.947463413211267, -16.04305144619444], [28.825868768028499, -16.389748630440614], [28.467906121542683, -16.468400160388846], [27.59824344250276, -17.290830580314008], [27.044427117630732, -17.938026218337434], [26.70677330903564, -17.961228936436484], [26.381935255648926, -17.846042168857899], [25.264225701608012, -17.736539808831417], [25.084443393664571, -17.661815687737374], [25.076950310982259, -17.578823337476621], [24.682349074001507, -17.353410739819473], [24.033861525170778, -17.295843194246324], [23.215048455506064, -17.523116143465984], [22.562478468524262, -16.898451429921813], [21.887842644953874, -16.08031015387688], [21.933886346125917, -12.898437188369359], [24.016136508894675, -12.911046237848574], [23.930922072045377, -12.565847670138856], [24.079905226342845, -12.191296888887365], [23.904153680118185, -11.722281589406322], [24.017893507592589, -11.23729827234709], [23.912215203555718, -10.926826267137514], [24.257155389103989, -10.951992689663657], [24.314516228947952, -11.26282642989927], [24.783169793402951, -11.238693536018964], [25.418118116973204, -11.330935967659961], [25.752309604604733, -11.784965101776358], [26.553087599399618, -11.924439792532127], [27.164419793412463, -11.608748467661075], [27.388798862423783, -12.132747491100666], [28.155108676879987, -12.272480564017897], [28.523561639121027, -12.698604424696683], [28.934285922976837, -13.248958428605135], [29.699613885219492, -13.257226657771831], [29.61600141777123, -12.178894545137311], [29.34154788586909, -12.360743910372413], [28.642417433392353, -11.971568698782315], [28.372253045370428, -11.793646742401393], [28.49606977714177, -10.789883721564046], [28.673681674928929, -9.605924981324932], [28.449871046672826, -9.164918308146085], [28.734866570762502, -8.526559340044578], [29.00291222506047, -8.407031752153472], [30.346086053190817, -8.238256524288218], [30.740015496551791, -8.340007419470915], [31.157751336950049, -8.594578747317366], [31.556348097466497, -8.762048841998642], [32.19186486179197, -8.930358981973278], [32.759375441221323, -9.23059905358906]]]]
    }
  }, {
    "type": "Feature",
    "properties": {
      "scalerank": 1,
      "featurecla": "Admin-0 country",
      "labelrank": 3.000000,
      "sovereignt": "Zimbabwe",
      "sov_a3": "ZWE",
      "adm0_dif": 0.000000,
      "level": 2.000000,
      "type": "Sovereign country",
      "admin": "Zimbabwe",
      "adm0_a3": "ZWE",
      "geou_dif": 0.000000,
      "geounit": "Zimbabwe",
      "gu_a3": "ZWE",
      "su_dif": 0.000000,
      "subunit": "Zimbabwe",
      "su_a3": "ZWE",
      "brk_diff": 0.000000,
      "name": "Zimbabwe",
      "name_long": "Zimbabwe",
      "brk_a3": "ZWE",
      "brk_name": "Zimbabwe",
      "brk_group": null,
      "abbrev": "Zimb.",
      "postal": "ZW",
      "formal_en": "Republic of Zimbabwe",
      "formal_fr": null,
      "note_adm0": null,
      "note_brk": null,
      "name_sort": "Zimbabwe",
      "name_alt": null,
      "mapcolor7": 1.000000,
      "mapcolor8": 5.000000,
      "mapcolor9": 3.000000,
      "mapcolor13": 9.000000,
      "pop_est": 12619600.000000,
      "gdp_md_est": 9323.000000,
      "pop_year": 0.000000,
      "lastcensus": 2002.000000,
      "gdp_year": 0.000000,
      "economy": "5. Emerging region: G20",
      "income_grp": "5. Low income",
      "wikipedia": -99.000000,
      "fips_10": null,
      "iso_a2": "ZW",
      "iso_a3": "ZWE",
      "iso_n3": "716",
      "un_a3": "716",
      "wb_a2": "ZW",
      "wb_a3": "ZWE",
      "woe_id": -99.000000,
      "adm0_a3_is": "ZWE",
      "adm0_a3_us": "ZWE",
      "adm0_a3_un": -99.000000,
      "adm0_a3_wb": -99.000000,
      "continent": "Africa",
      "region_un": "Africa",
      "subregion": "Eastern Africa",
      "region_wb": "Sub-Saharan Africa",
      "name_len": 8.000000,
      "long_len": 8.000000,
      "abbrev_len": 5.000000,
      "tiny": -99.000000,
      "homepart": 1.000000
    },
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[31.191409132621288, -22.251509698172399], [30.65986535006709, -22.151567478119915], [30.322883335091774, -22.271611830333935], [29.839036899542972, -22.102216485281176], [29.43218834810904, -22.091312758067588], [28.794656202924216, -21.639454034107452], [28.021370070108617, -21.485975030200585], [27.727227817503259, -20.851801853114715], [27.724747348753255, -20.499058526290391], [27.296504754350508, -20.391519870690999], [26.164790887158485, -19.293085625894939], [25.850391473094732, -18.714412937090536], [25.649163445750162, -18.536025892818991], [25.264225701608012, -17.736539808831417], [26.381935255648926, -17.846042168857899], [26.70677330903564, -17.961228936436484], [27.044427117630732, -17.938026218337434], [27.59824344250276, -17.290830580314008], [28.467906121542683, -16.468400160388846], [28.825868768028499, -16.389748630440614], [28.947463413211267, -16.04305144619444], [29.516834344203147, -15.644677829656388], [30.27425581230511, -15.507786960515213], [30.338954705534544, -15.880839125230246], [31.17306399915768, -15.860943698797874], [31.636498243951195, -16.071990248277885], [31.852040643040599, -16.319417006091378], [32.328238966610229, -16.392074069893752], [32.847638787575846, -16.713398125884616], [32.849860874164392, -17.979057305577179], [32.654885695127149, -18.672089939043495], [32.611994256324891, -19.419382826416275], [32.772707960752626, -19.715592136313298], [32.65974327976258, -20.304290052982317], [32.508693068173443, -20.395292250248307], [32.244988234188014, -21.116488539313693], [31.191409132621288, -22.251509698172399]]]]
    }
  }]
};
},{}],"deathrate-smoking.json":[function(require,module,exports) {
module.exports = [{
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.26840928348538
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.11745230182672
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.21853469544554
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.97291019620957
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.39773570264545
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.72310330181057
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.32816687629357
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.24279240362293
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.17202197446947
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.19865876941965
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.89001419868487
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.85833009467727
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.52352388789372
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.89703585195828
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.59319436077226
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.9523532235708
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.45904080271758
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.85883088859815
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.30485658161967
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.40743945219157
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.13609612997926
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.17068362871237
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.08056421132349
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.15066841299316
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.50915340547377
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.34641685058044
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.02284863012152
}, {
  "Entity": "Afghanistan",
  "Code": "AFG",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.89175884473484
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.6288869767855
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.37456627120598
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.83742074184532
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.34411705601522
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.3990919332517
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.71712290525137
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.73663617653608
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.5795993205366
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.57698010524301
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.54751749805976
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.99450863519017
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.18743940055856
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.16636775516301
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.27543152004492
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.1766441331074
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.74831592947102
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.82228314989142
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.04803669240601
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.59947368867617
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.81900597963917
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.13219231312861
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.7872101491678
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.83619227945051
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.32202790533184
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.41271543212633
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.14279271830051
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.707915377688
}, {
  "Entity": "Albania",
  "Code": "ALB",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.23611369789963
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.03478804588254
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.86529700119856
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.04854403276197
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.47844235667965
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.18610598237608
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.05575643884337
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.43924857383048
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.65099998340703
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.63382413974594
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.2784667174915
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.53323473359707
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.50740081314608
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.46667374429836
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.05917639030295
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.93435719616602
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.8771099458507
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.80497737113834
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.83492376915538
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.90176316466696
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.25728773287962
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.59329562791935
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.22157899967803
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.83581696325736
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.52648565679202
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.338114141289246
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.33201479685688
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.2537676501446
}, {
  "Entity": "Algeria",
  "Code": "DZA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.4118726342218
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.95312259347486
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.51596183876326
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.56828380701309
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.71367306651231
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.33751793114178
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.6586697999364
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.96665165996903
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.18245932401803
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.52422462353455
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.761152936278
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.33534391965087
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.85151398256991
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.69993383259575
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.10010788903416
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.45313377069168
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.46445552345655
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.50414922667612
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.92986357165144
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.19035780984954
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.3288478108431
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.75604565669275
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.04872708310057
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.4676513386551
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.03767135790167
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.32497146924874
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.53815527738811
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.0135853707735
}, {
  "Entity": "American Samoa",
  "Code": "ASM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.53796691274277
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.79597969245838
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.9807882368369
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.266892974477756
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.44018465949957
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.15571230712824
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.91723126598545
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.249904280549075
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.02013058674742
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.72496273756844
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.298961727772486
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.58854689284213
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.580541407891026
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.40038442312483
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.2873740706316
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.7906085874099
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.18150224129452
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.909720514381185
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.08277407140308
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.769271206940495
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.9515834068604
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.55073285044799
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.42036031627434
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.96815621577713
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.21592723575693
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.554435300497325
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 31.30414225932065
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.487644131989537
}, {
  "Entity": "Andean Latin America",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 29.69587160494345
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.2118907474369
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.76380390468911
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.4254458538381
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.9583300889764
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.26654312115176
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.99883025445482
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.6249188940575
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.0243757115125
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.92795826674165
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.90829817609422
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.24006145589246
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.72029407127451
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.29167880059478
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.83496663701753
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.58131853247703
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.75127438220711
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.55632540116392
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.77291696459008
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.1310285041762
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.580489600426354
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.82235702575387
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.588049655692444
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.75515400420031
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.16758241278806
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.46582293855262
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.55136046284962
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.18326210355421
}, {
  "Entity": "Andorra",
  "Code": "AND",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.76983270843601
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.35022082235534
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.65415077672154
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.23330536895156
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.07728686385423
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.3258248991268
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.71697761764105
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.75995946677102
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.64674167097613
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.64095335669552
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.9260260644067
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.998912799548
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.18070142576303
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.0454639796856
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.71644456734406
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.41508249711299
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.5929693636188
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.48463956328972
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.60463268422178
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.22464582625022
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.82346213496129
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.74830619185893
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.32617124399236
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.38559320545598
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.33720692916154
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.68628680394418
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.19541010369929
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.70029793301013
}, {
  "Entity": "Angola",
  "Code": "AGO",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.57827390587333
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.993753303026295
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.49448953561458
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.331151116718274
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.02196934819255
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.55716864705107
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.464868633065265
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.51772793341926
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.66664308912934
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.076006064939016
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.856222630502025
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.89394434754258
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.447462803445205
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.91043032214546
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.592652544963144
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.133621818707546
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.99272599206349
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.91239547265058
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.45175542740177
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.25810489970478
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.18916741234887
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.55579218529141
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.87018843461276
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.10550238992611
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.26856936084921
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.11292406752038
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.3984284063276
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.864312138801466
}, {
  "Entity": "Antigua and Barbuda",
  "Code": "ATG",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.42351040499078
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.86530170417603
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.51625959272707
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.96244005048717
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.76567052241617
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.0345636985073
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.98229736159848
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.2572290661169
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.21950607679764
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.09286710878624
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.04417231888166
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.5307470631546
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.2516906834236
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.01894081049798
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.45124407759639
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.47552032112709
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.53125499757134
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.8897047380418
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.76555651987937
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.10010203953324
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.31957934832705
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.62239724155444
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.96013621759984
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.75198826596046
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.12298693511065
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.76889433006554
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.64242236555918
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.12043705746886
}, {
  "Entity": "Argentina",
  "Code": "ARG",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.50562687153457
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.28850158618155
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.9690494163799
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.98731800671132
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.9826212447312
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.11970769721322
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 157.0436555088466
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.2828946121664
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.89477602989456
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.22812401353582
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.033096791098
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.22865215569382
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.98685647898503
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.56024450220866
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.83771930081573
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.35761395324943
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.3820098886416
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.13919070870006
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.29897705621443
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.18219695062692
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.61815956428768
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.33680375431179
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.39014959532545
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.36585564739708
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.9777236561067
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.76192615714086
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.05108032420642
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.4439516088026
}, {
  "Entity": "Armenia",
  "Code": "ARM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.9049206813463
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.38155035438643
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.25209790745632
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.86369440110072
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.93640807823613
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.04168772308937
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.98758535117163
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.66644197002404
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.89419955321462
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.16959890489004
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.41306254073116
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.28027174576572
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.61868660870341
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.27274912208502
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.86888563120883
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.52089658210072
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.95030021523849
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.07105203580693
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.90908964681309
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.70205383122948
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.94338086994042
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.53196713557074
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.92053286261416
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.528025459540245
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.04603864886175
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.86162116033309
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.33454653517466
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.78622205229625
}, {
  "Entity": "Australasia",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.28124276959343
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.45116609219147
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.76701571856074
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.51562585857732
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.58463889324057
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.7771228346703
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.83769902364646
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.03645430129733
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.72225662106054
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.5498927851394
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.33011146387385
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.70087648842821
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.918341816775
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.55771033467462
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.10785329270688
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.88728907246157
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.47115738999607
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.54921112623482
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.41741804721808
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.208988462746156
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.45280303780322
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.13276209999816
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.51876427995159
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.05068004833599
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.74737003880923
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.75025087769288
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.48642929450004
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.05987286263937
}, {
  "Entity": "Australia",
  "Code": "AUS",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.82643753781074
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.26163071664743
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.94866774576337
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.33171567906061
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.60718712025854
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.81201238343834
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.33272849316604
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.8757134905566
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.02682633030913
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.97251622499677
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.8167516521695
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.32477049813251
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.87595427970966
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.23626307443926
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.23281027246377
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.32981482431798
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.82206966382353
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.37579059893116
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.46456794223093
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.52603998292085
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.82936024697833
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.6212274115823
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.4736826475127
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.49784032884916
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.7637789184744
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.75998902242101
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.37106833286899
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.99789781921499
}, {
  "Entity": "Austria",
  "Code": "AUT",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.64742712153678
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.34747320649154
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.67162511094898
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.79767171591163
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 157.88749403015044
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.99984218063054
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.48689337731537
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.76134361822724
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.91202643489237
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.178349870485
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.52857960054837
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.2118623521473
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.8095966887346
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.6199185714496
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.97179865485543
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.7100467435616
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.04690145728978
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.14875575459894
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.58896859425585
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.0724761470145
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.96811062453577
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.97085685712472
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.4304504668905
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.16128045609776
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.15645967319034
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.07879039723497
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.32355027045554
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.83810756457666
}, {
  "Entity": "Azerbaijan",
  "Code": "AZE",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.20331201178095
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.644013309560265
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.83737464877648
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.95593139229875
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.26653266940977
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.07795567136513
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.34833920767224
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.64815362228913
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.68536401113788
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.6943315042678
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.6266909156764
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.649574592638
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.45187110391832
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.30452816686155
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.62851817400207
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.38686607180965
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.09172669980067
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.998971013258284
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.61971261444643
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.65108540598039
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.82350539973311
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.350878732851
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.93285550608155
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.143345574941726
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.41389082922154
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.4722906883124
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.55808409525594
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.27001898586706
}, {
  "Entity": "Bahamas",
  "Code": "BHS",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.934320452598236
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.58520910769153
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.64784759099356
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.0215546937708
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.0467020258369
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.1584935338822
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.87183345697605
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.84636647911262
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.10540095015664
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.04944678084586
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.48313914372282
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.621828737311
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.8206592749811
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.41521844737609
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.40700282412806
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.88882283257972
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.31720757400069
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.40732865136054
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.1936315360676
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.8353130589961
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.35649064123279
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.00547793568682
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.526039403148644
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.31743727233269
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.22130547346748
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.78145199695723
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.49618810910112
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.123796360341245
}, {
  "Entity": "Bahrain",
  "Code": "BHR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.84639969653913
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.7515438840703
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.67421553276446
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.5790665277599
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.45389001948783
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.3275100738694
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.1790138567782
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.20656354281883
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.1134918648725
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.45618374721931
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.18171095424209
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.63765256958114
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.5349234451819
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.71457338370676
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.03442596642118
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.21195994589868
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.27508751084582
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.20179207806524
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.32306197981183
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.46815165848646
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.16542938848845
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.44634107779727
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.12055089110837
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.25216022599393
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.77226892042304
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.13566318277987
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.89705905193881
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.50977999529725
}, {
  "Entity": "Bangladesh",
  "Code": "BGD",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.06533729194983
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.86132271228667
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.418546877423616
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.95606909332489
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.94627287566176
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.139839820412114
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.85367641339833
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.91180421262187
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.470081316176966
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.27440157459274
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.57586407830069
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.31319846401735
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.194253167906545
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.20460933888597
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.694634864859346
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.59372107924733
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.49139518246646
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.93273008136527
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.24491178810698
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.17910990259196
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.06746815225158
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.35485224358923
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.73841728004717
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.89989946935804
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.64041061109292
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.61795904863391
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.58870047880695
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.36665674598488
}, {
  "Entity": "Barbados",
  "Code": "BRB",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.30293608420899
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.002897262405
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.40161762464808
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.02272776701835
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 190.07266781505973
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 191.31333292173832
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 197.69621151181326
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 194.84752221196518
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 194.53246929228473
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 198.25003181090497
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 201.16468394512623
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 188.9299629253563
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 196.9995397180913
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 204.1251405346136
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 195.69156643652806
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 190.17419133792575
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 193.55089076047042
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 184.96038461888543
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.04714457250168
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.92787568953693
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.7565363724354
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 177.00990898660848
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 177.2803306104362
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.89927679829808
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.61532368609136
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.83531629347846
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.16749993104477
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.8915064375491
}, {
  "Entity": "Belarus",
  "Code": "BLR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.82748560339112
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.6706532074064
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.61338763002962
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.8592373833506
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.97246792903996
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.61863214444162
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.45504100375393
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.86540171109704
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.94714679812523
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.6825971184366
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.6205707917765
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.44626033850912
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.4964318381718
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.78224319807921
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.08024945550221
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.45375891139595
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.87132988238173
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.04666587661784
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.94370617011677
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.23224717184698
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.2959021730752
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.73293291473458
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.56279131997705
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.92956384420036
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.40333668704751
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.04122775163
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.35753658748969
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.3648649063336
}, {
  "Entity": "Belgium",
  "Code": "BEL",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.06373590155661
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.78205700716644
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.63131284702415
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.27578613742257
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.11136767170122
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.10086740029571
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.40276656227798
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.0932418165931
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.09947427557765
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.27595743891743
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.70797870756509
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.50747815846145
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.62265051872895
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.39854663321574
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.32724221499677
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.14195370576326
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.34422040089432
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.04945661427664
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.49607664777608
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.13847716208541
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.77720176672198
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.451290919934365
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.774769287721185
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.53143886946901
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.401071246591165
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.658727653953804
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.242023216029686
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.99716485701183
}, {
  "Entity": "Belize",
  "Code": "BLZ",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.521078237110494
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.05626701694904
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.5836602682244
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.62813575073737
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.61502856699202
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.53103990087304
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.16796243444232
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.20255798986304
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.15829501230385
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.54547195478256
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.09547253791706
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.0329753131234
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.82532422873868
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.47540013714886
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.9141670587127
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.23041784028164
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.390831162324865
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.02045697758221
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.789468253164806
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.636108361273564
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.85508634936538
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.949366367417205
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.24388243380549
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.50711676534439
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.43349377135351
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.19084382329043
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.82585928449486
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.50963224658101
}, {
  "Entity": "Benin",
  "Code": "BEN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.248626033664706
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.34375425692896
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.33919245252366
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.71729918627153
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.48737698149047
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.09323416873845
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.93923175820984
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.98919205966726
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.8530448573387
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.24198108378863
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.62965652483992
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.59265428801696
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.68886400361726
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.472052399855514
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.54143469636921
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.93641394129347
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.210904358529326
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.6419815115952
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.20443700136764
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.23526788465148
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.2596492789035
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.21376773181967
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.42608067741555
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.59008425214548
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.21132615685371
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.76215692520324
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.19218605866399
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.9838923539121
}, {
  "Entity": "Bermuda",
  "Code": "BMU",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.713366093764186
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.3707725286589
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.07711833717866
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.97100149006751
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.65304821079106
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.33912086282045
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.86590442906645
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.17688702965286
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.38285189097053
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.06067692462972
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.12667369612201
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.65537638958811
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.48192296900244
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.32418882322689
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.8079004765076
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.89175392738306
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.34889672623379
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.55901046431055
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.05457813900574
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.55688920198787
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.57240809324576
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.179674053507654
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.79042130306589
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.422351218900936
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.16845258812414
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.88942842099834
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.63262857493372
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.37035226362283
}, {
  "Entity": "Bhutan",
  "Code": "BTN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.1876220122311
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.07968929741554
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.87691296642043
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.88953663476472
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.91731147000343
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.04878062417414
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.60890832766472
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.6842034316682
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.06572112738249
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.65360876018356
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.6170273481159
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.55465471659738
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.7339241049761
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.74502205861108
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.71423701766739
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.74110861149089
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.22188629801516
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.53348519710133
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.27462245085072
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.038071203171704
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.83487457550745
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.71547710229927
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.64634486270673
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.58127831309129
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.53703087538343
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.52620725751098
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.56416817634346
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.64534147873899
}, {
  "Entity": "Bolivia",
  "Code": "BOL",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.839941078396905
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.88366196029864
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.7147197312035
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 175.893243235246
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.38919403760096
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 177.27032825714127
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.03715979157212
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.22135013501185
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.49325107540673
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.59928205355322
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.35728638609524
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.88503042251813
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.9043937068506
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.82089022136714
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.15263042755183
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.15349566658662
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.36810285371132
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.8810170777887
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.72353474658115
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.0028966643162
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.86065110997097
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.90681535613652
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.16320382386056
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.1554855786824
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.54166392893777
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.16974682222428
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.54822099285502
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.61037314952162
}, {
  "Entity": "Bosnia and Herzegovina",
  "Code": "BIH",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.7362511188959
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.98727905145472
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.07358385907666
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.24924432734885
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.9310873436327
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.30053572819537
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.31528774343725
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.19434395794994
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.87054454680626
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.58613426331337
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.39127839203978
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.81470966873923
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.50927717104412
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.84183071140778
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.68900074725163
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.29048304356812
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.45929116113427
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.17318431821
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.93148931882433
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.98264297755482
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.02185533725115
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.863413628387
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.59915038918452
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.46504152304725
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.28254839392274
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.38174390882742
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.77620084420575
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.19431823772796
}, {
  "Entity": "Botswana",
  "Code": "BWA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.19458052382569
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 177.48810587040253
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.29738826005556
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.82145545193026
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.38678142266434
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.97292898516764
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.52079452746977
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.9540792499967
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.72981060216446
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.96693564354533
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.46463535488786
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.85776898030431
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.98463222161442
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.34920122360754
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.76709412662369
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.26218729460433
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.48157538895164
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.12624578007997
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.17591369360717
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.47441581685688
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.31215660756533
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.63071270333738
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.8500632939569
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.09738874791645
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.9531687763841
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.53809523395553
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.28136508096831
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.12573366959842
}, {
  "Entity": "Brazil",
  "Code": "BRA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.85027719091491
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 210.1713132136032
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 204.95480518238395
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 197.88701015913324
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 188.945699913421
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.72625202839956
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.66574575491128
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.07474693712894
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.47559599584736
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.7752088966093
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.8885826106619
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.97403308269188
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.97747530721117
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.67932473645405
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.80355755538176
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.83351470366328
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.14720607955321
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.94130706865936
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.4379265453903
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.94390628307744
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.13421975738655
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.69541589456406
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.25146094394245
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.5785059745979
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.08329469229935
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.37371350837513
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.35518717791226
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.57179888045603
}, {
  "Entity": "Brunei",
  "Code": "BRN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.56368371699652
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 189.1487055346509
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 183.0916311531862
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 187.71594352835987
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 188.8353590651451
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 192.51083709030894
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 192.45568804392545
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 190.0713134621558
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 196.17952901543686
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 189.41597817956446
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 176.7632277719432
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 176.53713221471824
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.43975388151483
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.4230137725643
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.95423379586958
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.0671057872861
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.07003544514527
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.89957285561417
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.08167447369618
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.14616007287395
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.64646071602036
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.19097899588095
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.80408880514764
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.5166162539578
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.24673613168784
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.11666973746637
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.0793467764839
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.15467112010143
}, {
  "Entity": "Bulgaria",
  "Code": "BGR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.20787186796693
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.677737723950145
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.379711704236946
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.29403172690206
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.509172354590696
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.669720857285625
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.82209220321294
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.62323142501935
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.65640588528549
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.60307833102814
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.43973375311405
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.519531998201934
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.832581836733496
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.30787360364315
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.67519841899205
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.22124863956004
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.77165113833807
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.74265740642523
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.692117684272326
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.55476283934879
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.5806633985383
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.48333917263549
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.05687995472554
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.94690838404436
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.486274201469755
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.88758229837968
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.15516575946783
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.29892858149008
}, {
  "Entity": "Burkina Faso",
  "Code": "BFA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.26698361863422
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.1117174365581
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.48003354730947
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.18907066308255
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.01993669746473
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.52166485784434
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.8205916829912
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.04345971645249
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.02211726254905
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.56547505210222
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.5965417342188
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.65613306527256
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.0654236016197
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.49978367673255
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.20531053876866
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.62319642849408
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.3671093243525
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.35854878633207
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.61854359951056
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.07520581912914
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.58675991005134
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.16395496592503
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.2672907305021
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.15850002449935
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.87085099397257
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.63124546967943
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.54939115301875
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.30705373815584
}, {
  "Entity": "Burundi",
  "Code": "BDI",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.48647766597693
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 221.19393831223928
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 214.45742421141375
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 208.80303737026614
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 204.65666086600552
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 200.8894705742849
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 197.79575946388306
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 193.6070374868409
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 190.06656308750664
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 186.7913187016775
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 183.3777923801854
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.4945331290262
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 176.568029989724
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.7119476738957
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.00358271664555
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.61745630804043
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.04884373573123
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.56519142221845
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.81479541440115
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.76961380734508
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.00362972891273
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.34871280931893
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.63300995066444
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.7297240737064
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.8255550226868
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.2165183088072
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.75317379302868
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.3211083354576
}, {
  "Entity": "Cambodia",
  "Code": "KHM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.83970730770713
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.75293957528912
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.57341691438177
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.79441934270254
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.4741668466757
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.31930000962181
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.29474450241553
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.32117762022116
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.5845909719793
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.6504868850491
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.55468082325682
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.96157057628247
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.12645220275522
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.06438733239538
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.20163026351828
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.45706812472426
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.90623087951577
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.111999874598986
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.132189370737926
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.93327172173071
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.65821875812019
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.27481401084109
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.572472558583
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.88097160448638
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.04542753651542
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.18237130220842
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.45524732382838
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.71278908195745
}, {
  "Entity": "Cameroon",
  "Code": "CMR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.91375531143452
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.9194280608051
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.85977056527923
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.80376980538685
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.97640903475585
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.8688401717241
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.44411985447184
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.2562388919217
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.64441589392425
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.86921438874262
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.93232656147264
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.05178637257667
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.62924844436795
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.18690258075495
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.12918523911603
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.11278142152474
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.30576546259093
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.89329951205575
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.74870806000175
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.99355682968847
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.22141800023309
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.19443455366466
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.7966608794893
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.78080610734587
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.06086562816819
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.2020180088106
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.6229584561224
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.56901930842321
}, {
  "Entity": "Canada",
  "Code": "CAN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.30139157213593
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.14249690689662
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.17649001713268
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.91845201687286
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.069532385293286
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.84641074557557
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.16239289898738
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.086220062921015
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.348991511837625
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.731656382133565
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.3875673767205
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.859557243757536
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.35308470633716
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.832320523349345
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.19354954390654
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.50841971534313
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.82879732615386
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.11030116945723
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.69027598632969
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.84091251172401
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.13822430195123
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.49567518198861
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 31.985204280297072
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 31.358926059135783
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.69669228580008
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.08061869189244
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 29.566387055394788
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 29.690284576781437
}, {
  "Entity": "Cape Verde",
  "Code": "CPV",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 29.29560126201908
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.92358681361186
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.31420699033642
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.84664972109505
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.83301367338208
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.45798365878382
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.61395266149924
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.87894526602601
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.16961473873803
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.26225528777968
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.43028115213787
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.57766867897361
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.08822574267566
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.89759126989664
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.4543645964683
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.22091851701789
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.93344121100795
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.87516323743486
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.18308115116226
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.90199022770882
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.45283016964116
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.29156574725594
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.99537071263647
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.33545723547586
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.8161869978336
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.02638160328401
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.571721576204
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.03176908913065
}, {
  "Entity": "Caribbean",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.4822345201518
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.49843694077134
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.46774627173878
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.88575009909724
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.2767822794395
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.11605303733526
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.7530803756579
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.4245614260455
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.86246360673684
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.5958370051823
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.93408405473835
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.68146896140092
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.62604500326597
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.96632977554532
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.64508918272946
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.8883872268434
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.17466524203795
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.22872966136057
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.9939835462045
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.72696359444907
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.0527637286181
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.83619945711234
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.84034100692423
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.85519945367044
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.1843798975366
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.58937216001388
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.76181388411752
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.2701550629156
}, {
  "Entity": "Central African Republic",
  "Code": "CAF",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.57043881492542
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.77340771717057
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.50712207242508
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.85437009437787
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.89286465527695
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.87398360503008
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.26784423855784
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.12524543957198
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.8590475310193
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.9781220266302
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.82129304015633
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.13093679743992
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.41828920211286
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.22244244761428
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.41248244696533
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.48505246506335
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.76171976102896
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.1159552113785
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.69080132645135
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.2416259920393
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.55110389059722
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.90535994780295
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.91907565194477
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.30511837017238
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.27142289222505
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.72209197570719
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.8886502918668
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.74049727148291
}, {
  "Entity": "Central Asia",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.43691646548054
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 194.71351369719196
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 193.1541850010742
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 192.5622389901973
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 188.10131149565433
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 185.2760665112393
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 184.6245685055218
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.2025891001897
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.4437681389345
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.65332705514695
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.48372662413843
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.89018585685838
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 157.36799110618895
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.30875797396106
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.6419475230177
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.97615608145844
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.47564353997652
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.93677071870403
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.1640553430708
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.19729669522374
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.36239755801554
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.1519085617253
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.0747976947607
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.02436941371359
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.278746924436
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.86821685619185
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.06356636079252
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.61256256057466
}, {
  "Entity": "Central Europe",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.48459179651223
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.82860838936023
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.51576729147405
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.43417996556494
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 186.0674990974678
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 195.03588904910802
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 192.1067272946317
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 182.4670812635504
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.6106295285348
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.16130711940656
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.15905955342305
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.00839728255278
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.9281192455207
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.20124935072812
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.49382741163825
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.03160991118867
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.68521368005315
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.99297781387878
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.84722705578304
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.34619133973848
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.03856826437377
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.01038992972343
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.97663045950512
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.2984982943214
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.88750803505684
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.26416119299387
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.72101276308877
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.34089864030146
}, {
  "Entity": "Central Europe, Eastern Europe, and Central Asia",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.73985268857898
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.73597434723243
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.07877495038446
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.2115624491263
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.13720986126717
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.40648139074956
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.91298637998916
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.15679408942525
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.24922236752147
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.3575098623408
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.35611793945388
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.73371119663577
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.9720224159629
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.40694849031019
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.24239580367379
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.26989221512245
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.557835115433036
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.380199255187755
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.84196897370131
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.47153670733377
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.65629853177168
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.67068908797763
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.33994324715307
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.883675990437936
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.70784309224174
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.77334634501456
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.562922533298746
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.502820440097565
}, {
  "Entity": "Central Latin America",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.358861230282955
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.18470453232189
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.11795522636073
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.94013781370096
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.73547941280833
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.36304599180107
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.10290483736507
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.58495520202244
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.09924681005432
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.42407376061819
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.55030089697138
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.93486390168854
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.55845011172879
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.14707725874257
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.75512609488902
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.4699909275402
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.5302663828132
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.8961787012845
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.00907237589418
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.65473005755491
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.35295536309219
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.91021226491631
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.75842704242261
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.60794855230466
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.91477410399284
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.998660325366366
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.58065610971306
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.15462511201151
}, {
  "Entity": "Central Sub-Saharan Africa",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.92487800876125
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.20637747487152
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 29.890377492374235
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.167758935490674
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.751987341875232
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 31.04405014281655
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 31.236190037834874
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.48570194543578
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.29720048220891
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.83559788035614
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.55480831093448
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.92933915407091
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.20760843399244
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.36361524455005
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.60630634679648
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.35214589658263
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.731870776030505
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.37704900598602
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.38966820444038
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.33692730171706
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.35493846360884
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.36283355023088
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.19316826759179
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.87292336522916
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.294975519702135
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.87127456888768
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.430878403300845
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.05828931819471
}, {
  "Entity": "Chad",
  "Code": "TCD",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 31.583282515553126
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.6275641130073
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.16463737846246
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.29679944176547
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.40804792513897
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.72726834745399
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.75546128778971
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.08498332681458
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.93512942310322
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.18352706517948
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.60267803293208
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.109666522942064
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.14715147182234
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.97420682193305
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.244268532062975
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.341902120145555
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.257796015902684
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.582550976548106
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.494979468929834
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.98827649528513
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.79716621483019
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.0512390786251
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.913950824812915
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.559946852220754
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.811671955549
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.888779321754896
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.87301836205866
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.001374220627234
}, {
  "Entity": "Chile",
  "Code": "CHL",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.70387643859723
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.0004775056066
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.06624142417806
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.40668747261282
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.26724614550992
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.55968788897607
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.11058413342812
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.34905535583468
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.95371959798294
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.25438322422528
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.47453106602063
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.26362263952112
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.20478124588294
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.18709063031952
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.1562499590608
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.3878777637883
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.7906307174659
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.88440523107548
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.81203921254425
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.4463751514836
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.53910081043782
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.97317278508916
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.85840551298398
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.0404786805801
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.50580050707765
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.50412400454354
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.94500138112282
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.50869911578563
}, {
  "Entity": "China",
  "Code": "CHN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.2175572070436
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.48192183978361
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.1077727937793
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.48766988420726
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.4814029736475
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.55947232657789
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.0571368892003
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.71909402862647
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.93823056137232
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.10252163734305
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.49663563042436
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.57873471268046
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.7062278820533
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.42080433746807
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.335474858868736
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.60351711227174
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.06929772350364
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.23978479257691
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.946708859999944
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.1925002120802
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.13831923039052
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.597438468253074
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.150352349209136
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.38404212648574
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.67939613472094
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.021220651563006
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.34484565581748
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.67369857590796
}, {
  "Entity": "Colombia",
  "Code": "COL",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.976175943747414
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.48301180820911
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.07053669495853
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.60222882921776
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.287986015176
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.25282297059157
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.0417963874944
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.12833161866723
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.51668783373617
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.73694282087084
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.26135841125351
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.17164268337297
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.30650140551169
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.24682183010352
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.53560699611294
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.737839383093046
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.001785166284805
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.774396829375796
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.50574972679736
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.321911409786054
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.38782820043878
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.843282874000266
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.35748366781161
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.417111405353495
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.64321553042153
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.81860609085225
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.01084852667088
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.16197897706865
}, {
  "Entity": "Comoros",
  "Code": "COM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.30663156916973
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.94299183277505
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.3960377902503
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.99739921897367
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.95060024058549
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.63049250774358
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.83170083071036
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.02715377849233
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.44374749492816
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.95102887938704
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.0781155073602
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.9163993906455
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.4973324883808
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.04397109812777
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.17246598761893
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.07522675298664
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.13412947273223
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.18738257721431
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.10930155889884
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.00392326378355
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.19387519510538
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.33320090735464
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.66491277594136
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.71314796593857
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.28381865356641
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.52245491025624
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.7270434149192
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.10927085297052
}, {
  "Entity": "Congo",
  "Code": "COG",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.39426960996647
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.7017170762078
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.68498818716887
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.48427406017994
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.14958637571141
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.09987503917769
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.91290488440792
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.8022093277402
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.47756536371372
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.06870426589934
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.60948133785642
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.63689737989316
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.65403091471962
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.54808126725633
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.40531219970071
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.94857454759513
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.05345384137494
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.005621017712954
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.18686061472255
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.968274873824576
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.95619903848529
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.083644960826376
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.06404626372686
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.91224744210462
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.72876901004804
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.146620508374
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.883349646486266
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.56606141403754
}, {
  "Entity": "Costa Rica",
  "Code": "CRI",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.06319657051058
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.27844351969642
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.08908614714375
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.00490616208516
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.5211599383339
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.76296408459157
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.87956888899782
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.11456926416439
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.44830412453244
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.37785759395769
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.42814950509906
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.88477270381479
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.50178983672112
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.85120620448082
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.60308770004247
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.76895064863365
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.43079887971916
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.38524096956327
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.69053195926449
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.65394097232958
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.76390733360849
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.41370173861799
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.25667970658203
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.40640649174273
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.42859884488776
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.41166099889593
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.0610648465713
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.45120657063198
}, {
  "Entity": "Cote d'Ivoire",
  "Code": "CIV",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.958042632364915
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 193.59240301743685
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 187.91013900550354
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 184.46036477318177
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.60525563920524
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.24234911702618
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.13444340359854
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.464951518809
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 183.30270582493992
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 177.884890947827
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.78220508520036
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.93485854924162
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.93643276768967
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.8394287470423
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.62710801323917
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.53856411959464
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.38516647604538
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.72639918654568
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.73836792438237
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.11448023425314
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.338000450441
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.424922931629
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.84588541820001
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.77257333034733
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.36499513731087
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.01830141677519
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.15208997677576
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.74272758539833
}, {
  "Entity": "Croatia",
  "Code": "HRV",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.02776610258304
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.0805107061228
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.04804992863535
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.48730476198853
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.4693143870776
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.0971913853215
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.99481485330858
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.04159726037648
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.18726895373698
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.57171724301003
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.08246703530838
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.45072565675848
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.65071783491541
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.16050097883168
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.97354372332659
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.03248560948795
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.73610567078941
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.84868251085877
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.82917525079391
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.69668659187771
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.04865349575017
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.21443201804786
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.32186319017697
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.64608198782258
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.39445234598954
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.28696272963052
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.05153986906004
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.82482117649421
}, {
  "Entity": "Cuba",
  "Code": "CUB",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.76632195899421
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.87010671716385
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.36626918324755
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.79257572628762
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.21641886678206
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.92506762809283
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.44299722233376
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.25537765427465
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.9718018904138
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.79534442606703
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.44224855022686
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.30369676669842
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.71159378003799
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.49808991134702
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.91279811792865
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.06342449023794
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.3292950708383
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.94020766858583
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.57322492550276
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.22691488346051
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.90259423294505
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.95361974474588
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.03647263257093
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.20292745475315
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.69441725548491
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.1553049951296
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.66976598547514
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.14048644399851
}, {
  "Entity": "Cyprus",
  "Code": "CYP",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.61202628213874
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 221.20677688538254
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 207.44862768678195
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 199.32145815249802
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 188.15659592636254
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 182.97441537860112
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 179.75235105431392
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.74487516517914
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.20349371213766
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.03574534325847
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.2321455790365
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.65518092951274
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.56259725976315
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.5932231524848
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.5378840732615
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.146848297509
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.3537475765879
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.66168265199398
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.58680847731327
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.37596521167944
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.19471679474695
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.71078360975474
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.41583088105517
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.55802774412344
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.69882470433834
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.03089449885336
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.18467004338555
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.92795347324264
}, {
  "Entity": "Czech Republic",
  "Code": "CZE",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.95603547206107
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.39945064863845
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.4602460397932
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.1373476208031
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.37120474493268
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.81721977354401
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.8739535922378
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.36238457685518
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.71669147070119
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.433569104236
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.76444817057923
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.29534581272812
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.50229826628254
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.41509644094685
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.28129583838655
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.37912351295597
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.63318801694471
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.175300314905826
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.787803465953175
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.01885046471544
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.99980400790391
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.862678896037174
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.16389976219323
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.27062623302352
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.81587708632034
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.51993054525411
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.26951513002344
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.18586055514661
}, {
  "Entity": "Democratic Republic of Congo",
  "Code": "COD",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.23186082496699
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 215.86172492246257
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 207.4972778042486
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 204.77288174900218
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 204.2324988631397
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 202.25456874850028
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 198.69683548282038
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 192.28585927132696
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 184.18934183682848
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 175.43446994281365
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 177.90311383900732
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.69650929340048
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.63292631037243
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.38322871319212
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.0028836105605
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.3110374637496
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.3711467621718
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.93730968146028
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.41616209946986
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.28991107354497
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.13097627515347
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.94065123493112
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.14400395439584
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.86043925947091
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.14370714789165
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.20401577582288
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.96211189676103
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.60841574991075
}, {
  "Entity": "Denmark",
  "Code": "DNK",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.11957723283449
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.56753908310931
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.99290958744378
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.74033973913353
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.04485545023367
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.54766250117258
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.04398165700643
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.27744929258837
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.28195045883032
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.89690656339968
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.86583508148294
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.3848605909188
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.32953760830432
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.29286948288598
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.82088324723698
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.47869839651713
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.33314286411542
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.88630021103516
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.73234495755985
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.6007950091985
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.92001990337805
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.90611571737925
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.19445307436331
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.5613262424226
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.96892583065889
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.72549009159306
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.0582634778957
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.71720197805824
}, {
  "Entity": "Djibouti",
  "Code": "DJI",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.21835964235153
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.18077222088881
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.97402873744947
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.215331018948
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.93469780369695
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.60890744921458
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.14449822470731
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.660632879847654
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.62479866267591
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.68610212501449
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.94094888841623
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.19775100203459
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.354264884880514
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.79682720129787
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.54663445227969
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.948369532140546
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.232054918418164
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.01458265710546
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.16928593104845
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.01774319802457
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.74782030148198
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.91263244551324
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.21095625945995
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.12976210024259
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.07264025359785
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.51733108694741
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.52684125756931
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.989190433264895
}, {
  "Entity": "Dominica",
  "Code": "DMA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.56674657419579
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.68184529864452
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.56844709280684
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.15596939788075
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.2026750033999
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.80211495348948
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.56228251452832
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.34695761837958
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.96957333421572
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.1617808984504
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.13756479915811
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.76860657702485
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.92795077009241
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.03663626891426
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.77536029325977
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.82764253365224
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.93837291263978
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.64362310961421
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.75427194287258
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.066802671906
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.78068562977401
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.79909634903986
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.68351520355765
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.41854595773219
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.37366484370787
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.03757179937726
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.57101756287045
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.42312332566745
}, {
  "Entity": "Dominican Republic",
  "Code": "DOM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.93314443070881
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.56076423698752
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.4977791243862
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.8100111584537
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.65613231790263
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.99320630371784
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.63779965587267
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.01095011594768
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.66441975860295
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.01696983029106
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.2904700121937
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.14009158092313
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.1439239434668
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.12064357149214
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.0697882160398
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.42865089879174
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.10370510165308
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.46310153710286
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.5438187890379
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.2479164933616
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.29070016418342
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.70434845517195
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.70341418541528
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.93604027735384
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.52593254388752
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.5225913850667
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.86802357230138
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.43827376692109
}, {
  "Entity": "East Asia",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.16487794993375
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.57589701685959
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.69456071654548
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.98861641597904
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 194.23389436576488
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 210.16659466958305
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 205.0660457410003
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 191.05055240133333
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 177.38371915166024
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.6576183168555
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.66877082454346
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 187.44838021221273
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 187.79966681831442
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 190.99524640478737
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 190.521947380352
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 186.85881580396475
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 190.86602738050573
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.5508314818691
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.67534252552096
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.6154022206566
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 157.0554436423093
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.13152906089164
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.19694882923915
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.17402446948546
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.74824670568574
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.7534705063409
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.43072265051288
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.57506079378922
}, {
  "Entity": "Eastern Europe",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.30194963002833
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.93690907015291
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.81567344396001
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.13078462983428
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.27245158973611
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.81780375458563
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.8538470309263
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.59451326960024
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.06047617247262
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.43754831215362
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.11993336453057
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.83846140332112
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.77792472506869
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.32140699394299
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.73948647204158
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.06549022835233
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.21470273158133
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.65470222728965
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.01085866076063
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.38395937861509
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.74689782004535
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.27751057762161
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.708805424369594
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.301603374567364
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.861840914040364
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.44842859508803
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.10417634797509
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.787131309469146
}, {
  "Entity": "Eastern Sub-Saharan Africa",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.49073442282031
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.13957250618147
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.81594765369574
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.90134504994081
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.77461313606802
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.04304915075191
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.80755318700458
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.436605732104496
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.761223647740565
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.621082200617955
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.96544118247939
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.143599652228694
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.30518569016488
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.53333625917418
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.27705913116825
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.24781847318602
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.763264729994276
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.07651918795524
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.299403221064274
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.340008174400516
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.79752533614937
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.150514924647396
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.17309372417808
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.45436321991472
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.9231306831296
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.3393085455949
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.93121266901332
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.17884436240828
}, {
  "Entity": "Ecuador",
  "Code": "ECU",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.13788958722656
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.52676134896393
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.54876788271915
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.4190165628036
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.05519183381637
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.7369134652327
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.837771656173
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.17764773164876
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.72497016118683
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.32422904619017
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.47995569541763
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.37698567407705
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.96467174123984
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.9603616226168
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.4846124656152
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.20699756536615
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.05252282576376
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.6826852523798
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.20465971337305
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.3372316691151
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.40213854272838
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.8094402550912
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.79236588077296
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.15503514276878
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.46508746480134
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.75801347726711
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.38031921072339
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.48089437147088
}, {
  "Entity": "Egypt",
  "Code": "EGY",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.69212341976257
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.61556475015863
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.380234256685476
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.827305008762984
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.46066248315371
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.7791616574521
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.13893674331947
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.285485129940156
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.62767726952965
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.92695768092331
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.00031091856337
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.39138840104084
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.05982265099234
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.1102095516414
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.81624115825983
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.35438249628206
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.88511454533435
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.434627571664265
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.01004654325901
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.12975908425007
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.65825063603187
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.9249125105664
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.548036151556964
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.503525596492416
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.636627205311946
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.28887564382657
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.018790890882435
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.53379005465918
}, {
  "Entity": "El Salvador",
  "Code": "SLV",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.82060686164572
}, {
  "Entity": "England",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.21042454946962
}, {
  "Entity": "England",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.26488958995992
}, {
  "Entity": "England",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.78903631708005
}, {
  "Entity": "England",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.36460922744234
}, {
  "Entity": "England",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.59795611566835
}, {
  "Entity": "England",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.4662701034513
}, {
  "Entity": "England",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.97128858814233
}, {
  "Entity": "England",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.2697371729433
}, {
  "Entity": "England",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.39460735212006
}, {
  "Entity": "England",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.57657888380913
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.9995568396654
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.44327928210089
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.17834805928183
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.49726061545843
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.38210222249025
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.84073960024335
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.70740042971597
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.23832573308304
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.64151181309924
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.40103864915635
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.51372144609361
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.40513455259429
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.35390680552327
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.8927206557424
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.06074395332638
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.87617452522272
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.30087255342043
}, {
  "Entity": "England",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.32346612883511
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.8422153902266
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.72950363036404
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.28195872637863
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.31486268854118
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.33060804925245
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.9051218934426
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.79172701847223
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.63926264380918
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.11631384250212
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.6634504344996
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.84283714053014
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.31554346341109
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.32091072038191
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.71969518597471
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.550931625249625
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.6491733044504
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.608090623155725
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.75473407577743
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.08882124285498
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.969772762695875
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.420676694067204
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.92053301876205
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.00606646366397
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.076444665539384
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.546894158500095
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.87022246190831
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.28839451838504
}, {
  "Entity": "Equatorial Guinea",
  "Code": "GNQ",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.506714467302146
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.68775477856067
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.44848481827985
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.7253378345604
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.8006988306493
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.60423694731755
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.75890605186592
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.62985336003621
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.62719841914601
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.78041022620856
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.08810995321129
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.91298699938308
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.41225059980931
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.65867917023584
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.47351025362576
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.03148536181416
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.89118535550504
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.24119373335681
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.81401251595511
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.66813014707321
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.56006999627567
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.670460317915115
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.41496502533515
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.072485195452174
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.87862622094186
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.781376242868404
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.035608362119206
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.93348363063219
}, {
  "Entity": "Eritrea",
  "Code": "ERI",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.88004035888462
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 184.40584977436893
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 189.6606512049533
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 188.42657988318098
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 202.34689079115125
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 216.65713317716848
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 203.3993144215603
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 176.83229528281294
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.41310651256788
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.87564643293203
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.41679152334854
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.61119825419107
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.77408189401902
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.83662426810199
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.21151179336678
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.71571344948221
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.92540065408586
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.32852183401842
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.27868167561282
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.57446169146414
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.28136619596035
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.94198867511179
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.49418785343352
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.40317711506209
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.16809975208047
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.51666993595957
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.84878003446082
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.83269494947885
}, {
  "Entity": "Estonia",
  "Code": "EST",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.7909072462642
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.43245698509237
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.58335368363416
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.95870290707545
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.64940921821565
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.02556534694956
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.26344872490411
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.13304870458565
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.22435208146882
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.40856346044238
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.395838297230384
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.545675095398096
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.48441550434735
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.543576784986456
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.13990533397654
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.90348566347395
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.51296465283803
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.583187967790394
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.41387299055893
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.447243771607155
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.608712433683046
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.86791747623866
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 31.23223703571291
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 29.77897400306318
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 28.468878990388692
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 27.475996244603458
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 26.622942454163226
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 25.915767976811434
}, {
  "Entity": "Ethiopia",
  "Code": "ETH",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 25.320897406679492
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.66875244631854
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 157.63309025376347
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.38339791040832
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.7708967966358
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 157.99422131133178
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.80216519030284
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.51751376844732
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.79548658935846
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.9508191212232
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.73191249211453
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.9007667217823
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.35606322406758
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.20967948160404
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.4312810835478
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.1023364886151
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.40744840846813
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.81593301943496
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.40282044404194
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.27790458483338
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.06565492215657
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.21193100100282
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.84909247140973
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.85633977661857
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.54839639035063
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.7245020290484
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.77389713069188
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.7609038000018
}, {
  "Entity": "Fiji",
  "Code": "FJI",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.50202128728378
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.6359838874915
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.95204602281291
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.16299657634552
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.4536013110741
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.17536105495147
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.76851402922924
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.7902163422675
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.21824355427243
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.8446982134919
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.16715590171876
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.23701880621492
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.40196139379744
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.66328854292236
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.56983936174897
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.16597873751718
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.480557574125676
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.58358515529463
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.50010882927438
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.796133910331356
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.45137620722115
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.39706961367196
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.68073490428904
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.432603288859184
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.707949527373614
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.216781048188835
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.002266775853364
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.54078137311189
}, {
  "Entity": "Finland",
  "Code": "FIN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.184208356560745
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.25475754482451
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.43396520210273
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.4459893118793
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.7209172387583
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.60234934932842
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.76664274978
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.61465775826558
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.85913004612313
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.3303846006635
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.32519110722058
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.12715476816828
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.7444364519307
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.10913021207958
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.16790796246727
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.78803910238095
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.10044957162697
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.84967566072915
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.82389152372856
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.4770857355885
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.79059921281087
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.96781255923106
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.51153793458253
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.75675754393251
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.67334954067276
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.98408042912731
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.75408526981808
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.600838860926
}, {
  "Entity": "France",
  "Code": "FRA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.40011155894405
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.92005949011536
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.65552006204265
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.34326131083854
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.60696219205924
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.14638236999399
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.89520471707682
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.90599185141461
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.9254274386509
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.44590959829935
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.71006874913924
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.74389954430279
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.56815126841998
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.11041772077522
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.22047416720376
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.73498686956783
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.87875029423638
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.7764748022565
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.28496112699072
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.15886005490263
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.2802319290792
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.22821384379537
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.12463295407399
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.66611609920486
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.893717459118
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.44346974733904
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.05483929304727
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.63418497431149
}, {
  "Entity": "Gabon",
  "Code": "GAB",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.18501317584677
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.39084716454369
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.53169258622744
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.67766959708628
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.39336943772545
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.09738347930698
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.81210513454897
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.58951850079936
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.247316781065
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.5589706845839
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.84868508342358
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.2565048256145
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.01613709147533
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.76768176534482
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.07288898838463
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.61766818003082
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.98506336695863
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.18465850385071
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.21229503561685
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.89906641571726
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.67148434979167
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.32842277388423
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.1802976188253
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.9088087592692
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.4499863438586
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.77630351611997
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.95762617878162
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.78010676674133
}, {
  "Entity": "Gambia",
  "Code": "GMB",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.5753608685953
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.7066124972291
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.48202920829483
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.10614272866125
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.49456955032754
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.75395428202035
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.56359619709825
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.76409970934435
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.97678461702047
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.40808709870375
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.10377896940642
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.67961727581876
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.61151961786295
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.92119252947744
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.27034061108981
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.47643421231743
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.59712818857177
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.49556213984565
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.41375818575735
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.97419432235988
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.67823394510873
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.47643571572428
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.0352234017997
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.50849571428193
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.79523396306952
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.3249282336695
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.86046425852082
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.12345779827501
}, {
  "Entity": "Georgia",
  "Code": "GEO",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.20254210699902
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.47811222198393
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.13283962275315
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.49063210176433
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.83881294161753
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.02760882531118
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.49679488729575
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.19975202256951
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.98061534587464
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.08559158306407
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.06910375057657
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.66759715819428
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.41095636171937
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.3513777088682
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.35963065479496
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.11958156465695
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.01795839331324
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.42036787604174
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.84905805134524
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.02349360770005
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.59816387220184
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.52299250684604
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.35135964685458
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.28608842556679
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.02589841711358
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.88864984515565
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.68414375203149
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.8823953075707
}, {
  "Entity": "Germany",
  "Code": "DEU",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.99934139744403
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.26378447756087
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.017399209343324
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.963503090867945
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.41033228249464
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.60909030643709
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.74054142236551
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.64549746663121
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.30809117173575
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.912053243515274
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.18422329481666
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.31071585200279
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.9042028663983
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.40992646981293
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.84980894897105
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.258621142340715
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.98018290207283
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.711628064960415
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.987790496843665
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.62918026341721
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.72876836686606
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.800562150820944
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.85610433491358
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.62401565398486
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.406261067778004
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.21523627360625
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.22732408956854
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.20223377145963
}, {
  "Entity": "Ghana",
  "Code": "GHA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.928434159636495
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.23324809465026
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.15074451394295
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.9985769929707
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.69309112613024
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.33207386476073
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.3427942147687
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.23318997227636
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.0631681502163
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.38714187908758
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.28260136449023
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.67655851596662
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.03740270848242
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.59715449335052
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.53924052772896
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.25132128202975
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.88468371625189
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.0667000025095
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.61612834836615
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.90796112170501
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.7592383176592
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.18355759884454
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.11626908538601
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.41582321337813
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.67659848209843
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.71592421569963
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.63663240412596
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.6670633966007
}, {
  "Entity": "Greece",
  "Code": "GRC",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.03960218514204
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 340.9337864592432
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 335.4075203081532
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 327.5173655644874
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 320.7569869225507
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 314.0372816274124
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 308.00590012749313
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 301.07351950682727
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 294.3494423743454
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 287.5304513256635
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 281.3707542227447
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 275.06070971629066
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 268.25841342315124
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 262.3579601747107
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 256.19280187160433
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 249.74456033822614
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 242.918021161083
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 235.15943335734988
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 228.59041366819258
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 222.3376920614233
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 216.79460205816002
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 211.06782338882172
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 204.62068656997627
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 199.0301024849515
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 194.72077459583153
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 190.19857117480004
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 192.35631525179886
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 188.25792709848594
}, {
  "Entity": "Greenland",
  "Code": "GRL",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 185.65072999063892
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.88224858609293
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.62286979378443
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.42306576681845
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.9552513733141
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.81546984709144
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.36363298621514
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.30220793316194
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.20501656999771
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.25707952758836
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.673600176041916
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.99092823549623
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.86708448339976
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.097449544180186
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.59911503546593
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.32533988336015
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.78595341455993
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.510729415522285
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.36963739791607
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.52129929506769
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.816227785663536
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.241056629127186
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.55369779378987
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.159641799134945
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.15053839466
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.706138142566395
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.84466499001401
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.33899259507449
}, {
  "Entity": "Grenada",
  "Code": "GRD",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.43999483820798
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.934830840209784
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.88521625454094
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.2124268702086
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.38460745052789
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.635216266167106
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.23029574009482
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.16270267055687
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.00564900261025
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.13304479839137
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.58729060148098
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.14165019099901
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.85963921257148
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.709596895251295
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.51532719488242
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.589264183909656
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.28140616295112
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.48546839150954
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.127672229474555
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.48231833888613
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.90633211430391
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.64640279559631
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.87046614024922
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.381129853268334
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.32785685921387
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.82116159071519
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.67566945564624
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.902259230083345
}, {
  "Entity": "Guam",
  "Code": "GUM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.8437173035482
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.86514839134415
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.59749262855365
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.8633339354978
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.80257378946955
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.26399473122346
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.75360968610163
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.55114539660272
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.05750413827889
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.06486600168553
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.11042152277132
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.71130459937876
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.60976806275931
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.22581751952578
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.08873356439906
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.53796776698178
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.65032839004101
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.893590511316745
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.484051239369535
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.48240264173388
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.056652069148875
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.720556645758776
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.883816934689015
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.0297077639589
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.642619613880605
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.06732606094746
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.15939786427648
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.557217416246615
}, {
  "Entity": "Guatemala",
  "Code": "GTM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.916253680558185
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.81431695345705
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.426853329354934
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.457681035571674
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.48195807388956
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.93273927476998
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.21089864460736
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.69656975934516
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.29368224011405
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.18603621763118
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.473647035269536
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.340800661206266
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.48430322430556
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.758857064944465
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.73969389069539
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.84676165407413
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.91192436078648
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.483032181008646
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.93188530742214
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.16159668168394
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.60234315671793
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.994613047491704
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.01190185972819
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.013093138915124
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.8762831577534
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.87223840255493
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.19483075684079
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.33449850232923
}, {
  "Entity": "Guinea",
  "Code": "GIN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.39267415723618
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.05372853078363
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.80817013186885
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.22550271411993
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.02727705063761
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.19818916658355
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.82881104855508
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.74245227040726
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.76901775416998
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.93075335235713
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.17628204829074
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.4953042344639
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.38735535724088
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.48942373037549
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.74319804742669
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.92860486265517
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.136607560483
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.41921600148586
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.702094282401404
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.86159416978395
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.45323455732998
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.06594803691081
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.79082973675151
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.617104782474634
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.51168472653888
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.44999341286227
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.4287588468655
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.34661036110662
}, {
  "Entity": "Guinea-Bissau",
  "Code": "GNB",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.26223791846631
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.59867037337575
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.07267052343403
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.87829764675033
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.08681404548915
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.88771795643223
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.68111841039466
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.80720635799557
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.30739054957348
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.16300489257308
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.59704283913582
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.31989871082517
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.977045575272
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.9922742745001
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.92110325865066
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.94545094248654
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.11494170249037
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.6937130025492
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.55325486615811
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.42479505816311
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.28402344745997
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.87101746690934
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.0428839594083
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.59758318169993
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.08977549291095
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.64017477267147
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.25288393327575
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.08785585400727
}, {
  "Entity": "Guyana",
  "Code": "GUY",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.23038256619333
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.70815360635723
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.04872383280816
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.1645521328268
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.43303872694567
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.34192738543372
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.59086687553183
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.24643915897472
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.39935594339839
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.6144947903995
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.30053391832146
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.81932321091936
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.39909095559842
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.85683050376633
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.92107288488977
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.94254835886925
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.45161144038575
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.04002020931473
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.63627063882147
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.34465707165572
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.08033885760013
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.20316596843193
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.28791627754838
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.1770049945915
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.05719952975019
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.99618824258987
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.04723912733805
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.17222285184539
}, {
  "Entity": "Haiti",
  "Code": "HTI",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.344543842135785
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.66441740200793
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.90056533548338
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.96137601163863
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.14359005616558
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.90331788562332
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.12233123625259
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.50772106915582
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.06862614792072
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.95817475018204
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.23765502208337
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.99633938691157
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.51908411445018
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.5977188495336
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.10195334038515
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.60867718857949
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.29267838985075
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.0265602868237
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.33559395066092
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.88400816380715
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.24942057673593
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.52204297994665
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.88550350640787
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.89258735353486
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.97070207072876
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.87000937423511
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.98463239404145
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.86908427878886
}, {
  "Entity": "High SDI",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.80866630149045
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.47725172510033
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.21326291645198
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.3718063849869
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.71941681248921
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.26401393101743
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.50411557524876
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.28276145612676
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.85710948394106
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.97597173718385
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.43447050769741
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.35200428101288
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.03124750098945
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.3511137487168
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.92854428782756
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.28249554278077
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.97567463923416
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.80577270299712
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.27832891570111
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.87610043500636
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.497782788252
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.90981931017524
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.32432316478855
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.36285753141438
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.53834113713827
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.42183543562943
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.43668461844314
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.38865850006468
}, {
  "Entity": "High-income",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.34426309074894
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.01278006416767
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.90409478544481
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.47189124052261
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.16816374785279
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.0195091639438
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.10679340161207
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.06938024356994
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.99861608005011
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.66136603091064
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.86976554825401
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.04185931414155
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.11176306981784
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.35106596627489
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.25641923481137
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.06445106465682
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.27412671138931
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.47425939119009
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.60868321677447
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.67906788482051
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.930300007374896
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.8719414663865
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.92865079436711
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.90776796703017
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.039534192638826
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.01754373829648
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.09884594502572
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.17448871877451
}, {
  "Entity": "High-income Asia Pacific",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.53028142725956
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.34107757949488
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 157.093512720025
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.8208129331796
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.14703068109185
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.33934857975123
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.34488874069845
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.5962343977724
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.56853362262865
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.45906975378028
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.4731717339634
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.399728859059
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.06171079757036
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.30379985251747
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.9201786430902
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.58036418161055
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.43482483544773
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.4509079308261
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.4763135858394
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.91084672763536
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.56067904917087
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.0838956720047
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.64444835878852
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.34975105851585
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.25233109210988
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.71950100590253
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.70533452431475
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.92816522342375
}, {
  "Entity": "High-middle SDI",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.02011185760628
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.49063317729508
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.7300953527423
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.83214881661021
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.00354477795659
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.58772872274986
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.31031983856312
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.10308113437155
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.63717288637459
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.07312834324546
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.85770554176877
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.52029726708378
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.37757256187672
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.29331245902284
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.34732468443988
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.27181185405772
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.0099204026991
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.36789284946644
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.74483498564263
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.1134175513162
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.84474593727538
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.85599480050772
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.43443983731902
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.88805615335485
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.17413468203816
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.480397262824
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.40010088349912
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.2774282135019
}, {
  "Entity": "Honduras",
  "Code": "HND",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.26640325695566
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 219.21124866355495
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 216.09080212349764
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 224.2503828809454
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 224.7438712477791
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 218.80817125483628
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 213.74343388635373
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 201.79528458829296
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 197.65075397442624
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 199.6787143401158
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 199.2653524003385
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 187.26156547843527
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.8982919090152
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.82485927490268
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.62285013936972
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 177.6945541209595
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 179.2233561089969
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.99814514694611
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.03598851424528
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.29750281186017
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.53446588399248
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.05026002938803
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.84918368164332
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.8298434106327
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.44071265342905
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.06990632341248
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.5749485206734
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.68243320389968
}, {
  "Entity": "Hungary",
  "Code": "HUN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.12366415673364
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.26401411205043
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.75328438249008
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.98896634192323
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.45919630675543
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.03982801610732
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.36874564702995
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.66065489116694
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.52176985561827
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.91283528192706
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.90330041227374
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.12876334903413
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.63545113976537
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.08097496943834
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.13859254680337
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.65935315581484
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.88855875151323
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.82998302144607
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.69294545857117
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.56336206301117
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.01876574599898
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.2802551564747
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.91715077784555
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.34232451226489
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.93675522872944
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.66410596652237
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.42583664989258
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.527971753533166
}, {
  "Entity": "Iceland",
  "Code": "ISL",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.22541353895477
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.9408091572713
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.54830165745972
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.87995624250357
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.8475104240489
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.05669220975253
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.96535215083637
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.55367354222523
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.30484481803757
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.3947784313197
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.82886124162425
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.8161361974013
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.88316626547282
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.75604718571404
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.73419256971415
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.77215466365358
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.5732692418985
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.66336778851796
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.17225045313607
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.94799879886801
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.88726257762505
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.78738008151495
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.95038522794589
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.82208948955292
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.43061546190506
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.21092971055994
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.86843007380777
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.9053551806495
}, {
  "Entity": "India",
  "Code": "IND",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.57628926327979
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.57419500712707
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.58615470876485
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.67462222300951
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.36254550393095
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.94341166734516
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.53140920963622
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.74962779716796
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.60675950071852
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.73402406483882
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.3884551307663
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.3067770211581
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.44761067685461
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.8302288661505
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.80863176213823
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.71099367317889
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.26141432317604
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.71047851955024
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.21190219033645
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.90961320133675
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.33899072580678
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.36616944504921
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.31800031084111
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.78635991528084
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.14846961920219
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.61903220050698
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.17781347186514
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.50376037341015
}, {
  "Entity": "Indonesia",
  "Code": "IDN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.47978026558042
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.21208390358055
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.37139080767999
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.22896995737767
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.14943652202882
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.0837241814811
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.16854959315947
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.12977942474248
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.20146666607373
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.8798019219925
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.74473631190524
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.87230289286018
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.21933158810143
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.48367564231717
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.58672339262772
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.53456304437192
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.5186820304699
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.70081917026643
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.18764160251467
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.81350305606043
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.754757857024934
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.656918177872
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.40956688507709
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.51297881134308
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.372740560502926
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.909246104754146
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.2819156804137
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.470350645826535
}, {
  "Entity": "Iran",
  "Code": "IRN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.50252218126866
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.30422631241834
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.84643343957885
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.1470419499195
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.74259775258417
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.46945430832596
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.7665808137892
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.2988496104516
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.3626579390254
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.35317158475917
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.89723950787516
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.78020985739207
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.43297379318372
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.79647102156397
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.68958595050705
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.79214418034014
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.05816086948474
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.90843652952442
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.12054965132079
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.66579211555685
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.1330764238386
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.1959773214196
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.77454423202056
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.77970845096351
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.679814120552614
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.05981336358152
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.7912553936991
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.395755205881315
}, {
  "Entity": "Iraq",
  "Code": "IRQ",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.05199985656435
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 218.84233692233687
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 211.66809209007022
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 207.95578722358
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 206.14047302998588
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 198.5601912850381
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 197.76735820515415
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 188.808423611437
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 183.46341001235973
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 177.6803627276622
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.13299414323748
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.28464606327915
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.33934165591106
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.34894281613978
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.30938474324327
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.36600430708552
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.8636421636359
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.76077057774862
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.43428732769628
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.86602400106713
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.7006923616056
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.32499272866241
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.21799535495585
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.9622350242806
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.82144042753788
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.45741727765824
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.68535343869492
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.80505691913102
}, {
  "Entity": "Ireland",
  "Code": "IRL",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.07659240733639
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.47979375992722
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.21026004222911
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.22125108186194
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.77967558438587
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.2899488580864
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.29187788928512
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.09870514090274
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.64445691047422
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.63677046096505
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.40024799564712
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.26168729644792
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.80502135811811
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.22525421648587
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.11092341880814
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.86330507249305
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.40909633930106
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.97949505247958
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.9860947502948
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.96283884510646
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.964619673873564
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.438408914052815
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.767480270375486
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.018785042832775
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.594267433669025
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.4921372698488
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.26501356199576
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.788457504183086
}, {
  "Entity": "Israel",
  "Code": "ISR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.50207830003761
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.29495730123452
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.42019889738295
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.21914487616137
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.30383240402467
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.24295437849017
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.4694085388844
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.065807513046
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.45229693866845
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.7652478523248
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.7991268156802
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.7818795232534
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.52563210565381
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.41986200616756
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.38840139484583
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.19740784503183
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.61068281415707
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.62481414675244
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.14642052373831
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.15899367601313
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.24135351533768
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.46056465301565
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.70155683928203
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.34281473008884
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.14518382664616
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.18214444264707
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.49161568230063
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.52808655545412
}, {
  "Entity": "Italy",
  "Code": "ITA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.23594670649827
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.6359139620843
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.64159764434837
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.61191849433503
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.82185028251551
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.54795498298736
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.04896930499116
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.91266909733139
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.16390235234147
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.78506511489384
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.90839817344293
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.00433046589498
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.6399184664266
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.62899063516035
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.98080676239793
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.49106150360732
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.40316583393071
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.11009091007717
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.76600899711042
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.57508259489353
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.59491914808422
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.20514483593665
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.92179428714262
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.59192686184356
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.93859032612535
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.9919877671664
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.96604809681548
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.43934936917655
}, {
  "Entity": "Jamaica",
  "Code": "JAM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.98659254498321
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.70056556421613
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.18570517982586
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.01169648518277
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.2457700327846
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.82452065221545
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.67170769664075
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.62574639994747
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.5753839559635
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.47334415037265
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.75789766135486
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.60485171888236
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.98871775231717
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.333804386608
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.64053249221446
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.62587619236902
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.50146695757888
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.98806249628068
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.5270523685622
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.89959692020462
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.4845167470932
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.690560622307295
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.04120106596486
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.115248169351965
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.60248763656492
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.88737799815663
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.10519981214008
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.606434722298225
}, {
  "Entity": "Japan",
  "Code": "JPN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.15777396227733
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.2956712916359
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.70598453679061
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.0384070119523
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.94456260477905
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.26408275745776
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.23478143336348
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.2757768020854
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.43427426817493
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.77213085061152
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.16272871222745
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.72537126750986
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.07503155531438
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.48473198479631
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.93098321073226
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.06335829242684
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.33627755284793
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.14702514305341
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.37835469889917
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.16828987025761
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.18574647436449
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.92945871620591
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.39527764232496
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.80699192221735
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.40124266280509
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.81588370827927
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.02075755561785
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.3865645477108
}, {
  "Entity": "Jordan",
  "Code": "JOR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.82876442742355
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.7243377399942
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.1236198041089
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.38282718388368
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 182.65815487494964
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 192.93855046559094
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 207.47444564045625
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 208.96215429778826
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 199.73723632748212
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 188.32549108683912
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 175.99817403743666
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.9623855876515
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.5272941779261
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 177.50288042291368
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.78364484525534
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.97729111275595
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.5610613311875
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.41085728432043
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.54389640069505
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.63667569400937
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.25077398721066
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.27270311737513
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.28258578151056
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.9541869651239
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.44980290584047
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.32800411686883
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.83868442791568
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.5405151305184
}, {
  "Entity": "Kazakhstan",
  "Code": "KAZ",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.97591317221968
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.008406941234156
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.573084572456175
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.36865456261004
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.16182169163192
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.736363914211005
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.54178852463846
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.64207609417635
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.968496508985794
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.84099908960164
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.04171489856347
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.95745398365635
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.28064178248984
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.08296463283149
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.40780907151837
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.6912304739836
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.29000578375472
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.66150889271697
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.58925131122521
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.39711938496811
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.251299647165496
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.146322583096335
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.66229303577246
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.971703831631615
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.01262213089933
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.26546963933177
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.71006768492894
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.1151441869518
}, {
  "Entity": "Kenya",
  "Code": "KEN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.347300385293785
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 219.34730450708932
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 219.4429225689358
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 220.40217816685868
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 224.5532704238089
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 224.78212200406628
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 226.16236902745817
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 226.8514630360847
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 228.54996222590094
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 231.12209458370225
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 233.94264688504143
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 235.68778480766196
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 237.74628508570058
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 241.68901465680025
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 246.27694568918156
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 251.633094277401
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 255.60275539827362
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 260.71731070157324
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 266.6952314304451
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 272.6568141736793
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 277.70612237952776
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 280.24149945278276
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 280.5095182163716
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 280.0840893584949
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 278.740820845632
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 276.8733175150787
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 274.0354134128893
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 270.4163005188187
}, {
  "Entity": "Kiribati",
  "Code": "KIR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 266.1345977137186
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.39739079573277
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.31179919930116
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.741355815252405
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.766326908750656
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.702924958289294
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.292661543570176
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.22266939486868
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.833886314372684
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.95085926670442
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.38500724645545
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.71492495337547
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.41784001433333
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.80815613631802
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.708966460679214
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.61616895623584
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.85362766940298
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.25568492739133
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.408415080638946
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.440156575677086
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.19604538351273
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.26219435675624
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.248358772390446
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.79116442329054
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.5439825085136
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.848554079567954
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.238325022001895
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.78965938246148
}, {
  "Entity": "Kuwait",
  "Code": "KWT",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.30328714447918
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.56544469744267
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.00502106529774
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.29428560402098
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.39200030760595
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.86019142316705
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.28405741290004
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.64024316782411
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.47894802870684
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.6303184596872
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.16109574815303
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.35042235002378
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.09791214261504
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.07720107610454
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.05294524515803
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.17458067900073
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.82762613075353
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.90490505390343
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.40350438992417
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.10336378956359
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.04340283707326
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.90218701471154
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.22679705390095
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.8535868592273
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.94812499131223
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.23730907136644
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.99062092951849
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.78611304725062
}, {
  "Entity": "Kyrgyzstan",
  "Code": "KGZ",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.87143961877499
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 278.4778249535415
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 270.96986012558676
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 263.69001529851494
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 256.9363728965443
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 250.65402173306515
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 244.7021872585592
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 238.64552727947984
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 232.9712290144064
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 227.63431082153852
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 221.65142874211313
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 216.62184733071132
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 212.276878997074
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 205.31327291566149
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 200.45015401361377
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 195.77380406562975
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 191.6644115156529
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 187.4947992200166
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 182.9255414467183
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.71950229296104
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.16648040443513
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.0916857084972
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.4025318157786
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.2926606644477
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.3569406969487
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.40540173017746
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.5707434672719
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.20991117093774
}, {
  "Entity": "Laos",
  "Code": "LAO",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.18889831914453
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.3375500620499
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.18225544484011
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.371109019814
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.83045273474748
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.06986695300868
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.63629058860181
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.70416318928075
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.18194077120442
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.34033013227572
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.55332270372932
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.27704566036499
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.82514228966978
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.21713387890354
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.86484938567035
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.83126903795944
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.33162083744553
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.26266037042777
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.47677620627172
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.76526889623958
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.15747751768721
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.12763076871705
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.59606550782217
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.35776219177073
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.48145985851319
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.536498263371406
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.01950812299026
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.9559568069441
}, {
  "Entity": "Latin America and Caribbean",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.71879003340656
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.4426825727135
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.84779162041778
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.97058961936023
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.968140439415
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 188.1353407349285
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.06874311150744
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.42958252914778
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.60086129573466
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.45152389302163
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.14949912376625
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.49952745207892
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.1265077993577
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.6204117725714
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.89284328510968
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.0154894192653
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.48109995148153
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.1476693367487
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.1966243302168
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.70542285692413
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.11524658194438
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.84322651893491
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.10425540322342
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.05037669173593
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.7343471089829
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.3401292571828
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.37630092684496
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.55395055345777
}, {
  "Entity": "Latvia",
  "Code": "LVA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.81846430364303
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.55606540267502
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.5732998039147
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.58134038297422
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.06819215252398
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.2979784485634
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.11779594070632
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.72469178425393
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.01103563122882
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.1643775102544
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.80869343792148
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.98790594517673
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.6066187110007
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.8724323438531
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.71049889123474
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.08546860683347
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.81332305010028
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.94472966253004
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.90990915963218
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.58337736104453
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.72379483099243
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.40236341703294
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.67693259855317
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.6424419989529
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.0374029802425
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.13962609433462
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.5424166625588
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.05789531684005
}, {
  "Entity": "Lebanon",
  "Code": "LBN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.57423884195616
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.15924702549242
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.40219823595586
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.0484486995513
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.21750136714422
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.54088093809827
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.24190995462897
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.76835715467445
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.26963949867144
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.98874145062481
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.79329378264336
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.73241198682643
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.4005883532807
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.22394667229474
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 183.51200170920418
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 188.22993683980582
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 190.6438341877545
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 191.990921288704
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 191.9103623573727
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 192.19815149425244
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 188.88184136256396
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 185.94551972283085
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 182.80895166980594
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.40130710605837
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 177.94863486029413
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.98496158873053
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.88458416053163
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.7404464888488
}, {
  "Entity": "Lesotho",
  "Code": "LSO",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.35103362611136
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.3181531182068
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.88057954209613
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.99257639582122
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.02826834462077
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.05631100189896
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.32622713674226
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.1097233862508
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.50281683012356
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.02807792864064
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.51765309065902
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.28885112265772
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.41456063930438
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.60355377027639
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.55146571739869
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.335569592773474
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.961475532000115
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.49319134358626
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.02840437501658
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.234080641934135
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.24100058806196
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.967112855660694
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.455605683559135
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.312973747854045
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.645531821141724
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.60409717253407
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.823938585109076
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.129264484696996
}, {
  "Entity": "Liberia",
  "Code": "LBR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.45470127262826
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.83941044929536
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.34616977003844
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.16290837421357
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.9541655202229
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.89344542575175
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.0537967251629
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.54576700396113
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.05720253098258
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.65467063778587
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.11533697258133
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.25321648570406
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.32692816847654
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.60939051821292
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.81801847629131
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.88243366769535
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.24090532081773
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.762880620726165
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.14203652837565
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.21673500834205
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.18205470374022
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.29771066859958
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.19812241510431
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.015317229232124
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.22609168482932
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.54568186344761
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.40538260772245
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.91852325130515
}, {
  "Entity": "Libya",
  "Code": "LBY",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.18566953481252
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.19701868927896
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.61493969439314
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.4635960383335
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.04995437981424
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 185.22493105670668
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 177.53390602632643
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.44487756729055
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.31277300864426
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.57850687283306
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.02082945591272
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.52980507641354
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.21737358470725
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.85888056961886
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.1111654026165
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.30742615813026
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.93293307316137
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.97096645438683
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.03251976028764
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.40368868996177
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.45218186046452
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.02238469641993
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.48569672923786
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.95068148410762
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.5963341372981
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.06425680002317
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.00782831688568
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.04676385024958
}, {
  "Entity": "Lithuania",
  "Code": "LTU",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.00453721347961
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.81681202853252
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.5247578609199
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.24435068367296
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.84239960768724
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.74947807563854
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.37938064356874
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.5026550587184
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.8696020223058
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.60100246097696
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.06865923027624
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.09915632674189
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.10088857041309
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.53774443586309
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.32307455409367
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.45167242666305
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.38673348708636
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.9145676885225
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.30192270858373
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.26188870320463
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.98507214164027
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.80561115325008
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.11445014138984
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.43493898748252
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.54593280019009
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.06378428776601
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.05427841442352
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.89369170212835
}, {
  "Entity": "Low SDI",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.94837983630752
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.39777019744253
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.84664240374266
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.38842186517826
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.10332459450564
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.8783619108536
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.6728418441535
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.77301608623313
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.6787934079938
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.096401781633
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.82302293889015
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.88415909694066
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.77025745014618
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.77120342996699
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.34627381222191
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.82314994510052
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.65108624044302
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.59328601199566
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.61099329847754
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.49635642174565
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.55728003139728
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.1679502155881
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.39544022404088
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.19556132798878
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.44637175771997
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.65915021638297
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.27253947415318
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.79052824099648
}, {
  "Entity": "Low-middle SDI",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.72221337004977
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.82451116464875
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.06479816579036
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.3348670331352
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.15296209943523
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.35179337925075
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.06257250110905
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.22587433183959
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.17432861112646
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.65021903015707
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.32173027647544
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.7955065954914
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.05728873729154
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.43953750129488
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.67667780327984
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.64096391693553
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.06623471209964
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.07885680729684
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.28897194853413
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.42770298137455
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.8916892400116
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.86436050584263
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.09602316620861
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.79777120661186
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.71886806609446
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.12374785758631
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.16097114351929
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.77323129368278
}, {
  "Entity": "Luxembourg",
  "Code": "LUX",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.78226522682033
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.54164012829793
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.24274393705812
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.14227137426283
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 175.32885498653
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.48567580807347
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.5944060830914
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.61252142414625
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.46349304145315
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.9950954537271
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.5613992727755
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.73314523827824
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.42681726803528
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.3672172964133
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.31191217464234
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.60924955152157
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.55388552062703
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.91313628369457
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.83199290199744
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.6443593532553
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.91619907619875
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.20953374348235
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.55955804261097
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.7928659740562
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.66108766156067
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.70630497748768
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.30912328283782
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.92815851333084
}, {
  "Entity": "Macedonia",
  "Code": "MKD",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.84522579060246
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.72378739488916
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.39714996913983
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.68280271604954
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.78233323614171
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.57873076085323
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.2256019931724
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.18657784276925
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.52969573239615
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.55894197897571
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.19307765872858
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.0776761244086
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.89008632294407
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.50547754763026
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.28149250586254
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.94379506227101
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.40430815826176
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.42292025426362
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.50589436633526
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.1104682597409
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.0675013922593
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.93605551939179
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.632220791106064
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.16170020822856
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.74163287507133
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.35440202872192
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.049719919854326
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.66211256735845
}, {
  "Entity": "Madagascar",
  "Code": "MDG",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.291575520007605
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.72312848118884
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.40416076301146
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.12406895012731
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.71418898110788
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.40710971100964
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.35090386665642
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.24589754799962
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.68819339765543
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.54367286792743
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.81673918084489
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.11330881645429
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.94877164905402
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.92534223543164
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.98865040385267
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.15701341381288
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.644335590878
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.30343142119185
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.89671162598465
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.65130271911374
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.85173197089507
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.72426974429882
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.22059546923396
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.67932258499172
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.196500301386244
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.93899211298728
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.076121364421546
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.41867447068145
}, {
  "Entity": "Malawi",
  "Code": "MWI",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.61345689082965
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.74295437012677
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.62961005205395
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.1732857083326
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.11846473210556
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.63954141498567
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.81002041071045
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.97416617847887
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.77672125299543
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.52039547552764
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.3311219358095
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.23398668798964
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.97123847015158
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.57330096031424
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.94276569810945
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.44361070303603
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.2783332993576
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.38884531354796
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.27849200219688
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.98617823450009
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.3633846726985
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.3379392931212
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.12587002075087
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.63184787351342
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.70272553816677
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.27261314507635
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.81456895003693
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.40449755638714
}, {
  "Entity": "Malaysia",
  "Code": "MYS",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.5574776931003
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 199.98257407946798
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 197.80893497413254
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 199.2648841859215
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 191.5504398124099
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 183.89742174743444
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 182.91965827210404
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 176.7988544019308
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.93875999022507
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.96293342861946
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.39538551117158
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.7214956864501
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.50737094418037
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.69870911223927
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.46426527813225
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.45554005195851
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.66850740295338
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.6308668093246
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.06577880856591
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.4569567256338
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.35817676500183
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.53368812312998
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.43400592381145
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.16862450256117
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.36607347097859
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.07619565616454
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.49287493724718
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.20725150631121
}, {
  "Entity": "Maldives",
  "Code": "MDV",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.1421830687733
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.560839245701096
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.08303511509875
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.994802385511846
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.72594543750937
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.645592499454516
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.48577465630831
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.12211344694555
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.49855861767668
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.87909559658402
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.247486761897285
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.95551629358796
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.3656027391204
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.02678250124776
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.48474153365582
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.209574570386295
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.879870148164656
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.8311454643136
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.143759282293956
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.266822091385784
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.537785250074414
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.64706757658653
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.45993143770298
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.469857908913106
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.56829326156251
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.63186369795369
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.6691684777231
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.75746864998786
}, {
  "Entity": "Mali",
  "Code": "MLI",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.60573663730335
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.5444267103358
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.82166514909846
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.08287668500925
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.04798546151011
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.20460167477313
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.04065518568143
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.91871439334098
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.04904980113771
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.67785119012166
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.14913657346077
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.82283014812977
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.28667972386754
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.32870286870941
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.75959002972027
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.6992941916624
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.76763103906241
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.49128069600374
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.06855135517485
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.30617574031923
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.44129110808254
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.50653163633471
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.02001852330805
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.63531822440333
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.17049107672993
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.85517688836772
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.74168364058434
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.54612663252871
}, {
  "Entity": "Malta",
  "Code": "MLT",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.10718452412108
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.4178155172306
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.16655683776744
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.16624439857398
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.49039328737717
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.07539771854124
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.05027949714633
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.06894916426066
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.43148219578347
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.39993775670266
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.8379515645248
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.69183540717384
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 157.0808207277305
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.2508785664268
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.0108163013271
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.55668150200307
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.34080431919853
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.30118231314017
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.39255360056538
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.28692739466732
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.9800554680961
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.94417281657755
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.27785219583498
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.87801036262934
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.96684629025046
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.48460726449488
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.07830116069698
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.53701311552805
}, {
  "Entity": "Marshall Islands",
  "Code": "MHL",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.51870383657223
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.1366542388367
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.05939176917632
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.2662814845315
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.230751074414925
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.48926429180025
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.99341638616065
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.5831424823583
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.95597416774021
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.41857289003765
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.51932195348469
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.97230705042913
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.71228863866516
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.03647880724452
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.549477189695274
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.187636883635236
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.506712026421404
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.716715622213336
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.057153644262016
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 31.423823188315364
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.85862348036772
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.193755620519248
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 29.66566061124769
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 29.126093791131545
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 28.59611838872701
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 28.009934170709453
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 27.4526296286585
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 26.90178182691016
}, {
  "Entity": "Mauritania",
  "Code": "MRT",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 26.34414353439935
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.86531437044275
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.54617340671672
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.9150725495671
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.52020134895653
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.10025019518335
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.62676127921995
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.64543884962063
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.33456295371346
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.74567678793267
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.894958368301
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.77981012547362
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.37824185141385
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.18564092719761
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.34026467268164
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.12463730064073
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.82898504894541
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.46433580341362
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.09534883837699
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.07442563356292
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.3869883365424
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.33516175835258
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.19740682370133
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.66292820786995
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.8118718262973
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.20876670229934
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.69913063203462
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.7415387599474
}, {
  "Entity": "Mauritius",
  "Code": "MUS",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.96643467276975
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.01465196241355
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.83421069879209
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.16701360285823
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.20606851414172
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.27444436692215
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.63963526149813
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.5158097611354
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.55982129228177
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.3237719079009
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.19680012068622
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.0161500655085
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.9439694238501
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.21791188847715
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.22725253310176
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.18824222456128
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.4533380048201
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.0998713839783
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.48468185992661
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.137663165529695
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.64264616028728
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.915016452301586
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.375837759442526
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.72387056702697
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.725825941906336
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.4681411987657
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.67896923915484
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.45716071768385
}, {
  "Entity": "Mexico",
  "Code": "MEX",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.72622386454262
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.42702338364597
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.8920879936242
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.25281565364307
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.50700312333535
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.00874325568068
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.3433659263382
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.02527805300696
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.87702660493073
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.6018057924943
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.2627405456267
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.82724591137693
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.54153616737833
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.2697146473078
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.94856666077177
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.32582240294116
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.7701024789582
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.5440846987099
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.45186045562531
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.52020122874112
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.5575867049434
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.45852963122535
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.10099479805243
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.78386409182143
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.67473970144235
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.74622196883138
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.69287367520457
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.46378340208543
}, {
  "Entity": "Micronesia (country)",
  "Code": "FSM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.20404081110354
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.15494804037786
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.37644928348038
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.46481909585225
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.12581896686416
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.42366812463823
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.7794631187421
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.4411693545333
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.61597786223592
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.02545322699646
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.58967307770826
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.92274124937632
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.07491051235742
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.98539615010031
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.24451634091982
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.33001064557395
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.55385597180103
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.94057517943213
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.8534171338083
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.50080803574416
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.33691968919194
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.26524253387444
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.86617265672209
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.06333668761847
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.6225372292187
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.47840684038034
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.53996151575252
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.8042900450912
}, {
  "Entity": "Middle SDI",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.08054352346684
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.82179608027334
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.63378688581625
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.2143116888614
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.42822176016847
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.28645927219546
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.62246448199423
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.70958104215117
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.63937573960237
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.005036480577
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.80372514681721
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.72333084567083
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.53274329798526
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.19640032652539
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.81057163082376
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.5893903700291
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.45914441491308
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.6695999103446
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.32239895332685
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.76415750532703
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.4583873974162
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.27797327888885
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.4572434922666
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.69072035962147
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.25711669848266
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.14451279202135
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.68190560395381
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.21380481811876
}, {
  "Entity": "Moldova",
  "Code": "MDA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.29062222340471
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 175.78999589789518
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 179.25698287733138
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 179.48927162081193
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 184.09547480922998
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 187.85563539071063
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 194.55784523455702
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 197.58344201967964
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 196.52772433988184
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 194.0157265339797
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 192.88411867983692
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 191.66318961606635
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 190.27209801765576
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 189.3788361639962
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 185.34955262520074
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.21822085699856
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.3360786711134
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.43033637109176
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.69304103134752
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.28274575623854
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.10745670909228
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.70045738378377
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.4983126035738
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.50962190998467
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.3086274974345
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.22896836681804
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.4345681769781
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.7789263713459
}, {
  "Entity": "Mongolia",
  "Code": "MNG",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.99978368043875
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.5772224026573
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.7363229345379
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.11412488759518
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.65287801000062
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.67256185301744
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.57836511115468
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 175.43136435911833
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.1869323715329
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 182.49358455818086
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 182.99339153591512
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.95683145119162
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.21688775905102
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.29475550036645
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.86829339566293
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.37528339265322
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.37442277603157
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.16434692548546
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.33248036156996
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 175.51679327821472
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.9072258230042
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.8981381265973
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.25442991776728
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.40315087980193
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.82537508412025
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.85503319298076
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.12507370633634
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.1569432347655
}, {
  "Entity": "Montenegro",
  "Code": "MNE",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.04078606651498
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.30613068062954
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.47466014601807
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.2227458470202
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.52138349431048
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.7101540129522
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.87321797293285
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.41266497342339
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.55351213502706
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.213283000867
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.5408458126598
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.15487340643818
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.44335245101755
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.00346610303716
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.5230515625228
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.41559606522729
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.91509574791876
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.70184873602132
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.64445002633992
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.4445797354664
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.93282053205223
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.79848951301844
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.83512666585801
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.25321803635501
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.47844905870086
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.796217847330475
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.167279014505475
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.61234172221192
}, {
  "Entity": "Morocco",
  "Code": "MAR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.055978119808074
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.60158855004693
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.32198618843027
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.95581513034176
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.90867204850844
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.04945957026453
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.4747016436901
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.26302408041249
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.93058006990503
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.0687840485288
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.30026837821636
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.30617789261498
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.52329192577714
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.72746535439094
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.56532735815206
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.77620978329719
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.152440571089
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.41415799609618
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.1996983882693
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.7294098643251
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.61534530432301
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.46864748193371
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.41806070166093
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.10068069078066
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.10384456485814
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.7382790092311
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.03939830499554
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.79307820386093
}, {
  "Entity": "Mozambique",
  "Code": "MOZ",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.99970979727908
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 347.37395261821626
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 343.1903811491538
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 338.04490111091053
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 332.290220503474
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 325.8997864737051
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 319.26235982797397
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 312.3051316750449
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 304.6116602898107
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 296.5934519805523
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 288.6661696017808
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 281.2452231144307
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 274.3083859200632
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 267.14883170734817
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 259.7745939946688
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 253.90278376633248
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 246.04874019298055
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 239.42949999637185
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 231.88944086472097
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 224.65564256341867
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 217.97537296061
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 210.5460924292868
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 204.3761638205255
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 198.25763595940657
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 193.05727488632692
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 187.84014236396084
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 183.64937888280164
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 179.46239204699594
}, {
  "Entity": "Myanmar",
  "Code": "MMR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 175.05510535569525
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.04987995156873
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.12714582032717
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.51579596367512
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.30971714409748
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.14379329604793
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.54113491548486
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.10544479625526
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.22439343232693
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.2226131765849
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.40368072932574
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 176.48667726198445
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.2751671868593
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.55188436718254
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.22825004772918
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.01235452138232
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.47812579330142
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.06554684206705
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.7546995604174
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.82369426575087
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.12923893323658
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.52161024156068
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.24913889343186
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.49396663582499
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.44157267162656
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.9441278384446
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.89380954640833
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.05771004449359
}, {
  "Entity": "Namibia",
  "Code": "NAM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.26940987517379
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 190.27659277475883
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 186.5329373058174
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.77901064186074
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 179.55075022503718
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.9880140891732
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.6072735414332
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.32682501720313
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.2569577367327
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 157.0835756736972
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.81790672321463
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.80871733339436
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.41374772611687
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.31889739076945
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.74827724507588
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.2424445536883
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.25469456580936
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.00175908759945
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.10123474072813
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.5717456782192
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.13157057536208
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.56791577301192
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.26423348223616
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.93697349109186
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.50377109988395
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.3256899827011
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.7905963152635
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.56411261473053
}, {
  "Entity": "Nepal",
  "Code": "NPL",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.97861136429326
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.84258037328453
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.46287083715163
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.66496870937027
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.63777152625107
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 157.04801078592223
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.28863003538015
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.90297104112335
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.86528050674988
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.7142615818356
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.77079374208353
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.41951556629274
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.40889723447077
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.7998211578492
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.02504731251116
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.25800515902387
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.20843614259542
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.85116799383334
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.21257601708078
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.22915238430004
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.57115368029685
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.19517903541288
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.80067285900363
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.24732307286483
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.2373564598808
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.43557386122347
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.51188452136542
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.3578290701235
}, {
  "Entity": "Netherlands",
  "Code": "NLD",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.717637798733
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 157.93887954510723
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.7158981638993
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.72181936213292
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.87882767153857
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.53134098737078
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.02425681803747
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.12346334071087
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.06174756995145
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.5300384073705
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.22108821651709
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.49242968700138
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.47256253259239
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.23549030232897
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.11140012667623
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.12575572954341
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.76149548421971
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.1224550623076
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.83166839112381
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.66759231456491
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.90957065073944
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.9968242713459
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.398265613598866
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.39607440828463
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.9569733066011
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.794714034290806
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.85585432819615
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.621558050348945
}, {
  "Entity": "New Zealand",
  "Code": "NZL",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.658337442756476
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.643024952613224
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.42633631960141
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.74717771339095
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.46569630442147
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.46582080011415
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.99563605605345
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.04722248222187
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.27100962524276
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.579948899320634
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.984274993408555
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.392065598514996
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.22100508735779
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.17029386871443
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.02596096754013
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.03449206960092
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.61025217892218
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.806117912440556
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.87825143906031
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.95121062013353
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.42574309240255
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.950982732857796
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.03528902735353
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.04325827938285
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.51621844953383
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.75398405353962
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.52152125822911
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.23908053279047
}, {
  "Entity": "Nicaragua",
  "Code": "NIC",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.37594071147218
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 28.396917243280043
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 27.435549886076323
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 27.080051899188753
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 26.71391029349162
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 26.22626496844041
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 25.978560387404404
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 25.43110233377649
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 25.200026986121124
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 24.949044107744346
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 24.806874078992344
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 24.667477111639975
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 24.634776524989228
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 24.286064915867446
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 24.146148210861153
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.880196129890503
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.849584943803332
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.725624293949217
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.542201611242067
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.290031637017318
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.319688521914717
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.30603733505677
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.368334405014537
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.381709763576104
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.49424646253066
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.675408108934526
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.84595161358237
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 24.023375767505527
}, {
  "Entity": "Niger",
  "Code": "NER",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 24.04398606026937
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.41812184867941
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.09730809443527
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.85062605477822
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.46460571229141
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.02746811362212
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.59973146397661
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.89263367759169
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.06746914269541
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.232587160635696
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.43482005359707
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.814122983978194
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.55512710821329
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.182808164086154
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.606712835215745
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 28.92653699738335
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 27.267876606781954
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 25.858139749341657
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 24.48602871921673
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.161640850777133
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 22.14802911054091
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 21.38103882186812
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 20.65392300187821
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 20.029717370481002
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 19.46645961904689
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 19.065925691648978
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 18.70963552443332
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 18.280441214434685
}, {
  "Entity": "Nigeria",
  "Code": "NGA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 17.718238338532036
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.7937691663717
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.18378769972189
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.99343703036264
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.67864984613948
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.95715664387387
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.88138788175162
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.30537311290237
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.58082078362354
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.74191997539384
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.26057796138471
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.83274709617733
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.82908100605412
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.08367331889227
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.23467909786721
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.01783538786981
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.85870794629719
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.87991980141774
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.735837499081
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.32984194830526
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.24708725641237
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.01542409019103
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.57914435547929
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.87064855184286
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.29284865643596
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.98498605625598
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.68394028439732
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.92311555777928
}, {
  "Entity": "North Africa and Middle East",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.43395883737705
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.19380885684907
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.93671661252665
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.11750973357547
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.95838508854177
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.11504895860628
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.70551974803223
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.57981248067355
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.7144698103407
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.89302022805072
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.65507074058455
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.22301581822828
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.2838848847685
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.46676639112019
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.07278849071534
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.94623229121883
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.72183487363392
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.85174454320676
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.84420392280134
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.82509698074684
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.28902957175353
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.14924431847675
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.15580719067357
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.5870809019602
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.21140098569607
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.28654388813719
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.4793247445597
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.48056685475522
}, {
  "Entity": "North America",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.05084363300813
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.46078590902248
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.08625690348441
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.99422159241531
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.94063880470301
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.26601427929067
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.99411449126875
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.55075611844637
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.67460303785813
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.40927492086335
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.61558342259949
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.83743571992443
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.75907074731388
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.66223842360058
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.9033067029286
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.3316239070778
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.05928553998359
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.77713206110704
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.9189577664079
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.15271507838371
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.16871778616381
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.39988541959406
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.32166203755726
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.19739383091454
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.92084350332055
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.17848205943461
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.50387728191896
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.25934415465977
}, {
  "Entity": "North Korea",
  "Code": "PRK",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.81299739016609
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 194.68635416545192
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 183.47132075512235
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.38081560521232
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.72318224086186
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.95859428937666
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.5330365493353
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.34713845205158
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.2033430581062
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.75342916610273
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.93096650641361
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.20011101644064
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.11785227086081
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.84311612400678
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.06205248103355
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.71753689408109
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.83696592425129
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.24207373742787
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.44916454180203
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.91420071626652
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.7562328742533
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.12143002478818
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.61753587233788
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.34400783634945
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.16558969093221
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.13009923093358
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.83556105488898
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.7068357001986
}, {
  "Entity": "Northern Ireland",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.5236414593898
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.15264053211078
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.95105385288358
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.56999515167665
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.19152785268685
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.045511783491776
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.1382052839791
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.15120530839233
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.22027512090317
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.57608526991271
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.23274014385759
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.35766897818866
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.00594394463305
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.441903768590514
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.80385927168871
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.273764994054496
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.91566127583507
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.22537361340962
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.62923979743237
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.53130883840968
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.248359441290916
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.635036696115215
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.73696613751489
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.977742065950984
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.340051427690234
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.548673577706005
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.43168211343094
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.27810907983397
}, {
  "Entity": "Northern Mariana Islands",
  "Code": "MNP",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.05580726026217
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.21035319451269
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.87192060368967
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.63658135391941
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.90560305457407
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.53841312532502
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.14509828700399
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.45918667164757
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.40513147315534
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.70017805797987
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.67483715552652
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.80130782854488
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.27586997860183
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.94763721678217
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.64487038415407
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.87280479111331
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.36466924390662
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.26845351509517
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.56119647279202
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.38988695055669
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.80855355045237
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.08711309155927
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.97589087886132
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.92626899768064
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.22522018135385
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.02192965069392
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.37470875010791
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.28725144015148
}, {
  "Entity": "Norway",
  "Code": "NOR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.00948623685285
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 239.64181272520085
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 237.3870576629267
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 234.7429919781738
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 231.8381055980116
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 229.64977717271486
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 227.8831848890002
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 226.33615571286586
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 225.6554962365798
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 224.1782692802493
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 224.207237226099
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 224.14927225519153
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 223.52139495701388
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 223.2728614215567
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 223.41352171496558
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 222.98519008987424
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 222.99772478463547
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 223.04316634917134
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 222.39792534155313
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 221.34161666911425
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 219.82254287063284
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 218.64748822600566
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 217.2051536651676
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 215.62326889407402
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 213.85940633390715
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 211.84684989415422
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 209.92579175600736
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 207.98844875320466
}, {
  "Entity": "Oceania",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 206.11073316106322
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.43466275574434
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.1669323809277
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.00019171469198
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.37939424735629
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.8146530628928
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.11131567461042
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.8459819731839
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.61174217775279
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.9129592069156
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.99720860461588
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.13968952395466
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.01166384625736
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.46032864965655
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.74791229225157
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.088193147893
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.3492398434746
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.30196979435856
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.29839638951228
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.01016534639722
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.60274354282662
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.77140622558031
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.79440674028163
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.61768052130813
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.986904635025255
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.89028748309067
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.07191743652851
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.989893988844116
}, {
  "Entity": "Oman",
  "Code": "OMN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.072971364748604
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.86118700392956
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.41454778235308
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.5201414553518
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.71866400672187
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.47190528464793
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.85679046453987
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.42545365348585
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.14524686810907
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.13484987717786
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.41390772481222
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.60969236013395
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.85337126494574
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.03946517137175
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.3368755049336
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.76885288664081
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.03084142778798
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.30823726254684
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.07456874051698
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.6223275813667
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.53744049969572
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.52364190073243
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.43325446824076
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.27682374315944
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.03059731908573
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.82141159505233
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.97563183559058
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.02172114686238
}, {
  "Entity": "Pakistan",
  "Code": "PAK",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.6634632009099
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.34956318306254
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.53491761591384
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.96271626921063
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.1626106130218
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.6091201872292
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.35617343164024
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.0903081391805
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.89414050167989
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.2009676869494
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.73956295606833
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.89278186932756
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.09714203548741
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.28657543965485
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.30843677877601
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.95434580701574
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.52074853071943
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.44424230885998
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.91687424614142
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.61344315086838
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.69319923206239
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.814729503836325
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.37219248096988
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.72042752934316
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.03909486327289
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.99459689967385
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.02130747648428
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.16872196850957
}, {
  "Entity": "Palestine",
  "Code": "PSE",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.911365947123706
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.85092199788757
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.09126196983226
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.6463435265332
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.94934369556078
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.83882669480195
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.51549776223143
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.2428335942137
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.83086372880129
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.68294778018733
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.19788216563655
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.00212728942062
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.42891877725986
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.27942788418376
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.395233912780334
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.888657885386245
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.49382249709237
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.73224278626608
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.65856732369793
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.114210892998464
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.52470872316969
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.642505731471395
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.58621237498575
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.16884461137831
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.0963218719742
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.08509761109807
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.56247347576614
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.413350250490936
}, {
  "Entity": "Panama",
  "Code": "PAN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.56573761167382
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 285.41940393534037
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 282.1838406208011
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 278.64122952382974
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 274.53631662698115
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 270.8593307161174
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 268.3085234479927
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 265.86400220939066
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 264.01096479870745
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 263.3427004679403
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 263.50343470070277
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 264.3773511859969
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 264.9426195160789
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 265.6370448505385
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 266.6294108353638
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 267.25748819056537
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 267.58940617106236
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 267.7782328123859
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 266.9540564202515
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 265.696691296041
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 264.15385576273604
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 262.5081820484573
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 260.52969496599667
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 258.16325561384275
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 255.6019596299524
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 252.75532791017417
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 250.0556371863352
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 247.4314342208051
}, {
  "Entity": "Papua New Guinea",
  "Code": "PNG",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 244.89497088209848
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.23314256593382
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.9607976455363
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.47531437933414
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.22230292260502
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.20118579103341
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.2654849541441
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.04993450558554
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.15124514881157
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.29427535212247
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.66319078980557
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.13598481998991
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.26334171449405
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.36455670963049
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.50964493865551
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.87737678241076
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.46051622124862
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.82275872248347
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.26764708384076
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.9025103864011
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.47874974954648
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.48465008013929
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.95263075033323
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.69313210863379
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.199326326251
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.56367357160165
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.98172215477018
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.76661592210328
}, {
  "Entity": "Paraguay",
  "Code": "PRY",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.88360054020947
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.5479195177273
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.18986604176619
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.37040618783187
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.37989043468057
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.94097238146542
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.16315121614532
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.461889424746424
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.98079420537366
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.63668530712015
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.49901782716416
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.19744188756867
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.356237216062624
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.00311677920849
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.45367118671455
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.11349769362968
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.24980106325922
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.832359315992065
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.127777545470856
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.373331398201074
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 31.73559741904365
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 31.63572938596086
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.436152430196703
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 28.990085513969788
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 27.411784977810406
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 25.55321971281562
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 24.3235115541534
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.46935644035592
}, {
  "Entity": "Peru",
  "Code": "PER",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 22.796495019989543
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.39470048263996
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.32051048029217
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.36496575484819
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.23297129160275
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.42572324283617
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.15101382280645
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.4898550666934
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.65392624463556
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.16885232771963
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.03591089405919
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.79485089622773
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.60234904943812
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.31189399481642
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.3114432202819
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.02302681111505
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.83794609518142
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.79448480532736
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.3365004553373
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.77455499739938
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.09234622222826
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.30812810471906
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.0303870781806
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.22783888998686
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.83004639886374
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.98440412810606
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.3410095896367
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.9483384019416
}, {
  "Entity": "Philippines",
  "Code": "PHL",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.13312514347288
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 218.34622058951237
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 223.73633364121912
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 214.56531807336256
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 203.0393173037354
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 197.59447672018072
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 196.15337495159005
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 187.96138279370226
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 184.5710248147665
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.06185617911214
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 176.3960222292008
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.50891439581457
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.75800281067635
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.87929984744216
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.96118607735443
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.58903933679863
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.53870553301383
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.90703870309582
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.35706355342217
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.59087184510548
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.902226087179
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.61584162918953
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.24380110474439
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.11139671105728
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.72256508724105
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.51035865093037
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.26136745188502
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.20500363167017
}, {
  "Entity": "Poland",
  "Code": "POL",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.88176626107162
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.77118053273713
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.18222707224254
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.13379488128184
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.24336928398301
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.25532321787722
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.51345284050575
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.68275079350293
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.74693857965369
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.54933950885608
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.11978399147827
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.14675708540226
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.62424111062974
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.58286838538267
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.33614836959057
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.92693434841593
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.89327181284342
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.48002643038562
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.671014901348
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.03962894125182
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.853047245953775
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.45534015728625
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.69035778838995
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.083976571818006
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.52515042650865
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.390728205840254
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.62075572026924
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.220815898561796
}, {
  "Entity": "Portugal",
  "Code": "PRT",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.88182691107716
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.57820424742377
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.23881591565638
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.71100963460418
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.081462043672566
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.48073196017717
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.93011095028739
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.73615131164992
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.763582644450466
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.076740215492315
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.03208776438836
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.249682107631244
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.22131998392156
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.25818372714314
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.41999829037184
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.40614891660579
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.09220880757176
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.324407352578945
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.46197398093219
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.25510707079076
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.96581544174937
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.981926056315636
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 31.0851121902887
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 29.00355514669253
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 28.17378158863192
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 26.866303950677985
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 25.64667083206365
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 25.85042361422032
}, {
  "Entity": "Puerto Rico",
  "Code": "PRI",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 25.925084057299483
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.32139876923681
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.74696795284419
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.16651839090285
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.48572535109437
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.7727108791549
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.5192199088592
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.49744041392032
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.8574484496208
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.12087223580217
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.64486930304544
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.68427847948462
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.60705715400181
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.63683549344042
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.1277786517357
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.949793505898405
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.8403073724704
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.51884974501952
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.589247737888364
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.69038121937273
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.19789820022036
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.27839888203889
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.4478733536489
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.02624061871953
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.883109812714444
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.73095585894992
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.457886412665665
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.56041866388347
}, {
  "Entity": "Qatar",
  "Code": "QAT",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.36612414121159
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.5992635013051
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.01287811425763
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.72366217571104
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.09724482992632
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.0663318232596
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.21835339523784
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.15445077442783
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.8033142732928
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.39576941473481
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.78296271645056
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.51142988679467
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.73916591539466
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.07729509133537
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.13147891506608
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.12417549222477
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.6082544420547
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.14998428413213
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.09042351235686
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.0948463902908
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.99640295444226
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.52990215733138
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.2021754785021
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.14561832305716
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.39102951397469
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.377655809281
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.99739598855083
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.79313144775519
}, {
  "Entity": "Romania",
  "Code": "ROU",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.925967280696
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.07921348798592
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.7700271581039
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.9258978733324
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 198.8660138438377
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 218.48921450552334
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 204.49626715216647
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 187.178305414254
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.2281938029292
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.19930536599583
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.78265386766182
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 190.16061404709606
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 192.19423545802834
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 196.6313189502863
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 198.05535905997297
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 192.3434442672871
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 197.96412361807336
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.1360580207664
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.73866210862485
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.77192102961203
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.56499077498643
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.4292308446613
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.1045130276791
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.36060128704293
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.02946787183592
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.73131758511255
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.87578892403292
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.86261331465525
}, {
  "Entity": "Russia",
  "Code": "RUS",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.21121470028385
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 184.46858398327237
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 186.35230877940532
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 186.63601673253493
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 184.45667933265477
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 187.74882650280904
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 187.5777868561561
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 184.49525552104222
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 179.74614799875405
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.1643091949275
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.40257149252534
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.68143311666608
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.72836150131604
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.18994424610582
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.31027566253219
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.49765204545679
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.91306294773709
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.5278714275049
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.8601985040492
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.09173083912049
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.60863479290133
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.14960636929105
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.95723151450426
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.43982547407627
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.5842536963676
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.7408693629008
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.85795903528539
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.06293526286197
}, {
  "Entity": "Rwanda",
  "Code": "RWA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.59330311694359
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.05791828135662
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.97146624826853
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.96069992664493
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.44584635299113
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.47440725527257
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.54594284383079
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.05486765624023
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.08597033841437
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.52573404028861
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.4390016072086
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.4006259993605
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.371909697498864
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.13904153720608
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.34166661573269
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.43813243095204
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.40221468468695
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.750429415456686
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.619512670324816
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.31645346498306
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.44059641905916
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.06883248630077
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.195352796861116
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.844836852954835
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.687463596104195
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.74343278090923
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.20815741292412
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.24726779907686
}, {
  "Entity": "Saint Lucia",
  "Code": "LCA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.419955861069944
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.883301087769254
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.78625804666731
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.44983421826955
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.11288988757258
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.79903517385219
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.914614471182496
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.76190579746493
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.077525558124535
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.32295854093827
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.75032255299868
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.57341803592609
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.30402422417792
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.56345001822214
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.510104814402126
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.919107198688195
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.81664741420583
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.64984513623475
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.69263118728212
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.047004771021115
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.814276111545155
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.87486943723954
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.156053900622275
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.39047762899579
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.024215157967646
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.46518180773143
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.80055989945334
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.12981851917677
}, {
  "Entity": "Saint Vincent and the Grenadines",
  "Code": "VCT",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.974402594240004
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.37467220929685
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.47411051352566
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.3445454871739
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.64265812362555
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.16612762390247
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.30081588838186
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.16922146041713
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.41184359110963
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.63341765414953
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.24778602275882
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.46693972571205
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.48582528061473
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.5269498203047
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.95133369739082
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.457766462809
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.9659771531589
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.48916502575554
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.56923478778745
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.52517338747046
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.5033219762201
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.0907969844918
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.96166091151377
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.02040510091612
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.88376821961063
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.95201274449983
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.06554192969736
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.1936100600565
}, {
  "Entity": "Samoa",
  "Code": "WSM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.4268724385024
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.74478646288381
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.71133335519506
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.248978523976476
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.322361073797346
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.021908978993366
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.21477784340143
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.73489055392547
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.50038932765102
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.03984678732081
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.56905501921687
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.13329449566521
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.04441343019031
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.15515975558065
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.04108777860262
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.0426441686159
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.81939370622166
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.62751738034359
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.70149104916808
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.335727742655585
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.61703598921785
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.83464938959084
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.81157500205616
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.50097640568391
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.97706420411287
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.25660190622122
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.06063769631888
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.066485682669736
}, {
  "Entity": "Sao Tome and Principe",
  "Code": "STP",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.319856862083604
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.26402020640114
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.80422033617287
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.21556036738668
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.62789468519603
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.06808137501473
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.549214720295474
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.01638537963194
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.46801303325622
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.04667818602214
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.7667821153174
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.700088626191125
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.48614522941074
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.35191152969165
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.2177076183354
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.92180469934096
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.426047339936844
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.67311648094337
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.07238610927869
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.62594421131372
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.737641073381795
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.39186692021291
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.06825651611074
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.064808528725635
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.75952580140968
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.30429753576208
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.99598340313237
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.7607204329461
}, {
  "Entity": "Saudi Arabia",
  "Code": "SAU",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.81449363350241
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 239.27701439409023
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 231.23470199515754
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 224.4696855502073
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 224.8759702118215
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 211.10105388664198
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 205.0013486294241
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 201.87162746646104
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 192.03690518754408
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 185.55609800787207
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 182.29178809131076
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.10410898997387
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.46650614003647
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.55787180278875
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.89172480694322
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.3831619609039
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.7077276666768
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.5910190091308
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.63733238262245
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.38557099044596
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.97791113586416
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.75557024181143
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.55468195047092
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.81665113911008
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.11850149190197
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.30224654562673
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.84563402557684
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.4288610457725
}, {
  "Entity": "Scotland",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.67536958258107
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.53557623173494
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.17977966944356
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.0579966734359
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.8136386776468
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.16042447415879
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.8677415294775
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.26242877660894
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.27274508049238
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.977081026847785
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.094481237889376
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.10122644054358
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.07782832312797
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.96639180290849
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.90637231407273
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.26453393941437
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.60572661243361
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.178352040648505
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.60284829353535
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.12997908790965
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.036848638948356
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.44963579553168
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.14119581943889
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.78483097130411
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.4957164926274
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.229836608374384
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.87698711853425
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.366142626361004
}, {
  "Entity": "Senegal",
  "Code": "SEN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.89544366449901
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.55031106619225
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.7685398118697
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.07363137893952
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 176.21747440302354
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 179.9972575695326
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 183.91118569729977
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 185.60641735555845
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 187.0070715136854
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.8533371423673
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.58111206789232
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.0682989129377
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.51917591190806
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.551880676559
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.5241629931764
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.69448920786624
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.661665835868
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.8865764619968
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.70373318489573
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.16925727719843
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.59513499161838
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.08251400384697
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.42688588382595
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.78020363786194
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.3728788977609
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.17539577083875
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.65926952633603
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.06555478110872
}, {
  "Entity": "Serbia",
  "Code": "SRB",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.94697050902747
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.40914509192399
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.90019671612583
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.51812805247674
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.58342928190238
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.25905195400045
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.54399964374669
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.24161086045116
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.55941982740217
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.76536423854662
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.29922724346864
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.3761422641593
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.58481726602476
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.33962824168698
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.45515924490347
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.10203719338955
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.69766741019468
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.1689568927989
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.52711192543191
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.15510439308107
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.1780556384697
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.06237612584984
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.75611804136994
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.8033345911714
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.75411107768768
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.55452167771837
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.31302461486824
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.12261052366648
}, {
  "Entity": "Seychelles",
  "Code": "SYC",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.07882193136908
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.85455375715546
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.25721120670624
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.71154682642805
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.39009650739935
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.19752076517787
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.97401154966082
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.5370150616353
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.95573561381286
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.91481065451042
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.5468353909878
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.65719748797191
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.21526453301328
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.86120172006818
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.63667282563064
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.92636080168568
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.47495691131222
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.99313124928166
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.58787916662047
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.5835733507515
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.15603232950593
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.94277195392482
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.84317087338823
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.93876366800846
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.1558652548526
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.77513076392647
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.0420662239512
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.3056403976335
}, {
  "Entity": "Sierra Leone",
  "Code": "SLE",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.66273869261342
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.75669988743314
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.62770980146931
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.63187289416788
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.66840651857073
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.3868502287469
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.14843152163803
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.26148499183375
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.43993388595749
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.41628661328934
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.594539705471
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.28712146437448
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.29955548962614
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.30412338554551
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.652432751538456
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.493044182864814
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.43733360087885
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.684946185102184
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.91240368829577
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.25312180906796
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.427888248743734
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.288709339235744
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.020175502945165
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.99407377673362
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.53089462983492
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.57306854832804
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 37.789172384499416
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.330742886982534
}, {
  "Entity": "Singapore",
  "Code": "SGP",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.63097320946287
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 206.82809389524834
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 200.43065437763946
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 194.99213616019838
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 186.84355087429435
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.4929631818202
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 177.31829594527773
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.82335871137064
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.1131206485872
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.3629112603544
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.41959783659695
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.08154697657565
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.30759114796948
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.95241035683662
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.26152088459938
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.07593180010284
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.30924988414023
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.61293254779088
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.59897871539914
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.60480491818043
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.23399300334161
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.03923433516954
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.67832517526429
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.1242197140162
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.83738725239692
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.95674277814915
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.40344123418907
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.29455245383205
}, {
  "Entity": "Slovakia",
  "Code": "SVK",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.19926021604633
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.9989889550682
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.8888014894533
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.3160644047387
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.6555722561372
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.92060715072805
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.04962394556435
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.63746800388915
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.6563723623006
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.2737875686307
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.36656570886949
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.07221989232805
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.85448756261128
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.52919514281051
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.24224108504164
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.44800574602216
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.20105118724265
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.03996126209414
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.56962999355422
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.24405293523297
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.40569391170736
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.65963443891094
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.69143980648292
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.25056169353007
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.11290451593308
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.3543747263626
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.92555003854811
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.28011872874707
}, {
  "Entity": "Slovenia",
  "Code": "SVN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.14600068627537
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 224.99599700453308
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 223.32359670940895
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 220.20521246909436
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 217.13522383394857
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 213.71336513992583
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 209.9947253208766
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 206.36770620406307
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 202.38896127939475
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 198.2704242157052
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 194.40813543025737
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 191.75454577083107
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 189.6071520972233
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 187.5089033277385
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 185.28756760553367
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 183.26879915495303
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.50284593463877
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.22496148742175
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.66618147473196
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 176.94882298600962
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 175.6052492889289
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.1994334183525
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.515085180267
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.14966527694915
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.1452641628967
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.48343101009132
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.0639789548042
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.77298368161564
}, {
  "Entity": "Solomon Islands",
  "Code": "SLB",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.73745378687664
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.60768879244135
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.4059363555828
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.40728449940613
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.88173539362441
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.6091022891133
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.12680534522156
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.26413889728133
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.20700860916376
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.8197201557976
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.73143141554023
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.89381399751892
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.35675957139287
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.08373627268952
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.62522858750076
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.97256585598453
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.16332006896869
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.6916919913359
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.18064293449177
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.65654668133391
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.95713225208218
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.38505376327912
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.81219690165135
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.18172196638692
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.31510052166219
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.50328656203769
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.86058091476154
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.07596764235512
}, {
  "Entity": "Somalia",
  "Code": "SOM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.40854086519373
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.88732858279698
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.7259874427904
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.3135953126361
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.2754827381471
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.1735923215493
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.46456436840285
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.83058711058715
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.87750826595692
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.05266647551935
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.74750560007075
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.57605883012425
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.6214303112934
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.1260582342201
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.33232007124218
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.4846890161784
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.6833534062502
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.8545278285064
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.9260660715064
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.87440701773247
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.59052434548443
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.23574937573375
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.96890750779038
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.01886836805774
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.80099464051297
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.2753876659537
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.23498519234143
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.05293782695068
}, {
  "Entity": "South Africa",
  "Code": "ZAF",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.72214680834354
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.90671812681546
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.01486390960522
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.7163305647601
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.2089331496002
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.77625045259992
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.69640175366445
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.44324443427402
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.31743342140948
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.3605700272385
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.90275880717746
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.15604576907126
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.26226410049338
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.650637830688
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.40914582110251
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.58538128085732
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.60137259049372
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.56509915949292
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.86412360441965
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.19960920324759
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.78607157310918
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.49474380586466
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.9941532012193
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.25677329736571
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.76297590446094
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.8586914522815
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.39602595828424
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.12455453817998
}, {
  "Entity": "South Asia",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.90210983593633
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.23056984190907
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.10267137060623
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.8378607696541
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.2499599175097
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.39585144463658
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.78815560058565
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.33168368448437
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.1816964493583
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.26015420572594
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.5885800496116
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.64891535275432
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.01016718646844
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.7288185367455
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.51413316116854
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.24651735785501
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.86792799846792
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.39622640478852
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.14607475278181
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.13724615814628
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.49959261231974
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.0014111334232
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.55367419737615
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.97880699405714
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.29650826100395
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.87408732968696
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.54228538230314
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.080085092626746
}, {
  "Entity": "South Korea",
  "Code": "KOR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.675594272409384
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.27764552786455
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.46417623668128
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.94138162059518
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.42218387296738
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.25685340215024
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.25458071664526
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.3901107829247
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.06051805452533
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.79652755371728
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.45196912726908
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.23854294725822
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.67737778624564
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.04385381000107
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.28252567453534
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.4614367543063
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.9821934496399
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.31806225345213
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.1163471817905
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.52667002538661
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.68710181593872
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.76303153877225
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.81857535085815
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.16465820601363
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.62554609566875
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.99377150254462
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.73710199415808
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.1317329637001
}, {
  "Entity": "South Sudan",
  "Code": "SSD",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.30875542737776
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.1209851487911
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.16046027727893
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.04981477127106
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.09826751202678
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.14068999436913
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.46509118950559
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.3554251497007
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.24150823947082
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.75871664859537
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.5349185799086
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.109159434525
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.63234672650933
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.71295026230615
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.356844804116
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.0816564076914
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.78408788359667
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.2653149432528
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.51969835007688
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.8801524314105
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.79421548127675
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.57403785290832
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.25980910653422
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.79498368513312
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.16344916478289
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.14398232852508
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.24517169410842
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.16371194350096
}, {
  "Entity": "Southeast Asia",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.84179222434123
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.94679047215303
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.27996937148905
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.5246002328286
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.222988508993
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.52638894114116
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 161.1418306429537
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.46612653216707
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.98812352775474
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.9823293677499
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 157.60135529557118
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.63929381710219
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.80160328445535
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.834710044134
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.54385690304863
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.41362561758874
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.3955600687761
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.32277835065128
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.1053570113833
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.9608248907676
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.77437764664606
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.8587738763166
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.7993193461979
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.09055935195883
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.0396832870734
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.63470394918288
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.36626149411951
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.63487212644489
}, {
  "Entity": "Southeast Asia, East Asia, and Oceania",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.36383386871968
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.56519254630223
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.84637305161647
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.29670222246673
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.82759694833273
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.01931453880823
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.16177663269428
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.35722088723033
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.27054494286432
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.78774522913211
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.83105420444457
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.03577837920139
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.67100263206684
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.24066392697637
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.42195102136408
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.53355916366206
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.63395941114065
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.61051212219273
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.72188594638963
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.59370180514108
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.21276807803446
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.98969940676521
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.07540189294154
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.925744750369
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.59101034183976
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.74734453819053
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.8116411473165
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.2711509966893
}, {
  "Entity": "Southern Latin America",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.21319147785704
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.25771554117281
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.48164209437104
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.90266019298804
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.53267444804979
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.11117413551065
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.0506683376553
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.7327796290664
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.95312666133117
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.56978105605418
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.65727176741584
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.5362166292111
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.62646093428202
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 157.3939158179457
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.61829344344744
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.2487582315448
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.2765051940039
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.58030197974082
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.38536931843555
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.2999421711749
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.6100436043469
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.7782351504956
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.6095809630843
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.56527015144826
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.23097467660907
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.37876533503939
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.94383834173267
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.31479353856379
}, {
  "Entity": "Southern Sub-Saharan Africa",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.16507125714867
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.84369958741061
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.3559461829589
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.25767180188376
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.32881930775353
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.6206474962839
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.92574920080635
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.86849154362098
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.33067963959782
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.13482911429237
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.96961054434277
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.75458282261488
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.19440174822154
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.47029641357217
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.65538948075431
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.68745955781496
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.8960985260915
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.95720672106961
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.3226427474277
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.36387134799475
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.87674503247794
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.2159836902529
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.72784711183999
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.43324404789394
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.8006999065049
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.68509341733599
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.40409437078402
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.14888553413589
}, {
  "Entity": "Spain",
  "Code": "ESP",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.14343428918306
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.3905159856809
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.20474794759065
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.30461489743448
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.99314631617196
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.95169297972204
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.84144727382181
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.3477624212318
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.37518119305464
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.65593729189833
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.64270754801755
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.82648478492365
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.9099978276755
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.47562602401936
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.96558391120068
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.29630022112343
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.59254160335313
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.6368240265399
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.42970278144804
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.24564003876704
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.2548217702242
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.436382131306
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.51093998645224
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.19337698096766
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.23943531865764
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.927549882993
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.05337046775936
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.70791349441981
}, {
  "Entity": "Sri Lanka",
  "Code": "LKA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.60952926707493
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.4086030119336
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.89828968848407
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.90891227512425
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.6097995230433
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.86847143656674
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.02545800572516
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.29797828637477
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.15153893629282
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.9853578767816
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.97241610336316
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.89322604332241
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.71009759392116
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.20044414411362
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.75900648958802
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.95170414560307
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.07568281508806
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.57260598167885
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.50774901831029
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.49366692601937
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.52382847714691
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.50730636952442
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.48303070205069
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.6890495006765
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.89774010025487
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.32080915574349
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.99712866804731
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.62663954686062
}, {
  "Entity": "Sub-Saharan Africa",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.87680819863349
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 25.864949518557122
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 25.518038760196905
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 25.20481205258136
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 24.88331304829548
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 24.550397176151463
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 24.230853758783564
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.91196556494695
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.510615256003604
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 23.120132225211037
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 22.668541021448835
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 22.20279952728104
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 21.79988079853244
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 21.419547495844537
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 21.03153155481157
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 20.6612501990809
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 20.314383523942343
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 19.88936841197808
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 19.45583839982927
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 19.06911402990845
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 18.675581037970808
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 18.302945767657018
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 17.89428916753158
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 17.513530964167114
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 17.153177898739628
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 16.791350458834938
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 16.465140534599094
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 16.13221079022434
}, {
  "Entity": "Sudan",
  "Code": "SDN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 15.853112363829723
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.4944479324599
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.48877246142162
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.7523285526647
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.97020332635603
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.9548305248938
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.89776277155335
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.87420247551151
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.95249942303833
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.42628639901697
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.59414431058819
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.97519283858435
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.70354509813795
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.7136379303582
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.0807518941292
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.41552330983527
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.60888326100272
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.00159411641319
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.15642826790325
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.74088247918148
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.25360962085335
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.17181473439358
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.7499344412963
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.38841851802708
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.09049195460221
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.6246935345936
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.73884636791126
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.44457171561643
}, {
  "Entity": "Suriname",
  "Code": "SUR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.81229445283113
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.33436878558976
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.67889494290344
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.09293655620698
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.85726962159524
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.30118172248191
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.89205094387762
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.65705916259066
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.43912873377482
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.59410701070362
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.39344959014988
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.19836582724875
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.0978321102976
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 157.3092891636453
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.06269724482257
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.3319059462572
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.58863540828565
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 154.78480582414986
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.31474916323117
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.00030747064764
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.37252206471518
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.31198134046443
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.91531885781646
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.55651071729733
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.53971924125537
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.83350119722151
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.37011547324272
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.60545834056587
}, {
  "Entity": "Swaziland",
  "Code": "SWZ",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.22840752368141
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.98180938480226
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.13412740354364
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.14782542745019
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.74981425278608
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.87855463754586
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.97659577483262
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.09438257285014
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.18012223894121
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.23615888830042
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.75920244710217
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.75458207029364
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.76468159461632
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.99263527380398
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.8697622399076
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.67997092272525
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.28061117649672
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.67728335019162
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.05258403931114
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.94646681997754
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.83050004927755
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.29943493368116
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.0459388176053
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.56927560477145
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.88351896901736
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.89076395931206
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.00753661110169
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.127177270962015
}, {
  "Entity": "Sweden",
  "Code": "SWE",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.05134838304382
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.51480046694452
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.16479139886158
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.46937739856297
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.74085105918593
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.45290295364124
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.23606486546028
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.46048000621745
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.48514510899658
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.01702195227648
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.67011992363697
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.24126285075378
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.6813013909972
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.08270410856278
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.92443147971636
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.46005631384217
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.44562242680638
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.67480321875166
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.06098823679825
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.67639804670837
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.12522552220175
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.90996622411345
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.45973653969659
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.50733720087442
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.32729228338177
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.68727758649373
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.15203352058083
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.65955783216741
}, {
  "Entity": "Switzerland",
  "Code": "CHE",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.12136525377226
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.32570573397467
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.21104294313724
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.42744308183242
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.02883113380082
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.2926553287713
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.529677062366
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.77802398221507
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.08746100943634
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.6978854308249
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.0280981921046
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.22906293008947
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.58869931920533
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.68790921164188
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.18641440281225
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.50321227026812
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.29526217816226
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.13128545002938
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.23201654503295
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.92330795248508
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.54465805810948
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.77612296624774
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.62876625016793
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.77206665303663
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.56644410322355
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.39008382145335
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.92138913420204
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.66003370924405
}, {
  "Entity": "Syria",
  "Code": "SYR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.06232442852233
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.77054341714333
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.06416545351888
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.9641064961971
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.03796171871728
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.84676413840421
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.09600420942216
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.32266924672044
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.65546653115923
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.15085813382787
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.21678794917732
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.09431910998993
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.10306985670171
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.4820598998877
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.66797463495949
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.49476488856418
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.73830187370034
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.99724988661146
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.29166867602818
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.79794517955966
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.03317440457992
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.67326193503199
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.73558186481569
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.97905449125092
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.47925497140271
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.3767170463779
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.82123148952948
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.87048628009698
}, {
  "Entity": "Taiwan",
  "Code": "TWN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.61987391544974
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.43161283056155
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.24409394927653
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.75243639841838
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.9393341204604
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.11675735698495
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.7125091796666
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.38907444661015
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.32178991821928
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.98463493932994
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.17024827426647
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.19776948804451
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.25922189915983
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.53227096282352
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.98195478907377
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.9124688074675
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.31046996806207
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.60637376597045
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.82953133439314
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.52139223225677
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.84447139574341
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.63418341059155
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.95596446414716
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.9463670527978
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.93271621036186
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.87548442811605
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.85370386940485
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.17270217523945
}, {
  "Entity": "Tajikistan",
  "Code": "TJK",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 85.27113038032125
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.83352579882603
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.30465573657384
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.68479602081852
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.13735055135585
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.82772294402585
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.18967194041942
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.46338831228428
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.84524193357448
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.52787378985637
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.5260826689684
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.82147730197019
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.26451640940667
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.03289180735472
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.07099455405373
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.15873414836405
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.08492587304158
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.2816065283383
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.45077246898508
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.25991587905266
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.91117468776862
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.72097420473183
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.7957766052801
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.67575235093491
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.44797147769648
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.86372901329376
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.3727535819579
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.96770336870104
}, {
  "Entity": "Tanzania",
  "Code": "TZA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.51563526554234
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.96725122594478
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.35405702161484
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.0784140235035
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.67841058229928
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.52053137307132
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.35321115496271
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.28328584851496
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.16201411418561
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.63598547651134
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.31280889543206
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.54755508967196
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.06490206910361
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.88792410115667
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.20174071286588
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.65760576553208
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.36524656830551
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.24714120586816
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 80.21812642842723
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.13446842164802
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.42854234786272
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.29567756185114
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.90326638924101
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.6605676636409
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.37743164883524
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.735322005230095
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.05262176011609
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.651806313062444
}, {
  "Entity": "Thailand",
  "Code": "THA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.40095859804007
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.06442459948784
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.0920765781466
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.96032006201872
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.33713122100494
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.55833628333392
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.4371852022087
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.51125934760137
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.40885113144282
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.98605995400064
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.66140646007995
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.0148652341742
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.23808927089985
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.34412675595952
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.1655845774261
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.07866067053745
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.09104473751091
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.59510852333828
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.67313814217208
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.66849926141734
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.38564148412802
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.56433953824532
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.8084980997369
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.45322266023878
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.90294400474141
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.45067388821897
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.97657532597863
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.21266774989449
}, {
  "Entity": "Timor",
  "Code": "TLS",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.9246043209343
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.80099606041487
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.378923052463
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.20843069433799
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.55702479286987
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.83837201755733
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.62481588427681
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.54980496685538
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.23336477772266
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.2216155410158
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.55309150325579
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.730256325240894
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.037080338881836
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.784234189104204
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.588660845332576
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.8378213440366
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.825006902862256
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.729302776593116
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.623552340252544
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.0787066660734
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.86478822312941
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.98504533006505
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.65441682279541
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.21919429107777
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.616511389827494
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.149195789737306
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.81185468905057
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.41572640053529
}, {
  "Entity": "Togo",
  "Code": "TGO",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.11068661742102
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.61842575490036
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.8270053914254
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.28517198408224
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.30141107633452
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.67654498039312
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.8693295234381
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.7653923984305
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.77195125494124
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.7320367394306
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.15028305728032
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.87517569733475
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.72743358137858
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.27873352157687
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.17214026910618
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.90505911214281
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.02868307104991
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.23334615072515
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.41101666333256
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.08992990574379
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.35289312136699
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.23610813957775
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.74899882876082
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.41790777698846
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.19330176196705
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.87754650176123
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.43581019798513
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.87529129328792
}, {
  "Entity": "Tonga",
  "Code": "TON",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.42227916658659
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.75400481905648
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.5166447936362
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.60894845270376
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.98963044837173
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.48545384490843
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.12741142918661
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.86403955713035
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.21828381920442
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.54191094214396
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.31242188883849
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.06803438787185
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.35283117081295
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.84117778530576
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.43732832366918
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.78918123745271
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.54771324517743
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.5347006120477
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.58909673690383
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.00068761211205
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.984168410818114
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.4254949180562
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.62858121457776
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.48129004733935
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.86707687060317
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.57497918405289
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.08042370635474
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.433445038155845
}, {
  "Entity": "Trinidad and Tobago",
  "Code": "TTO",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.97311224447485
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 176.00187450349605
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.86966468417032
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.48455260387482
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.15240965300984
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.84071263962267
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.39398495518284
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.94103724642005
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.74705038857726
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.07737237355488
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.6653877755193
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.1330923411481
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.28345586169115
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.71445348147023
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.24736995676285
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.9106967773149
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.28205420224904
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.03582438671069
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.09073498951679
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.44089122484553
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.40887416343892
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.80636747317355
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.02496384505527
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.29973136176292
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.23246652471482
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.80491586230464
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.53530690516892
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.37427243762808
}, {
  "Entity": "Tropical Latin America",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.08169941758631
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.41740781516499
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.82021382259177
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.19941637775753
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.4464824494666
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.99539036713017
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.5948962847858
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.5148316534874
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.74063151841236
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.4404345010577
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.45084720234732
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.61775265908919
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.14680336662238
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.92624460283675
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.96914436215077
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.11093842216235
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.0444687366545
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.03470065275516
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.22384597048696
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.59352554479239
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.20323210102566
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.98193259273711
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.21665333069697
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.60350006738602
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.14940848316459
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.71408140302043
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.25700557309345
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.7714471129423
}, {
  "Entity": "Tunisia",
  "Code": "TUN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.17382121701213
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.69847483699795
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.033845644143
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 177.11228089751899
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.19906754719875
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.6790715175407
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.32217024942045
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.00020127664007
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.77471925619915
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.55777639351592
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 141.25196132662245
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.19731005903
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.23325314667854
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.03532697657592
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.64816726233245
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.94846099491551
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.4016113645395
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.65895686432559
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.00785602338662
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.83533912724056
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.25264490148346
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.23527336038894
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.92362158661213
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.45064906788949
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.42773081634309
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.01088856789102
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.98318648270316
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.53186810493123
}, {
  "Entity": "Turkey",
  "Code": "TUR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.08162150535313
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.134477497317
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.21448258487547
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.13047992657394
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.94180243008168
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.2045491092051
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.8048820148226
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.49282304585486
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.39477240131322
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.87586244563167
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.37269146709045
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.3799356636703
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.51549455178466
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.59471316015244
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.58762584146984
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.0493705059231
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.3086443611946
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.58236569078596
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.13166264844912
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.31197629087843
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.1008697660301
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.75560646020527
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.92224604828859
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.66674477086526
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.38164282330976
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.91789744519534
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.70045804078413
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.89342224978473
}, {
  "Entity": "Turkmenistan",
  "Code": "TKM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.13742939010275
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.96528622519279
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.73990387617878
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.013020628736534
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 52.13284294465505
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.29163028499551
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.295064309493114
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.12835597143627
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.205788582162896
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.69267757301631
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.66314961117643
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.81994303700524
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.66744593730871
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.58930799987979
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.89649202937635
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.02050119246736
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.77412990013138
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.41885722773203
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 58.01884574305465
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 56.37444853843748
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 54.95661128529959
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 53.35418278060992
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 51.78057278405784
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.566880872681395
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.51326184746588
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.25886166921078
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.56148578036492
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.02771495348809
}, {
  "Entity": "Uganda",
  "Code": "UGA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.84270943953969
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 159.70444006996456
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.8170937076059
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.68726244992877
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 186.16473565201596
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 195.71017067711787
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 212.7057987770812
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 206.9804675604197
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 194.34043247989075
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.0205263763532
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 184.7275438817064
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 189.8563968783972
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 183.80332138366794
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 184.14703189487238
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.14291892596674
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.51702487819895
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.68336611911508
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.36082376985092
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.60439333674654
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 171.0971875545392
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.2546031589588
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.50400467852418
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.97196431082688
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.2731239176671
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.6387833341839
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.41174388215765
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.31053421936502
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.63670601214642
}, {
  "Entity": "Ukraine",
  "Code": "UKR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.55817953094757
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.3722413899996
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.71330984696668
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.23689160584023
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.77206108002947
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.40917743541675
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.184140004459884
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.15337501345779
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.225175156113075
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.68140885669965
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.84139905735474
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.13047556230387
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.82596982213053
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.875727506276014
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.43390241468198
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.839032114150775
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.23248886198869
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.84389952596059
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.91510979114136
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.482925784069174
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.77337012826876
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.84561260547026
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 63.74910786592538
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.50937487576124
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.9693759709662
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.30264209514787
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.56372961101866
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.71311021629859
}, {
  "Entity": "United Arab Emirates",
  "Code": "ARE",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.70075168575133
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 180.50705606560192
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.2444830398592
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.7197834942295
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.6642918190496
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.47378100874468
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.0324062674894
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.66176721936867
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.6701930808219
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.59740921815865
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.14245675471858
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.92009087835885
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.20279116902235
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.87323748970094
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.82283637237163
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.6785559334325
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.9216651941133
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.96957699538311
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.6481319619056
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.95244442647078
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.5436250064294
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.62947442301505
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.48018176572424
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.26051305529583
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.59229605947482
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.39804077321251
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 71.28992582912895
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.6782569350292
}, {
  "Entity": "United Kingdom",
  "Code": "GBR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.49560897996899
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.51223425846396
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.25421462660017
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.25944846468727
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 151.1755614298204
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.35949328032672
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.95044344390112
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.82691530625505
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.03230555771694
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.30353686546513
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.34198317024541
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.16106023458006
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.37579329297147
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.6186742141414
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.17469043326467
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.91127567670596
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.74846970471884
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.9399769699044
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.71206476686515
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.66219695327106
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.15480975872703
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.99973778065946
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.17605792381865
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.41760137090459
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.08079041050433
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.8990481273657
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.93552763700598
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.06030012778027
}, {
  "Entity": "United States",
  "Code": "USA",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.6055027459152
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.3250045053167
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.23343306566966
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.81874520010133
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.637428145721124
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.92931822693041
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.15489822245281
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.95097850087289
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.12666419809904
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.468719830519134
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.669698446038474
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.46780612150086
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.25820963053943
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.58499142343598
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.98684153031113
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.597703982660896
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.063399543115814
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.183118721212644
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.38641537314163
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.82622587706487
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.080102433997524
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.329231211819945
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.79053243918729
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.080367751474505
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.291620873709014
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.583928918618746
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.24891894482683
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.45669749513001
}, {
  "Entity": "United States Virgin Islands",
  "Code": "VIR",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.44692968089086
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.74590594545356
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.92855365720675
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.17203023820903
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 139.52147711451232
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.42569498264106
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.73529976858282
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.47814812931446
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.9561411638701
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.79233497599103
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.82676776062556
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.57267121890153
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.90550785078094
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.72010428516374
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.38517995660311
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.8027802537815
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.86276858393296
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.05888289321365
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.9000736860612
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.99845999916472
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.75068105659086
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.57712193330518
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.6322563294262
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.71885181272643
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.44432152846582
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.10051019596494
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 92.64686864237402
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.73073496430492
}, {
  "Entity": "Uruguay",
  "Code": "URY",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.16342952545104
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 55.54094531051305
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 57.538487156445036
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.76925632694161
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 64.21637304408857
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.23868528120596
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.33748783028481
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.76461970044404
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 74.89464824837866
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 78.79614441019751
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.03444146962359
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 82.96449685279624
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.34406384706489
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.79180290808094
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.69674745332689
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.02707794865758
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.02709651819286
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.83280089164374
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.24674512089881
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.88258942696723
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.13563683346379
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.98248292159728
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.81128333499692
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.7210932661357
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.06867386529186
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.5391234539358
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.98231461907861
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.41337227280901
}, {
  "Entity": "Uzbekistan",
  "Code": "UZB",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.12904106117954
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 186.45282451390779
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 184.76018200824095
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 183.24963663200697
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.69263487099266
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 179.91813689430927
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 178.3752027439383
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 176.64762311834062
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 175.22209249857946
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.79901938023505
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.4937463863259
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 170.90749296472214
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.5746496160983
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 168.66108035783282
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 167.42277480424514
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 166.27237103925387
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 165.0876255503707
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 163.4339429369826
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.01932092701443
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.3359246216093
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 158.7412490262196
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.86545408864714
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.12277890176537
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 153.679731859587
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 152.10573398214632
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.63168571362036
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 149.3224023884547
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 147.7016190588055
}, {
  "Entity": "Vanuatu",
  "Code": "VUT",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.98393974574725
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.54830955528539
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.14061341501163
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.07942966037895
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.17387771706736
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 115.8065930110651
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.25078898465789
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.05981129527052
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.31920790901472
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.16399370051724
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.39111291010731
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.39816997799419
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.72507594836429
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.95197110972865
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.56820716127561
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.11246051558388
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 69.70567336833778
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.81532614689141
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.09316376524623
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.87003008538673
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 65.90795566969628
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 62.797316604437526
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.935594696648835
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.69826823896416
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 60.652629086779484
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.64650563254191
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 61.5167567562252
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.22656486504162
}, {
  "Entity": "Venezuela",
  "Code": "VEN",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 59.09733539380301
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.15161648506246
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.71039447130319
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.08383407892457
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.32615423219971
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.21130557453037
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.75953917388641
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.33109284442672
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.06653778112761
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.43415045713931
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.34044563659342
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.54313892104484
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.2857718567558
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.42247153616114
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.3172784094856
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.05145762074638
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 113.28620446770597
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.45301203105468
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.57751364549559
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.66041395180588
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.67426131512326
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.31394067796732
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.13276621008849
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.93934020169786
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.8510381720833
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.67992011445901
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.23117021120086
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.87003889938386
}, {
  "Entity": "Vietnam",
  "Code": "VNM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.31713745684712
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 192.94620293951763
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 186.26775019020386
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.22078386480226
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 179.8949489169271
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 172.10089735204068
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 169.05683637245812
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 162.14047556430285
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 155.86146184553266
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.2610001216459
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 146.37454397053762
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.8093931855812
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.37421244144215
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.42836199349776
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.2283303434615
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.56519579707026
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.6282903400232
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.98975276514005
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.76874657337386
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.93087658559794
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 98.58814701277578
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.6521829061341
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.20528025186597
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 88.82855215777825
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.31885142718335
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.57644808627211
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.10796723014937
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.77762532904796
}, {
  "Entity": "Wales",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.87356728077559
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.47216973078017
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.67798800231395
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.53008414407637
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.25118645573073
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.04741728537978
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.50595618168772
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.95316254198676
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.5761498204939
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.70423469529673
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.65706228117256
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.29725304161558
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.44964884317001
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.72026965375188
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 95.2529946032586
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 89.79449738674356
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 86.90947294351948
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 83.94388551798774
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.72953756749061
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.76573722329982
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 77.79974866237289
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 75.47910362510677
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 73.84557704840202
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 72.26733958982297
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 70.79086375939065
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.49018483486726
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 68.46335601738389
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 67.20194545814364
}, {
  "Entity": "Western Europe",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 66.12163525875495
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 50.3265914661703
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.73984915767705
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.38924782484081
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 49.01161965379665
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.68700581356794
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 48.32934216265231
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.83522447006537
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 47.23336974280686
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 46.54175903088552
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.937300740474974
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 45.48942888877894
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 44.532718829693216
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 43.479674054575796
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 42.343307275771295
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 41.17711649656906
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 40.02892161764727
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 39.078586447021166
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 38.074030929221635
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.99265996287736
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 36.18427371120385
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 35.51028654237954
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.79176351272383
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 34.135450789270045
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 33.44456059453338
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.83745184122048
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 32.219062903368524
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 31.534391676446777
}, {
  "Entity": "Western Sub-Saharan Africa",
  "Code": "",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 30.738397317720477
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 145.75474474396648
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.4759842984736
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.46535878830127
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 143.7668086380306
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 142.55847236231523
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 140.57349914667543
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.60557410488659
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.02988344204894
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.75577107760697
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.6321183398832
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.45812646870803
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 125.89696350922443
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.95172992067454
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.96496552526149
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.8908606466904
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.89435381488424
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 110.40822518298198
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 107.47428600899327
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.5904659804689
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.45196811333177
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 101.79029343968047
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 99.66261075294872
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.52906684182561
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 94.91075951920195
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.4519553681198
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.13810052302182
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 91.98067011455844
}, {
  "Entity": "World",
  "Code": "OWID_WRL",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.11410508190893
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.8749544194428
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.4667393695951
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 135.65616247871634
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.97713175773788
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.25548528473283
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.20454133737044
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 131.7291027227137
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.17418896690404
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.27824816100392
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 126.54910583296193
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.52780091342639
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.30615967989071
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 120.3027075228208
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.2943600999028
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 116.50563964228405
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.61316803569353
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 112.78396553089749
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 111.01917862027132
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.47553488632718
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 108.26754558897588
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.8317065483336
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 105.68630556925233
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 104.624688014945
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.64689116361676
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.93466903131903
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.97815609437468
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.95550017015943
}, {
  "Entity": "Yemen",
  "Code": "YEM",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 103.08337728690718
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.10731101755833
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 124.24897426487689
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.24227542932343
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 130.2787875422679
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 133.35592459135682
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.49592529100488
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.87442866440213
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.7473321841301
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 137.15350380593645
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 134.98438221791298
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 132.4052270078336
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 128.14267577863419
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 123.58309765829468
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 119.5308074796548
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 114.50713878481697
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 109.89571004426902
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 106.40837960115715
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 102.7646367384777
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 100.65668215302566
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 97.69672176289444
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 96.10945932334045
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 93.42862680923992
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 90.3637386288487
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 87.37298020160935
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 84.5042949662655
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 81.94807003972937
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 79.43444160854882
}, {
  "Entity": "Zambia",
  "Code": "ZMB",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 76.9770638955163
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 1990,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 122.65768259314349
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 1991,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.14846879863887
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 1992,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 117.09222115939427
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 1993,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 118.37978102350453
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 1994,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 121.58670575896434
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 1995,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 127.23281953321056
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 1996,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 129.17808638471539
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 1997,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 136.5554438275073
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 1998,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 148.5951510961322
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 1999,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 160.46171376849304
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2000,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 174.00161709564716
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2001,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 181.19914682541372
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2002,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 191.52821410404215
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2003,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 195.39435843613776
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2004,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 200.49975687268963
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2005,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 203.63073761659444
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2006,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 203.82314250846593
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2007,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 202.76906338998782
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2008,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 202.11125210393232
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2009,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 198.73271957507703
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2010,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 192.69831409145425
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2011,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 182.9773127966596
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2012,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 173.138097767005
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2013,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 164.09190064046007
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2014,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 156.16806294712276
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2015,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 150.0642240960436
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2016,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 144.09464606550537
}, {
  "Entity": "Zimbabwe",
  "Code": "ZWE",
  "Year": 2017,
  "Deaths - Smoking - Sex: Both - Age: Age-standardized (Rate) (deaths per 100,000)": 138.52226728595787
}];
},{}],"index.js":[function(require,module,exports) {
"use strict";

var _d = require("d3");

var _pays = _interopRequireDefault(require("./pays.json"));

var _deathrateSmoking = _interopRequireDefault(require("./deathrate-smoking.json"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// importer les fonctions "d3"
// importer les pays
var countriesFeatures = _pays.default.features;
console.log(countriesFeatures); // définir la taille du svg

var WIDTH = 1280;
var HEIGHT = 720; // ajouter un <svg> à la <div id="carte">

var svg = (0, _d.select)('#carte').append('svg').attr('width', WIDTH).attr('height', HEIGHT); // définir la projection pour faire entrer tous les pays dans le <svg>

var projection = (0, _d.geoNaturalEarth1)().fitExtent([[0, 0], [WIDTH, HEIGHT]], _pays.default); // définir le créateur d'attribut "d" pour l'élément <path>

var pathCreator = (0, _d.geoPath)().projection(projection); // ajouter un <path> par pays au <svg>

svg.selectAll('path').data(_pays.default.features).enter().append('path').attr('d', pathCreator).attr('fill', 'pink').attr('stroke', 'black'); // les coordonnées de la gare d'Yverdon

var yverdon = [6.64123, 46.78109]; // pour projeter un point, nous devons utiliser la projection directement

svg.append('circle').attr('cx', projection(yverdon)[0]).attr('cy', projection(yverdon)[1]).attr('r', 10).attr('fill', 'hotpink');
},{"d3":"../node_modules/d3/index.js","./pays.json":"pays.json","./deathrate-smoking.json":"deathrate-smoking.json"}],"../node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "52349" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else if (location.reload) {
        // `location` global exists in a web worker context but lacks `.reload()` function.
        location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["../node_modules/parcel-bundler/src/builtins/hmr-runtime.js","index.js"], null)
//# sourceMappingURL=/src.e31bb0bc.js.map